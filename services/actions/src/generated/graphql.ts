import type { TypedDocumentNode as DocumentNode } from "@graphql-typed-document-node/core";
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
    _uuid: any;
    bigint: any;
    float8: any;
    jsonb: any;
    name: any;
    numeric: any;
    timestamptz: any;
    uuid: any;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["Boolean"]>;
    _gt?: InputMaybe<Scalars["Boolean"]>;
    _gte?: InputMaybe<Scalars["Boolean"]>;
    _in?: InputMaybe<Array<Scalars["Boolean"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["Boolean"]>;
    _lte?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Scalars["Boolean"]>;
    _nin?: InputMaybe<Array<Scalars["Boolean"]>>;
};

export type ConfirmInvitationOutput = {
    __typename?: "ConfirmInvitationOutput";
    confSlug?: Maybe<Scalars["String"]>;
    ok: Scalars["String"];
};

export type CreateItemRoomOutput = {
    __typename?: "CreateItemRoomOutput";
    message?: Maybe<Scalars["String"]>;
    room?: Maybe<Room_Room>;
    roomId?: Maybe<Scalars["String"]>;
};

export type CreateRoomDmOutput = {
    __typename?: "CreateRoomDmOutput";
    chatId?: Maybe<Scalars["uuid"]>;
    message?: Maybe<Scalars["String"]>;
    room?: Maybe<Room_Room>;
    roomId?: Maybe<Scalars["uuid"]>;
};

/** columns and relationships of "Email" */
export type Email = {
    __typename?: "Email";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt: Scalars["timestamptz"];
    emailAddress: Scalars["String"];
    errorMessage?: Maybe<Scalars["String"]>;
    htmlContents: Scalars["String"];
    id: Scalars["uuid"];
    idempotencyKey: Scalars["uuid"];
    /** An object relationship */
    invitation?: Maybe<Registrant_Invitation>;
    invitationId?: Maybe<Scalars["uuid"]>;
    plainTextContents: Scalars["String"];
    reason: Scalars["String"];
    recipientName?: Maybe<Scalars["String"]>;
    retriesCount: Scalars["Int"];
    sentAt?: Maybe<Scalars["timestamptz"]>;
    status?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    subject: Scalars["String"];
    updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    user?: Maybe<User>;
    userId?: Maybe<Scalars["String"]>;
};

/** aggregated selection of "Email" */
export type Email_Aggregate = {
    __typename?: "Email_aggregate";
    aggregate?: Maybe<Email_Aggregate_Fields>;
    nodes: Array<Email>;
};

/** aggregate fields of "Email" */
export type Email_Aggregate_Fields = {
    __typename?: "Email_aggregate_fields";
    avg?: Maybe<Email_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Email_Max_Fields>;
    min?: Maybe<Email_Min_Fields>;
    stddev?: Maybe<Email_Stddev_Fields>;
    stddev_pop?: Maybe<Email_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Email_Stddev_Samp_Fields>;
    sum?: Maybe<Email_Sum_Fields>;
    var_pop?: Maybe<Email_Var_Pop_Fields>;
    var_samp?: Maybe<Email_Var_Samp_Fields>;
    variance?: Maybe<Email_Variance_Fields>;
};

/** aggregate fields of "Email" */
export type Email_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Email_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "Email" */
export type Email_Aggregate_Order_By = {
    avg?: InputMaybe<Email_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Email_Max_Order_By>;
    min?: InputMaybe<Email_Min_Order_By>;
    stddev?: InputMaybe<Email_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Email_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Email_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Email_Sum_Order_By>;
    var_pop?: InputMaybe<Email_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Email_Var_Samp_Order_By>;
    variance?: InputMaybe<Email_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Email" */
export type Email_Arr_Rel_Insert_Input = {
    data: Array<Email_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Email_On_Conflict>;
};

/** aggregate avg on columns */
export type Email_Avg_Fields = {
    __typename?: "Email_avg_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "Email" */
export type Email_Avg_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Email". All fields are combined with a logical 'AND'. */
export type Email_Bool_Exp = {
    _and?: InputMaybe<Array<Email_Bool_Exp>>;
    _not?: InputMaybe<Email_Bool_Exp>;
    _or?: InputMaybe<Array<Email_Bool_Exp>>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    emailAddress?: InputMaybe<String_Comparison_Exp>;
    errorMessage?: InputMaybe<String_Comparison_Exp>;
    htmlContents?: InputMaybe<String_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    idempotencyKey?: InputMaybe<Uuid_Comparison_Exp>;
    invitation?: InputMaybe<Registrant_Invitation_Bool_Exp>;
    invitationId?: InputMaybe<Uuid_Comparison_Exp>;
    plainTextContents?: InputMaybe<String_Comparison_Exp>;
    reason?: InputMaybe<String_Comparison_Exp>;
    recipientName?: InputMaybe<String_Comparison_Exp>;
    retriesCount?: InputMaybe<Int_Comparison_Exp>;
    sentAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    status?: InputMaybe<String_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    subject?: InputMaybe<String_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    user?: InputMaybe<User_Bool_Exp>;
    userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "Email" */
export enum Email_Constraint {
    /** unique or primary key constraint */
    EmailIdempotencyKeyKey = "Email_idempotencyKey_key",
    /** unique or primary key constraint */
    EmailPkey = "Email_pkey",
}

/** input type for incrementing numeric columns in table "Email" */
export type Email_Inc_Input = {
    retriesCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "Email" */
export type Email_Insert_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    emailAddress?: InputMaybe<Scalars["String"]>;
    errorMessage?: InputMaybe<Scalars["String"]>;
    htmlContents?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    idempotencyKey?: InputMaybe<Scalars["uuid"]>;
    invitation?: InputMaybe<Registrant_Invitation_Obj_Rel_Insert_Input>;
    invitationId?: InputMaybe<Scalars["uuid"]>;
    plainTextContents?: InputMaybe<Scalars["String"]>;
    reason?: InputMaybe<Scalars["String"]>;
    recipientName?: InputMaybe<Scalars["String"]>;
    retriesCount?: InputMaybe<Scalars["Int"]>;
    sentAt?: InputMaybe<Scalars["timestamptz"]>;
    status?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    subject?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Email_Max_Fields = {
    __typename?: "Email_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    emailAddress?: Maybe<Scalars["String"]>;
    errorMessage?: Maybe<Scalars["String"]>;
    htmlContents?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    idempotencyKey?: Maybe<Scalars["uuid"]>;
    invitationId?: Maybe<Scalars["uuid"]>;
    plainTextContents?: Maybe<Scalars["String"]>;
    reason?: Maybe<Scalars["String"]>;
    recipientName?: Maybe<Scalars["String"]>;
    retriesCount?: Maybe<Scalars["Int"]>;
    sentAt?: Maybe<Scalars["timestamptz"]>;
    status?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    subject?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "Email" */
export type Email_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    emailAddress?: InputMaybe<Order_By>;
    errorMessage?: InputMaybe<Order_By>;
    htmlContents?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    idempotencyKey?: InputMaybe<Order_By>;
    invitationId?: InputMaybe<Order_By>;
    plainTextContents?: InputMaybe<Order_By>;
    reason?: InputMaybe<Order_By>;
    recipientName?: InputMaybe<Order_By>;
    retriesCount?: InputMaybe<Order_By>;
    sentAt?: InputMaybe<Order_By>;
    status?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    subject?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Email_Min_Fields = {
    __typename?: "Email_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    emailAddress?: Maybe<Scalars["String"]>;
    errorMessage?: Maybe<Scalars["String"]>;
    htmlContents?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    idempotencyKey?: Maybe<Scalars["uuid"]>;
    invitationId?: Maybe<Scalars["uuid"]>;
    plainTextContents?: Maybe<Scalars["String"]>;
    reason?: Maybe<Scalars["String"]>;
    recipientName?: Maybe<Scalars["String"]>;
    retriesCount?: Maybe<Scalars["Int"]>;
    sentAt?: Maybe<Scalars["timestamptz"]>;
    status?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    subject?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "Email" */
export type Email_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    emailAddress?: InputMaybe<Order_By>;
    errorMessage?: InputMaybe<Order_By>;
    htmlContents?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    idempotencyKey?: InputMaybe<Order_By>;
    invitationId?: InputMaybe<Order_By>;
    plainTextContents?: InputMaybe<Order_By>;
    reason?: InputMaybe<Order_By>;
    recipientName?: InputMaybe<Order_By>;
    retriesCount?: InputMaybe<Order_By>;
    sentAt?: InputMaybe<Order_By>;
    status?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    subject?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Email" */
export type Email_Mutation_Response = {
    __typename?: "Email_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Email>;
};

/** on_conflict condition type for table "Email" */
export type Email_On_Conflict = {
    constraint: Email_Constraint;
    update_columns?: Array<Email_Update_Column>;
    where?: InputMaybe<Email_Bool_Exp>;
};

/** Ordering options when selecting data from "Email". */
export type Email_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    emailAddress?: InputMaybe<Order_By>;
    errorMessage?: InputMaybe<Order_By>;
    htmlContents?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    idempotencyKey?: InputMaybe<Order_By>;
    invitation?: InputMaybe<Registrant_Invitation_Order_By>;
    invitationId?: InputMaybe<Order_By>;
    plainTextContents?: InputMaybe<Order_By>;
    reason?: InputMaybe<Order_By>;
    recipientName?: InputMaybe<Order_By>;
    retriesCount?: InputMaybe<Order_By>;
    sentAt?: InputMaybe<Order_By>;
    status?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    subject?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    user?: InputMaybe<User_Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Email */
export type Email_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "Email" */
export enum Email_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EmailAddress = "emailAddress",
    /** column name */
    ErrorMessage = "errorMessage",
    /** column name */
    HtmlContents = "htmlContents",
    /** column name */
    Id = "id",
    /** column name */
    IdempotencyKey = "idempotencyKey",
    /** column name */
    InvitationId = "invitationId",
    /** column name */
    PlainTextContents = "plainTextContents",
    /** column name */
    Reason = "reason",
    /** column name */
    RecipientName = "recipientName",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    SentAt = "sentAt",
    /** column name */
    Status = "status",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Subject = "subject",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "Email" */
export type Email_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    emailAddress?: InputMaybe<Scalars["String"]>;
    errorMessage?: InputMaybe<Scalars["String"]>;
    htmlContents?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    idempotencyKey?: InputMaybe<Scalars["uuid"]>;
    invitationId?: InputMaybe<Scalars["uuid"]>;
    plainTextContents?: InputMaybe<Scalars["String"]>;
    reason?: InputMaybe<Scalars["String"]>;
    recipientName?: InputMaybe<Scalars["String"]>;
    retriesCount?: InputMaybe<Scalars["Int"]>;
    sentAt?: InputMaybe<Scalars["timestamptz"]>;
    status?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    subject?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate stddev on columns */
export type Email_Stddev_Fields = {
    __typename?: "Email_stddev_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "Email" */
export type Email_Stddev_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Email_Stddev_Pop_Fields = {
    __typename?: "Email_stddev_pop_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "Email" */
export type Email_Stddev_Pop_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Email_Stddev_Samp_Fields = {
    __typename?: "Email_stddev_samp_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "Email" */
export type Email_Stddev_Samp_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Email_Sum_Fields = {
    __typename?: "Email_sum_fields";
    retriesCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "Email" */
export type Email_Sum_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** update columns of table "Email" */
export enum Email_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EmailAddress = "emailAddress",
    /** column name */
    ErrorMessage = "errorMessage",
    /** column name */
    HtmlContents = "htmlContents",
    /** column name */
    Id = "id",
    /** column name */
    IdempotencyKey = "idempotencyKey",
    /** column name */
    InvitationId = "invitationId",
    /** column name */
    PlainTextContents = "plainTextContents",
    /** column name */
    Reason = "reason",
    /** column name */
    RecipientName = "recipientName",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    SentAt = "sentAt",
    /** column name */
    Status = "status",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Subject = "subject",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UserId = "userId",
}

/** aggregate var_pop on columns */
export type Email_Var_Pop_Fields = {
    __typename?: "Email_var_pop_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "Email" */
export type Email_Var_Pop_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Email_Var_Samp_Fields = {
    __typename?: "Email_var_samp_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "Email" */
export type Email_Var_Samp_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Email_Variance_Fields = {
    __typename?: "Email_variance_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "Email" */
export type Email_Variance_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "Float". All fields are combined with logical 'AND'. */
export type Float_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["Float"]>;
    _gt?: InputMaybe<Scalars["Float"]>;
    _gte?: InputMaybe<Scalars["Float"]>;
    _in?: InputMaybe<Array<Scalars["Float"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["Float"]>;
    _lte?: InputMaybe<Scalars["Float"]>;
    _neq?: InputMaybe<Scalars["Float"]>;
    _nin?: InputMaybe<Array<Scalars["Float"]>>;
};

/** columns and relationships of "ForeignKeyIntrospection" */
export type ForeignKeyIntrospection = {
    __typename?: "ForeignKeyIntrospection";
    child_column?: Maybe<Scalars["name"]>;
    child_schema?: Maybe<Scalars["name"]>;
    child_table?: Maybe<Scalars["name"]>;
    constraint_name?: Maybe<Scalars["name"]>;
    parent_column?: Maybe<Scalars["name"]>;
    parent_schema?: Maybe<Scalars["name"]>;
    parent_table?: Maybe<Scalars["name"]>;
};

/** aggregated selection of "ForeignKeyIntrospection" */
export type ForeignKeyIntrospection_Aggregate = {
    __typename?: "ForeignKeyIntrospection_aggregate";
    aggregate?: Maybe<ForeignKeyIntrospection_Aggregate_Fields>;
    nodes: Array<ForeignKeyIntrospection>;
};

/** aggregate fields of "ForeignKeyIntrospection" */
export type ForeignKeyIntrospection_Aggregate_Fields = {
    __typename?: "ForeignKeyIntrospection_aggregate_fields";
    count: Scalars["Int"];
};

/** aggregate fields of "ForeignKeyIntrospection" */
export type ForeignKeyIntrospection_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<ForeignKeyIntrospection_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "ForeignKeyIntrospection". All fields are combined with a logical 'AND'. */
export type ForeignKeyIntrospection_Bool_Exp = {
    _and?: InputMaybe<Array<ForeignKeyIntrospection_Bool_Exp>>;
    _not?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
    _or?: InputMaybe<Array<ForeignKeyIntrospection_Bool_Exp>>;
    child_column?: InputMaybe<Name_Comparison_Exp>;
    child_schema?: InputMaybe<Name_Comparison_Exp>;
    child_table?: InputMaybe<Name_Comparison_Exp>;
    constraint_name?: InputMaybe<Name_Comparison_Exp>;
    parent_column?: InputMaybe<Name_Comparison_Exp>;
    parent_schema?: InputMaybe<Name_Comparison_Exp>;
    parent_table?: InputMaybe<Name_Comparison_Exp>;
};

/** Ordering options when selecting data from "ForeignKeyIntrospection". */
export type ForeignKeyIntrospection_Order_By = {
    child_column?: InputMaybe<Order_By>;
    child_schema?: InputMaybe<Order_By>;
    child_table?: InputMaybe<Order_By>;
    constraint_name?: InputMaybe<Order_By>;
    parent_column?: InputMaybe<Order_By>;
    parent_schema?: InputMaybe<Order_By>;
    parent_table?: InputMaybe<Order_By>;
};

/** select columns of table "ForeignKeyIntrospection" */
export enum ForeignKeyIntrospection_Select_Column {
    /** column name */
    ChildColumn = "child_column",
    /** column name */
    ChildSchema = "child_schema",
    /** column name */
    ChildTable = "child_table",
    /** column name */
    ConstraintName = "constraint_name",
    /** column name */
    ParentColumn = "parent_column",
    /** column name */
    ParentSchema = "parent_schema",
    /** column name */
    ParentTable = "parent_table",
}

export type GetGoogleOAuthUrlOutput = {
    __typename?: "GetGoogleOAuthUrlOutput";
    url: Scalars["String"];
};

export type GetSlugOutput = {
    __typename?: "GetSlugOutput";
    slug?: Maybe<Scalars["String"]>;
    url?: Maybe<Scalars["String"]>;
};

export type GetUploadAgreementOutput = {
    __typename?: "GetUploadAgreementOutput";
    agreementText?: Maybe<Scalars["String"]>;
    agreementUrl?: Maybe<Scalars["String"]>;
};

export type InitialiseSuperUserOutput = {
    __typename?: "InitialiseSuperUserOutput";
    error?: Maybe<Scalars["String"]>;
    success: Scalars["Boolean"];
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["Int"]>;
    _gt?: InputMaybe<Scalars["Int"]>;
    _gte?: InputMaybe<Scalars["Int"]>;
    _in?: InputMaybe<Array<Scalars["Int"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["Int"]>;
    _lte?: InputMaybe<Scalars["Int"]>;
    _neq?: InputMaybe<Scalars["Int"]>;
    _nin?: InputMaybe<Array<Scalars["Int"]>>;
};

export type JoinEventVonageSessionOutput = {
    __typename?: "JoinEventVonageSessionOutput";
    accessToken?: Maybe<Scalars["String"]>;
    isRecorded?: Maybe<Scalars["Boolean"]>;
};

export type JoinRoomChimeSessionOutput = {
    __typename?: "JoinRoomChimeSessionOutput";
    meeting?: Maybe<Scalars["jsonb"]>;
    message?: Maybe<Scalars["String"]>;
    registrant?: Maybe<Scalars["jsonb"]>;
};

export type JoinRoomVonageSessionOutput = {
    __typename?: "JoinRoomVonageSessionOutput";
    accessToken?: Maybe<Scalars["String"]>;
    isRecorded?: Maybe<Scalars["Boolean"]>;
    message?: Maybe<Scalars["String"]>;
    sessionId?: Maybe<Scalars["String"]>;
};

export type MigrateElementOutput = {
    __typename?: "MigrateElementOutput";
    success: Scalars["Boolean"];
};

export type MigrateProfilePhotoResponse = {
    __typename?: "MigrateProfilePhotoResponse";
    ok: Scalars["Boolean"];
};

export type NotifyEventEnded = {
    __typename?: "NotifyEventEnded";
    ok: Scalars["Boolean"];
};

export type NotifyEventStarted = {
    __typename?: "NotifyEventStarted";
    ok: Scalars["Boolean"];
};

export type PresenceFlushOutput = {
    __typename?: "PresenceFlushOutput";
    ok?: Maybe<Scalars["String"]>;
};

export type PresenceSummaryOutput = {
    __typename?: "PresenceSummaryOutput";
    pages?: Maybe<Scalars["jsonb"]>;
    total_unique_tabs: Scalars["Int"];
    total_unique_user_ids: Scalars["Int"];
};

/** columns and relationships of "PushNotificationSubscription" */
export type PushNotificationSubscription = {
    __typename?: "PushNotificationSubscription";
    auth: Scalars["String"];
    created_at: Scalars["timestamptz"];
    endpoint: Scalars["String"];
    p256dh: Scalars["String"];
    updated_at: Scalars["timestamptz"];
    /** An object relationship */
    user: User;
    userId: Scalars["String"];
};

/** aggregated selection of "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate = {
    __typename?: "PushNotificationSubscription_aggregate";
    aggregate?: Maybe<PushNotificationSubscription_Aggregate_Fields>;
    nodes: Array<PushNotificationSubscription>;
};

/** aggregate fields of "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate_Fields = {
    __typename?: "PushNotificationSubscription_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<PushNotificationSubscription_Max_Fields>;
    min?: Maybe<PushNotificationSubscription_Min_Fields>;
};

/** aggregate fields of "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<PushNotificationSubscription_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<PushNotificationSubscription_Max_Order_By>;
    min?: InputMaybe<PushNotificationSubscription_Min_Order_By>;
};

/** input type for inserting array relation for remote table "PushNotificationSubscription" */
export type PushNotificationSubscription_Arr_Rel_Insert_Input = {
    data: Array<PushNotificationSubscription_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<PushNotificationSubscription_On_Conflict>;
};

/** Boolean expression to filter rows from the table "PushNotificationSubscription". All fields are combined with a logical 'AND'. */
export type PushNotificationSubscription_Bool_Exp = {
    _and?: InputMaybe<Array<PushNotificationSubscription_Bool_Exp>>;
    _not?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
    _or?: InputMaybe<Array<PushNotificationSubscription_Bool_Exp>>;
    auth?: InputMaybe<String_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    endpoint?: InputMaybe<String_Comparison_Exp>;
    p256dh?: InputMaybe<String_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    user?: InputMaybe<User_Bool_Exp>;
    userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "PushNotificationSubscription" */
export enum PushNotificationSubscription_Constraint {
    /** unique or primary key constraint */
    PushNotificationSubscriptionPkey = "PushNotificationSubscription_pkey",
}

/** input type for inserting data into table "PushNotificationSubscription" */
export type PushNotificationSubscription_Insert_Input = {
    auth?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    endpoint?: InputMaybe<Scalars["String"]>;
    p256dh?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type PushNotificationSubscription_Max_Fields = {
    __typename?: "PushNotificationSubscription_max_fields";
    auth?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    endpoint?: Maybe<Scalars["String"]>;
    p256dh?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "PushNotificationSubscription" */
export type PushNotificationSubscription_Max_Order_By = {
    auth?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    endpoint?: InputMaybe<Order_By>;
    p256dh?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type PushNotificationSubscription_Min_Fields = {
    __typename?: "PushNotificationSubscription_min_fields";
    auth?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    endpoint?: Maybe<Scalars["String"]>;
    p256dh?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "PushNotificationSubscription" */
export type PushNotificationSubscription_Min_Order_By = {
    auth?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    endpoint?: InputMaybe<Order_By>;
    p256dh?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "PushNotificationSubscription" */
export type PushNotificationSubscription_Mutation_Response = {
    __typename?: "PushNotificationSubscription_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<PushNotificationSubscription>;
};

/** on_conflict condition type for table "PushNotificationSubscription" */
export type PushNotificationSubscription_On_Conflict = {
    constraint: PushNotificationSubscription_Constraint;
    update_columns?: Array<PushNotificationSubscription_Update_Column>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

/** Ordering options when selecting data from "PushNotificationSubscription". */
export type PushNotificationSubscription_Order_By = {
    auth?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    endpoint?: InputMaybe<Order_By>;
    p256dh?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    user?: InputMaybe<User_Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: PushNotificationSubscription */
export type PushNotificationSubscription_Pk_Columns_Input = {
    endpoint: Scalars["String"];
};

/** select columns of table "PushNotificationSubscription" */
export enum PushNotificationSubscription_Select_Column {
    /** column name */
    Auth = "auth",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Endpoint = "endpoint",
    /** column name */
    P256dh = "p256dh",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "PushNotificationSubscription" */
export type PushNotificationSubscription_Set_Input = {
    auth?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    endpoint?: InputMaybe<Scalars["String"]>;
    p256dh?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "PushNotificationSubscription" */
export enum PushNotificationSubscription_Update_Column {
    /** column name */
    Auth = "auth",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Endpoint = "endpoint",
    /** column name */
    P256dh = "p256dh",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

export type RefreshYouTubeDataOutput = {
    __typename?: "RefreshYouTubeDataOutput";
    message?: Maybe<Scalars["String"]>;
    success: Scalars["Boolean"];
};

export type StopEventBroadcastOutput = {
    __typename?: "StopEventBroadcastOutput";
    broadcastsStopped: Scalars["Int"];
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["String"]>;
    _gt?: InputMaybe<Scalars["String"]>;
    _gte?: InputMaybe<Scalars["String"]>;
    /** does the column match the given case-insensitive pattern */
    _ilike?: InputMaybe<Scalars["String"]>;
    _in?: InputMaybe<Array<Scalars["String"]>>;
    /** does the column match the given POSIX regular expression, case insensitive */
    _iregex?: InputMaybe<Scalars["String"]>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    /** does the column match the given pattern */
    _like?: InputMaybe<Scalars["String"]>;
    _lt?: InputMaybe<Scalars["String"]>;
    _lte?: InputMaybe<Scalars["String"]>;
    _neq?: InputMaybe<Scalars["String"]>;
    /** does the column NOT match the given case-insensitive pattern */
    _nilike?: InputMaybe<Scalars["String"]>;
    _nin?: InputMaybe<Array<Scalars["String"]>>;
    /** does the column NOT match the given POSIX regular expression, case insensitive */
    _niregex?: InputMaybe<Scalars["String"]>;
    /** does the column NOT match the given pattern */
    _nlike?: InputMaybe<Scalars["String"]>;
    /** does the column NOT match the given POSIX regular expression, case sensitive */
    _nregex?: InputMaybe<Scalars["String"]>;
    /** does the column NOT match the given SQL regular expression */
    _nsimilar?: InputMaybe<Scalars["String"]>;
    /** does the column match the given POSIX regular expression, case sensitive */
    _regex?: InputMaybe<Scalars["String"]>;
    /** does the column match the given SQL regular expression */
    _similar?: InputMaybe<Scalars["String"]>;
};

export type SubmitGoogleOAuthCodeOutput = {
    __typename?: "SubmitGoogleOAuthCodeOutput";
    message?: Maybe<Scalars["String"]>;
    success: Scalars["Boolean"];
};

export type SubmitUpdatedSubtitlesOutput = {
    __typename?: "SubmitUpdatedSubtitlesOutput";
    message: Scalars["String"];
    success: Scalars["Boolean"];
};

export type SubmitUploadableElementOutput = {
    __typename?: "SubmitUploadableElementOutput";
    message: Scalars["String"];
    success: Scalars["Boolean"];
};

export type ToggleVonageRecordingStateOutput = {
    __typename?: "ToggleVonageRecordingStateOutput";
    allowed: Scalars["Boolean"];
    recordingState: Scalars["Boolean"];
};

export type TranscribeGeneratePresignedUrlOutput = {
    __typename?: "TranscribeGeneratePresignedUrlOutput";
    url: Scalars["String"];
};

export type UpdateProfilePhotoResponse = {
    __typename?: "UpdateProfilePhotoResponse";
    ok: Scalars["Boolean"];
    photoURL_50x50?: Maybe<Scalars["String"]>;
    photoURL_350x350?: Maybe<Scalars["String"]>;
};

/** columns and relationships of "User" */
export type User = {
    __typename?: "User";
    acceptedPrivacyPolicyAt?: Maybe<Scalars["timestamptz"]>;
    acceptedTermsAt?: Maybe<Scalars["timestamptz"]>;
    /** An array relationship */
    conferenceDemoCodes: Array<Conference_DemoCode>;
    /** An aggregate relationship */
    conferenceDemoCodes_aggregate: Conference_DemoCode_Aggregate;
    /** An array relationship */
    conferencesCreated: Array<Conference_Conference>;
    /** An aggregate relationship */
    conferencesCreated_aggregate: Conference_Conference_Aggregate;
    createdAt: Scalars["timestamptz"];
    email?: Maybe<Scalars["String"]>;
    /** An array relationship */
    emails: Array<Email>;
    /** An aggregate relationship */
    emails_aggregate: Email_Aggregate;
    id: Scalars["String"];
    /** An array relationship */
    invitationsPendingConfirmation: Array<Registrant_Invitation>;
    /** An aggregate relationship */
    invitationsPendingConfirmation_aggregate: Registrant_Invitation_Aggregate;
    /** An array relationship */
    pushNotificationSubscriptions: Array<PushNotificationSubscription>;
    /** An aggregate relationship */
    pushNotificationSubscriptions_aggregate: PushNotificationSubscription_Aggregate;
    /** An array relationship */
    registrants: Array<Registrant_Registrant>;
    /** An aggregate relationship */
    registrants_aggregate: Registrant_Registrant_Aggregate;
    /** An array relationship */
    superUserPermissionGrants: Array<System_SuperUserPermissionGrant>;
    /** An aggregate relationship */
    superUserPermissionGrants_aggregate: System_SuperUserPermissionGrant_Aggregate;
    updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "User" */
export type UserConferenceDemoCodesArgs = {
    distinct_on?: InputMaybe<Array<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserConferenceDemoCodes_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserConferencesCreatedArgs = {
    distinct_on?: InputMaybe<Array<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserConferencesCreated_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserEmailsArgs = {
    distinct_on?: InputMaybe<Array<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserEmails_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserInvitationsPendingConfirmationArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserInvitationsPendingConfirmation_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserPushNotificationSubscriptionsArgs = {
    distinct_on?: InputMaybe<Array<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserPushNotificationSubscriptions_AggregateArgs = {
    distinct_on?: InputMaybe<Array<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserRegistrantsArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserRegistrants_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserSuperUserPermissionGrantsArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserSuperUserPermissionGrants_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** aggregated selection of "User" */
export type User_Aggregate = {
    __typename?: "User_aggregate";
    aggregate?: Maybe<User_Aggregate_Fields>;
    nodes: Array<User>;
};

/** aggregate fields of "User" */
export type User_Aggregate_Fields = {
    __typename?: "User_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<User_Max_Fields>;
    min?: Maybe<User_Min_Fields>;
};

/** aggregate fields of "User" */
export type User_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<User_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "User". All fields are combined with a logical 'AND'. */
export type User_Bool_Exp = {
    _and?: InputMaybe<Array<User_Bool_Exp>>;
    _not?: InputMaybe<User_Bool_Exp>;
    _or?: InputMaybe<Array<User_Bool_Exp>>;
    acceptedPrivacyPolicyAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    acceptedTermsAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    conferenceDemoCodes?: InputMaybe<Conference_DemoCode_Bool_Exp>;
    conferencesCreated?: InputMaybe<Conference_Conference_Bool_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    email?: InputMaybe<String_Comparison_Exp>;
    emails?: InputMaybe<Email_Bool_Exp>;
    id?: InputMaybe<String_Comparison_Exp>;
    invitationsPendingConfirmation?: InputMaybe<Registrant_Invitation_Bool_Exp>;
    pushNotificationSubscriptions?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
    registrants?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    superUserPermissionGrants?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "User" */
export enum User_Constraint {
    /** unique or primary key constraint */
    UserEmailKey = "user_email_key",
    /** unique or primary key constraint */
    UserPkey = "user_pkey",
}

/** input type for inserting data into table "User" */
export type User_Insert_Input = {
    acceptedPrivacyPolicyAt?: InputMaybe<Scalars["timestamptz"]>;
    acceptedTermsAt?: InputMaybe<Scalars["timestamptz"]>;
    conferenceDemoCodes?: InputMaybe<Conference_DemoCode_Arr_Rel_Insert_Input>;
    conferencesCreated?: InputMaybe<Conference_Conference_Arr_Rel_Insert_Input>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    email?: InputMaybe<Scalars["String"]>;
    emails?: InputMaybe<Email_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["String"]>;
    invitationsPendingConfirmation?: InputMaybe<Registrant_Invitation_Arr_Rel_Insert_Input>;
    pushNotificationSubscriptions?: InputMaybe<PushNotificationSubscription_Arr_Rel_Insert_Input>;
    registrants?: InputMaybe<Registrant_Registrant_Arr_Rel_Insert_Input>;
    superUserPermissionGrants?: InputMaybe<System_SuperUserPermissionGrant_Arr_Rel_Insert_Input>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type User_Max_Fields = {
    __typename?: "User_max_fields";
    acceptedPrivacyPolicyAt?: Maybe<Scalars["timestamptz"]>;
    acceptedTermsAt?: Maybe<Scalars["timestamptz"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    email?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type User_Min_Fields = {
    __typename?: "User_min_fields";
    acceptedPrivacyPolicyAt?: Maybe<Scalars["timestamptz"]>;
    acceptedTermsAt?: Maybe<Scalars["timestamptz"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    email?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "User" */
export type User_Mutation_Response = {
    __typename?: "User_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<User>;
};

/** input type for inserting object relation for remote table "User" */
export type User_Obj_Rel_Insert_Input = {
    data: User_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<User_On_Conflict>;
};

/** on_conflict condition type for table "User" */
export type User_On_Conflict = {
    constraint: User_Constraint;
    update_columns?: Array<User_Update_Column>;
    where?: InputMaybe<User_Bool_Exp>;
};

/** Ordering options when selecting data from "User". */
export type User_Order_By = {
    acceptedPrivacyPolicyAt?: InputMaybe<Order_By>;
    acceptedTermsAt?: InputMaybe<Order_By>;
    conferenceDemoCodes_aggregate?: InputMaybe<Conference_DemoCode_Aggregate_Order_By>;
    conferencesCreated_aggregate?: InputMaybe<Conference_Conference_Aggregate_Order_By>;
    createdAt?: InputMaybe<Order_By>;
    email?: InputMaybe<Order_By>;
    emails_aggregate?: InputMaybe<Email_Aggregate_Order_By>;
    id?: InputMaybe<Order_By>;
    invitationsPendingConfirmation_aggregate?: InputMaybe<Registrant_Invitation_Aggregate_Order_By>;
    pushNotificationSubscriptions_aggregate?: InputMaybe<PushNotificationSubscription_Aggregate_Order_By>;
    registrants_aggregate?: InputMaybe<Registrant_Registrant_Aggregate_Order_By>;
    superUserPermissionGrants_aggregate?: InputMaybe<System_SuperUserPermissionGrant_Aggregate_Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: User */
export type User_Pk_Columns_Input = {
    id: Scalars["String"];
};

/** select columns of table "User" */
export enum User_Select_Column {
    /** column name */
    AcceptedPrivacyPolicyAt = "acceptedPrivacyPolicyAt",
    /** column name */
    AcceptedTermsAt = "acceptedTermsAt",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Email = "email",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "User" */
export type User_Set_Input = {
    acceptedPrivacyPolicyAt?: InputMaybe<Scalars["timestamptz"]>;
    acceptedTermsAt?: InputMaybe<Scalars["timestamptz"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    email?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "User" */
export enum User_Update_Column {
    /** column name */
    AcceptedPrivacyPolicyAt = "acceptedPrivacyPolicyAt",
    /** column name */
    AcceptedTermsAt = "acceptedTermsAt",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Email = "email",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updatedAt",
}

export type VapidPublicKeyOutput = {
    __typename?: "VAPIDPublicKeyOutput";
    key: Scalars["String"];
};

/** columns and relationships of "analytics.AppStats" */
export type Analytics_AppStats = {
    __typename?: "analytics_AppStats";
    created_at: Scalars["timestamptz"];
    id: Scalars["Int"];
    pages?: Maybe<Scalars["jsonb"]>;
    total_unique_tabs: Scalars["Int"];
    total_unique_user_ids: Scalars["Int"];
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "analytics.AppStats" */
export type Analytics_AppStatsPagesArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "analytics.AppStats" */
export type Analytics_AppStats_Aggregate = {
    __typename?: "analytics_AppStats_aggregate";
    aggregate?: Maybe<Analytics_AppStats_Aggregate_Fields>;
    nodes: Array<Analytics_AppStats>;
};

/** aggregate fields of "analytics.AppStats" */
export type Analytics_AppStats_Aggregate_Fields = {
    __typename?: "analytics_AppStats_aggregate_fields";
    avg?: Maybe<Analytics_AppStats_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Analytics_AppStats_Max_Fields>;
    min?: Maybe<Analytics_AppStats_Min_Fields>;
    stddev?: Maybe<Analytics_AppStats_Stddev_Fields>;
    stddev_pop?: Maybe<Analytics_AppStats_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Analytics_AppStats_Stddev_Samp_Fields>;
    sum?: Maybe<Analytics_AppStats_Sum_Fields>;
    var_pop?: Maybe<Analytics_AppStats_Var_Pop_Fields>;
    var_samp?: Maybe<Analytics_AppStats_Var_Samp_Fields>;
    variance?: Maybe<Analytics_AppStats_Variance_Fields>;
};

/** aggregate fields of "analytics.AppStats" */
export type Analytics_AppStats_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Analytics_AppStats_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Analytics_AppStats_Append_Input = {
    pages?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate avg on columns */
export type Analytics_AppStats_Avg_Fields = {
    __typename?: "analytics_AppStats_avg_fields";
    id?: Maybe<Scalars["Float"]>;
    total_unique_tabs?: Maybe<Scalars["Float"]>;
    total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "analytics.AppStats". All fields are combined with a logical 'AND'. */
export type Analytics_AppStats_Bool_Exp = {
    _and?: InputMaybe<Array<Analytics_AppStats_Bool_Exp>>;
    _not?: InputMaybe<Analytics_AppStats_Bool_Exp>;
    _or?: InputMaybe<Array<Analytics_AppStats_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Int_Comparison_Exp>;
    pages?: InputMaybe<Jsonb_Comparison_Exp>;
    total_unique_tabs?: InputMaybe<Int_Comparison_Exp>;
    total_unique_user_ids?: InputMaybe<Int_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.AppStats" */
export enum Analytics_AppStats_Constraint {
    /** unique or primary key constraint */
    AppStatsPkey = "AppStats_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Analytics_AppStats_Delete_At_Path_Input = {
    pages?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Analytics_AppStats_Delete_Elem_Input = {
    pages?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Analytics_AppStats_Delete_Key_Input = {
    pages?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "analytics.AppStats" */
export type Analytics_AppStats_Inc_Input = {
    id?: InputMaybe<Scalars["Int"]>;
    total_unique_tabs?: InputMaybe<Scalars["Int"]>;
    total_unique_user_ids?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "analytics.AppStats" */
export type Analytics_AppStats_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["Int"]>;
    pages?: InputMaybe<Scalars["jsonb"]>;
    total_unique_tabs?: InputMaybe<Scalars["Int"]>;
    total_unique_user_ids?: InputMaybe<Scalars["Int"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Analytics_AppStats_Max_Fields = {
    __typename?: "analytics_AppStats_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["Int"]>;
    total_unique_tabs?: Maybe<Scalars["Int"]>;
    total_unique_user_ids?: Maybe<Scalars["Int"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Analytics_AppStats_Min_Fields = {
    __typename?: "analytics_AppStats_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["Int"]>;
    total_unique_tabs?: Maybe<Scalars["Int"]>;
    total_unique_user_ids?: Maybe<Scalars["Int"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "analytics.AppStats" */
export type Analytics_AppStats_Mutation_Response = {
    __typename?: "analytics_AppStats_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Analytics_AppStats>;
};

/** on_conflict condition type for table "analytics.AppStats" */
export type Analytics_AppStats_On_Conflict = {
    constraint: Analytics_AppStats_Constraint;
    update_columns?: Array<Analytics_AppStats_Update_Column>;
    where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.AppStats". */
export type Analytics_AppStats_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    pages?: InputMaybe<Order_By>;
    total_unique_tabs?: InputMaybe<Order_By>;
    total_unique_user_ids?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_AppStats */
export type Analytics_AppStats_Pk_Columns_Input = {
    id: Scalars["Int"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Analytics_AppStats_Prepend_Input = {
    pages?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "analytics.AppStats" */
export enum Analytics_AppStats_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    Pages = "pages",
    /** column name */
    TotalUniqueTabs = "total_unique_tabs",
    /** column name */
    TotalUniqueUserIds = "total_unique_user_ids",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "analytics.AppStats" */
export type Analytics_AppStats_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["Int"]>;
    pages?: InputMaybe<Scalars["jsonb"]>;
    total_unique_tabs?: InputMaybe<Scalars["Int"]>;
    total_unique_user_ids?: InputMaybe<Scalars["Int"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Analytics_AppStats_Stddev_Fields = {
    __typename?: "analytics_AppStats_stddev_fields";
    id?: Maybe<Scalars["Float"]>;
    total_unique_tabs?: Maybe<Scalars["Float"]>;
    total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Analytics_AppStats_Stddev_Pop_Fields = {
    __typename?: "analytics_AppStats_stddev_pop_fields";
    id?: Maybe<Scalars["Float"]>;
    total_unique_tabs?: Maybe<Scalars["Float"]>;
    total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Analytics_AppStats_Stddev_Samp_Fields = {
    __typename?: "analytics_AppStats_stddev_samp_fields";
    id?: Maybe<Scalars["Float"]>;
    total_unique_tabs?: Maybe<Scalars["Float"]>;
    total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Analytics_AppStats_Sum_Fields = {
    __typename?: "analytics_AppStats_sum_fields";
    id?: Maybe<Scalars["Int"]>;
    total_unique_tabs?: Maybe<Scalars["Int"]>;
    total_unique_user_ids?: Maybe<Scalars["Int"]>;
};

/** update columns of table "analytics.AppStats" */
export enum Analytics_AppStats_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    Pages = "pages",
    /** column name */
    TotalUniqueTabs = "total_unique_tabs",
    /** column name */
    TotalUniqueUserIds = "total_unique_user_ids",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Analytics_AppStats_Var_Pop_Fields = {
    __typename?: "analytics_AppStats_var_pop_fields";
    id?: Maybe<Scalars["Float"]>;
    total_unique_tabs?: Maybe<Scalars["Float"]>;
    total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Analytics_AppStats_Var_Samp_Fields = {
    __typename?: "analytics_AppStats_var_samp_fields";
    id?: Maybe<Scalars["Float"]>;
    total_unique_tabs?: Maybe<Scalars["Float"]>;
    total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Analytics_AppStats_Variance_Fields = {
    __typename?: "analytics_AppStats_variance_fields";
    id?: Maybe<Scalars["Float"]>;
    total_unique_tabs?: Maybe<Scalars["Float"]>;
    total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations = {
    __typename?: "analytics_CompletedRegistrations";
    /** An object relationship */
    conference?: Maybe<Conference_Conference>;
    count?: Maybe<Scalars["bigint"]>;
    id?: Maybe<Scalars["uuid"]>;
};

/** aggregated selection of "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Aggregate = {
    __typename?: "analytics_CompletedRegistrations_aggregate";
    aggregate?: Maybe<Analytics_CompletedRegistrations_Aggregate_Fields>;
    nodes: Array<Analytics_CompletedRegistrations>;
};

/** aggregate fields of "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Aggregate_Fields = {
    __typename?: "analytics_CompletedRegistrations_aggregate_fields";
    avg?: Maybe<Analytics_CompletedRegistrations_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Analytics_CompletedRegistrations_Max_Fields>;
    min?: Maybe<Analytics_CompletedRegistrations_Min_Fields>;
    stddev?: Maybe<Analytics_CompletedRegistrations_Stddev_Fields>;
    stddev_pop?: Maybe<Analytics_CompletedRegistrations_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Analytics_CompletedRegistrations_Stddev_Samp_Fields>;
    sum?: Maybe<Analytics_CompletedRegistrations_Sum_Fields>;
    var_pop?: Maybe<Analytics_CompletedRegistrations_Var_Pop_Fields>;
    var_samp?: Maybe<Analytics_CompletedRegistrations_Var_Samp_Fields>;
    variance?: Maybe<Analytics_CompletedRegistrations_Variance_Fields>;
};

/** aggregate fields of "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Analytics_CompletedRegistrations_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Analytics_CompletedRegistrations_Avg_Fields = {
    __typename?: "analytics_CompletedRegistrations_avg_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "analytics.CompletedRegistrations". All fields are combined with a logical 'AND'. */
export type Analytics_CompletedRegistrations_Bool_Exp = {
    _and?: InputMaybe<Array<Analytics_CompletedRegistrations_Bool_Exp>>;
    _not?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
    _or?: InputMaybe<Array<Analytics_CompletedRegistrations_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    count?: InputMaybe<Bigint_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** input type for inserting data into table "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    count?: InputMaybe<Scalars["bigint"]>;
    id?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate max on columns */
export type Analytics_CompletedRegistrations_Max_Fields = {
    __typename?: "analytics_CompletedRegistrations_max_fields";
    count?: Maybe<Scalars["bigint"]>;
    id?: Maybe<Scalars["uuid"]>;
};

/** aggregate min on columns */
export type Analytics_CompletedRegistrations_Min_Fields = {
    __typename?: "analytics_CompletedRegistrations_min_fields";
    count?: Maybe<Scalars["bigint"]>;
    id?: Maybe<Scalars["uuid"]>;
};

/** input type for inserting object relation for remote table "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Obj_Rel_Insert_Input = {
    data: Analytics_CompletedRegistrations_Insert_Input;
};

/** Ordering options when selecting data from "analytics.CompletedRegistrations". */
export type Analytics_CompletedRegistrations_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    count?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** select columns of table "analytics.CompletedRegistrations" */
export enum Analytics_CompletedRegistrations_Select_Column {
    /** column name */
    Count = "count",
    /** column name */
    Id = "id",
}

/** aggregate stddev on columns */
export type Analytics_CompletedRegistrations_Stddev_Fields = {
    __typename?: "analytics_CompletedRegistrations_stddev_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Analytics_CompletedRegistrations_Stddev_Pop_Fields = {
    __typename?: "analytics_CompletedRegistrations_stddev_pop_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Analytics_CompletedRegistrations_Stddev_Samp_Fields = {
    __typename?: "analytics_CompletedRegistrations_stddev_samp_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Analytics_CompletedRegistrations_Sum_Fields = {
    __typename?: "analytics_CompletedRegistrations_sum_fields";
    count?: Maybe<Scalars["bigint"]>;
};

/** aggregate var_pop on columns */
export type Analytics_CompletedRegistrations_Var_Pop_Fields = {
    __typename?: "analytics_CompletedRegistrations_var_pop_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Analytics_CompletedRegistrations_Var_Samp_Fields = {
    __typename?: "analytics_CompletedRegistrations_var_samp_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Analytics_CompletedRegistrations_Variance_Fields = {
    __typename?: "analytics_CompletedRegistrations_variance_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "analytics.ContentElementStats" */
export type Analytics_ContentElementStats = {
    __typename?: "analytics_ContentElementStats";
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    element: Content_Element;
    elementId: Scalars["uuid"];
    id: Scalars["uuid"];
    updated_at: Scalars["timestamptz"];
    viewCount: Scalars["Int"];
};

/** aggregated selection of "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Aggregate = {
    __typename?: "analytics_ContentElementStats_aggregate";
    aggregate?: Maybe<Analytics_ContentElementStats_Aggregate_Fields>;
    nodes: Array<Analytics_ContentElementStats>;
};

/** aggregate fields of "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Aggregate_Fields = {
    __typename?: "analytics_ContentElementStats_aggregate_fields";
    avg?: Maybe<Analytics_ContentElementStats_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Analytics_ContentElementStats_Max_Fields>;
    min?: Maybe<Analytics_ContentElementStats_Min_Fields>;
    stddev?: Maybe<Analytics_ContentElementStats_Stddev_Fields>;
    stddev_pop?: Maybe<Analytics_ContentElementStats_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Analytics_ContentElementStats_Stddev_Samp_Fields>;
    sum?: Maybe<Analytics_ContentElementStats_Sum_Fields>;
    var_pop?: Maybe<Analytics_ContentElementStats_Var_Pop_Fields>;
    var_samp?: Maybe<Analytics_ContentElementStats_Var_Samp_Fields>;
    variance?: Maybe<Analytics_ContentElementStats_Variance_Fields>;
};

/** aggregate fields of "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Analytics_ContentElementStats_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Aggregate_Order_By = {
    avg?: InputMaybe<Analytics_ContentElementStats_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Analytics_ContentElementStats_Max_Order_By>;
    min?: InputMaybe<Analytics_ContentElementStats_Min_Order_By>;
    stddev?: InputMaybe<Analytics_ContentElementStats_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Analytics_ContentElementStats_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Analytics_ContentElementStats_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Analytics_ContentElementStats_Sum_Order_By>;
    var_pop?: InputMaybe<Analytics_ContentElementStats_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Analytics_ContentElementStats_Var_Samp_Order_By>;
    variance?: InputMaybe<Analytics_ContentElementStats_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Arr_Rel_Insert_Input = {
    data: Array<Analytics_ContentElementStats_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Analytics_ContentElementStats_On_Conflict>;
};

/** aggregate avg on columns */
export type Analytics_ContentElementStats_Avg_Fields = {
    __typename?: "analytics_ContentElementStats_avg_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Avg_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "analytics.ContentElementStats". All fields are combined with a logical 'AND'. */
export type Analytics_ContentElementStats_Bool_Exp = {
    _and?: InputMaybe<Array<Analytics_ContentElementStats_Bool_Exp>>;
    _not?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
    _or?: InputMaybe<Array<Analytics_ContentElementStats_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    element?: InputMaybe<Content_Element_Bool_Exp>;
    elementId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    viewCount?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.ContentElementStats" */
export enum Analytics_ContentElementStats_Constraint {
    /** unique or primary key constraint */
    ContentElementStatsIdKey = "ContentElementStats_id_key",
    /** unique or primary key constraint */
    ContentElementStatsPkey = "ContentElementStats_pkey",
}

/** input type for incrementing numeric columns in table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Inc_Input = {
    viewCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    viewCount?: InputMaybe<Scalars["Int"]>;
};

/** aggregate max on columns */
export type Analytics_ContentElementStats_Max_Fields = {
    __typename?: "analytics_ContentElementStats_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    viewCount?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Analytics_ContentElementStats_Min_Fields = {
    __typename?: "analytics_ContentElementStats_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    viewCount?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    viewCount?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Mutation_Response = {
    __typename?: "analytics_ContentElementStats_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Analytics_ContentElementStats>;
};

/** on_conflict condition type for table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_On_Conflict = {
    constraint: Analytics_ContentElementStats_Constraint;
    update_columns?: Array<Analytics_ContentElementStats_Update_Column>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.ContentElementStats". */
export type Analytics_ContentElementStats_Order_By = {
    created_at?: InputMaybe<Order_By>;
    element?: InputMaybe<Content_Element_Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    viewCount?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_ContentElementStats */
export type Analytics_ContentElementStats_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "analytics.ContentElementStats" */
export enum Analytics_ContentElementStats_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    ViewCount = "viewCount",
}

/** input type for updating data in table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    viewCount?: InputMaybe<Scalars["Int"]>;
};

/** aggregate stddev on columns */
export type Analytics_ContentElementStats_Stddev_Fields = {
    __typename?: "analytics_ContentElementStats_stddev_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Stddev_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Analytics_ContentElementStats_Stddev_Pop_Fields = {
    __typename?: "analytics_ContentElementStats_stddev_pop_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Stddev_Pop_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Analytics_ContentElementStats_Stddev_Samp_Fields = {
    __typename?: "analytics_ContentElementStats_stddev_samp_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Stddev_Samp_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Analytics_ContentElementStats_Sum_Fields = {
    __typename?: "analytics_ContentElementStats_sum_fields";
    viewCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Sum_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** update columns of table "analytics.ContentElementStats" */
export enum Analytics_ContentElementStats_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    ViewCount = "viewCount",
}

/** aggregate var_pop on columns */
export type Analytics_ContentElementStats_Var_Pop_Fields = {
    __typename?: "analytics_ContentElementStats_var_pop_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Var_Pop_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Analytics_ContentElementStats_Var_Samp_Fields = {
    __typename?: "analytics_ContentElementStats_var_samp_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Var_Samp_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Analytics_ContentElementStats_Variance_Fields = {
    __typename?: "analytics_ContentElementStats_variance_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Variance_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** columns and relationships of "analytics.ContentItemStats" */
export type Analytics_ContentItemStats = {
    __typename?: "analytics_ContentItemStats";
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An object relationship */
    item: Content_Item;
    itemId: Scalars["uuid"];
    updated_at: Scalars["timestamptz"];
    viewCount: Scalars["Int"];
};

/** aggregated selection of "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Aggregate = {
    __typename?: "analytics_ContentItemStats_aggregate";
    aggregate?: Maybe<Analytics_ContentItemStats_Aggregate_Fields>;
    nodes: Array<Analytics_ContentItemStats>;
};

/** aggregate fields of "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Aggregate_Fields = {
    __typename?: "analytics_ContentItemStats_aggregate_fields";
    avg?: Maybe<Analytics_ContentItemStats_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Analytics_ContentItemStats_Max_Fields>;
    min?: Maybe<Analytics_ContentItemStats_Min_Fields>;
    stddev?: Maybe<Analytics_ContentItemStats_Stddev_Fields>;
    stddev_pop?: Maybe<Analytics_ContentItemStats_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Analytics_ContentItemStats_Stddev_Samp_Fields>;
    sum?: Maybe<Analytics_ContentItemStats_Sum_Fields>;
    var_pop?: Maybe<Analytics_ContentItemStats_Var_Pop_Fields>;
    var_samp?: Maybe<Analytics_ContentItemStats_Var_Samp_Fields>;
    variance?: Maybe<Analytics_ContentItemStats_Variance_Fields>;
};

/** aggregate fields of "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Analytics_ContentItemStats_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Aggregate_Order_By = {
    avg?: InputMaybe<Analytics_ContentItemStats_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Analytics_ContentItemStats_Max_Order_By>;
    min?: InputMaybe<Analytics_ContentItemStats_Min_Order_By>;
    stddev?: InputMaybe<Analytics_ContentItemStats_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Analytics_ContentItemStats_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Analytics_ContentItemStats_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Analytics_ContentItemStats_Sum_Order_By>;
    var_pop?: InputMaybe<Analytics_ContentItemStats_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Analytics_ContentItemStats_Var_Samp_Order_By>;
    variance?: InputMaybe<Analytics_ContentItemStats_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Arr_Rel_Insert_Input = {
    data: Array<Analytics_ContentItemStats_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Analytics_ContentItemStats_On_Conflict>;
};

/** aggregate avg on columns */
export type Analytics_ContentItemStats_Avg_Fields = {
    __typename?: "analytics_ContentItemStats_avg_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Avg_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "analytics.ContentItemStats". All fields are combined with a logical 'AND'. */
export type Analytics_ContentItemStats_Bool_Exp = {
    _and?: InputMaybe<Array<Analytics_ContentItemStats_Bool_Exp>>;
    _not?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
    _or?: InputMaybe<Array<Analytics_ContentItemStats_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    viewCount?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.ContentItemStats" */
export enum Analytics_ContentItemStats_Constraint {
    /** unique or primary key constraint */
    ContentItemStatsIdKey = "ContentItemStats_id_key",
    /** unique or primary key constraint */
    ContentItemStatsPkey = "ContentItemStats_pkey",
}

/** input type for incrementing numeric columns in table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Inc_Input = {
    viewCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    viewCount?: InputMaybe<Scalars["Int"]>;
};

/** aggregate max on columns */
export type Analytics_ContentItemStats_Max_Fields = {
    __typename?: "analytics_ContentItemStats_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    viewCount?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Analytics_ContentItemStats_Min_Fields = {
    __typename?: "analytics_ContentItemStats_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    viewCount?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    viewCount?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Mutation_Response = {
    __typename?: "analytics_ContentItemStats_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Analytics_ContentItemStats>;
};

/** on_conflict condition type for table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_On_Conflict = {
    constraint: Analytics_ContentItemStats_Constraint;
    update_columns?: Array<Analytics_ContentItemStats_Update_Column>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.ContentItemStats". */
export type Analytics_ContentItemStats_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    item?: InputMaybe<Content_Item_Order_By>;
    itemId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    viewCount?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_ContentItemStats */
export type Analytics_ContentItemStats_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "analytics.ContentItemStats" */
export enum Analytics_ContentItemStats_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    ViewCount = "viewCount",
}

/** input type for updating data in table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    viewCount?: InputMaybe<Scalars["Int"]>;
};

/** aggregate stddev on columns */
export type Analytics_ContentItemStats_Stddev_Fields = {
    __typename?: "analytics_ContentItemStats_stddev_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Stddev_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Analytics_ContentItemStats_Stddev_Pop_Fields = {
    __typename?: "analytics_ContentItemStats_stddev_pop_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Stddev_Pop_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Analytics_ContentItemStats_Stddev_Samp_Fields = {
    __typename?: "analytics_ContentItemStats_stddev_samp_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Stddev_Samp_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Analytics_ContentItemStats_Sum_Fields = {
    __typename?: "analytics_ContentItemStats_sum_fields";
    viewCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Sum_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** update columns of table "analytics.ContentItemStats" */
export enum Analytics_ContentItemStats_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    ViewCount = "viewCount",
}

/** aggregate var_pop on columns */
export type Analytics_ContentItemStats_Var_Pop_Fields = {
    __typename?: "analytics_ContentItemStats_var_pop_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Var_Pop_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Analytics_ContentItemStats_Var_Samp_Fields = {
    __typename?: "analytics_ContentItemStats_var_samp_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Var_Samp_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Analytics_ContentItemStats_Variance_Fields = {
    __typename?: "analytics_ContentItemStats_variance_fields";
    viewCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Variance_Order_By = {
    viewCount?: InputMaybe<Order_By>;
};

/** columns and relationships of "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews = {
    __typename?: "analytics_ElementTotalViews";
    /** An object relationship */
    element?: Maybe<Content_Element>;
    elementId: Scalars["uuid"];
    totalViewCount: Scalars["bigint"];
};

/** aggregated selection of "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Aggregate = {
    __typename?: "analytics_ElementTotalViews_aggregate";
    aggregate?: Maybe<Analytics_ElementTotalViews_Aggregate_Fields>;
    nodes: Array<Analytics_ElementTotalViews>;
};

/** aggregate fields of "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Aggregate_Fields = {
    __typename?: "analytics_ElementTotalViews_aggregate_fields";
    avg?: Maybe<Analytics_ElementTotalViews_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Analytics_ElementTotalViews_Max_Fields>;
    min?: Maybe<Analytics_ElementTotalViews_Min_Fields>;
    stddev?: Maybe<Analytics_ElementTotalViews_Stddev_Fields>;
    stddev_pop?: Maybe<Analytics_ElementTotalViews_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Analytics_ElementTotalViews_Stddev_Samp_Fields>;
    sum?: Maybe<Analytics_ElementTotalViews_Sum_Fields>;
    var_pop?: Maybe<Analytics_ElementTotalViews_Var_Pop_Fields>;
    var_samp?: Maybe<Analytics_ElementTotalViews_Var_Samp_Fields>;
    variance?: Maybe<Analytics_ElementTotalViews_Variance_Fields>;
};

/** aggregate fields of "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Analytics_ElementTotalViews_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Analytics_ElementTotalViews_Avg_Fields = {
    __typename?: "analytics_ElementTotalViews_avg_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "analytics.ElementTotalViews". All fields are combined with a logical 'AND'. */
export type Analytics_ElementTotalViews_Bool_Exp = {
    _and?: InputMaybe<Array<Analytics_ElementTotalViews_Bool_Exp>>;
    _not?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
    _or?: InputMaybe<Array<Analytics_ElementTotalViews_Bool_Exp>>;
    element?: InputMaybe<Content_Element_Bool_Exp>;
    elementId?: InputMaybe<Uuid_Comparison_Exp>;
    totalViewCount?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.ElementTotalViews" */
export enum Analytics_ElementTotalViews_Constraint {
    /** unique or primary key constraint */
    ElementTotalViewsPkey = "ElementTotalViews_pkey",
}

/** input type for incrementing numeric columns in table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Inc_Input = {
    totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Insert_Input = {
    element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** aggregate max on columns */
export type Analytics_ElementTotalViews_Max_Fields = {
    __typename?: "analytics_ElementTotalViews_max_fields";
    elementId?: Maybe<Scalars["uuid"]>;
    totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** aggregate min on columns */
export type Analytics_ElementTotalViews_Min_Fields = {
    __typename?: "analytics_ElementTotalViews_min_fields";
    elementId?: Maybe<Scalars["uuid"]>;
    totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** response of any mutation on the table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Mutation_Response = {
    __typename?: "analytics_ElementTotalViews_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Analytics_ElementTotalViews>;
};

/** input type for inserting object relation for remote table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Obj_Rel_Insert_Input = {
    data: Analytics_ElementTotalViews_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Analytics_ElementTotalViews_On_Conflict>;
};

/** on_conflict condition type for table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_On_Conflict = {
    constraint: Analytics_ElementTotalViews_Constraint;
    update_columns?: Array<Analytics_ElementTotalViews_Update_Column>;
    where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.ElementTotalViews". */
export type Analytics_ElementTotalViews_Order_By = {
    element?: InputMaybe<Content_Element_Order_By>;
    elementId?: InputMaybe<Order_By>;
    totalViewCount?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_ElementTotalViews */
export type Analytics_ElementTotalViews_Pk_Columns_Input = {
    elementId: Scalars["uuid"];
};

/** select columns of table "analytics.ElementTotalViews" */
export enum Analytics_ElementTotalViews_Select_Column {
    /** column name */
    ElementId = "elementId",
    /** column name */
    TotalViewCount = "totalViewCount",
}

/** input type for updating data in table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Set_Input = {
    elementId?: InputMaybe<Scalars["uuid"]>;
    totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** aggregate stddev on columns */
export type Analytics_ElementTotalViews_Stddev_Fields = {
    __typename?: "analytics_ElementTotalViews_stddev_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Analytics_ElementTotalViews_Stddev_Pop_Fields = {
    __typename?: "analytics_ElementTotalViews_stddev_pop_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Analytics_ElementTotalViews_Stddev_Samp_Fields = {
    __typename?: "analytics_ElementTotalViews_stddev_samp_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Analytics_ElementTotalViews_Sum_Fields = {
    __typename?: "analytics_ElementTotalViews_sum_fields";
    totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** update columns of table "analytics.ElementTotalViews" */
export enum Analytics_ElementTotalViews_Update_Column {
    /** column name */
    ElementId = "elementId",
    /** column name */
    TotalViewCount = "totalViewCount",
}

/** aggregate var_pop on columns */
export type Analytics_ElementTotalViews_Var_Pop_Fields = {
    __typename?: "analytics_ElementTotalViews_var_pop_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Analytics_ElementTotalViews_Var_Samp_Fields = {
    __typename?: "analytics_ElementTotalViews_var_samp_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Analytics_ElementTotalViews_Variance_Fields = {
    __typename?: "analytics_ElementTotalViews_variance_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews = {
    __typename?: "analytics_ItemTotalViews";
    /** An object relationship */
    item?: Maybe<Content_Item>;
    itemId: Scalars["uuid"];
    totalViewCount: Scalars["bigint"];
};

/** aggregated selection of "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Aggregate = {
    __typename?: "analytics_ItemTotalViews_aggregate";
    aggregate?: Maybe<Analytics_ItemTotalViews_Aggregate_Fields>;
    nodes: Array<Analytics_ItemTotalViews>;
};

/** aggregate fields of "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Aggregate_Fields = {
    __typename?: "analytics_ItemTotalViews_aggregate_fields";
    avg?: Maybe<Analytics_ItemTotalViews_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Analytics_ItemTotalViews_Max_Fields>;
    min?: Maybe<Analytics_ItemTotalViews_Min_Fields>;
    stddev?: Maybe<Analytics_ItemTotalViews_Stddev_Fields>;
    stddev_pop?: Maybe<Analytics_ItemTotalViews_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Analytics_ItemTotalViews_Stddev_Samp_Fields>;
    sum?: Maybe<Analytics_ItemTotalViews_Sum_Fields>;
    var_pop?: Maybe<Analytics_ItemTotalViews_Var_Pop_Fields>;
    var_samp?: Maybe<Analytics_ItemTotalViews_Var_Samp_Fields>;
    variance?: Maybe<Analytics_ItemTotalViews_Variance_Fields>;
};

/** aggregate fields of "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Analytics_ItemTotalViews_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Analytics_ItemTotalViews_Avg_Fields = {
    __typename?: "analytics_ItemTotalViews_avg_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "analytics.ItemTotalViews". All fields are combined with a logical 'AND'. */
export type Analytics_ItemTotalViews_Bool_Exp = {
    _and?: InputMaybe<Array<Analytics_ItemTotalViews_Bool_Exp>>;
    _not?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
    _or?: InputMaybe<Array<Analytics_ItemTotalViews_Bool_Exp>>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    totalViewCount?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.ItemTotalViews" */
export enum Analytics_ItemTotalViews_Constraint {
    /** unique or primary key constraint */
    ItemTotalViewsPkey = "ItemTotalViews_pkey",
}

/** input type for incrementing numeric columns in table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Inc_Input = {
    totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Insert_Input = {
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** aggregate max on columns */
export type Analytics_ItemTotalViews_Max_Fields = {
    __typename?: "analytics_ItemTotalViews_max_fields";
    itemId?: Maybe<Scalars["uuid"]>;
    totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** aggregate min on columns */
export type Analytics_ItemTotalViews_Min_Fields = {
    __typename?: "analytics_ItemTotalViews_min_fields";
    itemId?: Maybe<Scalars["uuid"]>;
    totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** response of any mutation on the table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Mutation_Response = {
    __typename?: "analytics_ItemTotalViews_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Analytics_ItemTotalViews>;
};

/** input type for inserting object relation for remote table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Obj_Rel_Insert_Input = {
    data: Analytics_ItemTotalViews_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Analytics_ItemTotalViews_On_Conflict>;
};

/** on_conflict condition type for table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_On_Conflict = {
    constraint: Analytics_ItemTotalViews_Constraint;
    update_columns?: Array<Analytics_ItemTotalViews_Update_Column>;
    where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.ItemTotalViews". */
export type Analytics_ItemTotalViews_Order_By = {
    item?: InputMaybe<Content_Item_Order_By>;
    itemId?: InputMaybe<Order_By>;
    totalViewCount?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_ItemTotalViews */
export type Analytics_ItemTotalViews_Pk_Columns_Input = {
    itemId: Scalars["uuid"];
};

/** select columns of table "analytics.ItemTotalViews" */
export enum Analytics_ItemTotalViews_Select_Column {
    /** column name */
    ItemId = "itemId",
    /** column name */
    TotalViewCount = "totalViewCount",
}

/** input type for updating data in table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Set_Input = {
    itemId?: InputMaybe<Scalars["uuid"]>;
    totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** aggregate stddev on columns */
export type Analytics_ItemTotalViews_Stddev_Fields = {
    __typename?: "analytics_ItemTotalViews_stddev_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Analytics_ItemTotalViews_Stddev_Pop_Fields = {
    __typename?: "analytics_ItemTotalViews_stddev_pop_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Analytics_ItemTotalViews_Stddev_Samp_Fields = {
    __typename?: "analytics_ItemTotalViews_stddev_samp_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Analytics_ItemTotalViews_Sum_Fields = {
    __typename?: "analytics_ItemTotalViews_sum_fields";
    totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** update columns of table "analytics.ItemTotalViews" */
export enum Analytics_ItemTotalViews_Update_Column {
    /** column name */
    ItemId = "itemId",
    /** column name */
    TotalViewCount = "totalViewCount",
}

/** aggregate var_pop on columns */
export type Analytics_ItemTotalViews_Var_Pop_Fields = {
    __typename?: "analytics_ItemTotalViews_var_pop_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Analytics_ItemTotalViews_Var_Samp_Fields = {
    __typename?: "analytics_ItemTotalViews_var_samp_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Analytics_ItemTotalViews_Variance_Fields = {
    __typename?: "analytics_ItemTotalViews_variance_fields";
    totalViewCount?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "analytics.RoomPresence" */
export type Analytics_RoomPresence = {
    __typename?: "analytics_RoomPresence";
    count: Scalars["bigint"];
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An object relationship */
    room: Room_Room;
    roomId: Scalars["uuid"];
};

/** aggregated selection of "analytics.RoomPresence" */
export type Analytics_RoomPresence_Aggregate = {
    __typename?: "analytics_RoomPresence_aggregate";
    aggregate?: Maybe<Analytics_RoomPresence_Aggregate_Fields>;
    nodes: Array<Analytics_RoomPresence>;
};

/** aggregate fields of "analytics.RoomPresence" */
export type Analytics_RoomPresence_Aggregate_Fields = {
    __typename?: "analytics_RoomPresence_aggregate_fields";
    avg?: Maybe<Analytics_RoomPresence_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Analytics_RoomPresence_Max_Fields>;
    min?: Maybe<Analytics_RoomPresence_Min_Fields>;
    stddev?: Maybe<Analytics_RoomPresence_Stddev_Fields>;
    stddev_pop?: Maybe<Analytics_RoomPresence_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Analytics_RoomPresence_Stddev_Samp_Fields>;
    sum?: Maybe<Analytics_RoomPresence_Sum_Fields>;
    var_pop?: Maybe<Analytics_RoomPresence_Var_Pop_Fields>;
    var_samp?: Maybe<Analytics_RoomPresence_Var_Samp_Fields>;
    variance?: Maybe<Analytics_RoomPresence_Variance_Fields>;
};

/** aggregate fields of "analytics.RoomPresence" */
export type Analytics_RoomPresence_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Analytics_RoomPresence_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Aggregate_Order_By = {
    avg?: InputMaybe<Analytics_RoomPresence_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Analytics_RoomPresence_Max_Order_By>;
    min?: InputMaybe<Analytics_RoomPresence_Min_Order_By>;
    stddev?: InputMaybe<Analytics_RoomPresence_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Analytics_RoomPresence_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Analytics_RoomPresence_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Analytics_RoomPresence_Sum_Order_By>;
    var_pop?: InputMaybe<Analytics_RoomPresence_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Analytics_RoomPresence_Var_Samp_Order_By>;
    variance?: InputMaybe<Analytics_RoomPresence_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Arr_Rel_Insert_Input = {
    data: Array<Analytics_RoomPresence_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Analytics_RoomPresence_On_Conflict>;
};

/** aggregate avg on columns */
export type Analytics_RoomPresence_Avg_Fields = {
    __typename?: "analytics_RoomPresence_avg_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Avg_Order_By = {
    count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "analytics.RoomPresence". All fields are combined with a logical 'AND'. */
export type Analytics_RoomPresence_Bool_Exp = {
    _and?: InputMaybe<Array<Analytics_RoomPresence_Bool_Exp>>;
    _not?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
    _or?: InputMaybe<Array<Analytics_RoomPresence_Bool_Exp>>;
    count?: InputMaybe<Bigint_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.RoomPresence" */
export enum Analytics_RoomPresence_Constraint {
    /** unique or primary key constraint */
    RoomPresencePkey = "RoomPresence_pkey",
    /** unique or primary key constraint */
    RoomPresenceRoomIdCreatedAtKey = "RoomPresence_roomId_created_at_key",
}

/** input type for incrementing numeric columns in table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Inc_Input = {
    count?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Insert_Input = {
    count?: InputMaybe<Scalars["bigint"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate max on columns */
export type Analytics_RoomPresence_Max_Fields = {
    __typename?: "analytics_RoomPresence_max_fields";
    count?: Maybe<Scalars["bigint"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Max_Order_By = {
    count?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Analytics_RoomPresence_Min_Fields = {
    __typename?: "analytics_RoomPresence_min_fields";
    count?: Maybe<Scalars["bigint"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Min_Order_By = {
    count?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Mutation_Response = {
    __typename?: "analytics_RoomPresence_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Analytics_RoomPresence>;
};

/** on_conflict condition type for table "analytics.RoomPresence" */
export type Analytics_RoomPresence_On_Conflict = {
    constraint: Analytics_RoomPresence_Constraint;
    update_columns?: Array<Analytics_RoomPresence_Update_Column>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.RoomPresence". */
export type Analytics_RoomPresence_Order_By = {
    count?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_RoomPresence */
export type Analytics_RoomPresence_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "analytics.RoomPresence" */
export enum Analytics_RoomPresence_Select_Column {
    /** column name */
    Count = "count",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
}

/** input type for updating data in table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Set_Input = {
    count?: InputMaybe<Scalars["bigint"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate stddev on columns */
export type Analytics_RoomPresence_Stddev_Fields = {
    __typename?: "analytics_RoomPresence_stddev_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Stddev_Order_By = {
    count?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Analytics_RoomPresence_Stddev_Pop_Fields = {
    __typename?: "analytics_RoomPresence_stddev_pop_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Stddev_Pop_Order_By = {
    count?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Analytics_RoomPresence_Stddev_Samp_Fields = {
    __typename?: "analytics_RoomPresence_stddev_samp_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Stddev_Samp_Order_By = {
    count?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Analytics_RoomPresence_Sum_Fields = {
    __typename?: "analytics_RoomPresence_sum_fields";
    count?: Maybe<Scalars["bigint"]>;
};

/** order by sum() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Sum_Order_By = {
    count?: InputMaybe<Order_By>;
};

/** update columns of table "analytics.RoomPresence" */
export enum Analytics_RoomPresence_Update_Column {
    /** column name */
    Count = "count",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
}

/** aggregate var_pop on columns */
export type Analytics_RoomPresence_Var_Pop_Fields = {
    __typename?: "analytics_RoomPresence_var_pop_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Var_Pop_Order_By = {
    count?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Analytics_RoomPresence_Var_Samp_Fields = {
    __typename?: "analytics_RoomPresence_var_samp_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Var_Samp_Order_By = {
    count?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Analytics_RoomPresence_Variance_Fields = {
    __typename?: "analytics_RoomPresence_variance_fields";
    count?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Variance_Order_By = {
    count?: InputMaybe<Order_By>;
};

/** columns and relationships of "analytics.RoomStats" */
export type Analytics_RoomStats = {
    __typename?: "analytics_RoomStats";
    created_at: Scalars["timestamptz"];
    hlsViewCount: Scalars["Int"];
    id: Scalars["uuid"];
    /** An object relationship */
    room: Room_Room;
    roomId: Scalars["uuid"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "analytics.RoomStats" */
export type Analytics_RoomStats_Aggregate = {
    __typename?: "analytics_RoomStats_aggregate";
    aggregate?: Maybe<Analytics_RoomStats_Aggregate_Fields>;
    nodes: Array<Analytics_RoomStats>;
};

/** aggregate fields of "analytics.RoomStats" */
export type Analytics_RoomStats_Aggregate_Fields = {
    __typename?: "analytics_RoomStats_aggregate_fields";
    avg?: Maybe<Analytics_RoomStats_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Analytics_RoomStats_Max_Fields>;
    min?: Maybe<Analytics_RoomStats_Min_Fields>;
    stddev?: Maybe<Analytics_RoomStats_Stddev_Fields>;
    stddev_pop?: Maybe<Analytics_RoomStats_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Analytics_RoomStats_Stddev_Samp_Fields>;
    sum?: Maybe<Analytics_RoomStats_Sum_Fields>;
    var_pop?: Maybe<Analytics_RoomStats_Var_Pop_Fields>;
    var_samp?: Maybe<Analytics_RoomStats_Var_Samp_Fields>;
    variance?: Maybe<Analytics_RoomStats_Variance_Fields>;
};

/** aggregate fields of "analytics.RoomStats" */
export type Analytics_RoomStats_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Analytics_RoomStats_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "analytics.RoomStats" */
export type Analytics_RoomStats_Aggregate_Order_By = {
    avg?: InputMaybe<Analytics_RoomStats_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Analytics_RoomStats_Max_Order_By>;
    min?: InputMaybe<Analytics_RoomStats_Min_Order_By>;
    stddev?: InputMaybe<Analytics_RoomStats_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Analytics_RoomStats_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Analytics_RoomStats_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Analytics_RoomStats_Sum_Order_By>;
    var_pop?: InputMaybe<Analytics_RoomStats_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Analytics_RoomStats_Var_Samp_Order_By>;
    variance?: InputMaybe<Analytics_RoomStats_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "analytics.RoomStats" */
export type Analytics_RoomStats_Arr_Rel_Insert_Input = {
    data: Array<Analytics_RoomStats_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Analytics_RoomStats_On_Conflict>;
};

/** aggregate avg on columns */
export type Analytics_RoomStats_Avg_Fields = {
    __typename?: "analytics_RoomStats_avg_fields";
    hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Avg_Order_By = {
    hlsViewCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "analytics.RoomStats". All fields are combined with a logical 'AND'. */
export type Analytics_RoomStats_Bool_Exp = {
    _and?: InputMaybe<Array<Analytics_RoomStats_Bool_Exp>>;
    _not?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
    _or?: InputMaybe<Array<Analytics_RoomStats_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    hlsViewCount?: InputMaybe<Int_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.RoomStats" */
export enum Analytics_RoomStats_Constraint {
    /** unique or primary key constraint */
    RoomStatsPkey = "RoomStats_pkey",
}

/** input type for incrementing numeric columns in table "analytics.RoomStats" */
export type Analytics_RoomStats_Inc_Input = {
    hlsViewCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "analytics.RoomStats" */
export type Analytics_RoomStats_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    hlsViewCount?: InputMaybe<Scalars["Int"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Analytics_RoomStats_Max_Fields = {
    __typename?: "analytics_RoomStats_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    hlsViewCount?: Maybe<Scalars["Int"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    hlsViewCount?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Analytics_RoomStats_Min_Fields = {
    __typename?: "analytics_RoomStats_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    hlsViewCount?: Maybe<Scalars["Int"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    hlsViewCount?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "analytics.RoomStats" */
export type Analytics_RoomStats_Mutation_Response = {
    __typename?: "analytics_RoomStats_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Analytics_RoomStats>;
};

/** on_conflict condition type for table "analytics.RoomStats" */
export type Analytics_RoomStats_On_Conflict = {
    constraint: Analytics_RoomStats_Constraint;
    update_columns?: Array<Analytics_RoomStats_Update_Column>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.RoomStats". */
export type Analytics_RoomStats_Order_By = {
    created_at?: InputMaybe<Order_By>;
    hlsViewCount?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_RoomStats */
export type Analytics_RoomStats_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "analytics.RoomStats" */
export enum Analytics_RoomStats_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    HlsViewCount = "hlsViewCount",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "analytics.RoomStats" */
export type Analytics_RoomStats_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    hlsViewCount?: InputMaybe<Scalars["Int"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Analytics_RoomStats_Stddev_Fields = {
    __typename?: "analytics_RoomStats_stddev_fields";
    hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Stddev_Order_By = {
    hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Analytics_RoomStats_Stddev_Pop_Fields = {
    __typename?: "analytics_RoomStats_stddev_pop_fields";
    hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Stddev_Pop_Order_By = {
    hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Analytics_RoomStats_Stddev_Samp_Fields = {
    __typename?: "analytics_RoomStats_stddev_samp_fields";
    hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Stddev_Samp_Order_By = {
    hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Analytics_RoomStats_Sum_Fields = {
    __typename?: "analytics_RoomStats_sum_fields";
    hlsViewCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Sum_Order_By = {
    hlsViewCount?: InputMaybe<Order_By>;
};

/** update columns of table "analytics.RoomStats" */
export enum Analytics_RoomStats_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    HlsViewCount = "hlsViewCount",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Analytics_RoomStats_Var_Pop_Fields = {
    __typename?: "analytics_RoomStats_var_pop_fields";
    hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Var_Pop_Order_By = {
    hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Analytics_RoomStats_Var_Samp_Fields = {
    __typename?: "analytics_RoomStats_var_samp_fields";
    hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Var_Samp_Order_By = {
    hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Analytics_RoomStats_Variance_Fields = {
    __typename?: "analytics_RoomStats_variance_fields";
    hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Variance_Order_By = {
    hlsViewCount?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["bigint"]>;
    _gt?: InputMaybe<Scalars["bigint"]>;
    _gte?: InputMaybe<Scalars["bigint"]>;
    _in?: InputMaybe<Array<Scalars["bigint"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["bigint"]>;
    _lte?: InputMaybe<Scalars["bigint"]>;
    _neq?: InputMaybe<Scalars["bigint"]>;
    _nin?: InputMaybe<Array<Scalars["bigint"]>>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_Chat = {
    __typename?: "chat_Chat";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    duplicateTo?: Maybe<Chat_Chat>;
    duplicateToId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    duplicatesFrom: Array<Chat_Chat>;
    /** An aggregate relationship */
    duplicatesFrom_aggregate: Chat_Chat_Aggregate;
    enableAutoPin: Scalars["Boolean"];
    enableAutoSubscribe: Scalars["Boolean"];
    enableMandatoryPin: Scalars["Boolean"];
    enableMandatorySubscribe: Scalars["Boolean"];
    /** An array relationship */
    flags: Array<Chat_Flag>;
    /** An aggregate relationship */
    flags_aggregate: Chat_Flag_Aggregate;
    id: Scalars["uuid"];
    /** An object relationship */
    item?: Maybe<Content_Item>;
    /** An array relationship */
    messages: Array<Chat_Message>;
    /** An aggregate relationship */
    messages_aggregate: Chat_Message_Aggregate;
    /** An array relationship */
    pins: Array<Chat_Pin>;
    /** An aggregate relationship */
    pins_aggregate: Chat_Pin_Aggregate;
    /** An array relationship */
    readUpToIndices: Array<Chat_ReadUpToIndex>;
    /** An aggregate relationship */
    readUpToIndices_aggregate: Chat_ReadUpToIndex_Aggregate;
    restrictToAdmins: Scalars["Boolean"];
    /** An object relationship */
    room?: Maybe<Room_Room>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    subscriptions: Array<Chat_Subscription>;
    /** An aggregate relationship */
    subscriptions_aggregate: Chat_Subscription_Aggregate;
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatDuplicatesFromArgs = {
    distinct_on?: InputMaybe<Array<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatDuplicatesFrom_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatFlagsArgs = {
    distinct_on?: InputMaybe<Array<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatFlags_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatMessagesArgs = {
    distinct_on?: InputMaybe<Array<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatMessages_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatPinsArgs = {
    distinct_on?: InputMaybe<Array<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatPins_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatReadUpToIndicesArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatReadUpToIndices_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatSubscriptionsArgs = {
    distinct_on?: InputMaybe<Array<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatSubscriptions_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

/** aggregated selection of "chat.Chat" */
export type Chat_Chat_Aggregate = {
    __typename?: "chat_Chat_aggregate";
    aggregate?: Maybe<Chat_Chat_Aggregate_Fields>;
    nodes: Array<Chat_Chat>;
};

/** aggregate fields of "chat.Chat" */
export type Chat_Chat_Aggregate_Fields = {
    __typename?: "chat_Chat_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Chat_Chat_Max_Fields>;
    min?: Maybe<Chat_Chat_Min_Fields>;
};

/** aggregate fields of "chat.Chat" */
export type Chat_Chat_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_Chat_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Chat" */
export type Chat_Chat_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Chat_Chat_Max_Order_By>;
    min?: InputMaybe<Chat_Chat_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Chat" */
export type Chat_Chat_Arr_Rel_Insert_Input = {
    data: Array<Chat_Chat_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Chat_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Chat". All fields are combined with a logical 'AND'. */
export type Chat_Chat_Bool_Exp = {
    _and?: InputMaybe<Array<Chat_Chat_Bool_Exp>>;
    _not?: InputMaybe<Chat_Chat_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_Chat_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    duplicateTo?: InputMaybe<Chat_Chat_Bool_Exp>;
    duplicateToId?: InputMaybe<Uuid_Comparison_Exp>;
    duplicatesFrom?: InputMaybe<Chat_Chat_Bool_Exp>;
    enableAutoPin?: InputMaybe<Boolean_Comparison_Exp>;
    enableAutoSubscribe?: InputMaybe<Boolean_Comparison_Exp>;
    enableMandatoryPin?: InputMaybe<Boolean_Comparison_Exp>;
    enableMandatorySubscribe?: InputMaybe<Boolean_Comparison_Exp>;
    flags?: InputMaybe<Chat_Flag_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    messages?: InputMaybe<Chat_Message_Bool_Exp>;
    pins?: InputMaybe<Chat_Pin_Bool_Exp>;
    readUpToIndices?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
    restrictToAdmins?: InputMaybe<Boolean_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    subscriptions?: InputMaybe<Chat_Subscription_Bool_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Chat" */
export enum Chat_Chat_Constraint {
    /** unique or primary key constraint */
    ChatPkey = "Chat_pkey",
}

/** input type for inserting data into table "chat.Chat" */
export type Chat_Chat_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    duplicateTo?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    duplicateToId?: InputMaybe<Scalars["uuid"]>;
    duplicatesFrom?: InputMaybe<Chat_Chat_Arr_Rel_Insert_Input>;
    enableAutoPin?: InputMaybe<Scalars["Boolean"]>;
    enableAutoSubscribe?: InputMaybe<Scalars["Boolean"]>;
    enableMandatoryPin?: InputMaybe<Scalars["Boolean"]>;
    enableMandatorySubscribe?: InputMaybe<Scalars["Boolean"]>;
    flags?: InputMaybe<Chat_Flag_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    messages?: InputMaybe<Chat_Message_Arr_Rel_Insert_Input>;
    pins?: InputMaybe<Chat_Pin_Arr_Rel_Insert_Input>;
    readUpToIndices?: InputMaybe<Chat_ReadUpToIndex_Arr_Rel_Insert_Input>;
    restrictToAdmins?: InputMaybe<Scalars["Boolean"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    subscriptions?: InputMaybe<Chat_Subscription_Arr_Rel_Insert_Input>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_Chat_Max_Fields = {
    __typename?: "chat_Chat_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    duplicateToId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.Chat" */
export type Chat_Chat_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    duplicateToId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Chat_Min_Fields = {
    __typename?: "chat_Chat_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    duplicateToId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.Chat" */
export type Chat_Chat_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    duplicateToId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Chat" */
export type Chat_Chat_Mutation_Response = {
    __typename?: "chat_Chat_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_Chat>;
};

/** input type for inserting object relation for remote table "chat.Chat" */
export type Chat_Chat_Obj_Rel_Insert_Input = {
    data: Chat_Chat_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Chat_On_Conflict>;
};

/** on_conflict condition type for table "chat.Chat" */
export type Chat_Chat_On_Conflict = {
    constraint: Chat_Chat_Constraint;
    update_columns?: Array<Chat_Chat_Update_Column>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Chat". */
export type Chat_Chat_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    duplicateTo?: InputMaybe<Chat_Chat_Order_By>;
    duplicateToId?: InputMaybe<Order_By>;
    duplicatesFrom_aggregate?: InputMaybe<Chat_Chat_Aggregate_Order_By>;
    enableAutoPin?: InputMaybe<Order_By>;
    enableAutoSubscribe?: InputMaybe<Order_By>;
    enableMandatoryPin?: InputMaybe<Order_By>;
    enableMandatorySubscribe?: InputMaybe<Order_By>;
    flags_aggregate?: InputMaybe<Chat_Flag_Aggregate_Order_By>;
    id?: InputMaybe<Order_By>;
    item?: InputMaybe<Content_Item_Order_By>;
    messages_aggregate?: InputMaybe<Chat_Message_Aggregate_Order_By>;
    pins_aggregate?: InputMaybe<Chat_Pin_Aggregate_Order_By>;
    readUpToIndices_aggregate?: InputMaybe<Chat_ReadUpToIndex_Aggregate_Order_By>;
    restrictToAdmins?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    subscriptions_aggregate?: InputMaybe<Chat_Subscription_Aggregate_Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Chat */
export type Chat_Chat_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "chat.Chat" */
export enum Chat_Chat_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DuplicateToId = "duplicateToId",
    /** column name */
    EnableAutoPin = "enableAutoPin",
    /** column name */
    EnableAutoSubscribe = "enableAutoSubscribe",
    /** column name */
    EnableMandatoryPin = "enableMandatoryPin",
    /** column name */
    EnableMandatorySubscribe = "enableMandatorySubscribe",
    /** column name */
    Id = "id",
    /** column name */
    RestrictToAdmins = "restrictToAdmins",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.Chat" */
export type Chat_Chat_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    duplicateToId?: InputMaybe<Scalars["uuid"]>;
    enableAutoPin?: InputMaybe<Scalars["Boolean"]>;
    enableAutoSubscribe?: InputMaybe<Scalars["Boolean"]>;
    enableMandatoryPin?: InputMaybe<Scalars["Boolean"]>;
    enableMandatorySubscribe?: InputMaybe<Scalars["Boolean"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    restrictToAdmins?: InputMaybe<Scalars["Boolean"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "chat.Chat" */
export enum Chat_Chat_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DuplicateToId = "duplicateToId",
    /** column name */
    EnableAutoPin = "enableAutoPin",
    /** column name */
    EnableAutoSubscribe = "enableAutoSubscribe",
    /** column name */
    EnableMandatoryPin = "enableMandatoryPin",
    /** column name */
    EnableMandatorySubscribe = "enableMandatorySubscribe",
    /** column name */
    Id = "id",
    /** column name */
    RestrictToAdmins = "restrictToAdmins",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "chat.Flag" */
export type Chat_Flag = {
    __typename?: "chat_Flag";
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    discussionChat?: Maybe<Chat_Chat>;
    discussionChatId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    flaggedBy?: Maybe<Registrant_Registrant>;
    flaggedById?: Maybe<Scalars["uuid"]>;
    id: Scalars["Int"];
    /** An object relationship */
    message: Chat_Message;
    messageSId: Scalars["uuid"];
    notes?: Maybe<Scalars["String"]>;
    resolution?: Maybe<Scalars["String"]>;
    resolved_at?: Maybe<Scalars["timestamptz"]>;
    type: Chat_FlagType_Enum;
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "chat.FlagType" */
export type Chat_FlagType = {
    __typename?: "chat_FlagType";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "chat.FlagType" */
export type Chat_FlagType_Aggregate = {
    __typename?: "chat_FlagType_aggregate";
    aggregate?: Maybe<Chat_FlagType_Aggregate_Fields>;
    nodes: Array<Chat_FlagType>;
};

/** aggregate fields of "chat.FlagType" */
export type Chat_FlagType_Aggregate_Fields = {
    __typename?: "chat_FlagType_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Chat_FlagType_Max_Fields>;
    min?: Maybe<Chat_FlagType_Min_Fields>;
};

/** aggregate fields of "chat.FlagType" */
export type Chat_FlagType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_FlagType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "chat.FlagType". All fields are combined with a logical 'AND'. */
export type Chat_FlagType_Bool_Exp = {
    _and?: InputMaybe<Array<Chat_FlagType_Bool_Exp>>;
    _not?: InputMaybe<Chat_FlagType_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_FlagType_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.FlagType" */
export enum Chat_FlagType_Constraint {
    /** unique or primary key constraint */
    FlagTypePkey = "FlagType_pkey",
}

export enum Chat_FlagType_Enum {
    /** It's abusive or harmful. */
    Abusive = "Abusive",
    /** It contains false information and is intended to mislead readers. */
    Disinformation = "Disinformation",
    /** It gives the wrong idea or impression. */
    Misleading = "Misleading",
    /** It expresses intentions of self-harm or suicide. */
    RiskToLife = "Risk_To_Life",
    /** It's spam, suspicious or annoying. */
    Spam = "Spam",
}

/** Boolean expression to compare columns of type "chat_FlagType_enum". All fields are combined with logical 'AND'. */
export type Chat_FlagType_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Chat_FlagType_Enum>;
    _in?: InputMaybe<Array<Chat_FlagType_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Chat_FlagType_Enum>;
    _nin?: InputMaybe<Array<Chat_FlagType_Enum>>;
};

/** input type for inserting data into table "chat.FlagType" */
export type Chat_FlagType_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Chat_FlagType_Max_Fields = {
    __typename?: "chat_FlagType_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Chat_FlagType_Min_Fields = {
    __typename?: "chat_FlagType_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "chat.FlagType" */
export type Chat_FlagType_Mutation_Response = {
    __typename?: "chat_FlagType_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_FlagType>;
};

/** on_conflict condition type for table "chat.FlagType" */
export type Chat_FlagType_On_Conflict = {
    constraint: Chat_FlagType_Constraint;
    update_columns?: Array<Chat_FlagType_Update_Column>;
    where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.FlagType". */
export type Chat_FlagType_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_FlagType */
export type Chat_FlagType_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "chat.FlagType" */
export enum Chat_FlagType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "chat.FlagType" */
export type Chat_FlagType_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "chat.FlagType" */
export enum Chat_FlagType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "chat.Flag" */
export type Chat_Flag_Aggregate = {
    __typename?: "chat_Flag_aggregate";
    aggregate?: Maybe<Chat_Flag_Aggregate_Fields>;
    nodes: Array<Chat_Flag>;
};

/** aggregate fields of "chat.Flag" */
export type Chat_Flag_Aggregate_Fields = {
    __typename?: "chat_Flag_aggregate_fields";
    avg?: Maybe<Chat_Flag_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Chat_Flag_Max_Fields>;
    min?: Maybe<Chat_Flag_Min_Fields>;
    stddev?: Maybe<Chat_Flag_Stddev_Fields>;
    stddev_pop?: Maybe<Chat_Flag_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Chat_Flag_Stddev_Samp_Fields>;
    sum?: Maybe<Chat_Flag_Sum_Fields>;
    var_pop?: Maybe<Chat_Flag_Var_Pop_Fields>;
    var_samp?: Maybe<Chat_Flag_Var_Samp_Fields>;
    variance?: Maybe<Chat_Flag_Variance_Fields>;
};

/** aggregate fields of "chat.Flag" */
export type Chat_Flag_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_Flag_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Flag" */
export type Chat_Flag_Aggregate_Order_By = {
    avg?: InputMaybe<Chat_Flag_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Chat_Flag_Max_Order_By>;
    min?: InputMaybe<Chat_Flag_Min_Order_By>;
    stddev?: InputMaybe<Chat_Flag_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Chat_Flag_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Chat_Flag_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Chat_Flag_Sum_Order_By>;
    var_pop?: InputMaybe<Chat_Flag_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Chat_Flag_Var_Samp_Order_By>;
    variance?: InputMaybe<Chat_Flag_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Flag" */
export type Chat_Flag_Arr_Rel_Insert_Input = {
    data: Array<Chat_Flag_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Flag_On_Conflict>;
};

/** aggregate avg on columns */
export type Chat_Flag_Avg_Fields = {
    __typename?: "chat_Flag_avg_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "chat.Flag" */
export type Chat_Flag_Avg_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "chat.Flag". All fields are combined with a logical 'AND'. */
export type Chat_Flag_Bool_Exp = {
    _and?: InputMaybe<Array<Chat_Flag_Bool_Exp>>;
    _not?: InputMaybe<Chat_Flag_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_Flag_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    discussionChat?: InputMaybe<Chat_Chat_Bool_Exp>;
    discussionChatId?: InputMaybe<Uuid_Comparison_Exp>;
    flaggedBy?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    flaggedById?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Int_Comparison_Exp>;
    message?: InputMaybe<Chat_Message_Bool_Exp>;
    messageSId?: InputMaybe<Uuid_Comparison_Exp>;
    notes?: InputMaybe<String_Comparison_Exp>;
    resolution?: InputMaybe<String_Comparison_Exp>;
    resolved_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    type?: InputMaybe<Chat_FlagType_Enum_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Flag" */
export enum Chat_Flag_Constraint {
    /** unique or primary key constraint */
    FlagFlaggedByIdMessageSIdTypeKey = "Flag_flaggedById_messageSId_type_key",
    /** unique or primary key constraint */
    FlagPkey = "Flag_pkey",
}

/** input type for incrementing numeric columns in table "chat.Flag" */
export type Chat_Flag_Inc_Input = {
    id?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "chat.Flag" */
export type Chat_Flag_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    discussionChat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    discussionChatId?: InputMaybe<Scalars["uuid"]>;
    flaggedBy?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    flaggedById?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["Int"]>;
    message?: InputMaybe<Chat_Message_Obj_Rel_Insert_Input>;
    messageSId?: InputMaybe<Scalars["uuid"]>;
    notes?: InputMaybe<Scalars["String"]>;
    resolution?: InputMaybe<Scalars["String"]>;
    resolved_at?: InputMaybe<Scalars["timestamptz"]>;
    type?: InputMaybe<Chat_FlagType_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_Flag_Max_Fields = {
    __typename?: "chat_Flag_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    discussionChatId?: Maybe<Scalars["uuid"]>;
    flaggedById?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["Int"]>;
    messageSId?: Maybe<Scalars["uuid"]>;
    notes?: Maybe<Scalars["String"]>;
    resolution?: Maybe<Scalars["String"]>;
    resolved_at?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.Flag" */
export type Chat_Flag_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    discussionChatId?: InputMaybe<Order_By>;
    flaggedById?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    messageSId?: InputMaybe<Order_By>;
    notes?: InputMaybe<Order_By>;
    resolution?: InputMaybe<Order_By>;
    resolved_at?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Flag_Min_Fields = {
    __typename?: "chat_Flag_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    discussionChatId?: Maybe<Scalars["uuid"]>;
    flaggedById?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["Int"]>;
    messageSId?: Maybe<Scalars["uuid"]>;
    notes?: Maybe<Scalars["String"]>;
    resolution?: Maybe<Scalars["String"]>;
    resolved_at?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.Flag" */
export type Chat_Flag_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    discussionChatId?: InputMaybe<Order_By>;
    flaggedById?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    messageSId?: InputMaybe<Order_By>;
    notes?: InputMaybe<Order_By>;
    resolution?: InputMaybe<Order_By>;
    resolved_at?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Flag" */
export type Chat_Flag_Mutation_Response = {
    __typename?: "chat_Flag_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_Flag>;
};

/** on_conflict condition type for table "chat.Flag" */
export type Chat_Flag_On_Conflict = {
    constraint: Chat_Flag_Constraint;
    update_columns?: Array<Chat_Flag_Update_Column>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Flag". */
export type Chat_Flag_Order_By = {
    created_at?: InputMaybe<Order_By>;
    discussionChat?: InputMaybe<Chat_Chat_Order_By>;
    discussionChatId?: InputMaybe<Order_By>;
    flaggedBy?: InputMaybe<Registrant_Registrant_Order_By>;
    flaggedById?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    message?: InputMaybe<Chat_Message_Order_By>;
    messageSId?: InputMaybe<Order_By>;
    notes?: InputMaybe<Order_By>;
    resolution?: InputMaybe<Order_By>;
    resolved_at?: InputMaybe<Order_By>;
    type?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Flag */
export type Chat_Flag_Pk_Columns_Input = {
    id: Scalars["Int"];
};

/** select columns of table "chat.Flag" */
export enum Chat_Flag_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DiscussionChatId = "discussionChatId",
    /** column name */
    FlaggedById = "flaggedById",
    /** column name */
    Id = "id",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    Notes = "notes",
    /** column name */
    Resolution = "resolution",
    /** column name */
    ResolvedAt = "resolved_at",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.Flag" */
export type Chat_Flag_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    discussionChatId?: InputMaybe<Scalars["uuid"]>;
    flaggedById?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["Int"]>;
    messageSId?: InputMaybe<Scalars["uuid"]>;
    notes?: InputMaybe<Scalars["String"]>;
    resolution?: InputMaybe<Scalars["String"]>;
    resolved_at?: InputMaybe<Scalars["timestamptz"]>;
    type?: InputMaybe<Chat_FlagType_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Chat_Flag_Stddev_Fields = {
    __typename?: "chat_Flag_stddev_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "chat.Flag" */
export type Chat_Flag_Stddev_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Chat_Flag_Stddev_Pop_Fields = {
    __typename?: "chat_Flag_stddev_pop_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "chat.Flag" */
export type Chat_Flag_Stddev_Pop_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Chat_Flag_Stddev_Samp_Fields = {
    __typename?: "chat_Flag_stddev_samp_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "chat.Flag" */
export type Chat_Flag_Stddev_Samp_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Chat_Flag_Sum_Fields = {
    __typename?: "chat_Flag_sum_fields";
    id?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "chat.Flag" */
export type Chat_Flag_Sum_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** update columns of table "chat.Flag" */
export enum Chat_Flag_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DiscussionChatId = "discussionChatId",
    /** column name */
    FlaggedById = "flaggedById",
    /** column name */
    Id = "id",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    Notes = "notes",
    /** column name */
    Resolution = "resolution",
    /** column name */
    ResolvedAt = "resolved_at",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Chat_Flag_Var_Pop_Fields = {
    __typename?: "chat_Flag_var_pop_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "chat.Flag" */
export type Chat_Flag_Var_Pop_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Chat_Flag_Var_Samp_Fields = {
    __typename?: "chat_Flag_var_samp_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "chat.Flag" */
export type Chat_Flag_Var_Samp_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Chat_Flag_Variance_Fields = {
    __typename?: "chat_Flag_variance_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "chat.Flag" */
export type Chat_Flag_Variance_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_Message = {
    __typename?: "chat_Message";
    /** An object relationship */
    chat: Chat_Chat;
    chatId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    data: Scalars["jsonb"];
    /** An object relationship */
    duplicateIncoming?: Maybe<Chat_Message>;
    /** An object relationship */
    duplicateOutgoing?: Maybe<Chat_Message>;
    duplicatedMessageSId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    flags: Array<Chat_Flag>;
    /** An aggregate relationship */
    flags_aggregate: Chat_Flag_Aggregate;
    id: Scalars["Int"];
    isPinned: Scalars["Boolean"];
    message: Scalars["String"];
    /** An array relationship */
    reactions: Array<Chat_Reaction>;
    /** An aggregate relationship */
    reactions_aggregate: Chat_Reaction_Aggregate;
    sId: Scalars["uuid"];
    /** An object relationship */
    sender?: Maybe<Registrant_Registrant>;
    senderId?: Maybe<Scalars["uuid"]>;
    systemId?: Maybe<Scalars["String"]>;
    type: Chat_MessageType_Enum;
    updated_at: Scalars["timestamptz"];
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageFlagsArgs = {
    distinct_on?: InputMaybe<Array<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageFlags_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageReactionsArgs = {
    distinct_on?: InputMaybe<Array<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageReactions_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** columns and relationships of "chat.MessageType" */
export type Chat_MessageType = {
    __typename?: "chat_MessageType";
    name: Scalars["String"];
};

/** aggregated selection of "chat.MessageType" */
export type Chat_MessageType_Aggregate = {
    __typename?: "chat_MessageType_aggregate";
    aggregate?: Maybe<Chat_MessageType_Aggregate_Fields>;
    nodes: Array<Chat_MessageType>;
};

/** aggregate fields of "chat.MessageType" */
export type Chat_MessageType_Aggregate_Fields = {
    __typename?: "chat_MessageType_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Chat_MessageType_Max_Fields>;
    min?: Maybe<Chat_MessageType_Min_Fields>;
};

/** aggregate fields of "chat.MessageType" */
export type Chat_MessageType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_MessageType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "chat.MessageType". All fields are combined with a logical 'AND'. */
export type Chat_MessageType_Bool_Exp = {
    _and?: InputMaybe<Array<Chat_MessageType_Bool_Exp>>;
    _not?: InputMaybe<Chat_MessageType_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_MessageType_Bool_Exp>>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.MessageType" */
export enum Chat_MessageType_Constraint {
    /** unique or primary key constraint */
    MessageTypePkey = "MessageType_pkey",
}

export enum Chat_MessageType_Enum {
    Answer = "ANSWER",
    DuplicationMarker = "DUPLICATION_MARKER",
    Emote = "EMOTE",
    EventStart = "EVENT_START",
    Message = "MESSAGE",
    ParticipationSurvey = "PARTICIPATION_SURVEY",
    Poll = "POLL",
    PollResults = "POLL_RESULTS",
    Question = "QUESTION",
}

/** Boolean expression to compare columns of type "chat_MessageType_enum". All fields are combined with logical 'AND'. */
export type Chat_MessageType_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Chat_MessageType_Enum>;
    _in?: InputMaybe<Array<Chat_MessageType_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Chat_MessageType_Enum>;
    _nin?: InputMaybe<Array<Chat_MessageType_Enum>>;
};

/** input type for inserting data into table "chat.MessageType" */
export type Chat_MessageType_Insert_Input = {
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Chat_MessageType_Max_Fields = {
    __typename?: "chat_MessageType_max_fields";
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Chat_MessageType_Min_Fields = {
    __typename?: "chat_MessageType_min_fields";
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "chat.MessageType" */
export type Chat_MessageType_Mutation_Response = {
    __typename?: "chat_MessageType_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_MessageType>;
};

/** on_conflict condition type for table "chat.MessageType" */
export type Chat_MessageType_On_Conflict = {
    constraint: Chat_MessageType_Constraint;
    update_columns?: Array<Chat_MessageType_Update_Column>;
    where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.MessageType". */
export type Chat_MessageType_Order_By = {
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_MessageType */
export type Chat_MessageType_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "chat.MessageType" */
export enum Chat_MessageType_Select_Column {
    /** column name */
    Name = "name",
}

/** input type for updating data in table "chat.MessageType" */
export type Chat_MessageType_Set_Input = {
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "chat.MessageType" */
export enum Chat_MessageType_Update_Column {
    /** column name */
    Name = "name",
}

/** aggregated selection of "chat.Message" */
export type Chat_Message_Aggregate = {
    __typename?: "chat_Message_aggregate";
    aggregate?: Maybe<Chat_Message_Aggregate_Fields>;
    nodes: Array<Chat_Message>;
};

/** aggregate fields of "chat.Message" */
export type Chat_Message_Aggregate_Fields = {
    __typename?: "chat_Message_aggregate_fields";
    avg?: Maybe<Chat_Message_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Chat_Message_Max_Fields>;
    min?: Maybe<Chat_Message_Min_Fields>;
    stddev?: Maybe<Chat_Message_Stddev_Fields>;
    stddev_pop?: Maybe<Chat_Message_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Chat_Message_Stddev_Samp_Fields>;
    sum?: Maybe<Chat_Message_Sum_Fields>;
    var_pop?: Maybe<Chat_Message_Var_Pop_Fields>;
    var_samp?: Maybe<Chat_Message_Var_Samp_Fields>;
    variance?: Maybe<Chat_Message_Variance_Fields>;
};

/** aggregate fields of "chat.Message" */
export type Chat_Message_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_Message_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Message" */
export type Chat_Message_Aggregate_Order_By = {
    avg?: InputMaybe<Chat_Message_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Chat_Message_Max_Order_By>;
    min?: InputMaybe<Chat_Message_Min_Order_By>;
    stddev?: InputMaybe<Chat_Message_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Chat_Message_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Chat_Message_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Chat_Message_Sum_Order_By>;
    var_pop?: InputMaybe<Chat_Message_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Chat_Message_Var_Samp_Order_By>;
    variance?: InputMaybe<Chat_Message_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Chat_Message_Append_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "chat.Message" */
export type Chat_Message_Arr_Rel_Insert_Input = {
    data: Array<Chat_Message_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Message_On_Conflict>;
};

/** aggregate avg on columns */
export type Chat_Message_Avg_Fields = {
    __typename?: "chat_Message_avg_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "chat.Message" */
export type Chat_Message_Avg_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "chat.Message". All fields are combined with a logical 'AND'. */
export type Chat_Message_Bool_Exp = {
    _and?: InputMaybe<Array<Chat_Message_Bool_Exp>>;
    _not?: InputMaybe<Chat_Message_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_Message_Bool_Exp>>;
    chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    chatId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    data?: InputMaybe<Jsonb_Comparison_Exp>;
    duplicateIncoming?: InputMaybe<Chat_Message_Bool_Exp>;
    duplicateOutgoing?: InputMaybe<Chat_Message_Bool_Exp>;
    duplicatedMessageSId?: InputMaybe<Uuid_Comparison_Exp>;
    flags?: InputMaybe<Chat_Flag_Bool_Exp>;
    id?: InputMaybe<Int_Comparison_Exp>;
    isPinned?: InputMaybe<Boolean_Comparison_Exp>;
    message?: InputMaybe<String_Comparison_Exp>;
    reactions?: InputMaybe<Chat_Reaction_Bool_Exp>;
    sId?: InputMaybe<Uuid_Comparison_Exp>;
    sender?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    senderId?: InputMaybe<Uuid_Comparison_Exp>;
    systemId?: InputMaybe<String_Comparison_Exp>;
    type?: InputMaybe<Chat_MessageType_Enum_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Message" */
export enum Chat_Message_Constraint {
    /** unique or primary key constraint */
    MessageDuplicatedMessageSIdKey = "Message_duplicatedMessageSId_key",
    /** unique or primary key constraint */
    MessagePkey = "Message_pkey",
    /** unique or primary key constraint */
    MessageSIdChatIdKey = "Message_sId_chatId_key",
    /** unique or primary key constraint */
    MessageSIdKey = "Message_sId_key",
    /** unique or primary key constraint */
    MessageSystemIdKey = "Message_systemId_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Chat_Message_Delete_At_Path_Input = {
    data?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Chat_Message_Delete_Elem_Input = {
    data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Chat_Message_Delete_Key_Input = {
    data?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "chat.Message" */
export type Chat_Message_Inc_Input = {
    id?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "chat.Message" */
export type Chat_Message_Insert_Input = {
    chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    chatId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    duplicateIncoming?: InputMaybe<Chat_Message_Obj_Rel_Insert_Input>;
    duplicateOutgoing?: InputMaybe<Chat_Message_Obj_Rel_Insert_Input>;
    duplicatedMessageSId?: InputMaybe<Scalars["uuid"]>;
    flags?: InputMaybe<Chat_Flag_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["Int"]>;
    isPinned?: InputMaybe<Scalars["Boolean"]>;
    message?: InputMaybe<Scalars["String"]>;
    reactions?: InputMaybe<Chat_Reaction_Arr_Rel_Insert_Input>;
    sId?: InputMaybe<Scalars["uuid"]>;
    sender?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    senderId?: InputMaybe<Scalars["uuid"]>;
    systemId?: InputMaybe<Scalars["String"]>;
    type?: InputMaybe<Chat_MessageType_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_Message_Max_Fields = {
    __typename?: "chat_Message_max_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    duplicatedMessageSId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["Int"]>;
    message?: Maybe<Scalars["String"]>;
    sId?: Maybe<Scalars["uuid"]>;
    senderId?: Maybe<Scalars["uuid"]>;
    systemId?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.Message" */
export type Chat_Message_Max_Order_By = {
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    duplicatedMessageSId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    sId?: InputMaybe<Order_By>;
    senderId?: InputMaybe<Order_By>;
    systemId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Message_Min_Fields = {
    __typename?: "chat_Message_min_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    duplicatedMessageSId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["Int"]>;
    message?: Maybe<Scalars["String"]>;
    sId?: Maybe<Scalars["uuid"]>;
    senderId?: Maybe<Scalars["uuid"]>;
    systemId?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.Message" */
export type Chat_Message_Min_Order_By = {
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    duplicatedMessageSId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    sId?: InputMaybe<Order_By>;
    senderId?: InputMaybe<Order_By>;
    systemId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Message" */
export type Chat_Message_Mutation_Response = {
    __typename?: "chat_Message_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_Message>;
};

/** input type for inserting object relation for remote table "chat.Message" */
export type Chat_Message_Obj_Rel_Insert_Input = {
    data: Chat_Message_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Message_On_Conflict>;
};

/** on_conflict condition type for table "chat.Message" */
export type Chat_Message_On_Conflict = {
    constraint: Chat_Message_Constraint;
    update_columns?: Array<Chat_Message_Update_Column>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Message". */
export type Chat_Message_Order_By = {
    chat?: InputMaybe<Chat_Chat_Order_By>;
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    data?: InputMaybe<Order_By>;
    duplicateIncoming?: InputMaybe<Chat_Message_Order_By>;
    duplicateOutgoing?: InputMaybe<Chat_Message_Order_By>;
    duplicatedMessageSId?: InputMaybe<Order_By>;
    flags_aggregate?: InputMaybe<Chat_Flag_Aggregate_Order_By>;
    id?: InputMaybe<Order_By>;
    isPinned?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    reactions_aggregate?: InputMaybe<Chat_Reaction_Aggregate_Order_By>;
    sId?: InputMaybe<Order_By>;
    sender?: InputMaybe<Registrant_Registrant_Order_By>;
    senderId?: InputMaybe<Order_By>;
    systemId?: InputMaybe<Order_By>;
    type?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Message */
export type Chat_Message_Pk_Columns_Input = {
    id: Scalars["Int"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Chat_Message_Prepend_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "chat.Message" */
export enum Chat_Message_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    DuplicatedMessageSId = "duplicatedMessageSId",
    /** column name */
    Id = "id",
    /** column name */
    IsPinned = "isPinned",
    /** column name */
    Message = "message",
    /** column name */
    SId = "sId",
    /** column name */
    SenderId = "senderId",
    /** column name */
    SystemId = "systemId",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.Message" */
export type Chat_Message_Set_Input = {
    chatId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    duplicatedMessageSId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["Int"]>;
    isPinned?: InputMaybe<Scalars["Boolean"]>;
    message?: InputMaybe<Scalars["String"]>;
    sId?: InputMaybe<Scalars["uuid"]>;
    senderId?: InputMaybe<Scalars["uuid"]>;
    systemId?: InputMaybe<Scalars["String"]>;
    type?: InputMaybe<Chat_MessageType_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Chat_Message_Stddev_Fields = {
    __typename?: "chat_Message_stddev_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "chat.Message" */
export type Chat_Message_Stddev_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Chat_Message_Stddev_Pop_Fields = {
    __typename?: "chat_Message_stddev_pop_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "chat.Message" */
export type Chat_Message_Stddev_Pop_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Chat_Message_Stddev_Samp_Fields = {
    __typename?: "chat_Message_stddev_samp_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "chat.Message" */
export type Chat_Message_Stddev_Samp_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Chat_Message_Sum_Fields = {
    __typename?: "chat_Message_sum_fields";
    id?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "chat.Message" */
export type Chat_Message_Sum_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** update columns of table "chat.Message" */
export enum Chat_Message_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    DuplicatedMessageSId = "duplicatedMessageSId",
    /** column name */
    Id = "id",
    /** column name */
    IsPinned = "isPinned",
    /** column name */
    Message = "message",
    /** column name */
    SId = "sId",
    /** column name */
    SenderId = "senderId",
    /** column name */
    SystemId = "systemId",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Chat_Message_Var_Pop_Fields = {
    __typename?: "chat_Message_var_pop_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "chat.Message" */
export type Chat_Message_Var_Pop_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Chat_Message_Var_Samp_Fields = {
    __typename?: "chat_Message_var_samp_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "chat.Message" */
export type Chat_Message_Var_Samp_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Chat_Message_Variance_Fields = {
    __typename?: "chat_Message_variance_fields";
    id?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "chat.Message" */
export type Chat_Message_Variance_Order_By = {
    id?: InputMaybe<Order_By>;
};

/** Pin a chat to the sidebar. */
export type Chat_Pin = {
    __typename?: "chat_Pin";
    /** An object relationship */
    chat: Chat_Chat;
    chatId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    wasManuallyPinned: Scalars["Boolean"];
};

/** aggregated selection of "chat.Pin" */
export type Chat_Pin_Aggregate = {
    __typename?: "chat_Pin_aggregate";
    aggregate?: Maybe<Chat_Pin_Aggregate_Fields>;
    nodes: Array<Chat_Pin>;
};

/** aggregate fields of "chat.Pin" */
export type Chat_Pin_Aggregate_Fields = {
    __typename?: "chat_Pin_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Chat_Pin_Max_Fields>;
    min?: Maybe<Chat_Pin_Min_Fields>;
};

/** aggregate fields of "chat.Pin" */
export type Chat_Pin_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_Pin_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Pin" */
export type Chat_Pin_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Chat_Pin_Max_Order_By>;
    min?: InputMaybe<Chat_Pin_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Pin" */
export type Chat_Pin_Arr_Rel_Insert_Input = {
    data: Array<Chat_Pin_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Pin_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Pin". All fields are combined with a logical 'AND'. */
export type Chat_Pin_Bool_Exp = {
    _and?: InputMaybe<Array<Chat_Pin_Bool_Exp>>;
    _not?: InputMaybe<Chat_Pin_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_Pin_Bool_Exp>>;
    chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    chatId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    wasManuallyPinned?: InputMaybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Pin" */
export enum Chat_Pin_Constraint {
    /** unique or primary key constraint */
    ChatPinPkey = "ChatPin_pkey",
}

/** input type for inserting data into table "chat.Pin" */
export type Chat_Pin_Insert_Input = {
    chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    chatId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    wasManuallyPinned?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate max on columns */
export type Chat_Pin_Max_Fields = {
    __typename?: "chat_Pin_max_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "chat.Pin" */
export type Chat_Pin_Max_Order_By = {
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Pin_Min_Fields = {
    __typename?: "chat_Pin_min_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "chat.Pin" */
export type Chat_Pin_Min_Order_By = {
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Pin" */
export type Chat_Pin_Mutation_Response = {
    __typename?: "chat_Pin_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_Pin>;
};

/** input type for inserting object relation for remote table "chat.Pin" */
export type Chat_Pin_Obj_Rel_Insert_Input = {
    data: Chat_Pin_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Pin_On_Conflict>;
};

/** on_conflict condition type for table "chat.Pin" */
export type Chat_Pin_On_Conflict = {
    constraint: Chat_Pin_Constraint;
    update_columns?: Array<Chat_Pin_Update_Column>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Pin". */
export type Chat_Pin_Order_By = {
    chat?: InputMaybe<Chat_Chat_Order_By>;
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    wasManuallyPinned?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Pin */
export type Chat_Pin_Pk_Columns_Input = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** select columns of table "chat.Pin" */
export enum Chat_Pin_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    WasManuallyPinned = "wasManuallyPinned",
}

/** input type for updating data in table "chat.Pin" */
export type Chat_Pin_Set_Input = {
    chatId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    wasManuallyPinned?: InputMaybe<Scalars["Boolean"]>;
};

/** update columns of table "chat.Pin" */
export enum Chat_Pin_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    WasManuallyPinned = "wasManuallyPinned",
}

/** columns and relationships of "chat.Reaction" */
export type Chat_Reaction = {
    __typename?: "chat_Reaction";
    /** An object relationship */
    chat: Chat_Chat;
    chatId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    data: Scalars["jsonb"];
    /** An object relationship */
    duplicate?: Maybe<Chat_Reaction>;
    duplicateSId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    duplicates: Array<Chat_Reaction>;
    /** An aggregate relationship */
    duplicates_aggregate: Chat_Reaction_Aggregate;
    /** An object relationship */
    message: Chat_Message;
    messageSId: Scalars["uuid"];
    sId: Scalars["uuid"];
    /** An object relationship */
    sender: Registrant_Registrant;
    senderId: Scalars["uuid"];
    symbol: Scalars["String"];
    type: Chat_ReactionType_Enum;
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "chat.Reaction" */
export type Chat_ReactionDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "chat.Reaction" */
export type Chat_ReactionDuplicatesArgs = {
    distinct_on?: InputMaybe<Array<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** columns and relationships of "chat.Reaction" */
export type Chat_ReactionDuplicates_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** columns and relationships of "chat.ReactionType" */
export type Chat_ReactionType = {
    __typename?: "chat_ReactionType";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "chat.ReactionType" */
export type Chat_ReactionType_Aggregate = {
    __typename?: "chat_ReactionType_aggregate";
    aggregate?: Maybe<Chat_ReactionType_Aggregate_Fields>;
    nodes: Array<Chat_ReactionType>;
};

/** aggregate fields of "chat.ReactionType" */
export type Chat_ReactionType_Aggregate_Fields = {
    __typename?: "chat_ReactionType_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Chat_ReactionType_Max_Fields>;
    min?: Maybe<Chat_ReactionType_Min_Fields>;
};

/** aggregate fields of "chat.ReactionType" */
export type Chat_ReactionType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_ReactionType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "chat.ReactionType". All fields are combined with a logical 'AND'. */
export type Chat_ReactionType_Bool_Exp = {
    _and?: InputMaybe<Array<Chat_ReactionType_Bool_Exp>>;
    _not?: InputMaybe<Chat_ReactionType_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_ReactionType_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.ReactionType" */
export enum Chat_ReactionType_Constraint {
    /** unique or primary key constraint */
    ReactionTypePkey = "ReactionType_pkey",
}

export enum Chat_ReactionType_Enum {
    /** Link to a message that answers the question. */
    Answer = "ANSWER",
    /** A plain emoji reaction */
    Emoji = "EMOJI",
    /** Responding to an event participation survey. */
    EventParticipation = "EVENT_PARTICIPATION",
    /** A vote in a poll */
    PollChoice = "POLL_CHOICE",
    /** Stop accepting new responses to the poll */
    PollClosed = "POLL_CLOSED",
    /** Make the poll results visible */
    PollComplete = "POLL_COMPLETE",
}

/** Boolean expression to compare columns of type "chat_ReactionType_enum". All fields are combined with logical 'AND'. */
export type Chat_ReactionType_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Chat_ReactionType_Enum>;
    _in?: InputMaybe<Array<Chat_ReactionType_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Chat_ReactionType_Enum>;
    _nin?: InputMaybe<Array<Chat_ReactionType_Enum>>;
};

/** input type for inserting data into table "chat.ReactionType" */
export type Chat_ReactionType_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Chat_ReactionType_Max_Fields = {
    __typename?: "chat_ReactionType_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Chat_ReactionType_Min_Fields = {
    __typename?: "chat_ReactionType_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "chat.ReactionType" */
export type Chat_ReactionType_Mutation_Response = {
    __typename?: "chat_ReactionType_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_ReactionType>;
};

/** on_conflict condition type for table "chat.ReactionType" */
export type Chat_ReactionType_On_Conflict = {
    constraint: Chat_ReactionType_Constraint;
    update_columns?: Array<Chat_ReactionType_Update_Column>;
    where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.ReactionType". */
export type Chat_ReactionType_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_ReactionType */
export type Chat_ReactionType_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "chat.ReactionType" */
export enum Chat_ReactionType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "chat.ReactionType" */
export type Chat_ReactionType_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "chat.ReactionType" */
export enum Chat_ReactionType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "chat.Reaction" */
export type Chat_Reaction_Aggregate = {
    __typename?: "chat_Reaction_aggregate";
    aggregate?: Maybe<Chat_Reaction_Aggregate_Fields>;
    nodes: Array<Chat_Reaction>;
};

/** aggregate fields of "chat.Reaction" */
export type Chat_Reaction_Aggregate_Fields = {
    __typename?: "chat_Reaction_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Chat_Reaction_Max_Fields>;
    min?: Maybe<Chat_Reaction_Min_Fields>;
};

/** aggregate fields of "chat.Reaction" */
export type Chat_Reaction_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_Reaction_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Reaction" */
export type Chat_Reaction_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Chat_Reaction_Max_Order_By>;
    min?: InputMaybe<Chat_Reaction_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Chat_Reaction_Append_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "chat.Reaction" */
export type Chat_Reaction_Arr_Rel_Insert_Input = {
    data: Array<Chat_Reaction_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Reaction_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Reaction". All fields are combined with a logical 'AND'. */
export type Chat_Reaction_Bool_Exp = {
    _and?: InputMaybe<Array<Chat_Reaction_Bool_Exp>>;
    _not?: InputMaybe<Chat_Reaction_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_Reaction_Bool_Exp>>;
    chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    chatId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    data?: InputMaybe<Jsonb_Comparison_Exp>;
    duplicate?: InputMaybe<Chat_Reaction_Bool_Exp>;
    duplicateSId?: InputMaybe<Uuid_Comparison_Exp>;
    duplicates?: InputMaybe<Chat_Reaction_Bool_Exp>;
    message?: InputMaybe<Chat_Message_Bool_Exp>;
    messageSId?: InputMaybe<Uuid_Comparison_Exp>;
    sId?: InputMaybe<Uuid_Comparison_Exp>;
    sender?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    senderId?: InputMaybe<Uuid_Comparison_Exp>;
    symbol?: InputMaybe<String_Comparison_Exp>;
    type?: InputMaybe<Chat_ReactionType_Enum_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Reaction" */
export enum Chat_Reaction_Constraint {
    /** unique or primary key constraint */
    ReactionPkey = "Reaction_pkey",
    /** unique or primary key constraint */
    ReactionSIdKey = "Reaction_sId_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Chat_Reaction_Delete_At_Path_Input = {
    data?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Chat_Reaction_Delete_Elem_Input = {
    data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Chat_Reaction_Delete_Key_Input = {
    data?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "chat.Reaction" */
export type Chat_Reaction_Insert_Input = {
    chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    chatId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    duplicate?: InputMaybe<Chat_Reaction_Obj_Rel_Insert_Input>;
    duplicateSId?: InputMaybe<Scalars["uuid"]>;
    duplicates?: InputMaybe<Chat_Reaction_Arr_Rel_Insert_Input>;
    message?: InputMaybe<Chat_Message_Obj_Rel_Insert_Input>;
    messageSId?: InputMaybe<Scalars["uuid"]>;
    sId?: InputMaybe<Scalars["uuid"]>;
    sender?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    senderId?: InputMaybe<Scalars["uuid"]>;
    symbol?: InputMaybe<Scalars["String"]>;
    type?: InputMaybe<Chat_ReactionType_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_Reaction_Max_Fields = {
    __typename?: "chat_Reaction_max_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    duplicateSId?: Maybe<Scalars["uuid"]>;
    messageSId?: Maybe<Scalars["uuid"]>;
    sId?: Maybe<Scalars["uuid"]>;
    senderId?: Maybe<Scalars["uuid"]>;
    symbol?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.Reaction" */
export type Chat_Reaction_Max_Order_By = {
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    duplicateSId?: InputMaybe<Order_By>;
    messageSId?: InputMaybe<Order_By>;
    sId?: InputMaybe<Order_By>;
    senderId?: InputMaybe<Order_By>;
    symbol?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Reaction_Min_Fields = {
    __typename?: "chat_Reaction_min_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    duplicateSId?: Maybe<Scalars["uuid"]>;
    messageSId?: Maybe<Scalars["uuid"]>;
    sId?: Maybe<Scalars["uuid"]>;
    senderId?: Maybe<Scalars["uuid"]>;
    symbol?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.Reaction" */
export type Chat_Reaction_Min_Order_By = {
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    duplicateSId?: InputMaybe<Order_By>;
    messageSId?: InputMaybe<Order_By>;
    sId?: InputMaybe<Order_By>;
    senderId?: InputMaybe<Order_By>;
    symbol?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Reaction" */
export type Chat_Reaction_Mutation_Response = {
    __typename?: "chat_Reaction_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_Reaction>;
};

/** input type for inserting object relation for remote table "chat.Reaction" */
export type Chat_Reaction_Obj_Rel_Insert_Input = {
    data: Chat_Reaction_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Reaction_On_Conflict>;
};

/** on_conflict condition type for table "chat.Reaction" */
export type Chat_Reaction_On_Conflict = {
    constraint: Chat_Reaction_Constraint;
    update_columns?: Array<Chat_Reaction_Update_Column>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Reaction". */
export type Chat_Reaction_Order_By = {
    chat?: InputMaybe<Chat_Chat_Order_By>;
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    data?: InputMaybe<Order_By>;
    duplicate?: InputMaybe<Chat_Reaction_Order_By>;
    duplicateSId?: InputMaybe<Order_By>;
    duplicates_aggregate?: InputMaybe<Chat_Reaction_Aggregate_Order_By>;
    message?: InputMaybe<Chat_Message_Order_By>;
    messageSId?: InputMaybe<Order_By>;
    sId?: InputMaybe<Order_By>;
    sender?: InputMaybe<Registrant_Registrant_Order_By>;
    senderId?: InputMaybe<Order_By>;
    symbol?: InputMaybe<Order_By>;
    type?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Reaction */
export type Chat_Reaction_Pk_Columns_Input = {
    sId: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Chat_Reaction_Prepend_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "chat.Reaction" */
export enum Chat_Reaction_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    DuplicateSId = "duplicateSId",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    SId = "sId",
    /** column name */
    SenderId = "senderId",
    /** column name */
    Symbol = "symbol",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.Reaction" */
export type Chat_Reaction_Set_Input = {
    chatId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    duplicateSId?: InputMaybe<Scalars["uuid"]>;
    messageSId?: InputMaybe<Scalars["uuid"]>;
    sId?: InputMaybe<Scalars["uuid"]>;
    senderId?: InputMaybe<Scalars["uuid"]>;
    symbol?: InputMaybe<Scalars["String"]>;
    type?: InputMaybe<Chat_ReactionType_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "chat.Reaction" */
export enum Chat_Reaction_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    DuplicateSId = "duplicateSId",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    SId = "sId",
    /** column name */
    SenderId = "senderId",
    /** column name */
    Symbol = "symbol",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex = {
    __typename?: "chat_ReadUpToIndex";
    /** An object relationship */
    chat: Chat_Chat;
    chatId: Scalars["uuid"];
    messageSId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate = {
    __typename?: "chat_ReadUpToIndex_aggregate";
    aggregate?: Maybe<Chat_ReadUpToIndex_Aggregate_Fields>;
    nodes: Array<Chat_ReadUpToIndex>;
};

/** aggregate fields of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate_Fields = {
    __typename?: "chat_ReadUpToIndex_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Chat_ReadUpToIndex_Max_Fields>;
    min?: Maybe<Chat_ReadUpToIndex_Min_Fields>;
};

/** aggregate fields of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_ReadUpToIndex_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Chat_ReadUpToIndex_Max_Order_By>;
    min?: InputMaybe<Chat_ReadUpToIndex_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Arr_Rel_Insert_Input = {
    data: Array<Chat_ReadUpToIndex_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_ReadUpToIndex_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.ReadUpToIndex". All fields are combined with a logical 'AND'. */
export type Chat_ReadUpToIndex_Bool_Exp = {
    _and?: InputMaybe<Array<Chat_ReadUpToIndex_Bool_Exp>>;
    _not?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_ReadUpToIndex_Bool_Exp>>;
    chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    chatId?: InputMaybe<Uuid_Comparison_Exp>;
    messageSId?: InputMaybe<Uuid_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.ReadUpToIndex" */
export enum Chat_ReadUpToIndex_Constraint {
    /** unique or primary key constraint */
    ReadUpToIndexPkey = "ReadUpToIndex_pkey",
}

/** input type for inserting data into table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Insert_Input = {
    chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    chatId?: InputMaybe<Scalars["uuid"]>;
    messageSId?: InputMaybe<Scalars["uuid"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_ReadUpToIndex_Max_Fields = {
    __typename?: "chat_ReadUpToIndex_max_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    messageSId?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Max_Order_By = {
    chatId?: InputMaybe<Order_By>;
    messageSId?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_ReadUpToIndex_Min_Fields = {
    __typename?: "chat_ReadUpToIndex_min_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    messageSId?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Min_Order_By = {
    chatId?: InputMaybe<Order_By>;
    messageSId?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Mutation_Response = {
    __typename?: "chat_ReadUpToIndex_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_ReadUpToIndex>;
};

/** on_conflict condition type for table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_On_Conflict = {
    constraint: Chat_ReadUpToIndex_Constraint;
    update_columns?: Array<Chat_ReadUpToIndex_Update_Column>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.ReadUpToIndex". */
export type Chat_ReadUpToIndex_Order_By = {
    chat?: InputMaybe<Chat_Chat_Order_By>;
    chatId?: InputMaybe<Order_By>;
    messageSId?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_ReadUpToIndex */
export type Chat_ReadUpToIndex_Pk_Columns_Input = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** select columns of table "chat.ReadUpToIndex" */
export enum Chat_ReadUpToIndex_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Set_Input = {
    chatId?: InputMaybe<Scalars["uuid"]>;
    messageSId?: InputMaybe<Scalars["uuid"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "chat.ReadUpToIndex" */
export enum Chat_ReadUpToIndex_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** Subscribe to chat notifications. */
export type Chat_Subscription = {
    __typename?: "chat_Subscription";
    /** An object relationship */
    XPin?: Maybe<Chat_Pin>;
    /** An object relationship */
    chat: Chat_Chat;
    chatId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    wasManuallySubscribed: Scalars["Boolean"];
};

/** aggregated selection of "chat.Subscription" */
export type Chat_Subscription_Aggregate = {
    __typename?: "chat_Subscription_aggregate";
    aggregate?: Maybe<Chat_Subscription_Aggregate_Fields>;
    nodes: Array<Chat_Subscription>;
};

/** aggregate fields of "chat.Subscription" */
export type Chat_Subscription_Aggregate_Fields = {
    __typename?: "chat_Subscription_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Chat_Subscription_Max_Fields>;
    min?: Maybe<Chat_Subscription_Min_Fields>;
};

/** aggregate fields of "chat.Subscription" */
export type Chat_Subscription_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Chat_Subscription_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Subscription" */
export type Chat_Subscription_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Chat_Subscription_Max_Order_By>;
    min?: InputMaybe<Chat_Subscription_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Subscription" */
export type Chat_Subscription_Arr_Rel_Insert_Input = {
    data: Array<Chat_Subscription_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Chat_Subscription_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Subscription". All fields are combined with a logical 'AND'. */
export type Chat_Subscription_Bool_Exp = {
    XPin?: InputMaybe<Chat_Pin_Bool_Exp>;
    _and?: InputMaybe<Array<Chat_Subscription_Bool_Exp>>;
    _not?: InputMaybe<Chat_Subscription_Bool_Exp>;
    _or?: InputMaybe<Array<Chat_Subscription_Bool_Exp>>;
    chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    chatId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    wasManuallySubscribed?: InputMaybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Subscription" */
export enum Chat_Subscription_Constraint {
    /** unique or primary key constraint */
    SubscriptionPkey = "Subscription_pkey",
}

/** input type for inserting data into table "chat.Subscription" */
export type Chat_Subscription_Insert_Input = {
    XPin?: InputMaybe<Chat_Pin_Obj_Rel_Insert_Input>;
    chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    chatId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    wasManuallySubscribed?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate max on columns */
export type Chat_Subscription_Max_Fields = {
    __typename?: "chat_Subscription_max_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "chat.Subscription" */
export type Chat_Subscription_Max_Order_By = {
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Subscription_Min_Fields = {
    __typename?: "chat_Subscription_min_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "chat.Subscription" */
export type Chat_Subscription_Min_Order_By = {
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Subscription" */
export type Chat_Subscription_Mutation_Response = {
    __typename?: "chat_Subscription_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Chat_Subscription>;
};

/** on_conflict condition type for table "chat.Subscription" */
export type Chat_Subscription_On_Conflict = {
    constraint: Chat_Subscription_Constraint;
    update_columns?: Array<Chat_Subscription_Update_Column>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Subscription". */
export type Chat_Subscription_Order_By = {
    XPin?: InputMaybe<Chat_Pin_Order_By>;
    chat?: InputMaybe<Chat_Chat_Order_By>;
    chatId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    wasManuallySubscribed?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Subscription */
export type Chat_Subscription_Pk_Columns_Input = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** select columns of table "chat.Subscription" */
export enum Chat_Subscription_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    WasManuallySubscribed = "wasManuallySubscribed",
}

/** input type for updating data in table "chat.Subscription" */
export type Chat_Subscription_Set_Input = {
    chatId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    wasManuallySubscribed?: InputMaybe<Scalars["Boolean"]>;
};

/** update columns of table "chat.Subscription" */
export enum Chat_Subscription_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    WasManuallySubscribed = "wasManuallySubscribed",
}

/** columns and relationships of "collection.Exhibition" */
export type Collection_Exhibition = {
    __typename?: "collection_Exhibition";
    colour: Scalars["String"];
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    descriptiveItem?: Maybe<Content_Item>;
    descriptiveItemId?: Maybe<Scalars["uuid"]>;
    id: Scalars["uuid"];
    isHidden: Scalars["Boolean"];
    /** An array relationship */
    items: Array<Content_ItemExhibition>;
    /** An aggregate relationship */
    items_aggregate: Content_ItemExhibition_Aggregate;
    name: Scalars["String"];
    priority: Scalars["Int"];
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at: Scalars["timestamptz"];
    visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "collection.Exhibition" */
export type Collection_ExhibitionItemsArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** columns and relationships of "collection.Exhibition" */
export type Collection_ExhibitionItems_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** aggregated selection of "collection.Exhibition" */
export type Collection_Exhibition_Aggregate = {
    __typename?: "collection_Exhibition_aggregate";
    aggregate?: Maybe<Collection_Exhibition_Aggregate_Fields>;
    nodes: Array<Collection_Exhibition>;
};

/** aggregate fields of "collection.Exhibition" */
export type Collection_Exhibition_Aggregate_Fields = {
    __typename?: "collection_Exhibition_aggregate_fields";
    avg?: Maybe<Collection_Exhibition_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Collection_Exhibition_Max_Fields>;
    min?: Maybe<Collection_Exhibition_Min_Fields>;
    stddev?: Maybe<Collection_Exhibition_Stddev_Fields>;
    stddev_pop?: Maybe<Collection_Exhibition_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Collection_Exhibition_Stddev_Samp_Fields>;
    sum?: Maybe<Collection_Exhibition_Sum_Fields>;
    var_pop?: Maybe<Collection_Exhibition_Var_Pop_Fields>;
    var_samp?: Maybe<Collection_Exhibition_Var_Samp_Fields>;
    variance?: Maybe<Collection_Exhibition_Variance_Fields>;
};

/** aggregate fields of "collection.Exhibition" */
export type Collection_Exhibition_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Collection_Exhibition_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "collection.Exhibition" */
export type Collection_Exhibition_Aggregate_Order_By = {
    avg?: InputMaybe<Collection_Exhibition_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Collection_Exhibition_Max_Order_By>;
    min?: InputMaybe<Collection_Exhibition_Min_Order_By>;
    stddev?: InputMaybe<Collection_Exhibition_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Collection_Exhibition_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Collection_Exhibition_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Collection_Exhibition_Sum_Order_By>;
    var_pop?: InputMaybe<Collection_Exhibition_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Collection_Exhibition_Var_Samp_Order_By>;
    variance?: InputMaybe<Collection_Exhibition_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "collection.Exhibition" */
export type Collection_Exhibition_Arr_Rel_Insert_Input = {
    data: Array<Collection_Exhibition_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Collection_Exhibition_On_Conflict>;
};

/** aggregate avg on columns */
export type Collection_Exhibition_Avg_Fields = {
    __typename?: "collection_Exhibition_avg_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Avg_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "collection.Exhibition". All fields are combined with a logical 'AND'. */
export type Collection_Exhibition_Bool_Exp = {
    _and?: InputMaybe<Array<Collection_Exhibition_Bool_Exp>>;
    _not?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    _or?: InputMaybe<Array<Collection_Exhibition_Bool_Exp>>;
    colour?: InputMaybe<String_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    descriptiveItem?: InputMaybe<Content_Item_Bool_Exp>;
    descriptiveItemId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    isHidden?: InputMaybe<Boolean_Comparison_Exp>;
    items?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    priority?: InputMaybe<Int_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "collection.Exhibition" */
export enum Collection_Exhibition_Constraint {
    /** unique or primary key constraint */
    ExhibitionPkey = "Exhibition_pkey",
    /** unique or primary key constraint */
    CollectionExhibitionNameConferenceId = "collection_Exhibition_name_conferenceId",
    /** unique or primary key constraint */
    CollectionExhibitionNameSubconferenceId = "collection_Exhibition_name_subconferenceId",
}

/** input type for incrementing numeric columns in table "collection.Exhibition" */
export type Collection_Exhibition_Inc_Input = {
    priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "collection.Exhibition" */
export type Collection_Exhibition_Insert_Input = {
    colour?: InputMaybe<Scalars["String"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    descriptiveItem?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    descriptiveItemId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isHidden?: InputMaybe<Scalars["Boolean"]>;
    items?: InputMaybe<Content_ItemExhibition_Arr_Rel_Insert_Input>;
    name?: InputMaybe<Scalars["String"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Collection_Exhibition_Max_Fields = {
    __typename?: "collection_Exhibition_max_fields";
    colour?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    descriptiveItemId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    priority?: Maybe<Scalars["Int"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Max_Order_By = {
    colour?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    descriptiveItemId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Collection_Exhibition_Min_Fields = {
    __typename?: "collection_Exhibition_min_fields";
    colour?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    descriptiveItemId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    priority?: Maybe<Scalars["Int"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Min_Order_By = {
    colour?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    descriptiveItemId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "collection.Exhibition" */
export type Collection_Exhibition_Mutation_Response = {
    __typename?: "collection_Exhibition_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Collection_Exhibition>;
};

/** input type for inserting object relation for remote table "collection.Exhibition" */
export type Collection_Exhibition_Obj_Rel_Insert_Input = {
    data: Collection_Exhibition_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Collection_Exhibition_On_Conflict>;
};

/** on_conflict condition type for table "collection.Exhibition" */
export type Collection_Exhibition_On_Conflict = {
    constraint: Collection_Exhibition_Constraint;
    update_columns?: Array<Collection_Exhibition_Update_Column>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** Ordering options when selecting data from "collection.Exhibition". */
export type Collection_Exhibition_Order_By = {
    colour?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    descriptiveItem?: InputMaybe<Content_Item_Order_By>;
    descriptiveItemId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    isHidden?: InputMaybe<Order_By>;
    items_aggregate?: InputMaybe<Content_ItemExhibition_Aggregate_Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: collection_Exhibition */
export type Collection_Exhibition_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "collection.Exhibition" */
export enum Collection_Exhibition_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DescriptiveItemId = "descriptiveItemId",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "collection.Exhibition" */
export type Collection_Exhibition_Set_Input = {
    colour?: InputMaybe<Scalars["String"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    descriptiveItemId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isHidden?: InputMaybe<Scalars["Boolean"]>;
    name?: InputMaybe<Scalars["String"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate stddev on columns */
export type Collection_Exhibition_Stddev_Fields = {
    __typename?: "collection_Exhibition_stddev_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Stddev_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Collection_Exhibition_Stddev_Pop_Fields = {
    __typename?: "collection_Exhibition_stddev_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Stddev_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Collection_Exhibition_Stddev_Samp_Fields = {
    __typename?: "collection_Exhibition_stddev_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Stddev_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Collection_Exhibition_Sum_Fields = {
    __typename?: "collection_Exhibition_sum_fields";
    priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Sum_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** update columns of table "collection.Exhibition" */
export enum Collection_Exhibition_Update_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DescriptiveItemId = "descriptiveItemId",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** aggregate var_pop on columns */
export type Collection_Exhibition_Var_Pop_Fields = {
    __typename?: "collection_Exhibition_var_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Var_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Collection_Exhibition_Var_Samp_Fields = {
    __typename?: "collection_Exhibition_var_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Var_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Collection_Exhibition_Variance_Fields = {
    __typename?: "collection_Exhibition_variance_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Variance_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPerson = {
    __typename?: "collection_ProgramPerson";
    accessToken: Scalars["String"];
    affiliation?: Maybe<Scalars["String"]>;
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    email?: Maybe<Scalars["String"]>;
    /** An array relationship */
    eventPeople: Array<Schedule_EventProgramPerson>;
    /** An aggregate relationship */
    eventPeople_aggregate: Schedule_EventProgramPerson_Aggregate;
    id: Scalars["uuid"];
    /** An array relationship */
    itemPeople: Array<Content_ItemProgramPerson>;
    /** An aggregate relationship */
    itemPeople_aggregate: Content_ItemProgramPerson_Aggregate;
    name: Scalars["String"];
    /** An object relationship */
    registrant?: Maybe<Registrant_Registrant>;
    registrantId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    subconference?: Maybe<Conference_Subconference>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    submissionRequestsSentCount: Scalars["Int"];
    visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPersonEventPeopleArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPersonEventPeople_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPersonItemPeopleArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPersonItemPeople_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** aggregated selection of "collection.ProgramPerson" */
export type Collection_ProgramPerson_Aggregate = {
    __typename?: "collection_ProgramPerson_aggregate";
    aggregate?: Maybe<Collection_ProgramPerson_Aggregate_Fields>;
    nodes: Array<Collection_ProgramPerson>;
};

/** aggregate fields of "collection.ProgramPerson" */
export type Collection_ProgramPerson_Aggregate_Fields = {
    __typename?: "collection_ProgramPerson_aggregate_fields";
    avg?: Maybe<Collection_ProgramPerson_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Collection_ProgramPerson_Max_Fields>;
    min?: Maybe<Collection_ProgramPerson_Min_Fields>;
    stddev?: Maybe<Collection_ProgramPerson_Stddev_Fields>;
    stddev_pop?: Maybe<Collection_ProgramPerson_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Collection_ProgramPerson_Stddev_Samp_Fields>;
    sum?: Maybe<Collection_ProgramPerson_Sum_Fields>;
    var_pop?: Maybe<Collection_ProgramPerson_Var_Pop_Fields>;
    var_samp?: Maybe<Collection_ProgramPerson_Var_Samp_Fields>;
    variance?: Maybe<Collection_ProgramPerson_Variance_Fields>;
};

/** aggregate fields of "collection.ProgramPerson" */
export type Collection_ProgramPerson_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Aggregate_Order_By = {
    avg?: InputMaybe<Collection_ProgramPerson_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Collection_ProgramPerson_Max_Order_By>;
    min?: InputMaybe<Collection_ProgramPerson_Min_Order_By>;
    stddev?: InputMaybe<Collection_ProgramPerson_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Collection_ProgramPerson_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Collection_ProgramPerson_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Collection_ProgramPerson_Sum_Order_By>;
    var_pop?: InputMaybe<Collection_ProgramPerson_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Collection_ProgramPerson_Var_Samp_Order_By>;
    variance?: InputMaybe<Collection_ProgramPerson_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Arr_Rel_Insert_Input = {
    data: Array<Collection_ProgramPerson_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Collection_ProgramPerson_On_Conflict>;
};

/** aggregate avg on columns */
export type Collection_ProgramPerson_Avg_Fields = {
    __typename?: "collection_ProgramPerson_avg_fields";
    submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Avg_Order_By = {
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "collection.ProgramPerson". All fields are combined with a logical 'AND'. */
export type Collection_ProgramPerson_Bool_Exp = {
    _and?: InputMaybe<Array<Collection_ProgramPerson_Bool_Exp>>;
    _not?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    _or?: InputMaybe<Array<Collection_ProgramPerson_Bool_Exp>>;
    accessToken?: InputMaybe<String_Comparison_Exp>;
    affiliation?: InputMaybe<String_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    email?: InputMaybe<String_Comparison_Exp>;
    eventPeople?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    itemPeople?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    submissionRequestsSentCount?: InputMaybe<Int_Comparison_Exp>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "collection.ProgramPerson" */
export enum Collection_ProgramPerson_Constraint {
    /** unique or primary key constraint */
    ProgramPersonPkey = "ProgramPerson_pkey",
    /** unique or primary key constraint */
    CollectionProgramPersonAccessToken = "collection_ProgramPerson_accessToken",
    /** unique or primary key constraint */
    CollectionProgramPersonConferenceIdName = "collection_ProgramPerson_conferenceId_name",
    /** unique or primary key constraint */
    CollectionProgramPersonConferenceIdNameAffiliation = "collection_ProgramPerson_conferenceId_name_affiliation",
    /** unique or primary key constraint */
    CollectionProgramPersonSubconferenceIdName = "collection_ProgramPerson_subconferenceId_name",
    /** unique or primary key constraint */
    CollectionProgramPersonSubconferenceIdNameAffiliation = "collection_ProgramPerson_subconferenceId_name_affiliation",
}

/** input type for incrementing numeric columns in table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Inc_Input = {
    submissionRequestsSentCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Insert_Input = {
    accessToken?: InputMaybe<Scalars["String"]>;
    affiliation?: InputMaybe<Scalars["String"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    email?: InputMaybe<Scalars["String"]>;
    eventPeople?: InputMaybe<Schedule_EventProgramPerson_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemPeople?: InputMaybe<Content_ItemProgramPerson_Arr_Rel_Insert_Input>;
    name?: InputMaybe<Scalars["String"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    submissionRequestsSentCount?: InputMaybe<Scalars["Int"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Collection_ProgramPerson_Max_Fields = {
    __typename?: "collection_ProgramPerson_max_fields";
    accessToken?: Maybe<Scalars["String"]>;
    affiliation?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    email?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    submissionRequestsSentCount?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Max_Order_By = {
    accessToken?: InputMaybe<Order_By>;
    affiliation?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    email?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Collection_ProgramPerson_Min_Fields = {
    __typename?: "collection_ProgramPerson_min_fields";
    accessToken?: Maybe<Scalars["String"]>;
    affiliation?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    email?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    submissionRequestsSentCount?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Min_Order_By = {
    accessToken?: InputMaybe<Order_By>;
    affiliation?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    email?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Mutation_Response = {
    __typename?: "collection_ProgramPerson_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Collection_ProgramPerson>;
};

/** input type for inserting object relation for remote table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Obj_Rel_Insert_Input = {
    data: Collection_ProgramPerson_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Collection_ProgramPerson_On_Conflict>;
};

/** on_conflict condition type for table "collection.ProgramPerson" */
export type Collection_ProgramPerson_On_Conflict = {
    constraint: Collection_ProgramPerson_Constraint;
    update_columns?: Array<Collection_ProgramPerson_Update_Column>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** Ordering options when selecting data from "collection.ProgramPerson". */
export type Collection_ProgramPerson_Order_By = {
    accessToken?: InputMaybe<Order_By>;
    affiliation?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    email?: InputMaybe<Order_By>;
    eventPeople_aggregate?: InputMaybe<Schedule_EventProgramPerson_Aggregate_Order_By>;
    id?: InputMaybe<Order_By>;
    itemPeople_aggregate?: InputMaybe<Content_ItemProgramPerson_Aggregate_Order_By>;
    name?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    subconference?: InputMaybe<Conference_Subconference_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    submissionRequestsSentCount?: InputMaybe<Order_By>;
    visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: collection_ProgramPerson */
export type Collection_ProgramPerson_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "collection.ProgramPerson" */
export enum Collection_ProgramPerson_Select_Column {
    /** column name */
    AccessToken = "accessToken",
    /** column name */
    Affiliation = "affiliation",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    Email = "email",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    SubmissionRequestsSentCount = "submissionRequestsSentCount",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Set_Input = {
    accessToken?: InputMaybe<Scalars["String"]>;
    affiliation?: InputMaybe<Scalars["String"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    email?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    name?: InputMaybe<Scalars["String"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    submissionRequestsSentCount?: InputMaybe<Scalars["Int"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate stddev on columns */
export type Collection_ProgramPerson_Stddev_Fields = {
    __typename?: "collection_ProgramPerson_stddev_fields";
    submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Stddev_Order_By = {
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Collection_ProgramPerson_Stddev_Pop_Fields = {
    __typename?: "collection_ProgramPerson_stddev_pop_fields";
    submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Stddev_Pop_Order_By = {
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Collection_ProgramPerson_Stddev_Samp_Fields = {
    __typename?: "collection_ProgramPerson_stddev_samp_fields";
    submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Stddev_Samp_Order_By = {
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Collection_ProgramPerson_Sum_Fields = {
    __typename?: "collection_ProgramPerson_sum_fields";
    submissionRequestsSentCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Sum_Order_By = {
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** update columns of table "collection.ProgramPerson" */
export enum Collection_ProgramPerson_Update_Column {
    /** column name */
    AccessToken = "accessToken",
    /** column name */
    Affiliation = "affiliation",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    Email = "email",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    SubmissionRequestsSentCount = "submissionRequestsSentCount",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** aggregate var_pop on columns */
export type Collection_ProgramPerson_Var_Pop_Fields = {
    __typename?: "collection_ProgramPerson_var_pop_fields";
    submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Var_Pop_Order_By = {
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Collection_ProgramPerson_Var_Samp_Fields = {
    __typename?: "collection_ProgramPerson_var_samp_fields";
    submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Var_Samp_Order_By = {
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Collection_ProgramPerson_Variance_Fields = {
    __typename?: "collection_ProgramPerson_variance_fields";
    submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Variance_Order_By = {
    submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** columns and relationships of "collection.Tag" */
export type Collection_Tag = {
    __typename?: "collection_Tag";
    colour: Scalars["String"];
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An array relationship */
    itemTags: Array<Content_ItemTag>;
    /** An aggregate relationship */
    itemTags_aggregate: Content_ItemTag_Aggregate;
    name: Scalars["String"];
    priority: Scalars["Int"];
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt: Scalars["timestamptz"];
    visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "collection.Tag" */
export type Collection_TagItemTagsArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** columns and relationships of "collection.Tag" */
export type Collection_TagItemTags_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** aggregated selection of "collection.Tag" */
export type Collection_Tag_Aggregate = {
    __typename?: "collection_Tag_aggregate";
    aggregate?: Maybe<Collection_Tag_Aggregate_Fields>;
    nodes: Array<Collection_Tag>;
};

/** aggregate fields of "collection.Tag" */
export type Collection_Tag_Aggregate_Fields = {
    __typename?: "collection_Tag_aggregate_fields";
    avg?: Maybe<Collection_Tag_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Collection_Tag_Max_Fields>;
    min?: Maybe<Collection_Tag_Min_Fields>;
    stddev?: Maybe<Collection_Tag_Stddev_Fields>;
    stddev_pop?: Maybe<Collection_Tag_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Collection_Tag_Stddev_Samp_Fields>;
    sum?: Maybe<Collection_Tag_Sum_Fields>;
    var_pop?: Maybe<Collection_Tag_Var_Pop_Fields>;
    var_samp?: Maybe<Collection_Tag_Var_Samp_Fields>;
    variance?: Maybe<Collection_Tag_Variance_Fields>;
};

/** aggregate fields of "collection.Tag" */
export type Collection_Tag_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Collection_Tag_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "collection.Tag" */
export type Collection_Tag_Aggregate_Order_By = {
    avg?: InputMaybe<Collection_Tag_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Collection_Tag_Max_Order_By>;
    min?: InputMaybe<Collection_Tag_Min_Order_By>;
    stddev?: InputMaybe<Collection_Tag_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Collection_Tag_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Collection_Tag_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Collection_Tag_Sum_Order_By>;
    var_pop?: InputMaybe<Collection_Tag_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Collection_Tag_Var_Samp_Order_By>;
    variance?: InputMaybe<Collection_Tag_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "collection.Tag" */
export type Collection_Tag_Arr_Rel_Insert_Input = {
    data: Array<Collection_Tag_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Collection_Tag_On_Conflict>;
};

/** aggregate avg on columns */
export type Collection_Tag_Avg_Fields = {
    __typename?: "collection_Tag_avg_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "collection.Tag" */
export type Collection_Tag_Avg_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "collection.Tag". All fields are combined with a logical 'AND'. */
export type Collection_Tag_Bool_Exp = {
    _and?: InputMaybe<Array<Collection_Tag_Bool_Exp>>;
    _not?: InputMaybe<Collection_Tag_Bool_Exp>;
    _or?: InputMaybe<Array<Collection_Tag_Bool_Exp>>;
    colour?: InputMaybe<String_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    itemTags?: InputMaybe<Content_ItemTag_Bool_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    priority?: InputMaybe<Int_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "collection.Tag" */
export enum Collection_Tag_Constraint {
    /** unique or primary key constraint */
    TagPkey = "Tag_pkey",
}

/** input type for incrementing numeric columns in table "collection.Tag" */
export type Collection_Tag_Inc_Input = {
    priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "collection.Tag" */
export type Collection_Tag_Insert_Input = {
    colour?: InputMaybe<Scalars["String"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemTags?: InputMaybe<Content_ItemTag_Arr_Rel_Insert_Input>;
    name?: InputMaybe<Scalars["String"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Collection_Tag_Max_Fields = {
    __typename?: "collection_Tag_max_fields";
    colour?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    priority?: Maybe<Scalars["Int"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "collection.Tag" */
export type Collection_Tag_Max_Order_By = {
    colour?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Collection_Tag_Min_Fields = {
    __typename?: "collection_Tag_min_fields";
    colour?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    priority?: Maybe<Scalars["Int"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "collection.Tag" */
export type Collection_Tag_Min_Order_By = {
    colour?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "collection.Tag" */
export type Collection_Tag_Mutation_Response = {
    __typename?: "collection_Tag_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Collection_Tag>;
};

/** input type for inserting object relation for remote table "collection.Tag" */
export type Collection_Tag_Obj_Rel_Insert_Input = {
    data: Collection_Tag_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Collection_Tag_On_Conflict>;
};

/** on_conflict condition type for table "collection.Tag" */
export type Collection_Tag_On_Conflict = {
    constraint: Collection_Tag_Constraint;
    update_columns?: Array<Collection_Tag_Update_Column>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

/** Ordering options when selecting data from "collection.Tag". */
export type Collection_Tag_Order_By = {
    colour?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemTags_aggregate?: InputMaybe<Content_ItemTag_Aggregate_Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: collection_Tag */
export type Collection_Tag_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "collection.Tag" */
export enum Collection_Tag_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "collection.Tag" */
export type Collection_Tag_Set_Input = {
    colour?: InputMaybe<Scalars["String"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    name?: InputMaybe<Scalars["String"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate stddev on columns */
export type Collection_Tag_Stddev_Fields = {
    __typename?: "collection_Tag_stddev_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "collection.Tag" */
export type Collection_Tag_Stddev_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Collection_Tag_Stddev_Pop_Fields = {
    __typename?: "collection_Tag_stddev_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "collection.Tag" */
export type Collection_Tag_Stddev_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Collection_Tag_Stddev_Samp_Fields = {
    __typename?: "collection_Tag_stddev_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "collection.Tag" */
export type Collection_Tag_Stddev_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Collection_Tag_Sum_Fields = {
    __typename?: "collection_Tag_sum_fields";
    priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "collection.Tag" */
export type Collection_Tag_Sum_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** update columns of table "collection.Tag" */
export enum Collection_Tag_Update_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** aggregate var_pop on columns */
export type Collection_Tag_Var_Pop_Fields = {
    __typename?: "collection_Tag_var_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "collection.Tag" */
export type Collection_Tag_Var_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Collection_Tag_Var_Samp_Fields = {
    __typename?: "collection_Tag_var_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "collection.Tag" */
export type Collection_Tag_Var_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Collection_Tag_Variance_Fields = {
    __typename?: "collection_Tag_variance_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "collection.Tag" */
export type Collection_Tag_Variance_Order_By = {
    priority?: InputMaybe<Order_By>;
};

export type Collection_SearchProgramPerson_Args = {
    conferenceid?: InputMaybe<Scalars["uuid"]>;
    search?: InputMaybe<Scalars["String"]>;
    subconferenceid?: InputMaybe<Scalars["uuid"]>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_Conference = {
    __typename?: "conference_Conference";
    announcementsChatId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    chats: Array<Chat_Chat>;
    /** An aggregate relationship */
    chats_aggregate: Chat_Chat_Aggregate;
    /** An object relationship */
    completedRegistrationsStat?: Maybe<Analytics_CompletedRegistrations>;
    conferenceVisibilityLevel: Conference_VisibilityLevel_Enum;
    /** An array relationship */
    configurations: Array<Conference_Configuration>;
    /** An aggregate relationship */
    configurations_aggregate: Conference_Configuration_Aggregate;
    createdAt: Scalars["timestamptz"];
    createdBy: Scalars["String"];
    /** An object relationship */
    creator: User;
    defaultProgramVisibilityLevel: Scalars["String"];
    /** An object relationship */
    demoCode: Conference_DemoCode;
    demoCodeId: Scalars["uuid"];
    /** An array relationship */
    events: Array<Schedule_Event>;
    /** An aggregate relationship */
    events_aggregate: Schedule_Event_Aggregate;
    /** An array relationship */
    exhibitions: Array<Collection_Exhibition>;
    /** An aggregate relationship */
    exhibitions_aggregate: Collection_Exhibition_Aggregate;
    globalInviteCode?: Maybe<Scalars["uuid"]>;
    id: Scalars["uuid"];
    /** An array relationship */
    items: Array<Content_Item>;
    /** An aggregate relationship */
    items_aggregate: Content_Item_Aggregate;
    lowestRoleWithAccess?: Maybe<Registrant_RegistrantRole_Enum>;
    name: Scalars["String"];
    /** An array relationship */
    programPeople: Array<Collection_ProgramPerson>;
    /** An aggregate relationship */
    programPeople_aggregate: Collection_ProgramPerson_Aggregate;
    /** An object relationship */
    quota?: Maybe<Conference_Quota>;
    /** An array relationship */
    registrants: Array<Registrant_Registrant>;
    /** An aggregate relationship */
    registrants_aggregate: Registrant_Registrant_Aggregate;
    /** An object relationship */
    remainingQuota?: Maybe<Conference_RemainingQuota>;
    /** An array relationship */
    rooms: Array<Room_Room>;
    /** An aggregate relationship */
    rooms_aggregate: Room_Room_Aggregate;
    shortName: Scalars["String"];
    /** An array relationship */
    shufflePeriods: Array<Room_ShufflePeriod>;
    /** An aggregate relationship */
    shufflePeriods_aggregate: Room_ShufflePeriod_Aggregate;
    slug: Scalars["String"];
    /** An array relationship */
    sponsorshipTiers: Array<Sponsor_Tier>;
    /** An aggregate relationship */
    sponsorshipTiers_aggregate: Sponsor_Tier_Aggregate;
    /** An array relationship */
    subconferences: Array<Conference_Subconference>;
    /** An aggregate relationship */
    subconferences_aggregate: Conference_Subconference_Aggregate;
    /** An array relationship */
    tags: Array<Collection_Tag>;
    /** An aggregate relationship */
    tags_aggregate: Collection_Tag_Aggregate;
    updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    usage?: Maybe<Conference_Usage>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceChatsArgs = {
    distinct_on?: InputMaybe<Array<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceChats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceConfigurationsArgs = {
    distinct_on?: InputMaybe<Array<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceConfigurations_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceExhibitionsArgs = {
    distinct_on?: InputMaybe<Array<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceExhibitions_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceItemsArgs = {
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceItems_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceProgramPeopleArgs = {
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceProgramPeople_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceRegistrantsArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceRegistrants_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceRoomsArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceRooms_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceShufflePeriodsArgs = {
    distinct_on?: InputMaybe<Array<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceShufflePeriods_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceSponsorshipTiersArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceSponsorshipTiers_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceSubconferencesArgs = {
    distinct_on?: InputMaybe<Array<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceSubconferences_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceTagsArgs = {
    distinct_on?: InputMaybe<Array<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceTags_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

/** aggregated selection of "conference.Conference" */
export type Conference_Conference_Aggregate = {
    __typename?: "conference_Conference_aggregate";
    aggregate?: Maybe<Conference_Conference_Aggregate_Fields>;
    nodes: Array<Conference_Conference>;
};

/** aggregate fields of "conference.Conference" */
export type Conference_Conference_Aggregate_Fields = {
    __typename?: "conference_Conference_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Conference_Conference_Max_Fields>;
    min?: Maybe<Conference_Conference_Min_Fields>;
};

/** aggregate fields of "conference.Conference" */
export type Conference_Conference_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Conference_Conference_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "conference.Conference" */
export type Conference_Conference_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Conference_Conference_Max_Order_By>;
    min?: InputMaybe<Conference_Conference_Min_Order_By>;
};

/** input type for inserting array relation for remote table "conference.Conference" */
export type Conference_Conference_Arr_Rel_Insert_Input = {
    data: Array<Conference_Conference_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Conference_Conference_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conference.Conference". All fields are combined with a logical 'AND'. */
export type Conference_Conference_Bool_Exp = {
    _and?: InputMaybe<Array<Conference_Conference_Bool_Exp>>;
    _not?: InputMaybe<Conference_Conference_Bool_Exp>;
    _or?: InputMaybe<Array<Conference_Conference_Bool_Exp>>;
    announcementsChatId?: InputMaybe<Uuid_Comparison_Exp>;
    chats?: InputMaybe<Chat_Chat_Bool_Exp>;
    completedRegistrationsStat?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
    conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
    configurations?: InputMaybe<Conference_Configuration_Bool_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    createdBy?: InputMaybe<String_Comparison_Exp>;
    creator?: InputMaybe<User_Bool_Exp>;
    defaultProgramVisibilityLevel?: InputMaybe<String_Comparison_Exp>;
    demoCode?: InputMaybe<Conference_DemoCode_Bool_Exp>;
    demoCodeId?: InputMaybe<Uuid_Comparison_Exp>;
    events?: InputMaybe<Schedule_Event_Bool_Exp>;
    exhibitions?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    globalInviteCode?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    items?: InputMaybe<Content_Item_Bool_Exp>;
    lowestRoleWithAccess?: InputMaybe<Registrant_RegistrantRole_Enum_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    programPeople?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    quota?: InputMaybe<Conference_Quota_Bool_Exp>;
    registrants?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    remainingQuota?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
    rooms?: InputMaybe<Room_Room_Bool_Exp>;
    shortName?: InputMaybe<String_Comparison_Exp>;
    shufflePeriods?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    slug?: InputMaybe<String_Comparison_Exp>;
    sponsorshipTiers?: InputMaybe<Sponsor_Tier_Bool_Exp>;
    subconferences?: InputMaybe<Conference_Subconference_Bool_Exp>;
    tags?: InputMaybe<Collection_Tag_Bool_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    usage?: InputMaybe<Conference_Usage_Bool_Exp>;
};

/** unique or primary key constraints on table "conference.Conference" */
export enum Conference_Conference_Constraint {
    /** unique or primary key constraint */
    ConferenceDemoCodeIdKey = "Conference_demoCodeId_key",
    /** unique or primary key constraint */
    ConferenceGlobalInviteCodeKey = "Conference_globalInviteCode_key",
    /** unique or primary key constraint */
    ConferenceNameKey = "Conference_name_key",
    /** unique or primary key constraint */
    ConferencePkey = "Conference_pkey",
    /** unique or primary key constraint */
    ConferenceShortNameKey = "Conference_shortName_key",
    /** unique or primary key constraint */
    ConferenceSlugKey = "Conference_slug_key",
}

/** input type for inserting data into table "conference.Conference" */
export type Conference_Conference_Insert_Input = {
    announcementsChatId?: InputMaybe<Scalars["uuid"]>;
    chats?: InputMaybe<Chat_Chat_Arr_Rel_Insert_Input>;
    completedRegistrationsStat?: InputMaybe<Analytics_CompletedRegistrations_Obj_Rel_Insert_Input>;
    conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    configurations?: InputMaybe<Conference_Configuration_Arr_Rel_Insert_Input>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    createdBy?: InputMaybe<Scalars["String"]>;
    creator?: InputMaybe<User_Obj_Rel_Insert_Input>;
    defaultProgramVisibilityLevel?: InputMaybe<Scalars["String"]>;
    demoCode?: InputMaybe<Conference_DemoCode_Obj_Rel_Insert_Input>;
    demoCodeId?: InputMaybe<Scalars["uuid"]>;
    events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    exhibitions?: InputMaybe<Collection_Exhibition_Arr_Rel_Insert_Input>;
    globalInviteCode?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    items?: InputMaybe<Content_Item_Arr_Rel_Insert_Input>;
    lowestRoleWithAccess?: InputMaybe<Registrant_RegistrantRole_Enum>;
    name?: InputMaybe<Scalars["String"]>;
    programPeople?: InputMaybe<Collection_ProgramPerson_Arr_Rel_Insert_Input>;
    quota?: InputMaybe<Conference_Quota_Obj_Rel_Insert_Input>;
    registrants?: InputMaybe<Registrant_Registrant_Arr_Rel_Insert_Input>;
    remainingQuota?: InputMaybe<Conference_RemainingQuota_Obj_Rel_Insert_Input>;
    rooms?: InputMaybe<Room_Room_Arr_Rel_Insert_Input>;
    shortName?: InputMaybe<Scalars["String"]>;
    shufflePeriods?: InputMaybe<Room_ShufflePeriod_Arr_Rel_Insert_Input>;
    slug?: InputMaybe<Scalars["String"]>;
    sponsorshipTiers?: InputMaybe<Sponsor_Tier_Arr_Rel_Insert_Input>;
    subconferences?: InputMaybe<Conference_Subconference_Arr_Rel_Insert_Input>;
    tags?: InputMaybe<Collection_Tag_Arr_Rel_Insert_Input>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    usage?: InputMaybe<Conference_Usage_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Conference_Conference_Max_Fields = {
    __typename?: "conference_Conference_max_fields";
    announcementsChatId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    createdBy?: Maybe<Scalars["String"]>;
    defaultProgramVisibilityLevel?: Maybe<Scalars["String"]>;
    demoCodeId?: Maybe<Scalars["uuid"]>;
    globalInviteCode?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    shortName?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "conference.Conference" */
export type Conference_Conference_Max_Order_By = {
    announcementsChatId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    createdBy?: InputMaybe<Order_By>;
    defaultProgramVisibilityLevel?: InputMaybe<Order_By>;
    demoCodeId?: InputMaybe<Order_By>;
    globalInviteCode?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    shortName?: InputMaybe<Order_By>;
    slug?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conference_Conference_Min_Fields = {
    __typename?: "conference_Conference_min_fields";
    announcementsChatId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    createdBy?: Maybe<Scalars["String"]>;
    defaultProgramVisibilityLevel?: Maybe<Scalars["String"]>;
    demoCodeId?: Maybe<Scalars["uuid"]>;
    globalInviteCode?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    shortName?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "conference.Conference" */
export type Conference_Conference_Min_Order_By = {
    announcementsChatId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    createdBy?: InputMaybe<Order_By>;
    defaultProgramVisibilityLevel?: InputMaybe<Order_By>;
    demoCodeId?: InputMaybe<Order_By>;
    globalInviteCode?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    shortName?: InputMaybe<Order_By>;
    slug?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conference.Conference" */
export type Conference_Conference_Mutation_Response = {
    __typename?: "conference_Conference_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Conference_Conference>;
};

/** input type for inserting object relation for remote table "conference.Conference" */
export type Conference_Conference_Obj_Rel_Insert_Input = {
    data: Conference_Conference_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Conference_Conference_On_Conflict>;
};

/** on_conflict condition type for table "conference.Conference" */
export type Conference_Conference_On_Conflict = {
    constraint: Conference_Conference_Constraint;
    update_columns?: Array<Conference_Conference_Update_Column>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Conference". */
export type Conference_Conference_Order_By = {
    announcementsChatId?: InputMaybe<Order_By>;
    chats_aggregate?: InputMaybe<Chat_Chat_Aggregate_Order_By>;
    completedRegistrationsStat?: InputMaybe<Analytics_CompletedRegistrations_Order_By>;
    conferenceVisibilityLevel?: InputMaybe<Order_By>;
    configurations_aggregate?: InputMaybe<Conference_Configuration_Aggregate_Order_By>;
    createdAt?: InputMaybe<Order_By>;
    createdBy?: InputMaybe<Order_By>;
    creator?: InputMaybe<User_Order_By>;
    defaultProgramVisibilityLevel?: InputMaybe<Order_By>;
    demoCode?: InputMaybe<Conference_DemoCode_Order_By>;
    demoCodeId?: InputMaybe<Order_By>;
    events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    exhibitions_aggregate?: InputMaybe<Collection_Exhibition_Aggregate_Order_By>;
    globalInviteCode?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    items_aggregate?: InputMaybe<Content_Item_Aggregate_Order_By>;
    lowestRoleWithAccess?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    programPeople_aggregate?: InputMaybe<Collection_ProgramPerson_Aggregate_Order_By>;
    quota?: InputMaybe<Conference_Quota_Order_By>;
    registrants_aggregate?: InputMaybe<Registrant_Registrant_Aggregate_Order_By>;
    remainingQuota?: InputMaybe<Conference_RemainingQuota_Order_By>;
    rooms_aggregate?: InputMaybe<Room_Room_Aggregate_Order_By>;
    shortName?: InputMaybe<Order_By>;
    shufflePeriods_aggregate?: InputMaybe<Room_ShufflePeriod_Aggregate_Order_By>;
    slug?: InputMaybe<Order_By>;
    sponsorshipTiers_aggregate?: InputMaybe<Sponsor_Tier_Aggregate_Order_By>;
    subconferences_aggregate?: InputMaybe<Conference_Subconference_Aggregate_Order_By>;
    tags_aggregate?: InputMaybe<Collection_Tag_Aggregate_Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    usage?: InputMaybe<Conference_Usage_Order_By>;
};

/** primary key columns input for table: conference_Conference */
export type Conference_Conference_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "conference.Conference" */
export enum Conference_Conference_Select_Column {
    /** column name */
    AnnouncementsChatId = "announcementsChatId",
    /** column name */
    ConferenceVisibilityLevel = "conferenceVisibilityLevel",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    CreatedBy = "createdBy",
    /** column name */
    DefaultProgramVisibilityLevel = "defaultProgramVisibilityLevel",
    /** column name */
    DemoCodeId = "demoCodeId",
    /** column name */
    GlobalInviteCode = "globalInviteCode",
    /** column name */
    Id = "id",
    /** column name */
    LowestRoleWithAccess = "lowestRoleWithAccess",
    /** column name */
    Name = "name",
    /** column name */
    ShortName = "shortName",
    /** column name */
    Slug = "slug",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "conference.Conference" */
export type Conference_Conference_Set_Input = {
    announcementsChatId?: InputMaybe<Scalars["uuid"]>;
    conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    createdBy?: InputMaybe<Scalars["String"]>;
    defaultProgramVisibilityLevel?: InputMaybe<Scalars["String"]>;
    demoCodeId?: InputMaybe<Scalars["uuid"]>;
    globalInviteCode?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    lowestRoleWithAccess?: InputMaybe<Registrant_RegistrantRole_Enum>;
    name?: InputMaybe<Scalars["String"]>;
    shortName?: InputMaybe<Scalars["String"]>;
    slug?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "conference.Conference" */
export enum Conference_Conference_Update_Column {
    /** column name */
    AnnouncementsChatId = "announcementsChatId",
    /** column name */
    ConferenceVisibilityLevel = "conferenceVisibilityLevel",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    CreatedBy = "createdBy",
    /** column name */
    DefaultProgramVisibilityLevel = "defaultProgramVisibilityLevel",
    /** column name */
    DemoCodeId = "demoCodeId",
    /** column name */
    GlobalInviteCode = "globalInviteCode",
    /** column name */
    Id = "id",
    /** column name */
    LowestRoleWithAccess = "lowestRoleWithAccess",
    /** column name */
    Name = "name",
    /** column name */
    ShortName = "shortName",
    /** column name */
    Slug = "slug",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "conference.Configuration" */
export type Conference_Configuration = {
    __typename?: "conference_Configuration";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    key: Conference_ConfigurationKey_Enum;
    updatedAt: Scalars["timestamptz"];
    value: Scalars["jsonb"];
};

/** columns and relationships of "conference.Configuration" */
export type Conference_ConfigurationValueArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "conference.ConfigurationKey" */
export type Conference_ConfigurationKey = {
    __typename?: "conference_ConfigurationKey";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Aggregate = {
    __typename?: "conference_ConfigurationKey_aggregate";
    aggregate?: Maybe<Conference_ConfigurationKey_Aggregate_Fields>;
    nodes: Array<Conference_ConfigurationKey>;
};

/** aggregate fields of "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Aggregate_Fields = {
    __typename?: "conference_ConfigurationKey_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Conference_ConfigurationKey_Max_Fields>;
    min?: Maybe<Conference_ConfigurationKey_Min_Fields>;
};

/** aggregate fields of "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Conference_ConfigurationKey_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "conference.ConfigurationKey". All fields are combined with a logical 'AND'. */
export type Conference_ConfigurationKey_Bool_Exp = {
    _and?: InputMaybe<Array<Conference_ConfigurationKey_Bool_Exp>>;
    _not?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
    _or?: InputMaybe<Array<Conference_ConfigurationKey_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.ConfigurationKey" */
export enum Conference_ConfigurationKey_Constraint {
    /** unique or primary key constraint */
    ConfigurationKeyPkey = "ConfigurationKey_pkey",
}

export enum Conference_ConfigurationKey_Enum {
    /** Number. Milliseconds UTC. Time from which to stop sending initial invitations automatically. */
    AutomaticInvitationsEnd = "AUTOMATIC_INVITATIONS_END",
    /** Number. Milliseconds UTC. Time from which to stop sending repeat emails for unaccepted invitations automatically. */
    AutomaticInvitationsRepeatEnd = "AUTOMATIC_INVITATIONS_REPEAT_END",
    /** Number. Milliseconds. Time between sending repeat emails for unaccepted invitations. */
    AutomaticInvitationsRepeatFrequency = "AUTOMATIC_INVITATIONS_REPEAT_FREQUENCY",
    /** Number. Milliseconds UTC. Time from which to stop sending repeat emails for unaccepted invitations automatically. */
    AutomaticInvitationsRepeatStart = "AUTOMATIC_INVITATIONS_REPEAT_START",
    /** Number. Milliseconds UTC. Time from which to start sending initial invitations automatically. */
    AutomaticInvitationsStart = "AUTOMATIC_INVITATIONS_START",
    /** A list of videos to be used as the background for title/sponsor slides. */
    BackgroundVideos = "BACKGROUND_VIDEOS",
    /** A string representing the app version. Changing this causes the user's browsers to refresh. */
    ClowdrAppVersion = "CLOWDR_APP_VERSION",
    /** Boolean. Disable the "All times for this content" section of the Item pages. */
    DisableAllEventsForItem = "DISABLE_ALL_EVENTS_FOR_ITEM",
    /** Boolean. Disable the "Events around this content" section of the Item pages. */
    DisableNearbyEvents = "DISABLE_NEARBY_EVENTS",
    EmailTemplateSubmissionRequest = "EMAIL_TEMPLATE_SUBMISSION_REQUEST",
    EmailTemplateSubtitlesGenerated = "EMAIL_TEMPLATE_SUBTITLES_GENERATED",
    /** Boolean. Whether to enable the backstage stream preview or not. */
    EnableBackstageStreamPreview = "ENABLE_BACKSTAGE_STREAM_PREVIEW",
    /** Boolean. Whether to enable the External RTMP Broadcast feature. */
    EnableExternalRtmpBroadcast = "ENABLE_EXTERNAL_RTMP_BROADCAST",
    /** Boolean. Whether to enable external RTMP input feature. */
    EnableExternalRtmpInput = "ENABLE_EXTERNAL_RTMP_INPUT",
    /** Whether to enable email notifications for recordings (default: true). */
    EnableRecordingSubtitleEmailNotifications = "ENABLE_RECORDING_SUBTITLE_EMAIL_NOTIFICATIONS",
    /** Boolean. Hide the exhibition people from the event boxes in the schedule. */
    EventBoxHideExhibitionPeople = "EVENT_BOX_HIDE_EXHIBITION_PEOPLE",
    /** List of S3 URLs. */
    FillerVideos = "FILLER_VIDEOS",
    /** Boolean. Switches on the Sponsors menu button (even if no sponsors exist). */
    ForceMenuSponsorsLink = "FORCE_MENU_SPONSORS_LINK",
    /** A string representing the full frontend host URL for the conference. If not provided, this defaults to the system configuration. */
    FrontendHost = "FRONTEND_HOST",
    /** String. Name for hidden exhibitions. Default: "Exhibition" */
    HiddenExhibitionsLabel = "HIDDEN_EXHIBITIONS_LABEL",
    /** An image to be displayed if AWS MediaLive loses input. */
    InputLossSlate = "INPUT_LOSS_SLATE",
    /** Additional text for the My Backstages modal. */
    MyBackstagesNotice = "MY_BACKSTAGES_NOTICE",
    /** A string representing a valid URL for users to register for the conference. */
    RegistrationUrl = "REGISTRATION_URL",
    /** Select different versions of the schedule view. */
    ScheduleViewVersion = "SCHEDULE_VIEW_VERSION",
    /** String. Label for the "sponsors" in the sidebar for when a conference uses a different term. */
    SponsorsLabel = "SPONSORS_LABEL",
    /** A list of strings indicating which program people roles receive notifications (e.g. subtitles) about submissions. Default: ["PRESENTER","AUTHOR"]. */
    SubmissionNotificationRoles = "SUBMISSION_NOTIFICATION_ROLES",
    /** A string representing a valid email address for contacting the conference organisers. */
    SupportAddress = "SUPPORT_ADDRESS",
    /** A string representing a valid email address for contacting the service hosting company for technical support related to the conference. */
    TechSupportAddress = "TECH_SUPPORT_ADDRESS",
    /** JSON representation of a custom Component Map colors object. */
    ThemeComponentColors = "THEME_COMPONENT_COLORS",
    /** Text of the upload agreement or a URL to one. */
    UploadAgreement = "UPLOAD_AGREEMENT",
    /** The time in milliseconds since the UNIX epoch, as a string. */
    UploadCutoffTimestamp = "UPLOAD_CUTOFF_TIMESTAMP",
    /** String. Name for visible exhibitions. Default: "Exhibition" */
    VisibleExhibitionsLabel = "VISIBLE_EXHIBITIONS_LABEL",
    /** Integer. The maximum number of simultaneous screen shares allowed in Vonage video chats. */
    VonageMaxSimultaneousScreenShares = "VONAGE_MAX_SIMULTANEOUS_SCREEN_SHARES",
}

/** Boolean expression to compare columns of type "conference_ConfigurationKey_enum". All fields are combined with logical 'AND'. */
export type Conference_ConfigurationKey_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Conference_ConfigurationKey_Enum>;
    _in?: InputMaybe<Array<Conference_ConfigurationKey_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Conference_ConfigurationKey_Enum>;
    _nin?: InputMaybe<Array<Conference_ConfigurationKey_Enum>>;
};

/** input type for inserting data into table "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Conference_ConfigurationKey_Max_Fields = {
    __typename?: "conference_ConfigurationKey_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Conference_ConfigurationKey_Min_Fields = {
    __typename?: "conference_ConfigurationKey_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Mutation_Response = {
    __typename?: "conference_ConfigurationKey_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Conference_ConfigurationKey>;
};

/** on_conflict condition type for table "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_On_Conflict = {
    constraint: Conference_ConfigurationKey_Constraint;
    update_columns?: Array<Conference_ConfigurationKey_Update_Column>;
    where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.ConfigurationKey". */
export type Conference_ConfigurationKey_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_ConfigurationKey */
export type Conference_ConfigurationKey_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "conference.ConfigurationKey" */
export enum Conference_ConfigurationKey_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "conference.ConfigurationKey" */
export enum Conference_ConfigurationKey_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "conference.Configuration" */
export type Conference_Configuration_Aggregate = {
    __typename?: "conference_Configuration_aggregate";
    aggregate?: Maybe<Conference_Configuration_Aggregate_Fields>;
    nodes: Array<Conference_Configuration>;
};

/** aggregate fields of "conference.Configuration" */
export type Conference_Configuration_Aggregate_Fields = {
    __typename?: "conference_Configuration_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Conference_Configuration_Max_Fields>;
    min?: Maybe<Conference_Configuration_Min_Fields>;
};

/** aggregate fields of "conference.Configuration" */
export type Conference_Configuration_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Conference_Configuration_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "conference.Configuration" */
export type Conference_Configuration_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Conference_Configuration_Max_Order_By>;
    min?: InputMaybe<Conference_Configuration_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Conference_Configuration_Append_Input = {
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "conference.Configuration" */
export type Conference_Configuration_Arr_Rel_Insert_Input = {
    data: Array<Conference_Configuration_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Conference_Configuration_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conference.Configuration". All fields are combined with a logical 'AND'. */
export type Conference_Configuration_Bool_Exp = {
    _and?: InputMaybe<Array<Conference_Configuration_Bool_Exp>>;
    _not?: InputMaybe<Conference_Configuration_Bool_Exp>;
    _or?: InputMaybe<Array<Conference_Configuration_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    key?: InputMaybe<Conference_ConfigurationKey_Enum_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    value?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.Configuration" */
export enum Conference_Configuration_Constraint {
    /** unique or primary key constraint */
    ConfigurationPkey = "Configuration_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Conference_Configuration_Delete_At_Path_Input = {
    value?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Conference_Configuration_Delete_Elem_Input = {
    value?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Conference_Configuration_Delete_Key_Input = {
    value?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "conference.Configuration" */
export type Conference_Configuration_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    key?: InputMaybe<Conference_ConfigurationKey_Enum>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type Conference_Configuration_Max_Fields = {
    __typename?: "conference_Configuration_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "conference.Configuration" */
export type Conference_Configuration_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conference_Configuration_Min_Fields = {
    __typename?: "conference_Configuration_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "conference.Configuration" */
export type Conference_Configuration_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conference.Configuration" */
export type Conference_Configuration_Mutation_Response = {
    __typename?: "conference_Configuration_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Conference_Configuration>;
};

/** on_conflict condition type for table "conference.Configuration" */
export type Conference_Configuration_On_Conflict = {
    constraint: Conference_Configuration_Constraint;
    update_columns?: Array<Conference_Configuration_Update_Column>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Configuration". */
export type Conference_Configuration_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    key?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_Configuration */
export type Conference_Configuration_Pk_Columns_Input = {
    conferenceId: Scalars["uuid"];
    key: Conference_ConfigurationKey_Enum;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Conference_Configuration_Prepend_Input = {
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "conference.Configuration" */
export enum Conference_Configuration_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Key = "key",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    Value = "value",
}

/** input type for updating data in table "conference.Configuration" */
export type Conference_Configuration_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    key?: InputMaybe<Conference_ConfigurationKey_Enum>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** update columns of table "conference.Configuration" */
export enum Conference_Configuration_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Key = "key",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    Value = "value",
}

/** columns and relationships of "conference.DemoCode" */
export type Conference_DemoCode = {
    __typename?: "conference_DemoCode";
    /** An object relationship */
    conference?: Maybe<Conference_Conference>;
    createdAt: Scalars["timestamptz"];
    id: Scalars["uuid"];
    note?: Maybe<Scalars["String"]>;
    updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    usedBy?: Maybe<User>;
    usedById?: Maybe<Scalars["String"]>;
};

/** aggregated selection of "conference.DemoCode" */
export type Conference_DemoCode_Aggregate = {
    __typename?: "conference_DemoCode_aggregate";
    aggregate?: Maybe<Conference_DemoCode_Aggregate_Fields>;
    nodes: Array<Conference_DemoCode>;
};

/** aggregate fields of "conference.DemoCode" */
export type Conference_DemoCode_Aggregate_Fields = {
    __typename?: "conference_DemoCode_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Conference_DemoCode_Max_Fields>;
    min?: Maybe<Conference_DemoCode_Min_Fields>;
};

/** aggregate fields of "conference.DemoCode" */
export type Conference_DemoCode_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Conference_DemoCode_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "conference.DemoCode" */
export type Conference_DemoCode_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Conference_DemoCode_Max_Order_By>;
    min?: InputMaybe<Conference_DemoCode_Min_Order_By>;
};

/** input type for inserting array relation for remote table "conference.DemoCode" */
export type Conference_DemoCode_Arr_Rel_Insert_Input = {
    data: Array<Conference_DemoCode_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Conference_DemoCode_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conference.DemoCode". All fields are combined with a logical 'AND'. */
export type Conference_DemoCode_Bool_Exp = {
    _and?: InputMaybe<Array<Conference_DemoCode_Bool_Exp>>;
    _not?: InputMaybe<Conference_DemoCode_Bool_Exp>;
    _or?: InputMaybe<Array<Conference_DemoCode_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    note?: InputMaybe<String_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    usedBy?: InputMaybe<User_Bool_Exp>;
    usedById?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.DemoCode" */
export enum Conference_DemoCode_Constraint {
    /** unique or primary key constraint */
    DemoCodePkey = "DemoCode_pkey",
}

/** input type for inserting data into table "conference.DemoCode" */
export type Conference_DemoCode_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    note?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    usedBy?: InputMaybe<User_Obj_Rel_Insert_Input>;
    usedById?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Conference_DemoCode_Max_Fields = {
    __typename?: "conference_DemoCode_max_fields";
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    note?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    usedById?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "conference.DemoCode" */
export type Conference_DemoCode_Max_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    note?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    usedById?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conference_DemoCode_Min_Fields = {
    __typename?: "conference_DemoCode_min_fields";
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    note?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    usedById?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "conference.DemoCode" */
export type Conference_DemoCode_Min_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    note?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    usedById?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conference.DemoCode" */
export type Conference_DemoCode_Mutation_Response = {
    __typename?: "conference_DemoCode_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Conference_DemoCode>;
};

/** input type for inserting object relation for remote table "conference.DemoCode" */
export type Conference_DemoCode_Obj_Rel_Insert_Input = {
    data: Conference_DemoCode_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Conference_DemoCode_On_Conflict>;
};

/** on_conflict condition type for table "conference.DemoCode" */
export type Conference_DemoCode_On_Conflict = {
    constraint: Conference_DemoCode_Constraint;
    update_columns?: Array<Conference_DemoCode_Update_Column>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.DemoCode". */
export type Conference_DemoCode_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    note?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    usedBy?: InputMaybe<User_Order_By>;
    usedById?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_DemoCode */
export type Conference_DemoCode_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "conference.DemoCode" */
export enum Conference_DemoCode_Select_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Note = "note",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UsedById = "usedById",
}

/** input type for updating data in table "conference.DemoCode" */
export type Conference_DemoCode_Set_Input = {
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    note?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    usedById?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "conference.DemoCode" */
export enum Conference_DemoCode_Update_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Note = "note",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UsedById = "usedById",
}

/** columns and relationships of "conference.Quota" */
export type Conference_Quota = {
    __typename?: "conference_Quota";
    areStreamingEventsAllowed: Scalars["Boolean"];
    areVideoChatEventsAllowed: Scalars["Boolean"];
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    maxContentItems: Scalars["Int"];
    maxMediaElementsPerContentItem: Scalars["Int"];
    maxMediaElementsPerSponsor: Scalars["Int"];
    maxNonMediaElementsPerContentItem: Scalars["Int"];
    maxNonMediaElementsPerSponsor: Scalars["Int"];
    maxNonStreamingProgramRooms: Scalars["Int"];
    maxPublicSocialRooms: Scalars["Int"];
    maxRegistrants: Scalars["Int"];
    maxStreamingEventIndividualMinutes: Scalars["Int"];
    maxStreamingEventTotalMinutes: Scalars["Int"];
    maxStreamingProgramRooms: Scalars["Int"];
    maxSubconferences: Scalars["Int"];
    maxSupportMeetingMinutes: Scalars["Int"];
    maxVideoChatEventIndividualMinutes: Scalars["Int"];
    maxVideoChatEventTotalMinutes: Scalars["Int"];
    maxVideoChatNonEventTotalMinutesConsumed: Scalars["Int"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "conference.Quota" */
export type Conference_Quota_Aggregate = {
    __typename?: "conference_Quota_aggregate";
    aggregate?: Maybe<Conference_Quota_Aggregate_Fields>;
    nodes: Array<Conference_Quota>;
};

/** aggregate fields of "conference.Quota" */
export type Conference_Quota_Aggregate_Fields = {
    __typename?: "conference_Quota_aggregate_fields";
    avg?: Maybe<Conference_Quota_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Conference_Quota_Max_Fields>;
    min?: Maybe<Conference_Quota_Min_Fields>;
    stddev?: Maybe<Conference_Quota_Stddev_Fields>;
    stddev_pop?: Maybe<Conference_Quota_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Conference_Quota_Stddev_Samp_Fields>;
    sum?: Maybe<Conference_Quota_Sum_Fields>;
    var_pop?: Maybe<Conference_Quota_Var_Pop_Fields>;
    var_samp?: Maybe<Conference_Quota_Var_Samp_Fields>;
    variance?: Maybe<Conference_Quota_Variance_Fields>;
};

/** aggregate fields of "conference.Quota" */
export type Conference_Quota_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Conference_Quota_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Conference_Quota_Avg_Fields = {
    __typename?: "conference_Quota_avg_fields";
    maxContentItems?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    maxRegistrants?: Maybe<Scalars["Float"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxSubconferences?: Maybe<Scalars["Float"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "conference.Quota". All fields are combined with a logical 'AND'. */
export type Conference_Quota_Bool_Exp = {
    _and?: InputMaybe<Array<Conference_Quota_Bool_Exp>>;
    _not?: InputMaybe<Conference_Quota_Bool_Exp>;
    _or?: InputMaybe<Array<Conference_Quota_Bool_Exp>>;
    areStreamingEventsAllowed?: InputMaybe<Boolean_Comparison_Exp>;
    areVideoChatEventsAllowed?: InputMaybe<Boolean_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    maxContentItems?: InputMaybe<Int_Comparison_Exp>;
    maxMediaElementsPerContentItem?: InputMaybe<Int_Comparison_Exp>;
    maxMediaElementsPerSponsor?: InputMaybe<Int_Comparison_Exp>;
    maxNonMediaElementsPerContentItem?: InputMaybe<Int_Comparison_Exp>;
    maxNonMediaElementsPerSponsor?: InputMaybe<Int_Comparison_Exp>;
    maxNonStreamingProgramRooms?: InputMaybe<Int_Comparison_Exp>;
    maxPublicSocialRooms?: InputMaybe<Int_Comparison_Exp>;
    maxRegistrants?: InputMaybe<Int_Comparison_Exp>;
    maxStreamingEventIndividualMinutes?: InputMaybe<Int_Comparison_Exp>;
    maxStreamingEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    maxStreamingProgramRooms?: InputMaybe<Int_Comparison_Exp>;
    maxSubconferences?: InputMaybe<Int_Comparison_Exp>;
    maxSupportMeetingMinutes?: InputMaybe<Int_Comparison_Exp>;
    maxVideoChatEventIndividualMinutes?: InputMaybe<Int_Comparison_Exp>;
    maxVideoChatEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Int_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.Quota" */
export enum Conference_Quota_Constraint {
    /** unique or primary key constraint */
    QuotaConferenceIdKey = "Quota_conferenceId_key",
    /** unique or primary key constraint */
    QuotaPkey = "Quota_pkey",
}

/** input type for incrementing numeric columns in table "conference.Quota" */
export type Conference_Quota_Inc_Input = {
    maxContentItems?: InputMaybe<Scalars["Int"]>;
    maxMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    maxMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    maxNonMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    maxNonMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    maxNonStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    maxPublicSocialRooms?: InputMaybe<Scalars["Int"]>;
    maxRegistrants?: InputMaybe<Scalars["Int"]>;
    maxStreamingEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    maxStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    maxStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    maxSubconferences?: InputMaybe<Scalars["Int"]>;
    maxSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    maxVideoChatEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    maxVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "conference.Quota" */
export type Conference_Quota_Insert_Input = {
    areStreamingEventsAllowed?: InputMaybe<Scalars["Boolean"]>;
    areVideoChatEventsAllowed?: InputMaybe<Scalars["Boolean"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    maxContentItems?: InputMaybe<Scalars["Int"]>;
    maxMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    maxMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    maxNonMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    maxNonMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    maxNonStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    maxPublicSocialRooms?: InputMaybe<Scalars["Int"]>;
    maxRegistrants?: InputMaybe<Scalars["Int"]>;
    maxStreamingEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    maxStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    maxStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    maxSubconferences?: InputMaybe<Scalars["Int"]>;
    maxSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    maxVideoChatEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    maxVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Scalars["Int"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Conference_Quota_Max_Fields = {
    __typename?: "conference_Quota_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    maxContentItems?: Maybe<Scalars["Int"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Int"]>;
    maxRegistrants?: Maybe<Scalars["Int"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    maxSubconferences?: Maybe<Scalars["Int"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Int"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Conference_Quota_Min_Fields = {
    __typename?: "conference_Quota_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    maxContentItems?: Maybe<Scalars["Int"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Int"]>;
    maxRegistrants?: Maybe<Scalars["Int"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    maxSubconferences?: Maybe<Scalars["Int"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Int"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "conference.Quota" */
export type Conference_Quota_Mutation_Response = {
    __typename?: "conference_Quota_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Conference_Quota>;
};

/** input type for inserting object relation for remote table "conference.Quota" */
export type Conference_Quota_Obj_Rel_Insert_Input = {
    data: Conference_Quota_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Conference_Quota_On_Conflict>;
};

/** on_conflict condition type for table "conference.Quota" */
export type Conference_Quota_On_Conflict = {
    constraint: Conference_Quota_Constraint;
    update_columns?: Array<Conference_Quota_Update_Column>;
    where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Quota". */
export type Conference_Quota_Order_By = {
    areStreamingEventsAllowed?: InputMaybe<Order_By>;
    areVideoChatEventsAllowed?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    maxContentItems?: InputMaybe<Order_By>;
    maxMediaElementsPerContentItem?: InputMaybe<Order_By>;
    maxMediaElementsPerSponsor?: InputMaybe<Order_By>;
    maxNonMediaElementsPerContentItem?: InputMaybe<Order_By>;
    maxNonMediaElementsPerSponsor?: InputMaybe<Order_By>;
    maxNonStreamingProgramRooms?: InputMaybe<Order_By>;
    maxPublicSocialRooms?: InputMaybe<Order_By>;
    maxRegistrants?: InputMaybe<Order_By>;
    maxStreamingEventIndividualMinutes?: InputMaybe<Order_By>;
    maxStreamingEventTotalMinutes?: InputMaybe<Order_By>;
    maxStreamingProgramRooms?: InputMaybe<Order_By>;
    maxSubconferences?: InputMaybe<Order_By>;
    maxSupportMeetingMinutes?: InputMaybe<Order_By>;
    maxVideoChatEventIndividualMinutes?: InputMaybe<Order_By>;
    maxVideoChatEventTotalMinutes?: InputMaybe<Order_By>;
    maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_Quota */
export type Conference_Quota_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "conference.Quota" */
export enum Conference_Quota_Select_Column {
    /** column name */
    AreStreamingEventsAllowed = "areStreamingEventsAllowed",
    /** column name */
    AreVideoChatEventsAllowed = "areVideoChatEventsAllowed",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    MaxContentItems = "maxContentItems",
    /** column name */
    MaxMediaElementsPerContentItem = "maxMediaElementsPerContentItem",
    /** column name */
    MaxMediaElementsPerSponsor = "maxMediaElementsPerSponsor",
    /** column name */
    MaxNonMediaElementsPerContentItem = "maxNonMediaElementsPerContentItem",
    /** column name */
    MaxNonMediaElementsPerSponsor = "maxNonMediaElementsPerSponsor",
    /** column name */
    MaxNonStreamingProgramRooms = "maxNonStreamingProgramRooms",
    /** column name */
    MaxPublicSocialRooms = "maxPublicSocialRooms",
    /** column name */
    MaxRegistrants = "maxRegistrants",
    /** column name */
    MaxStreamingEventIndividualMinutes = "maxStreamingEventIndividualMinutes",
    /** column name */
    MaxStreamingEventTotalMinutes = "maxStreamingEventTotalMinutes",
    /** column name */
    MaxStreamingProgramRooms = "maxStreamingProgramRooms",
    /** column name */
    MaxSubconferences = "maxSubconferences",
    /** column name */
    MaxSupportMeetingMinutes = "maxSupportMeetingMinutes",
    /** column name */
    MaxVideoChatEventIndividualMinutes = "maxVideoChatEventIndividualMinutes",
    /** column name */
    MaxVideoChatEventTotalMinutes = "maxVideoChatEventTotalMinutes",
    /** column name */
    MaxVideoChatNonEventTotalMinutesConsumed = "maxVideoChatNonEventTotalMinutesConsumed",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "conference.Quota" */
export type Conference_Quota_Set_Input = {
    areStreamingEventsAllowed?: InputMaybe<Scalars["Boolean"]>;
    areVideoChatEventsAllowed?: InputMaybe<Scalars["Boolean"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    maxContentItems?: InputMaybe<Scalars["Int"]>;
    maxMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    maxMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    maxNonMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    maxNonMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    maxNonStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    maxPublicSocialRooms?: InputMaybe<Scalars["Int"]>;
    maxRegistrants?: InputMaybe<Scalars["Int"]>;
    maxStreamingEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    maxStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    maxStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    maxSubconferences?: InputMaybe<Scalars["Int"]>;
    maxSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    maxVideoChatEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    maxVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Scalars["Int"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Conference_Quota_Stddev_Fields = {
    __typename?: "conference_Quota_stddev_fields";
    maxContentItems?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    maxRegistrants?: Maybe<Scalars["Float"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxSubconferences?: Maybe<Scalars["Float"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Conference_Quota_Stddev_Pop_Fields = {
    __typename?: "conference_Quota_stddev_pop_fields";
    maxContentItems?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    maxRegistrants?: Maybe<Scalars["Float"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxSubconferences?: Maybe<Scalars["Float"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Conference_Quota_Stddev_Samp_Fields = {
    __typename?: "conference_Quota_stddev_samp_fields";
    maxContentItems?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    maxRegistrants?: Maybe<Scalars["Float"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxSubconferences?: Maybe<Scalars["Float"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Conference_Quota_Sum_Fields = {
    __typename?: "conference_Quota_sum_fields";
    maxContentItems?: Maybe<Scalars["Int"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Int"]>;
    maxRegistrants?: Maybe<Scalars["Int"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    maxSubconferences?: Maybe<Scalars["Int"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Int"]>;
};

/** update columns of table "conference.Quota" */
export enum Conference_Quota_Update_Column {
    /** column name */
    AreStreamingEventsAllowed = "areStreamingEventsAllowed",
    /** column name */
    AreVideoChatEventsAllowed = "areVideoChatEventsAllowed",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    MaxContentItems = "maxContentItems",
    /** column name */
    MaxMediaElementsPerContentItem = "maxMediaElementsPerContentItem",
    /** column name */
    MaxMediaElementsPerSponsor = "maxMediaElementsPerSponsor",
    /** column name */
    MaxNonMediaElementsPerContentItem = "maxNonMediaElementsPerContentItem",
    /** column name */
    MaxNonMediaElementsPerSponsor = "maxNonMediaElementsPerSponsor",
    /** column name */
    MaxNonStreamingProgramRooms = "maxNonStreamingProgramRooms",
    /** column name */
    MaxPublicSocialRooms = "maxPublicSocialRooms",
    /** column name */
    MaxRegistrants = "maxRegistrants",
    /** column name */
    MaxStreamingEventIndividualMinutes = "maxStreamingEventIndividualMinutes",
    /** column name */
    MaxStreamingEventTotalMinutes = "maxStreamingEventTotalMinutes",
    /** column name */
    MaxStreamingProgramRooms = "maxStreamingProgramRooms",
    /** column name */
    MaxSubconferences = "maxSubconferences",
    /** column name */
    MaxSupportMeetingMinutes = "maxSupportMeetingMinutes",
    /** column name */
    MaxVideoChatEventIndividualMinutes = "maxVideoChatEventIndividualMinutes",
    /** column name */
    MaxVideoChatEventTotalMinutes = "maxVideoChatEventTotalMinutes",
    /** column name */
    MaxVideoChatNonEventTotalMinutesConsumed = "maxVideoChatNonEventTotalMinutesConsumed",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Conference_Quota_Var_Pop_Fields = {
    __typename?: "conference_Quota_var_pop_fields";
    maxContentItems?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    maxRegistrants?: Maybe<Scalars["Float"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxSubconferences?: Maybe<Scalars["Float"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Conference_Quota_Var_Samp_Fields = {
    __typename?: "conference_Quota_var_samp_fields";
    maxContentItems?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    maxRegistrants?: Maybe<Scalars["Float"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxSubconferences?: Maybe<Scalars["Float"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Conference_Quota_Variance_Fields = {
    __typename?: "conference_Quota_variance_fields";
    maxContentItems?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    maxRegistrants?: Maybe<Scalars["Float"]>;
    maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    maxSubconferences?: Maybe<Scalars["Float"]>;
    maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "conference.RemainingQuota" */
export type Conference_RemainingQuota = {
    __typename?: "conference_RemainingQuota";
    conferenceId?: Maybe<Scalars["uuid"]>;
    remainingContentItems?: Maybe<Scalars["bigint"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["bigint"]>;
    remainingRegistrants?: Maybe<Scalars["bigint"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    remainingSubconferences?: Maybe<Scalars["bigint"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    slug?: Maybe<Scalars["String"]>;
};

/** aggregated selection of "conference.RemainingQuota" */
export type Conference_RemainingQuota_Aggregate = {
    __typename?: "conference_RemainingQuota_aggregate";
    aggregate?: Maybe<Conference_RemainingQuota_Aggregate_Fields>;
    nodes: Array<Conference_RemainingQuota>;
};

/** aggregate fields of "conference.RemainingQuota" */
export type Conference_RemainingQuota_Aggregate_Fields = {
    __typename?: "conference_RemainingQuota_aggregate_fields";
    avg?: Maybe<Conference_RemainingQuota_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Conference_RemainingQuota_Max_Fields>;
    min?: Maybe<Conference_RemainingQuota_Min_Fields>;
    stddev?: Maybe<Conference_RemainingQuota_Stddev_Fields>;
    stddev_pop?: Maybe<Conference_RemainingQuota_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Conference_RemainingQuota_Stddev_Samp_Fields>;
    sum?: Maybe<Conference_RemainingQuota_Sum_Fields>;
    var_pop?: Maybe<Conference_RemainingQuota_Var_Pop_Fields>;
    var_samp?: Maybe<Conference_RemainingQuota_Var_Samp_Fields>;
    variance?: Maybe<Conference_RemainingQuota_Variance_Fields>;
};

/** aggregate fields of "conference.RemainingQuota" */
export type Conference_RemainingQuota_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Conference_RemainingQuota_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Conference_RemainingQuota_Avg_Fields = {
    __typename?: "conference_RemainingQuota_avg_fields";
    remainingContentItems?: Maybe<Scalars["Float"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    remainingRegistrants?: Maybe<Scalars["Float"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingSubconferences?: Maybe<Scalars["Float"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "conference.RemainingQuota". All fields are combined with a logical 'AND'. */
export type Conference_RemainingQuota_Bool_Exp = {
    _and?: InputMaybe<Array<Conference_RemainingQuota_Bool_Exp>>;
    _not?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
    _or?: InputMaybe<Array<Conference_RemainingQuota_Bool_Exp>>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    remainingContentItems?: InputMaybe<Bigint_Comparison_Exp>;
    remainingNonStreamingProgramRooms?: InputMaybe<Bigint_Comparison_Exp>;
    remainingPublicSocialRooms?: InputMaybe<Bigint_Comparison_Exp>;
    remainingRegistrants?: InputMaybe<Bigint_Comparison_Exp>;
    remainingStreamingEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    remainingStreamingProgramRooms?: InputMaybe<Bigint_Comparison_Exp>;
    remainingSubconferences?: InputMaybe<Bigint_Comparison_Exp>;
    remainingSupportMeetingMinutes?: InputMaybe<Int_Comparison_Exp>;
    remainingVideoChatEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    remainingVideoChatNonEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    slug?: InputMaybe<String_Comparison_Exp>;
};

/** input type for inserting data into table "conference.RemainingQuota" */
export type Conference_RemainingQuota_Insert_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    remainingContentItems?: InputMaybe<Scalars["bigint"]>;
    remainingNonStreamingProgramRooms?: InputMaybe<Scalars["bigint"]>;
    remainingPublicSocialRooms?: InputMaybe<Scalars["bigint"]>;
    remainingRegistrants?: InputMaybe<Scalars["bigint"]>;
    remainingStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    remainingStreamingProgramRooms?: InputMaybe<Scalars["bigint"]>;
    remainingSubconferences?: InputMaybe<Scalars["bigint"]>;
    remainingSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    remainingVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    remainingVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    slug?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Conference_RemainingQuota_Max_Fields = {
    __typename?: "conference_RemainingQuota_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    remainingContentItems?: Maybe<Scalars["bigint"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["bigint"]>;
    remainingRegistrants?: Maybe<Scalars["bigint"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    remainingSubconferences?: Maybe<Scalars["bigint"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    slug?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Conference_RemainingQuota_Min_Fields = {
    __typename?: "conference_RemainingQuota_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    remainingContentItems?: Maybe<Scalars["bigint"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["bigint"]>;
    remainingRegistrants?: Maybe<Scalars["bigint"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    remainingSubconferences?: Maybe<Scalars["bigint"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    slug?: Maybe<Scalars["String"]>;
};

/** input type for inserting object relation for remote table "conference.RemainingQuota" */
export type Conference_RemainingQuota_Obj_Rel_Insert_Input = {
    data: Conference_RemainingQuota_Insert_Input;
};

/** Ordering options when selecting data from "conference.RemainingQuota". */
export type Conference_RemainingQuota_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    remainingContentItems?: InputMaybe<Order_By>;
    remainingNonStreamingProgramRooms?: InputMaybe<Order_By>;
    remainingPublicSocialRooms?: InputMaybe<Order_By>;
    remainingRegistrants?: InputMaybe<Order_By>;
    remainingStreamingEventTotalMinutes?: InputMaybe<Order_By>;
    remainingStreamingProgramRooms?: InputMaybe<Order_By>;
    remainingSubconferences?: InputMaybe<Order_By>;
    remainingSupportMeetingMinutes?: InputMaybe<Order_By>;
    remainingVideoChatEventTotalMinutes?: InputMaybe<Order_By>;
    remainingVideoChatNonEventTotalMinutes?: InputMaybe<Order_By>;
    slug?: InputMaybe<Order_By>;
};

/** select columns of table "conference.RemainingQuota" */
export enum Conference_RemainingQuota_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    RemainingContentItems = "remainingContentItems",
    /** column name */
    RemainingNonStreamingProgramRooms = "remainingNonStreamingProgramRooms",
    /** column name */
    RemainingPublicSocialRooms = "remainingPublicSocialRooms",
    /** column name */
    RemainingRegistrants = "remainingRegistrants",
    /** column name */
    RemainingStreamingEventTotalMinutes = "remainingStreamingEventTotalMinutes",
    /** column name */
    RemainingStreamingProgramRooms = "remainingStreamingProgramRooms",
    /** column name */
    RemainingSubconferences = "remainingSubconferences",
    /** column name */
    RemainingSupportMeetingMinutes = "remainingSupportMeetingMinutes",
    /** column name */
    RemainingVideoChatEventTotalMinutes = "remainingVideoChatEventTotalMinutes",
    /** column name */
    RemainingVideoChatNonEventTotalMinutes = "remainingVideoChatNonEventTotalMinutes",
    /** column name */
    Slug = "slug",
}

/** aggregate stddev on columns */
export type Conference_RemainingQuota_Stddev_Fields = {
    __typename?: "conference_RemainingQuota_stddev_fields";
    remainingContentItems?: Maybe<Scalars["Float"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    remainingRegistrants?: Maybe<Scalars["Float"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingSubconferences?: Maybe<Scalars["Float"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Conference_RemainingQuota_Stddev_Pop_Fields = {
    __typename?: "conference_RemainingQuota_stddev_pop_fields";
    remainingContentItems?: Maybe<Scalars["Float"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    remainingRegistrants?: Maybe<Scalars["Float"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingSubconferences?: Maybe<Scalars["Float"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Conference_RemainingQuota_Stddev_Samp_Fields = {
    __typename?: "conference_RemainingQuota_stddev_samp_fields";
    remainingContentItems?: Maybe<Scalars["Float"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    remainingRegistrants?: Maybe<Scalars["Float"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingSubconferences?: Maybe<Scalars["Float"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Conference_RemainingQuota_Sum_Fields = {
    __typename?: "conference_RemainingQuota_sum_fields";
    remainingContentItems?: Maybe<Scalars["bigint"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["bigint"]>;
    remainingRegistrants?: Maybe<Scalars["bigint"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    remainingSubconferences?: Maybe<Scalars["bigint"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
};

/** aggregate var_pop on columns */
export type Conference_RemainingQuota_Var_Pop_Fields = {
    __typename?: "conference_RemainingQuota_var_pop_fields";
    remainingContentItems?: Maybe<Scalars["Float"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    remainingRegistrants?: Maybe<Scalars["Float"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingSubconferences?: Maybe<Scalars["Float"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Conference_RemainingQuota_Var_Samp_Fields = {
    __typename?: "conference_RemainingQuota_var_samp_fields";
    remainingContentItems?: Maybe<Scalars["Float"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    remainingRegistrants?: Maybe<Scalars["Float"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingSubconferences?: Maybe<Scalars["Float"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Conference_RemainingQuota_Variance_Fields = {
    __typename?: "conference_RemainingQuota_variance_fields";
    remainingContentItems?: Maybe<Scalars["Float"]>;
    remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    remainingRegistrants?: Maybe<Scalars["Float"]>;
    remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    remainingSubconferences?: Maybe<Scalars["Float"]>;
    remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "conference.Subconference" */
export type Conference_Subconference = {
    __typename?: "conference_Subconference";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    conferenceVisibilityLevel: Conference_VisibilityLevel_Enum;
    created_at: Scalars["timestamptz"];
    defaultProgramVisibilityLevel: Conference_VisibilityLevel_Enum;
    id: Scalars["uuid"];
    /** An array relationship */
    memberships: Array<Registrant_SubconferenceMembership>;
    /** An aggregate relationship */
    memberships_aggregate: Registrant_SubconferenceMembership_Aggregate;
    name: Scalars["String"];
    shortName: Scalars["String"];
    slug: Scalars["String"];
    /** An array relationship */
    sponsorshipTiers: Array<Sponsor_Tier>;
    /** An aggregate relationship */
    sponsorshipTiers_aggregate: Sponsor_Tier_Aggregate;
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "conference.Subconference" */
export type Conference_SubconferenceMembershipsArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** columns and relationships of "conference.Subconference" */
export type Conference_SubconferenceMemberships_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** columns and relationships of "conference.Subconference" */
export type Conference_SubconferenceSponsorshipTiersArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** columns and relationships of "conference.Subconference" */
export type Conference_SubconferenceSponsorshipTiers_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** aggregated selection of "conference.Subconference" */
export type Conference_Subconference_Aggregate = {
    __typename?: "conference_Subconference_aggregate";
    aggregate?: Maybe<Conference_Subconference_Aggregate_Fields>;
    nodes: Array<Conference_Subconference>;
};

/** aggregate fields of "conference.Subconference" */
export type Conference_Subconference_Aggregate_Fields = {
    __typename?: "conference_Subconference_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Conference_Subconference_Max_Fields>;
    min?: Maybe<Conference_Subconference_Min_Fields>;
};

/** aggregate fields of "conference.Subconference" */
export type Conference_Subconference_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Conference_Subconference_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "conference.Subconference" */
export type Conference_Subconference_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Conference_Subconference_Max_Order_By>;
    min?: InputMaybe<Conference_Subconference_Min_Order_By>;
};

/** input type for inserting array relation for remote table "conference.Subconference" */
export type Conference_Subconference_Arr_Rel_Insert_Input = {
    data: Array<Conference_Subconference_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Conference_Subconference_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conference.Subconference". All fields are combined with a logical 'AND'. */
export type Conference_Subconference_Bool_Exp = {
    _and?: InputMaybe<Array<Conference_Subconference_Bool_Exp>>;
    _not?: InputMaybe<Conference_Subconference_Bool_Exp>;
    _or?: InputMaybe<Array<Conference_Subconference_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    defaultProgramVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    memberships?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    shortName?: InputMaybe<String_Comparison_Exp>;
    slug?: InputMaybe<String_Comparison_Exp>;
    sponsorshipTiers?: InputMaybe<Sponsor_Tier_Bool_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.Subconference" */
export enum Conference_Subconference_Constraint {
    /** unique or primary key constraint */
    SubconferenceConferenceIdNameKey = "Subconference_conferenceId_name_key",
    /** unique or primary key constraint */
    SubconferenceConferenceIdShortNameKey = "Subconference_conferenceId_shortName_key",
    /** unique or primary key constraint */
    SubconferenceConferenceIdSlugKey = "Subconference_conferenceId_slug_key",
    /** unique or primary key constraint */
    SubconferencePkey = "Subconference_pkey",
}

/** input type for inserting data into table "conference.Subconference" */
export type Conference_Subconference_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    defaultProgramVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    id?: InputMaybe<Scalars["uuid"]>;
    memberships?: InputMaybe<Registrant_SubconferenceMembership_Arr_Rel_Insert_Input>;
    name?: InputMaybe<Scalars["String"]>;
    shortName?: InputMaybe<Scalars["String"]>;
    slug?: InputMaybe<Scalars["String"]>;
    sponsorshipTiers?: InputMaybe<Sponsor_Tier_Arr_Rel_Insert_Input>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Conference_Subconference_Max_Fields = {
    __typename?: "conference_Subconference_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    shortName?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "conference.Subconference" */
export type Conference_Subconference_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    shortName?: InputMaybe<Order_By>;
    slug?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conference_Subconference_Min_Fields = {
    __typename?: "conference_Subconference_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    shortName?: Maybe<Scalars["String"]>;
    slug?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "conference.Subconference" */
export type Conference_Subconference_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    shortName?: InputMaybe<Order_By>;
    slug?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conference.Subconference" */
export type Conference_Subconference_Mutation_Response = {
    __typename?: "conference_Subconference_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Conference_Subconference>;
};

/** input type for inserting object relation for remote table "conference.Subconference" */
export type Conference_Subconference_Obj_Rel_Insert_Input = {
    data: Conference_Subconference_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Conference_Subconference_On_Conflict>;
};

/** on_conflict condition type for table "conference.Subconference" */
export type Conference_Subconference_On_Conflict = {
    constraint: Conference_Subconference_Constraint;
    update_columns?: Array<Conference_Subconference_Update_Column>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Subconference". */
export type Conference_Subconference_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    conferenceVisibilityLevel?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    defaultProgramVisibilityLevel?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    memberships_aggregate?: InputMaybe<Registrant_SubconferenceMembership_Aggregate_Order_By>;
    name?: InputMaybe<Order_By>;
    shortName?: InputMaybe<Order_By>;
    slug?: InputMaybe<Order_By>;
    sponsorshipTiers_aggregate?: InputMaybe<Sponsor_Tier_Aggregate_Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_Subconference */
export type Conference_Subconference_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "conference.Subconference" */
export enum Conference_Subconference_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferenceVisibilityLevel = "conferenceVisibilityLevel",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DefaultProgramVisibilityLevel = "defaultProgramVisibilityLevel",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    ShortName = "shortName",
    /** column name */
    Slug = "slug",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "conference.Subconference" */
export type Conference_Subconference_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    defaultProgramVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    id?: InputMaybe<Scalars["uuid"]>;
    name?: InputMaybe<Scalars["String"]>;
    shortName?: InputMaybe<Scalars["String"]>;
    slug?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "conference.Subconference" */
export enum Conference_Subconference_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferenceVisibilityLevel = "conferenceVisibilityLevel",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DefaultProgramVisibilityLevel = "defaultProgramVisibilityLevel",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    ShortName = "shortName",
    /** column name */
    Slug = "slug",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "conference.Usage" */
export type Conference_Usage = {
    __typename?: "conference_Usage";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    consumedStreamingEventTotalMinutes: Scalars["Int"];
    consumedSupportMeetingMinutes: Scalars["Int"];
    consumedVideoChatEventTotalMinutes: Scalars["Int"];
    consumedVideoChatNonEventTotalMinutes: Scalars["Int"];
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    lastUpdatedConsumedStreamingEventTotalMinutes: Scalars["timestamptz"];
    lastUpdatedConsumedSupportMeetingMinutes: Scalars["timestamptz"];
    lastUpdatedConsumedVideoChatEventTotalMinutes: Scalars["timestamptz"];
    lastUpdatedConsumedVideoChatNonEventTotalMinutes: Scalars["timestamptz"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "conference.Usage" */
export type Conference_Usage_Aggregate = {
    __typename?: "conference_Usage_aggregate";
    aggregate?: Maybe<Conference_Usage_Aggregate_Fields>;
    nodes: Array<Conference_Usage>;
};

/** aggregate fields of "conference.Usage" */
export type Conference_Usage_Aggregate_Fields = {
    __typename?: "conference_Usage_aggregate_fields";
    avg?: Maybe<Conference_Usage_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Conference_Usage_Max_Fields>;
    min?: Maybe<Conference_Usage_Min_Fields>;
    stddev?: Maybe<Conference_Usage_Stddev_Fields>;
    stddev_pop?: Maybe<Conference_Usage_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Conference_Usage_Stddev_Samp_Fields>;
    sum?: Maybe<Conference_Usage_Sum_Fields>;
    var_pop?: Maybe<Conference_Usage_Var_Pop_Fields>;
    var_samp?: Maybe<Conference_Usage_Var_Samp_Fields>;
    variance?: Maybe<Conference_Usage_Variance_Fields>;
};

/** aggregate fields of "conference.Usage" */
export type Conference_Usage_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Conference_Usage_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Conference_Usage_Avg_Fields = {
    __typename?: "conference_Usage_avg_fields";
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "conference.Usage". All fields are combined with a logical 'AND'. */
export type Conference_Usage_Bool_Exp = {
    _and?: InputMaybe<Array<Conference_Usage_Bool_Exp>>;
    _not?: InputMaybe<Conference_Usage_Bool_Exp>;
    _or?: InputMaybe<Array<Conference_Usage_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    consumedStreamingEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    consumedSupportMeetingMinutes?: InputMaybe<Int_Comparison_Exp>;
    consumedVideoChatEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    consumedVideoChatNonEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    lastUpdatedConsumedStreamingEventTotalMinutes?: InputMaybe<Timestamptz_Comparison_Exp>;
    lastUpdatedConsumedSupportMeetingMinutes?: InputMaybe<Timestamptz_Comparison_Exp>;
    lastUpdatedConsumedVideoChatEventTotalMinutes?: InputMaybe<Timestamptz_Comparison_Exp>;
    lastUpdatedConsumedVideoChatNonEventTotalMinutes?: InputMaybe<Timestamptz_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.Usage" */
export enum Conference_Usage_Constraint {
    /** unique or primary key constraint */
    UsageConferenceIdKey = "Usage_conferenceId_key",
    /** unique or primary key constraint */
    UsagePkey = "Usage_pkey",
}

/** input type for incrementing numeric columns in table "conference.Usage" */
export type Conference_Usage_Inc_Input = {
    consumedStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    consumedSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    consumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    consumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "conference.Usage" */
export type Conference_Usage_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    consumedStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    consumedSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    consumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    consumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    lastUpdatedConsumedStreamingEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedSupportMeetingMinutes?: InputMaybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Conference_Usage_Max_Fields = {
    __typename?: "conference_Usage_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    lastUpdatedConsumedStreamingEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedSupportMeetingMinutes?: Maybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedVideoChatEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Conference_Usage_Min_Fields = {
    __typename?: "conference_Usage_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    lastUpdatedConsumedStreamingEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedSupportMeetingMinutes?: Maybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedVideoChatEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "conference.Usage" */
export type Conference_Usage_Mutation_Response = {
    __typename?: "conference_Usage_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Conference_Usage>;
};

/** input type for inserting object relation for remote table "conference.Usage" */
export type Conference_Usage_Obj_Rel_Insert_Input = {
    data: Conference_Usage_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Conference_Usage_On_Conflict>;
};

/** on_conflict condition type for table "conference.Usage" */
export type Conference_Usage_On_Conflict = {
    constraint: Conference_Usage_Constraint;
    update_columns?: Array<Conference_Usage_Update_Column>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Usage". */
export type Conference_Usage_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    consumedStreamingEventTotalMinutes?: InputMaybe<Order_By>;
    consumedSupportMeetingMinutes?: InputMaybe<Order_By>;
    consumedVideoChatEventTotalMinutes?: InputMaybe<Order_By>;
    consumedVideoChatNonEventTotalMinutes?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    lastUpdatedConsumedStreamingEventTotalMinutes?: InputMaybe<Order_By>;
    lastUpdatedConsumedSupportMeetingMinutes?: InputMaybe<Order_By>;
    lastUpdatedConsumedVideoChatEventTotalMinutes?: InputMaybe<Order_By>;
    lastUpdatedConsumedVideoChatNonEventTotalMinutes?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_Usage */
export type Conference_Usage_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "conference.Usage" */
export enum Conference_Usage_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConsumedStreamingEventTotalMinutes = "consumedStreamingEventTotalMinutes",
    /** column name */
    ConsumedSupportMeetingMinutes = "consumedSupportMeetingMinutes",
    /** column name */
    ConsumedVideoChatEventTotalMinutes = "consumedVideoChatEventTotalMinutes",
    /** column name */
    ConsumedVideoChatNonEventTotalMinutes = "consumedVideoChatNonEventTotalMinutes",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    LastUpdatedConsumedStreamingEventTotalMinutes = "lastUpdatedConsumedStreamingEventTotalMinutes",
    /** column name */
    LastUpdatedConsumedSupportMeetingMinutes = "lastUpdatedConsumedSupportMeetingMinutes",
    /** column name */
    LastUpdatedConsumedVideoChatEventTotalMinutes = "lastUpdatedConsumedVideoChatEventTotalMinutes",
    /** column name */
    LastUpdatedConsumedVideoChatNonEventTotalMinutes = "lastUpdatedConsumedVideoChatNonEventTotalMinutes",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "conference.Usage" */
export type Conference_Usage_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    consumedStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    consumedSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    consumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    consumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    lastUpdatedConsumedStreamingEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedSupportMeetingMinutes?: InputMaybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    lastUpdatedConsumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Conference_Usage_Stddev_Fields = {
    __typename?: "conference_Usage_stddev_fields";
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Conference_Usage_Stddev_Pop_Fields = {
    __typename?: "conference_Usage_stddev_pop_fields";
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Conference_Usage_Stddev_Samp_Fields = {
    __typename?: "conference_Usage_stddev_samp_fields";
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Conference_Usage_Sum_Fields = {
    __typename?: "conference_Usage_sum_fields";
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
};

/** update columns of table "conference.Usage" */
export enum Conference_Usage_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConsumedStreamingEventTotalMinutes = "consumedStreamingEventTotalMinutes",
    /** column name */
    ConsumedSupportMeetingMinutes = "consumedSupportMeetingMinutes",
    /** column name */
    ConsumedVideoChatEventTotalMinutes = "consumedVideoChatEventTotalMinutes",
    /** column name */
    ConsumedVideoChatNonEventTotalMinutes = "consumedVideoChatNonEventTotalMinutes",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    LastUpdatedConsumedStreamingEventTotalMinutes = "lastUpdatedConsumedStreamingEventTotalMinutes",
    /** column name */
    LastUpdatedConsumedSupportMeetingMinutes = "lastUpdatedConsumedSupportMeetingMinutes",
    /** column name */
    LastUpdatedConsumedVideoChatEventTotalMinutes = "lastUpdatedConsumedVideoChatEventTotalMinutes",
    /** column name */
    LastUpdatedConsumedVideoChatNonEventTotalMinutes = "lastUpdatedConsumedVideoChatNonEventTotalMinutes",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Conference_Usage_Var_Pop_Fields = {
    __typename?: "conference_Usage_var_pop_fields";
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Conference_Usage_Var_Samp_Fields = {
    __typename?: "conference_Usage_var_samp_fields";
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Conference_Usage_Variance_Fields = {
    __typename?: "conference_Usage_variance_fields";
    consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "conference.VisibilityLevel" */
export type Conference_VisibilityLevel = {
    __typename?: "conference_VisibilityLevel";
    description?: Maybe<Scalars["String"]>;
    name: Scalars["String"];
};

/** aggregated selection of "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Aggregate = {
    __typename?: "conference_VisibilityLevel_aggregate";
    aggregate?: Maybe<Conference_VisibilityLevel_Aggregate_Fields>;
    nodes: Array<Conference_VisibilityLevel>;
};

/** aggregate fields of "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Aggregate_Fields = {
    __typename?: "conference_VisibilityLevel_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Conference_VisibilityLevel_Max_Fields>;
    min?: Maybe<Conference_VisibilityLevel_Min_Fields>;
};

/** aggregate fields of "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Conference_VisibilityLevel_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "conference.VisibilityLevel". All fields are combined with a logical 'AND'. */
export type Conference_VisibilityLevel_Bool_Exp = {
    _and?: InputMaybe<Array<Conference_VisibilityLevel_Bool_Exp>>;
    _not?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
    _or?: InputMaybe<Array<Conference_VisibilityLevel_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.VisibilityLevel" */
export enum Conference_VisibilityLevel_Constraint {
    /** unique or primary key constraint */
    VisibilityLevelPkey = "VisibilityLevel_pkey",
}

export enum Conference_VisibilityLevel_Enum {
    External = "EXTERNAL",
    Internal = "INTERNAL",
    Private = "PRIVATE",
    Public = "PUBLIC",
    /** Primarily intended for content elements, this visibility level specifies that _only_ unauthenticated users (the general public) should be able to view the element. That is to say, registrants should not see the element. For instance, this may be used to show a registration link button only to unregistered users. */
    PublicOnly = "PUBLIC_ONLY",
}

/** Boolean expression to compare columns of type "conference_VisibilityLevel_enum". All fields are combined with logical 'AND'. */
export type Conference_VisibilityLevel_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Conference_VisibilityLevel_Enum>;
    _in?: InputMaybe<Array<Conference_VisibilityLevel_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Conference_VisibilityLevel_Enum>;
    _nin?: InputMaybe<Array<Conference_VisibilityLevel_Enum>>;
};

/** input type for inserting data into table "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Conference_VisibilityLevel_Max_Fields = {
    __typename?: "conference_VisibilityLevel_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Conference_VisibilityLevel_Min_Fields = {
    __typename?: "conference_VisibilityLevel_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Mutation_Response = {
    __typename?: "conference_VisibilityLevel_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Conference_VisibilityLevel>;
};

/** on_conflict condition type for table "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_On_Conflict = {
    constraint: Conference_VisibilityLevel_Constraint;
    update_columns?: Array<Conference_VisibilityLevel_Update_Column>;
    where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.VisibilityLevel". */
export type Conference_VisibilityLevel_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_VisibilityLevel */
export type Conference_VisibilityLevel_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "conference.VisibilityLevel" */
export enum Conference_VisibilityLevel_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "conference.VisibilityLevel" */
export enum Conference_VisibilityLevel_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_Element = {
    __typename?: "content_Element";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    data: Scalars["jsonb"];
    /** A computed field, executes function "content.elementHasBeenSubmitted" */
    hasBeenSubmitted?: Maybe<Scalars["Boolean"]>;
    id: Scalars["uuid"];
    isHidden: Scalars["Boolean"];
    /** An object relationship */
    item: Content_Item;
    itemId: Scalars["uuid"];
    /** A computed field, executes function "content.Element_itemTitle" */
    itemTitle?: Maybe<Scalars["String"]>;
    layoutData?: Maybe<Scalars["jsonb"]>;
    name: Scalars["String"];
    source?: Maybe<Scalars["jsonb"]>;
    /** An array relationship */
    stats: Array<Analytics_ContentElementStats>;
    /** An aggregate relationship */
    stats_aggregate: Analytics_ContentElementStats_Aggregate;
    /** An object relationship */
    subconference?: Maybe<Conference_Subconference>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    totalViewsStat?: Maybe<Analytics_ElementTotalViews>;
    /** An object relationship */
    type: Content_ElementType;
    typeName: Content_ElementType_Enum;
    updatedAt: Scalars["timestamptz"];
    uploadsRemaining?: Maybe<Scalars["Int"]>;
    visibilityLevel: Conference_VisibilityLevel_Enum;
    /** An array relationship */
    youTubeUploads: Array<Video_YouTubeUpload>;
    /** An aggregate relationship */
    youTubeUploads_aggregate: Video_YouTubeUpload_Aggregate;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementLayoutDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementSourceArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementYouTubeUploadsArgs = {
    distinct_on?: InputMaybe<Array<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementYouTubeUploads_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** columns and relationships of "content.ElementType" */
export type Content_ElementType = {
    __typename?: "content_ElementType";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "content.ElementType" */
export type Content_ElementType_Aggregate = {
    __typename?: "content_ElementType_aggregate";
    aggregate?: Maybe<Content_ElementType_Aggregate_Fields>;
    nodes: Array<Content_ElementType>;
};

/** aggregate fields of "content.ElementType" */
export type Content_ElementType_Aggregate_Fields = {
    __typename?: "content_ElementType_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Content_ElementType_Max_Fields>;
    min?: Maybe<Content_ElementType_Min_Fields>;
};

/** aggregate fields of "content.ElementType" */
export type Content_ElementType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Content_ElementType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "content.ElementType". All fields are combined with a logical 'AND'. */
export type Content_ElementType_Bool_Exp = {
    _and?: InputMaybe<Array<Content_ElementType_Bool_Exp>>;
    _not?: InputMaybe<Content_ElementType_Bool_Exp>;
    _or?: InputMaybe<Array<Content_ElementType_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ElementType" */
export enum Content_ElementType_Constraint {
    /** unique or primary key constraint */
    ElementTypePkey = "ElementType_pkey",
}

export enum Content_ElementType_Enum {
    /** Abstract Markdown text. */
    Abstract = "ABSTRACT",
    /** Show a summary of the currently active social and discussion rooms */
    ActiveSocialRooms = "ACTIVE_SOCIAL_ROOMS",
    /** File for an audio clip (stored by Clowdr). */
    AudioFile = "AUDIO_FILE",
    /** Link to an audio clip (audio is not embedded in Clowdr UI). */
    AudioLink = "AUDIO_LINK",
    /** URL for an audio clip (audio is embedded in Clowdr UI). */
    AudioUrl = "AUDIO_URL",
    /** List of content groups in the system. */
    ContentGroupList = "CONTENT_GROUP_LIST",
    /** A horizontal divider */
    Divider = "DIVIDER",
    /** Button that opens the explore program modal. Intended for use on the landing page. */
    ExploreProgramButton = "EXPLORE_PROGRAM_BUTTON",
    /** Button that opens the explore program modal with the Schedule tab open. Intended for use on the landing page. */
    ExploreScheduleButton = "EXPLORE_SCHEDULE_BUTTON",
    /** Data for a Zoom meeting. */
    ExternalEventLink = "EXTERNAL_EVENT_LINK",
    /** File for an image (stored by Clowdr). */
    ImageFile = "IMAGE_FILE",
    /** URL to an image (embedded in Clowdr UI). */
    ImageUrl = "IMAGE_URL",
    /** A generic URL. */
    Link = "LINK",
    /** A URL for a link button. */
    LinkButton = "LINK_BUTTON",
    /** Show a summary of the currently live program rooms */
    LiveProgramRooms = "LIVE_PROGRAM_ROOMS",
    /** File for a paper (stored by Clowdr). */
    PaperFile = "PAPER_FILE",
    /** Link for a paper (preview is not embedded in Clowdr UI). */
    PaperLink = "PAPER_LINK",
    /** URL to a paper (preview may be embedded in Clowdr UI e.g. PDF JS viewer). */
    PaperUrl = "PAPER_URL",
    /** File for a poster image (stored by Clowdr). */
    PosterFile = "POSTER_FILE",
    /** URL to a poster image (embedded in Clowdr UI). */
    PosterUrl = "POSTER_URL",
    /** Show a summary of the sponsor booths */
    SponsorBooths = "SPONSOR_BOOTHS",
    /** General-purpose Markdown text. */
    Text = "TEXT",
    /** Video file to be broadcast. */
    VideoBroadcast = "VIDEO_BROADCAST",
    /** Video file for counting down to a transition in a broadcast. */
    VideoCountdown = "VIDEO_COUNTDOWN",
    /** File for a video (stored by Clowdr). */
    VideoFile = "VIDEO_FILE",
    /** Video file for filler loop between events/during breaks in a broadcast. */
    VideoFiller = "VIDEO_FILLER",
    /** Link to a video (video is not embedded in Clowdr UI). */
    VideoLink = "VIDEO_LINK",
    /** Video file to be published in advance of the conference. */
    VideoPrepublish = "VIDEO_PREPUBLISH",
    /** Video file for sponsors filler loop between events/during breaks in a broadcast. */
    VideoSponsorsFiller = "VIDEO_SPONSORS_FILLER",
    /** Video file for titles introducing an event during a broadcast. */
    VideoTitles = "VIDEO_TITLES",
    /** URL for a video (video is embedded in Clowdr UI). */
    VideoUrl = "VIDEO_URL",
    /** Schedule view for the whole conference. */
    WholeSchedule = "WHOLE_SCHEDULE",
}

/** Boolean expression to compare columns of type "content_ElementType_enum". All fields are combined with logical 'AND'. */
export type Content_ElementType_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Content_ElementType_Enum>;
    _in?: InputMaybe<Array<Content_ElementType_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Content_ElementType_Enum>;
    _nin?: InputMaybe<Array<Content_ElementType_Enum>>;
};

/** input type for inserting data into table "content.ElementType" */
export type Content_ElementType_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Content_ElementType_Max_Fields = {
    __typename?: "content_ElementType_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Content_ElementType_Min_Fields = {
    __typename?: "content_ElementType_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "content.ElementType" */
export type Content_ElementType_Mutation_Response = {
    __typename?: "content_ElementType_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Content_ElementType>;
};

/** input type for inserting object relation for remote table "content.ElementType" */
export type Content_ElementType_Obj_Rel_Insert_Input = {
    data: Content_ElementType_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Content_ElementType_On_Conflict>;
};

/** on_conflict condition type for table "content.ElementType" */
export type Content_ElementType_On_Conflict = {
    constraint: Content_ElementType_Constraint;
    update_columns?: Array<Content_ElementType_Update_Column>;
    where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ElementType". */
export type Content_ElementType_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ElementType */
export type Content_ElementType_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "content.ElementType" */
export enum Content_ElementType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "content.ElementType" */
export type Content_ElementType_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "content.ElementType" */
export enum Content_ElementType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "content.Element" */
export type Content_Element_Aggregate = {
    __typename?: "content_Element_aggregate";
    aggregate?: Maybe<Content_Element_Aggregate_Fields>;
    nodes: Array<Content_Element>;
};

/** aggregate fields of "content.Element" */
export type Content_Element_Aggregate_Fields = {
    __typename?: "content_Element_aggregate_fields";
    avg?: Maybe<Content_Element_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Content_Element_Max_Fields>;
    min?: Maybe<Content_Element_Min_Fields>;
    stddev?: Maybe<Content_Element_Stddev_Fields>;
    stddev_pop?: Maybe<Content_Element_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Content_Element_Stddev_Samp_Fields>;
    sum?: Maybe<Content_Element_Sum_Fields>;
    var_pop?: Maybe<Content_Element_Var_Pop_Fields>;
    var_samp?: Maybe<Content_Element_Var_Samp_Fields>;
    variance?: Maybe<Content_Element_Variance_Fields>;
};

/** aggregate fields of "content.Element" */
export type Content_Element_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Content_Element_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.Element" */
export type Content_Element_Aggregate_Order_By = {
    avg?: InputMaybe<Content_Element_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Content_Element_Max_Order_By>;
    min?: InputMaybe<Content_Element_Min_Order_By>;
    stddev?: InputMaybe<Content_Element_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Content_Element_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Content_Element_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Content_Element_Sum_Order_By>;
    var_pop?: InputMaybe<Content_Element_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Content_Element_Var_Samp_Order_By>;
    variance?: InputMaybe<Content_Element_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Content_Element_Append_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
    layoutData?: InputMaybe<Scalars["jsonb"]>;
    source?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "content.Element" */
export type Content_Element_Arr_Rel_Insert_Input = {
    data: Array<Content_Element_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Content_Element_On_Conflict>;
};

/** aggregate avg on columns */
export type Content_Element_Avg_Fields = {
    __typename?: "content_Element_avg_fields";
    uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "content.Element" */
export type Content_Element_Avg_Order_By = {
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "content.Element". All fields are combined with a logical 'AND'. */
export type Content_Element_Bool_Exp = {
    _and?: InputMaybe<Array<Content_Element_Bool_Exp>>;
    _not?: InputMaybe<Content_Element_Bool_Exp>;
    _or?: InputMaybe<Array<Content_Element_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    data?: InputMaybe<Jsonb_Comparison_Exp>;
    hasBeenSubmitted?: InputMaybe<Boolean_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    isHidden?: InputMaybe<Boolean_Comparison_Exp>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    itemTitle?: InputMaybe<String_Comparison_Exp>;
    layoutData?: InputMaybe<Jsonb_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    source?: InputMaybe<Jsonb_Comparison_Exp>;
    stats?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
    subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    totalViewsStat?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
    type?: InputMaybe<Content_ElementType_Bool_Exp>;
    typeName?: InputMaybe<Content_ElementType_Enum_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    uploadsRemaining?: InputMaybe<Int_Comparison_Exp>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
    youTubeUploads?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** unique or primary key constraints on table "content.Element" */
export enum Content_Element_Constraint {
    /** unique or primary key constraint */
    ElementPkey = "Element_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Content_Element_Delete_At_Path_Input = {
    data?: InputMaybe<Array<Scalars["String"]>>;
    layoutData?: InputMaybe<Array<Scalars["String"]>>;
    source?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Content_Element_Delete_Elem_Input = {
    data?: InputMaybe<Scalars["Int"]>;
    layoutData?: InputMaybe<Scalars["Int"]>;
    source?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Content_Element_Delete_Key_Input = {
    data?: InputMaybe<Scalars["String"]>;
    layoutData?: InputMaybe<Scalars["String"]>;
    source?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "content.Element" */
export type Content_Element_Inc_Input = {
    uploadsRemaining?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "content.Element" */
export type Content_Element_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isHidden?: InputMaybe<Scalars["Boolean"]>;
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    layoutData?: InputMaybe<Scalars["jsonb"]>;
    name?: InputMaybe<Scalars["String"]>;
    source?: InputMaybe<Scalars["jsonb"]>;
    stats?: InputMaybe<Analytics_ContentElementStats_Arr_Rel_Insert_Input>;
    subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    totalViewsStat?: InputMaybe<Analytics_ElementTotalViews_Obj_Rel_Insert_Input>;
    type?: InputMaybe<Content_ElementType_Obj_Rel_Insert_Input>;
    typeName?: InputMaybe<Content_ElementType_Enum>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    uploadsRemaining?: InputMaybe<Scalars["Int"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    youTubeUploads?: InputMaybe<Video_YouTubeUpload_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Content_Element_Max_Fields = {
    __typename?: "content_Element_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    uploadsRemaining?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "content.Element" */
export type Content_Element_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_Element_Min_Fields = {
    __typename?: "content_Element_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    uploadsRemaining?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "content.Element" */
export type Content_Element_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.Element" */
export type Content_Element_Mutation_Response = {
    __typename?: "content_Element_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Content_Element>;
};

/** input type for inserting object relation for remote table "content.Element" */
export type Content_Element_Obj_Rel_Insert_Input = {
    data: Content_Element_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Content_Element_On_Conflict>;
};

/** on_conflict condition type for table "content.Element" */
export type Content_Element_On_Conflict = {
    constraint: Content_Element_Constraint;
    update_columns?: Array<Content_Element_Update_Column>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

/** Ordering options when selecting data from "content.Element". */
export type Content_Element_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    data?: InputMaybe<Order_By>;
    hasBeenSubmitted?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    isHidden?: InputMaybe<Order_By>;
    item?: InputMaybe<Content_Item_Order_By>;
    itemId?: InputMaybe<Order_By>;
    itemTitle?: InputMaybe<Order_By>;
    layoutData?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    source?: InputMaybe<Order_By>;
    stats_aggregate?: InputMaybe<Analytics_ContentElementStats_Aggregate_Order_By>;
    subconference?: InputMaybe<Conference_Subconference_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    totalViewsStat?: InputMaybe<Analytics_ElementTotalViews_Order_By>;
    type?: InputMaybe<Content_ElementType_Order_By>;
    typeName?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    uploadsRemaining?: InputMaybe<Order_By>;
    visibilityLevel?: InputMaybe<Order_By>;
    youTubeUploads_aggregate?: InputMaybe<Video_YouTubeUpload_Aggregate_Order_By>;
};

/** primary key columns input for table: content_Element */
export type Content_Element_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Content_Element_Prepend_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
    layoutData?: InputMaybe<Scalars["jsonb"]>;
    source?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "content.Element" */
export enum Content_Element_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Data = "data",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    ItemId = "itemId",
    /** column name */
    LayoutData = "layoutData",
    /** column name */
    Name = "name",
    /** column name */
    Source = "source",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TypeName = "typeName",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UploadsRemaining = "uploadsRemaining",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "content.Element" */
export type Content_Element_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isHidden?: InputMaybe<Scalars["Boolean"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    layoutData?: InputMaybe<Scalars["jsonb"]>;
    name?: InputMaybe<Scalars["String"]>;
    source?: InputMaybe<Scalars["jsonb"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    typeName?: InputMaybe<Content_ElementType_Enum>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    uploadsRemaining?: InputMaybe<Scalars["Int"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate stddev on columns */
export type Content_Element_Stddev_Fields = {
    __typename?: "content_Element_stddev_fields";
    uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "content.Element" */
export type Content_Element_Stddev_Order_By = {
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Content_Element_Stddev_Pop_Fields = {
    __typename?: "content_Element_stddev_pop_fields";
    uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "content.Element" */
export type Content_Element_Stddev_Pop_Order_By = {
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Content_Element_Stddev_Samp_Fields = {
    __typename?: "content_Element_stddev_samp_fields";
    uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "content.Element" */
export type Content_Element_Stddev_Samp_Order_By = {
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Content_Element_Sum_Fields = {
    __typename?: "content_Element_sum_fields";
    uploadsRemaining?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "content.Element" */
export type Content_Element_Sum_Order_By = {
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** update columns of table "content.Element" */
export enum Content_Element_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Data = "data",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    ItemId = "itemId",
    /** column name */
    LayoutData = "layoutData",
    /** column name */
    Name = "name",
    /** column name */
    Source = "source",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TypeName = "typeName",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UploadsRemaining = "uploadsRemaining",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** aggregate var_pop on columns */
export type Content_Element_Var_Pop_Fields = {
    __typename?: "content_Element_var_pop_fields";
    uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "content.Element" */
export type Content_Element_Var_Pop_Order_By = {
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Content_Element_Var_Samp_Fields = {
    __typename?: "content_Element_var_samp_fields";
    uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "content.Element" */
export type Content_Element_Var_Samp_Order_By = {
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Content_Element_Variance_Fields = {
    __typename?: "content_Element_variance_fields";
    uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "content.Element" */
export type Content_Element_Variance_Order_By = {
    uploadsRemaining?: InputMaybe<Order_By>;
};

/** columns and relationships of "content.Item" */
export type Content_Item = {
    __typename?: "content_Item";
    /** An object relationship */
    chat?: Maybe<Chat_Chat>;
    chatId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    /** An array relationship */
    descriptionOfExhibitions: Array<Collection_Exhibition>;
    /** An aggregate relationship */
    descriptionOfExhibitions_aggregate: Collection_Exhibition_Aggregate;
    /** An array relationship */
    elements: Array<Content_Element>;
    /** An aggregate relationship */
    elements_aggregate: Content_Element_Aggregate;
    /** An array relationship */
    events: Array<Schedule_Event>;
    /** An aggregate relationship */
    events_aggregate: Schedule_Event_Aggregate;
    /** A computed field, executes function "content.itemHasUnsubmittedElements" */
    hasUnsubmittedElements?: Maybe<Scalars["Boolean"]>;
    id: Scalars["uuid"];
    /** An array relationship */
    itemExhibitions: Array<Content_ItemExhibition>;
    /** An aggregate relationship */
    itemExhibitions_aggregate: Content_ItemExhibition_Aggregate;
    /** An array relationship */
    itemPeople: Array<Content_ItemProgramPerson>;
    /** An aggregate relationship */
    itemPeople_aggregate: Content_ItemProgramPerson_Aggregate;
    /** An array relationship */
    itemTags: Array<Content_ItemTag>;
    /** An aggregate relationship */
    itemTags_aggregate: Content_ItemTag_Aggregate;
    /** An object relationship */
    room?: Maybe<Room_Room>;
    shortTitle?: Maybe<Scalars["String"]>;
    /** An array relationship */
    sponsorshipTierMemberships: Array<Sponsor_TierMember>;
    /** An aggregate relationship */
    sponsorshipTierMemberships_aggregate: Sponsor_TierMember_Aggregate;
    /** An array relationship */
    stats: Array<Analytics_ContentItemStats>;
    /** An aggregate relationship */
    stats_aggregate: Analytics_ContentItemStats_Aggregate;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    title: Scalars["String"];
    /** An object relationship */
    totalViewsStat?: Maybe<Analytics_ItemTotalViews>;
    /** An object relationship */
    type: Content_ItemType;
    typeName: Content_ItemType_Enum;
    updatedAt: Scalars["timestamptz"];
    visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "content.Item" */
export type Content_ItemDescriptionOfExhibitionsArgs = {
    distinct_on?: InputMaybe<Array<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemDescriptionOfExhibitions_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemElementsArgs = {
    distinct_on?: InputMaybe<Array<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemElements_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemExhibitionsArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemExhibitions_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemPeopleArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemPeople_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemTagsArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemTags_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemSponsorshipTierMembershipsArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemSponsorshipTierMemberships_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

/** columns and relationships of "content.ItemExhibition" */
export type Content_ItemExhibition = {
    __typename?: "content_ItemExhibition";
    /** An object relationship */
    exhibition: Collection_Exhibition;
    exhibitionId: Scalars["uuid"];
    id: Scalars["uuid"];
    /** An object relationship */
    item: Content_Item;
    itemId: Scalars["uuid"];
    layout?: Maybe<Scalars["jsonb"]>;
    priority?: Maybe<Scalars["Int"]>;
};

/** columns and relationships of "content.ItemExhibition" */
export type Content_ItemExhibitionLayoutArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "content.ItemExhibition" */
export type Content_ItemExhibition_Aggregate = {
    __typename?: "content_ItemExhibition_aggregate";
    aggregate?: Maybe<Content_ItemExhibition_Aggregate_Fields>;
    nodes: Array<Content_ItemExhibition>;
};

/** aggregate fields of "content.ItemExhibition" */
export type Content_ItemExhibition_Aggregate_Fields = {
    __typename?: "content_ItemExhibition_aggregate_fields";
    avg?: Maybe<Content_ItemExhibition_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Content_ItemExhibition_Max_Fields>;
    min?: Maybe<Content_ItemExhibition_Min_Fields>;
    stddev?: Maybe<Content_ItemExhibition_Stddev_Fields>;
    stddev_pop?: Maybe<Content_ItemExhibition_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Content_ItemExhibition_Stddev_Samp_Fields>;
    sum?: Maybe<Content_ItemExhibition_Sum_Fields>;
    var_pop?: Maybe<Content_ItemExhibition_Var_Pop_Fields>;
    var_samp?: Maybe<Content_ItemExhibition_Var_Samp_Fields>;
    variance?: Maybe<Content_ItemExhibition_Variance_Fields>;
};

/** aggregate fields of "content.ItemExhibition" */
export type Content_ItemExhibition_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Content_ItemExhibition_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.ItemExhibition" */
export type Content_ItemExhibition_Aggregate_Order_By = {
    avg?: InputMaybe<Content_ItemExhibition_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Content_ItemExhibition_Max_Order_By>;
    min?: InputMaybe<Content_ItemExhibition_Min_Order_By>;
    stddev?: InputMaybe<Content_ItemExhibition_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Content_ItemExhibition_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Content_ItemExhibition_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Content_ItemExhibition_Sum_Order_By>;
    var_pop?: InputMaybe<Content_ItemExhibition_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Content_ItemExhibition_Var_Samp_Order_By>;
    variance?: InputMaybe<Content_ItemExhibition_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Content_ItemExhibition_Append_Input = {
    layout?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "content.ItemExhibition" */
export type Content_ItemExhibition_Arr_Rel_Insert_Input = {
    data: Array<Content_ItemExhibition_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Content_ItemExhibition_On_Conflict>;
};

/** aggregate avg on columns */
export type Content_ItemExhibition_Avg_Fields = {
    __typename?: "content_ItemExhibition_avg_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Avg_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "content.ItemExhibition". All fields are combined with a logical 'AND'. */
export type Content_ItemExhibition_Bool_Exp = {
    _and?: InputMaybe<Array<Content_ItemExhibition_Bool_Exp>>;
    _not?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
    _or?: InputMaybe<Array<Content_ItemExhibition_Bool_Exp>>;
    exhibition?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    exhibitionId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    layout?: InputMaybe<Jsonb_Comparison_Exp>;
    priority?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ItemExhibition" */
export enum Content_ItemExhibition_Constraint {
    /** unique or primary key constraint */
    ItemExhibitionPkey = "ItemExhibition_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Content_ItemExhibition_Delete_At_Path_Input = {
    layout?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Content_ItemExhibition_Delete_Elem_Input = {
    layout?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Content_ItemExhibition_Delete_Key_Input = {
    layout?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "content.ItemExhibition" */
export type Content_ItemExhibition_Inc_Input = {
    priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "content.ItemExhibition" */
export type Content_ItemExhibition_Insert_Input = {
    exhibition?: InputMaybe<Collection_Exhibition_Obj_Rel_Insert_Input>;
    exhibitionId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    layout?: InputMaybe<Scalars["jsonb"]>;
    priority?: InputMaybe<Scalars["Int"]>;
};

/** aggregate max on columns */
export type Content_ItemExhibition_Max_Fields = {
    __typename?: "content_ItemExhibition_max_fields";
    exhibitionId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    priority?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Max_Order_By = {
    exhibitionId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_ItemExhibition_Min_Fields = {
    __typename?: "content_ItemExhibition_min_fields";
    exhibitionId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    priority?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Min_Order_By = {
    exhibitionId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.ItemExhibition" */
export type Content_ItemExhibition_Mutation_Response = {
    __typename?: "content_ItemExhibition_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Content_ItemExhibition>;
};

/** on_conflict condition type for table "content.ItemExhibition" */
export type Content_ItemExhibition_On_Conflict = {
    constraint: Content_ItemExhibition_Constraint;
    update_columns?: Array<Content_ItemExhibition_Update_Column>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ItemExhibition". */
export type Content_ItemExhibition_Order_By = {
    exhibition?: InputMaybe<Collection_Exhibition_Order_By>;
    exhibitionId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    item?: InputMaybe<Content_Item_Order_By>;
    itemId?: InputMaybe<Order_By>;
    layout?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ItemExhibition */
export type Content_ItemExhibition_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Content_ItemExhibition_Prepend_Input = {
    layout?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "content.ItemExhibition" */
export enum Content_ItemExhibition_Select_Column {
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    Layout = "layout",
    /** column name */
    Priority = "priority",
}

/** input type for updating data in table "content.ItemExhibition" */
export type Content_ItemExhibition_Set_Input = {
    exhibitionId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    layout?: InputMaybe<Scalars["jsonb"]>;
    priority?: InputMaybe<Scalars["Int"]>;
};

/** aggregate stddev on columns */
export type Content_ItemExhibition_Stddev_Fields = {
    __typename?: "content_ItemExhibition_stddev_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Stddev_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Content_ItemExhibition_Stddev_Pop_Fields = {
    __typename?: "content_ItemExhibition_stddev_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Stddev_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Content_ItemExhibition_Stddev_Samp_Fields = {
    __typename?: "content_ItemExhibition_stddev_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Stddev_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Content_ItemExhibition_Sum_Fields = {
    __typename?: "content_ItemExhibition_sum_fields";
    priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Sum_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** update columns of table "content.ItemExhibition" */
export enum Content_ItemExhibition_Update_Column {
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    Layout = "layout",
    /** column name */
    Priority = "priority",
}

/** aggregate var_pop on columns */
export type Content_ItemExhibition_Var_Pop_Fields = {
    __typename?: "content_ItemExhibition_var_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Var_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Content_ItemExhibition_Var_Samp_Fields = {
    __typename?: "content_ItemExhibition_var_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Var_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Content_ItemExhibition_Variance_Fields = {
    __typename?: "content_ItemExhibition_variance_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Variance_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "content.ItemProgramPerson" */
export type Content_ItemProgramPerson = {
    __typename?: "content_ItemProgramPerson";
    /** A computed field, executes function "content.itemProgramPerson_HasSubmissionRequestBeenSent" */
    hasSubmissionRequestBeenSent?: Maybe<Scalars["Boolean"]>;
    id: Scalars["uuid"];
    /** An object relationship */
    item: Content_Item;
    itemId: Scalars["uuid"];
    /** An object relationship */
    person: Collection_ProgramPerson;
    personId: Scalars["uuid"];
    priority?: Maybe<Scalars["Int"]>;
    roleName: Scalars["String"];
};

/** aggregated selection of "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Aggregate = {
    __typename?: "content_ItemProgramPerson_aggregate";
    aggregate?: Maybe<Content_ItemProgramPerson_Aggregate_Fields>;
    nodes: Array<Content_ItemProgramPerson>;
};

/** aggregate fields of "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Aggregate_Fields = {
    __typename?: "content_ItemProgramPerson_aggregate_fields";
    avg?: Maybe<Content_ItemProgramPerson_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Content_ItemProgramPerson_Max_Fields>;
    min?: Maybe<Content_ItemProgramPerson_Min_Fields>;
    stddev?: Maybe<Content_ItemProgramPerson_Stddev_Fields>;
    stddev_pop?: Maybe<Content_ItemProgramPerson_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Content_ItemProgramPerson_Stddev_Samp_Fields>;
    sum?: Maybe<Content_ItemProgramPerson_Sum_Fields>;
    var_pop?: Maybe<Content_ItemProgramPerson_Var_Pop_Fields>;
    var_samp?: Maybe<Content_ItemProgramPerson_Var_Samp_Fields>;
    variance?: Maybe<Content_ItemProgramPerson_Variance_Fields>;
};

/** aggregate fields of "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Content_ItemProgramPerson_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Aggregate_Order_By = {
    avg?: InputMaybe<Content_ItemProgramPerson_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Content_ItemProgramPerson_Max_Order_By>;
    min?: InputMaybe<Content_ItemProgramPerson_Min_Order_By>;
    stddev?: InputMaybe<Content_ItemProgramPerson_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Content_ItemProgramPerson_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Content_ItemProgramPerson_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Content_ItemProgramPerson_Sum_Order_By>;
    var_pop?: InputMaybe<Content_ItemProgramPerson_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Content_ItemProgramPerson_Var_Samp_Order_By>;
    variance?: InputMaybe<Content_ItemProgramPerson_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Arr_Rel_Insert_Input = {
    data: Array<Content_ItemProgramPerson_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Content_ItemProgramPerson_On_Conflict>;
};

/** aggregate avg on columns */
export type Content_ItemProgramPerson_Avg_Fields = {
    __typename?: "content_ItemProgramPerson_avg_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Avg_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "content.ItemProgramPerson". All fields are combined with a logical 'AND'. */
export type Content_ItemProgramPerson_Bool_Exp = {
    _and?: InputMaybe<Array<Content_ItemProgramPerson_Bool_Exp>>;
    _not?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
    _or?: InputMaybe<Array<Content_ItemProgramPerson_Bool_Exp>>;
    hasSubmissionRequestBeenSent?: InputMaybe<Boolean_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    person?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    personId?: InputMaybe<Uuid_Comparison_Exp>;
    priority?: InputMaybe<Int_Comparison_Exp>;
    roleName?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ItemProgramPerson" */
export enum Content_ItemProgramPerson_Constraint {
    /** unique or primary key constraint */
    ItemProgramPersonPkey = "ItemProgramPerson_pkey",
    /** unique or primary key constraint */
    ItemProgramPersonRoleNamePersonIdItemIdKey = "ItemProgramPerson_roleName_personId_itemId_key",
}

/** input type for incrementing numeric columns in table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Inc_Input = {
    priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Insert_Input = {
    id?: InputMaybe<Scalars["uuid"]>;
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    person?: InputMaybe<Collection_ProgramPerson_Obj_Rel_Insert_Input>;
    personId?: InputMaybe<Scalars["uuid"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    roleName?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Content_ItemProgramPerson_Max_Fields = {
    __typename?: "content_ItemProgramPerson_max_fields";
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    personId?: Maybe<Scalars["uuid"]>;
    priority?: Maybe<Scalars["Int"]>;
    roleName?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Max_Order_By = {
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    personId?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    roleName?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_ItemProgramPerson_Min_Fields = {
    __typename?: "content_ItemProgramPerson_min_fields";
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    personId?: Maybe<Scalars["uuid"]>;
    priority?: Maybe<Scalars["Int"]>;
    roleName?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Min_Order_By = {
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    personId?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    roleName?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Mutation_Response = {
    __typename?: "content_ItemProgramPerson_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Content_ItemProgramPerson>;
};

/** on_conflict condition type for table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_On_Conflict = {
    constraint: Content_ItemProgramPerson_Constraint;
    update_columns?: Array<Content_ItemProgramPerson_Update_Column>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ItemProgramPerson". */
export type Content_ItemProgramPerson_Order_By = {
    hasSubmissionRequestBeenSent?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    item?: InputMaybe<Content_Item_Order_By>;
    itemId?: InputMaybe<Order_By>;
    person?: InputMaybe<Collection_ProgramPerson_Order_By>;
    personId?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    roleName?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ItemProgramPerson */
export type Content_ItemProgramPerson_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "content.ItemProgramPerson" */
export enum Content_ItemProgramPerson_Select_Column {
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    PersonId = "personId",
    /** column name */
    Priority = "priority",
    /** column name */
    RoleName = "roleName",
}

/** input type for updating data in table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Set_Input = {
    id?: InputMaybe<Scalars["uuid"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    personId?: InputMaybe<Scalars["uuid"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    roleName?: InputMaybe<Scalars["String"]>;
};

/** aggregate stddev on columns */
export type Content_ItemProgramPerson_Stddev_Fields = {
    __typename?: "content_ItemProgramPerson_stddev_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Stddev_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Content_ItemProgramPerson_Stddev_Pop_Fields = {
    __typename?: "content_ItemProgramPerson_stddev_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Stddev_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Content_ItemProgramPerson_Stddev_Samp_Fields = {
    __typename?: "content_ItemProgramPerson_stddev_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Stddev_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Content_ItemProgramPerson_Sum_Fields = {
    __typename?: "content_ItemProgramPerson_sum_fields";
    priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Sum_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** update columns of table "content.ItemProgramPerson" */
export enum Content_ItemProgramPerson_Update_Column {
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    PersonId = "personId",
    /** column name */
    Priority = "priority",
    /** column name */
    RoleName = "roleName",
}

/** aggregate var_pop on columns */
export type Content_ItemProgramPerson_Var_Pop_Fields = {
    __typename?: "content_ItemProgramPerson_var_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Var_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Content_ItemProgramPerson_Var_Samp_Fields = {
    __typename?: "content_ItemProgramPerson_var_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Var_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Content_ItemProgramPerson_Variance_Fields = {
    __typename?: "content_ItemProgramPerson_variance_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Variance_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "content.ItemTag" */
export type Content_ItemTag = {
    __typename?: "content_ItemTag";
    id: Scalars["uuid"];
    /** An object relationship */
    item: Content_Item;
    itemId: Scalars["uuid"];
    /** An object relationship */
    tag: Collection_Tag;
    tagId: Scalars["uuid"];
};

/** aggregated selection of "content.ItemTag" */
export type Content_ItemTag_Aggregate = {
    __typename?: "content_ItemTag_aggregate";
    aggregate?: Maybe<Content_ItemTag_Aggregate_Fields>;
    nodes: Array<Content_ItemTag>;
};

/** aggregate fields of "content.ItemTag" */
export type Content_ItemTag_Aggregate_Fields = {
    __typename?: "content_ItemTag_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Content_ItemTag_Max_Fields>;
    min?: Maybe<Content_ItemTag_Min_Fields>;
};

/** aggregate fields of "content.ItemTag" */
export type Content_ItemTag_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Content_ItemTag_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.ItemTag" */
export type Content_ItemTag_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Content_ItemTag_Max_Order_By>;
    min?: InputMaybe<Content_ItemTag_Min_Order_By>;
};

/** input type for inserting array relation for remote table "content.ItemTag" */
export type Content_ItemTag_Arr_Rel_Insert_Input = {
    data: Array<Content_ItemTag_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Content_ItemTag_On_Conflict>;
};

/** Boolean expression to filter rows from the table "content.ItemTag". All fields are combined with a logical 'AND'. */
export type Content_ItemTag_Bool_Exp = {
    _and?: InputMaybe<Array<Content_ItemTag_Bool_Exp>>;
    _not?: InputMaybe<Content_ItemTag_Bool_Exp>;
    _or?: InputMaybe<Array<Content_ItemTag_Bool_Exp>>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    tag?: InputMaybe<Collection_Tag_Bool_Exp>;
    tagId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ItemTag" */
export enum Content_ItemTag_Constraint {
    /** unique or primary key constraint */
    ItemTagItemIdTagIdKey = "ItemTag_itemId_tagId_key",
    /** unique or primary key constraint */
    ItemTagPkey = "ItemTag_pkey",
}

/** input type for inserting data into table "content.ItemTag" */
export type Content_ItemTag_Insert_Input = {
    id?: InputMaybe<Scalars["uuid"]>;
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    tag?: InputMaybe<Collection_Tag_Obj_Rel_Insert_Input>;
    tagId?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate max on columns */
export type Content_ItemTag_Max_Fields = {
    __typename?: "content_ItemTag_max_fields";
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    tagId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "content.ItemTag" */
export type Content_ItemTag_Max_Order_By = {
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    tagId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_ItemTag_Min_Fields = {
    __typename?: "content_ItemTag_min_fields";
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    tagId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "content.ItemTag" */
export type Content_ItemTag_Min_Order_By = {
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    tagId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.ItemTag" */
export type Content_ItemTag_Mutation_Response = {
    __typename?: "content_ItemTag_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Content_ItemTag>;
};

/** on_conflict condition type for table "content.ItemTag" */
export type Content_ItemTag_On_Conflict = {
    constraint: Content_ItemTag_Constraint;
    update_columns?: Array<Content_ItemTag_Update_Column>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ItemTag". */
export type Content_ItemTag_Order_By = {
    id?: InputMaybe<Order_By>;
    item?: InputMaybe<Content_Item_Order_By>;
    itemId?: InputMaybe<Order_By>;
    tag?: InputMaybe<Collection_Tag_Order_By>;
    tagId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ItemTag */
export type Content_ItemTag_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "content.ItemTag" */
export enum Content_ItemTag_Select_Column {
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    TagId = "tagId",
}

/** input type for updating data in table "content.ItemTag" */
export type Content_ItemTag_Set_Input = {
    id?: InputMaybe<Scalars["uuid"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    tagId?: InputMaybe<Scalars["uuid"]>;
};

/** update columns of table "content.ItemTag" */
export enum Content_ItemTag_Update_Column {
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    TagId = "tagId",
}

/** columns and relationships of "content.ItemType" */
export type Content_ItemType = {
    __typename?: "content_ItemType";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "content.ItemType" */
export type Content_ItemType_Aggregate = {
    __typename?: "content_ItemType_aggregate";
    aggregate?: Maybe<Content_ItemType_Aggregate_Fields>;
    nodes: Array<Content_ItemType>;
};

/** aggregate fields of "content.ItemType" */
export type Content_ItemType_Aggregate_Fields = {
    __typename?: "content_ItemType_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Content_ItemType_Max_Fields>;
    min?: Maybe<Content_ItemType_Min_Fields>;
};

/** aggregate fields of "content.ItemType" */
export type Content_ItemType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Content_ItemType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "content.ItemType". All fields are combined with a logical 'AND'. */
export type Content_ItemType_Bool_Exp = {
    _and?: InputMaybe<Array<Content_ItemType_Bool_Exp>>;
    _not?: InputMaybe<Content_ItemType_Bool_Exp>;
    _or?: InputMaybe<Array<Content_ItemType_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ItemType" */
export enum Content_ItemType_Constraint {
    /** unique or primary key constraint */
    ItemTypePkey = "ItemType_pkey",
}

export enum Content_ItemType_Enum {
    /** A demonstration. */
    Demonstration = "DEMONSTRATION",
    /** A keynote. */
    Keynote = "KEYNOTE",
    /** Conference main landing page. */
    LandingPage = "LANDING_PAGE",
    /** A generic group type - use sparingly. */
    Other = "OTHER",
    /** A paper. */
    Paper = "PAPER",
    /** A poster. */
    Poster = "POSTER",
    /** A presentation. */
    Presentation = "PRESENTATION",
    /** Content representing a whole session. */
    Session = "SESSION",
    /** A Q&A covering the whole session. */
    SessionQAndA = "SESSION_Q_AND_A",
    /** A scheduled social. */
    Social = "SOCIAL",
    /** A sponsor. */
    Sponsor = "SPONSOR",
    /** An item of conference goodies for attendee's swag bags. */
    SwagBag = "SWAG_BAG",
    /** A symposium. */
    Symposium = "SYMPOSIUM",
    /** A tutorial. */
    Tutorial = "TUTORIAL",
    /** A workshop. */
    Workshop = "WORKSHOP",
}

/** Boolean expression to compare columns of type "content_ItemType_enum". All fields are combined with logical 'AND'. */
export type Content_ItemType_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Content_ItemType_Enum>;
    _in?: InputMaybe<Array<Content_ItemType_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Content_ItemType_Enum>;
    _nin?: InputMaybe<Array<Content_ItemType_Enum>>;
};

/** input type for inserting data into table "content.ItemType" */
export type Content_ItemType_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Content_ItemType_Max_Fields = {
    __typename?: "content_ItemType_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Content_ItemType_Min_Fields = {
    __typename?: "content_ItemType_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "content.ItemType" */
export type Content_ItemType_Mutation_Response = {
    __typename?: "content_ItemType_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Content_ItemType>;
};

/** input type for inserting object relation for remote table "content.ItemType" */
export type Content_ItemType_Obj_Rel_Insert_Input = {
    data: Content_ItemType_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Content_ItemType_On_Conflict>;
};

/** on_conflict condition type for table "content.ItemType" */
export type Content_ItemType_On_Conflict = {
    constraint: Content_ItemType_Constraint;
    update_columns?: Array<Content_ItemType_Update_Column>;
    where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ItemType". */
export type Content_ItemType_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ItemType */
export type Content_ItemType_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "content.ItemType" */
export enum Content_ItemType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "content.ItemType" */
export type Content_ItemType_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "content.ItemType" */
export enum Content_ItemType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "content.Item" */
export type Content_Item_Aggregate = {
    __typename?: "content_Item_aggregate";
    aggregate?: Maybe<Content_Item_Aggregate_Fields>;
    nodes: Array<Content_Item>;
};

/** aggregate fields of "content.Item" */
export type Content_Item_Aggregate_Fields = {
    __typename?: "content_Item_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Content_Item_Max_Fields>;
    min?: Maybe<Content_Item_Min_Fields>;
};

/** aggregate fields of "content.Item" */
export type Content_Item_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Content_Item_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.Item" */
export type Content_Item_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Content_Item_Max_Order_By>;
    min?: InputMaybe<Content_Item_Min_Order_By>;
};

/** input type for inserting array relation for remote table "content.Item" */
export type Content_Item_Arr_Rel_Insert_Input = {
    data: Array<Content_Item_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Content_Item_On_Conflict>;
};

/** Boolean expression to filter rows from the table "content.Item". All fields are combined with a logical 'AND'. */
export type Content_Item_Bool_Exp = {
    _and?: InputMaybe<Array<Content_Item_Bool_Exp>>;
    _not?: InputMaybe<Content_Item_Bool_Exp>;
    _or?: InputMaybe<Array<Content_Item_Bool_Exp>>;
    chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    chatId?: InputMaybe<Uuid_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    descriptionOfExhibitions?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    elements?: InputMaybe<Content_Element_Bool_Exp>;
    events?: InputMaybe<Schedule_Event_Bool_Exp>;
    hasUnsubmittedElements?: InputMaybe<Boolean_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    itemExhibitions?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
    itemPeople?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
    itemTags?: InputMaybe<Content_ItemTag_Bool_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    shortTitle?: InputMaybe<String_Comparison_Exp>;
    sponsorshipTierMemberships?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
    stats?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    title?: InputMaybe<String_Comparison_Exp>;
    totalViewsStat?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
    type?: InputMaybe<Content_ItemType_Bool_Exp>;
    typeName?: InputMaybe<Content_ItemType_Enum_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.Item" */
export enum Content_Item_Constraint {
    /** unique or primary key constraint */
    ItemChatIdKey = "Item_chatId_key",
    /** unique or primary key constraint */
    ItemPkey = "Item_pkey",
}

/** input type for inserting data into table "content.Item" */
export type Content_Item_Insert_Input = {
    chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    chatId?: InputMaybe<Scalars["uuid"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    descriptionOfExhibitions?: InputMaybe<Collection_Exhibition_Arr_Rel_Insert_Input>;
    elements?: InputMaybe<Content_Element_Arr_Rel_Insert_Input>;
    events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemExhibitions?: InputMaybe<Content_ItemExhibition_Arr_Rel_Insert_Input>;
    itemPeople?: InputMaybe<Content_ItemProgramPerson_Arr_Rel_Insert_Input>;
    itemTags?: InputMaybe<Content_ItemTag_Arr_Rel_Insert_Input>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    shortTitle?: InputMaybe<Scalars["String"]>;
    sponsorshipTierMemberships?: InputMaybe<Sponsor_TierMember_Arr_Rel_Insert_Input>;
    stats?: InputMaybe<Analytics_ContentItemStats_Arr_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    title?: InputMaybe<Scalars["String"]>;
    totalViewsStat?: InputMaybe<Analytics_ItemTotalViews_Obj_Rel_Insert_Input>;
    type?: InputMaybe<Content_ItemType_Obj_Rel_Insert_Input>;
    typeName?: InputMaybe<Content_ItemType_Enum>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Content_Item_Max_Fields = {
    __typename?: "content_Item_max_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    shortTitle?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    title?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "content.Item" */
export type Content_Item_Max_Order_By = {
    chatId?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    shortTitle?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    title?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_Item_Min_Fields = {
    __typename?: "content_Item_min_fields";
    chatId?: Maybe<Scalars["uuid"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    shortTitle?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    title?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "content.Item" */
export type Content_Item_Min_Order_By = {
    chatId?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    shortTitle?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    title?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.Item" */
export type Content_Item_Mutation_Response = {
    __typename?: "content_Item_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Content_Item>;
};

/** input type for inserting object relation for remote table "content.Item" */
export type Content_Item_Obj_Rel_Insert_Input = {
    data: Content_Item_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Content_Item_On_Conflict>;
};

/** on_conflict condition type for table "content.Item" */
export type Content_Item_On_Conflict = {
    constraint: Content_Item_Constraint;
    update_columns?: Array<Content_Item_Update_Column>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

/** Ordering options when selecting data from "content.Item". */
export type Content_Item_Order_By = {
    chat?: InputMaybe<Chat_Chat_Order_By>;
    chatId?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    descriptionOfExhibitions_aggregate?: InputMaybe<Collection_Exhibition_Aggregate_Order_By>;
    elements_aggregate?: InputMaybe<Content_Element_Aggregate_Order_By>;
    events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    hasUnsubmittedElements?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemExhibitions_aggregate?: InputMaybe<Content_ItemExhibition_Aggregate_Order_By>;
    itemPeople_aggregate?: InputMaybe<Content_ItemProgramPerson_Aggregate_Order_By>;
    itemTags_aggregate?: InputMaybe<Content_ItemTag_Aggregate_Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    shortTitle?: InputMaybe<Order_By>;
    sponsorshipTierMemberships_aggregate?: InputMaybe<Sponsor_TierMember_Aggregate_Order_By>;
    stats_aggregate?: InputMaybe<Analytics_ContentItemStats_Aggregate_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    title?: InputMaybe<Order_By>;
    totalViewsStat?: InputMaybe<Analytics_ItemTotalViews_Order_By>;
    type?: InputMaybe<Content_ItemType_Order_By>;
    typeName?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_Item */
export type Content_Item_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "content.Item" */
export enum Content_Item_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    ShortTitle = "shortTitle",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Title = "title",
    /** column name */
    TypeName = "typeName",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "content.Item" */
export type Content_Item_Set_Input = {
    chatId?: InputMaybe<Scalars["uuid"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    shortTitle?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    title?: InputMaybe<Scalars["String"]>;
    typeName?: InputMaybe<Content_ItemType_Enum>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** update columns of table "content.Item" */
export enum Content_Item_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    ShortTitle = "shortTitle",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Title = "title",
    /** column name */
    TypeName = "typeName",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

export type Content_SearchItems_Args = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    search?: InputMaybe<Scalars["String"]>;
};

/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export type Float8_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["float8"]>;
    _gt?: InputMaybe<Scalars["float8"]>;
    _gte?: InputMaybe<Scalars["float8"]>;
    _in?: InputMaybe<Array<Scalars["float8"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["float8"]>;
    _lte?: InputMaybe<Scalars["float8"]>;
    _neq?: InputMaybe<Scalars["float8"]>;
    _nin?: InputMaybe<Array<Scalars["float8"]>>;
};

/** columns and relationships of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob = {
    __typename?: "job_queues_ChannelStackCreateJob";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An object relationship */
    jobStatus: Job_Queues_JobStatus;
    jobStatusName: Job_Queues_JobStatus_Enum;
    message?: Maybe<Scalars["String"]>;
    /** An object relationship */
    room: Room_Room;
    roomId: Scalars["uuid"];
    stackLogicalResourceId: Scalars["String"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate = {
    __typename?: "job_queues_ChannelStackCreateJob_aggregate";
    aggregate?: Maybe<Job_Queues_ChannelStackCreateJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_ChannelStackCreateJob>;
};

/** aggregate fields of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate_Fields = {
    __typename?: "job_queues_ChannelStackCreateJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_ChannelStackCreateJob_Max_Fields>;
    min?: Maybe<Job_Queues_ChannelStackCreateJob_Min_Fields>;
};

/** aggregate fields of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Job_Queues_ChannelStackCreateJob_Max_Order_By>;
    min?: InputMaybe<Job_Queues_ChannelStackCreateJob_Min_Order_By>;
};

/** input type for inserting array relation for remote table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Arr_Rel_Insert_Input = {
    data: Array<Job_Queues_ChannelStackCreateJob_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.ChannelStackCreateJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_ChannelStackCreateJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    message?: InputMaybe<String_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    stackLogicalResourceId?: InputMaybe<String_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ChannelStackCreateJob" */
export enum Job_Queues_ChannelStackCreateJob_Constraint {
    /** unique or primary key constraint */
    ChannelStackCreateJobPkey = "ChannelStackCreateJob_pkey",
    /** unique or primary key constraint */
    ChannelStackCreateJobStackLogicalResourceIdKey = "ChannelStackCreateJob_stackLogicalResourceId_key",
}

/** input type for inserting data into table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    message?: InputMaybe<Scalars["String"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    stackLogicalResourceId?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_ChannelStackCreateJob_Max_Fields = {
    __typename?: "job_queues_ChannelStackCreateJob_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    message?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    stackLogicalResourceId?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    stackLogicalResourceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_ChannelStackCreateJob_Min_Fields = {
    __typename?: "job_queues_ChannelStackCreateJob_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    message?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    stackLogicalResourceId?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    stackLogicalResourceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Mutation_Response = {
    __typename?: "job_queues_ChannelStackCreateJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_ChannelStackCreateJob>;
};

/** input type for inserting object relation for remote table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Obj_Rel_Insert_Input = {
    data: Job_Queues_ChannelStackCreateJob_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** on_conflict condition type for table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_On_Conflict = {
    constraint: Job_Queues_ChannelStackCreateJob_Constraint;
    update_columns?: Array<Job_Queues_ChannelStackCreateJob_Update_Column>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ChannelStackCreateJob". */
export type Job_Queues_ChannelStackCreateJob_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    jobStatusName?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    stackLogicalResourceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ChannelStackCreateJob */
export type Job_Queues_ChannelStackCreateJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "job_queues.ChannelStackCreateJob" */
export enum Job_Queues_ChannelStackCreateJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    RoomId = "roomId",
    /** column name */
    StackLogicalResourceId = "stackLogicalResourceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    message?: InputMaybe<Scalars["String"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    stackLogicalResourceId?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.ChannelStackCreateJob" */
export enum Job_Queues_ChannelStackCreateJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    RoomId = "roomId",
    /** column name */
    StackLogicalResourceId = "stackLogicalResourceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob = {
    __typename?: "job_queues_ChannelStackDeleteJob";
    cloudFormationStackArn: Scalars["String"];
    createdAt: Scalars["timestamptz"];
    id: Scalars["uuid"];
    jobStatusName: Job_Queues_JobStatus_Enum;
    mediaLiveChannelId: Scalars["String"];
    message?: Maybe<Scalars["String"]>;
    updatedAt: Scalars["timestamptz"];
};

/** aggregated selection of "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Aggregate = {
    __typename?: "job_queues_ChannelStackDeleteJob_aggregate";
    aggregate?: Maybe<Job_Queues_ChannelStackDeleteJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_ChannelStackDeleteJob>;
};

/** aggregate fields of "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Aggregate_Fields = {
    __typename?: "job_queues_ChannelStackDeleteJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_ChannelStackDeleteJob_Max_Fields>;
    min?: Maybe<Job_Queues_ChannelStackDeleteJob_Min_Fields>;
};

/** aggregate fields of "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.ChannelStackDeleteJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_ChannelStackDeleteJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Bool_Exp>>;
    cloudFormationStackArn?: InputMaybe<String_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    mediaLiveChannelId?: InputMaybe<String_Comparison_Exp>;
    message?: InputMaybe<String_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ChannelStackDeleteJob" */
export enum Job_Queues_ChannelStackDeleteJob_Constraint {
    /** unique or primary key constraint */
    ChannelStackDeleteJobPkey = "ChannelStackDeleteJob_pkey",
}

/** input type for inserting data into table "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Insert_Input = {
    cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    message?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_ChannelStackDeleteJob_Max_Fields = {
    __typename?: "job_queues_ChannelStackDeleteJob_max_fields";
    cloudFormationStackArn?: Maybe<Scalars["String"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    mediaLiveChannelId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_ChannelStackDeleteJob_Min_Fields = {
    __typename?: "job_queues_ChannelStackDeleteJob_min_fields";
    cloudFormationStackArn?: Maybe<Scalars["String"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    mediaLiveChannelId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Mutation_Response = {
    __typename?: "job_queues_ChannelStackDeleteJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_ChannelStackDeleteJob>;
};

/** on_conflict condition type for table "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_On_Conflict = {
    constraint: Job_Queues_ChannelStackDeleteJob_Constraint;
    update_columns?: Array<Job_Queues_ChannelStackDeleteJob_Update_Column>;
    where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ChannelStackDeleteJob". */
export type Job_Queues_ChannelStackDeleteJob_Order_By = {
    cloudFormationStackArn?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobStatusName?: InputMaybe<Order_By>;
    mediaLiveChannelId?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ChannelStackDeleteJob */
export type Job_Queues_ChannelStackDeleteJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "job_queues.ChannelStackDeleteJob" */
export enum Job_Queues_ChannelStackDeleteJob_Select_Column {
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    Message = "message",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Set_Input = {
    cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    message?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.ChannelStackDeleteJob" */
export enum Job_Queues_ChannelStackDeleteJob_Update_Column {
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    Message = "message",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob = {
    __typename?: "job_queues_ChannelStackUpdateJob";
    /** An object relationship */
    channelStack?: Maybe<Video_ChannelStack>;
    channelStackId?: Maybe<Scalars["uuid"]>;
    cloudFormationStackArn: Scalars["String"];
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    jobStatusName: Job_Queues_JobStatus_Enum;
    mediaLiveChannelId: Scalars["String"];
    message?: Maybe<Scalars["String"]>;
    newRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    newRtmpBInputId?: Maybe<Scalars["String"]>;
    newRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    newRtmpOutputUri?: Maybe<Scalars["String"]>;
    newRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    newRtmpRoomInputId?: Maybe<Scalars["String"]>;
    oldRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    oldRtmpBInputId?: Maybe<Scalars["String"]>;
    oldRtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    oldRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    oldRtmpOutputUri?: Maybe<Scalars["String"]>;
    oldRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    oldRtmpRoomInputId?: Maybe<Scalars["String"]>;
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Aggregate = {
    __typename?: "job_queues_ChannelStackUpdateJob_aggregate";
    aggregate?: Maybe<Job_Queues_ChannelStackUpdateJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_ChannelStackUpdateJob>;
};

/** aggregate fields of "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Aggregate_Fields = {
    __typename?: "job_queues_ChannelStackUpdateJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_ChannelStackUpdateJob_Max_Fields>;
    min?: Maybe<Job_Queues_ChannelStackUpdateJob_Min_Fields>;
};

/** aggregate fields of "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Max_Order_By>;
    min?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Min_Order_By>;
};

/** input type for inserting array relation for remote table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Arr_Rel_Insert_Input = {
    data: Array<Job_Queues_ChannelStackUpdateJob_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Job_Queues_ChannelStackUpdateJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.ChannelStackUpdateJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_ChannelStackUpdateJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Bool_Exp>>;
    channelStack?: InputMaybe<Video_ChannelStack_Bool_Exp>;
    channelStackId?: InputMaybe<Uuid_Comparison_Exp>;
    cloudFormationStackArn?: InputMaybe<String_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    mediaLiveChannelId?: InputMaybe<String_Comparison_Exp>;
    message?: InputMaybe<String_Comparison_Exp>;
    newRtmpBInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    newRtmpBInputId?: InputMaybe<String_Comparison_Exp>;
    newRtmpOutputStreamKey?: InputMaybe<String_Comparison_Exp>;
    newRtmpOutputUri?: InputMaybe<String_Comparison_Exp>;
    newRtmpRoomInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    newRtmpRoomInputId?: InputMaybe<String_Comparison_Exp>;
    oldRtmpBInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    oldRtmpBInputId?: InputMaybe<String_Comparison_Exp>;
    oldRtmpOutputDestinationId?: InputMaybe<String_Comparison_Exp>;
    oldRtmpOutputStreamKey?: InputMaybe<String_Comparison_Exp>;
    oldRtmpOutputUri?: InputMaybe<String_Comparison_Exp>;
    oldRtmpRoomInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    oldRtmpRoomInputId?: InputMaybe<String_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ChannelStackUpdateJob" */
export enum Job_Queues_ChannelStackUpdateJob_Constraint {
    /** unique or primary key constraint */
    ChannelStackUpdateJobPkey = "ChannelStackUpdateJob_pkey",
}

/** input type for inserting data into table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Insert_Input = {
    channelStack?: InputMaybe<Video_ChannelStack_Obj_Rel_Insert_Input>;
    channelStackId?: InputMaybe<Scalars["uuid"]>;
    cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    message?: InputMaybe<Scalars["String"]>;
    newRtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    newRtmpBInputId?: InputMaybe<Scalars["String"]>;
    newRtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    newRtmpOutputUri?: InputMaybe<Scalars["String"]>;
    newRtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    newRtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    oldRtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    oldRtmpBInputId?: InputMaybe<Scalars["String"]>;
    oldRtmpOutputDestinationId?: InputMaybe<Scalars["String"]>;
    oldRtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    oldRtmpOutputUri?: InputMaybe<Scalars["String"]>;
    oldRtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    oldRtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_ChannelStackUpdateJob_Max_Fields = {
    __typename?: "job_queues_ChannelStackUpdateJob_max_fields";
    channelStackId?: Maybe<Scalars["uuid"]>;
    cloudFormationStackArn?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    mediaLiveChannelId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    newRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    newRtmpBInputId?: Maybe<Scalars["String"]>;
    newRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    newRtmpOutputUri?: Maybe<Scalars["String"]>;
    newRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    newRtmpRoomInputId?: Maybe<Scalars["String"]>;
    oldRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    oldRtmpBInputId?: Maybe<Scalars["String"]>;
    oldRtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    oldRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    oldRtmpOutputUri?: Maybe<Scalars["String"]>;
    oldRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    oldRtmpRoomInputId?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Max_Order_By = {
    channelStackId?: InputMaybe<Order_By>;
    cloudFormationStackArn?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    mediaLiveChannelId?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    newRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    newRtmpBInputId?: InputMaybe<Order_By>;
    newRtmpOutputStreamKey?: InputMaybe<Order_By>;
    newRtmpOutputUri?: InputMaybe<Order_By>;
    newRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    newRtmpRoomInputId?: InputMaybe<Order_By>;
    oldRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    oldRtmpBInputId?: InputMaybe<Order_By>;
    oldRtmpOutputDestinationId?: InputMaybe<Order_By>;
    oldRtmpOutputStreamKey?: InputMaybe<Order_By>;
    oldRtmpOutputUri?: InputMaybe<Order_By>;
    oldRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    oldRtmpRoomInputId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_ChannelStackUpdateJob_Min_Fields = {
    __typename?: "job_queues_ChannelStackUpdateJob_min_fields";
    channelStackId?: Maybe<Scalars["uuid"]>;
    cloudFormationStackArn?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    mediaLiveChannelId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    newRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    newRtmpBInputId?: Maybe<Scalars["String"]>;
    newRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    newRtmpOutputUri?: Maybe<Scalars["String"]>;
    newRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    newRtmpRoomInputId?: Maybe<Scalars["String"]>;
    oldRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    oldRtmpBInputId?: Maybe<Scalars["String"]>;
    oldRtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    oldRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    oldRtmpOutputUri?: Maybe<Scalars["String"]>;
    oldRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    oldRtmpRoomInputId?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Min_Order_By = {
    channelStackId?: InputMaybe<Order_By>;
    cloudFormationStackArn?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    mediaLiveChannelId?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    newRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    newRtmpBInputId?: InputMaybe<Order_By>;
    newRtmpOutputStreamKey?: InputMaybe<Order_By>;
    newRtmpOutputUri?: InputMaybe<Order_By>;
    newRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    newRtmpRoomInputId?: InputMaybe<Order_By>;
    oldRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    oldRtmpBInputId?: InputMaybe<Order_By>;
    oldRtmpOutputDestinationId?: InputMaybe<Order_By>;
    oldRtmpOutputStreamKey?: InputMaybe<Order_By>;
    oldRtmpOutputUri?: InputMaybe<Order_By>;
    oldRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    oldRtmpRoomInputId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Mutation_Response = {
    __typename?: "job_queues_ChannelStackUpdateJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_ChannelStackUpdateJob>;
};

/** on_conflict condition type for table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_On_Conflict = {
    constraint: Job_Queues_ChannelStackUpdateJob_Constraint;
    update_columns?: Array<Job_Queues_ChannelStackUpdateJob_Update_Column>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ChannelStackUpdateJob". */
export type Job_Queues_ChannelStackUpdateJob_Order_By = {
    channelStack?: InputMaybe<Video_ChannelStack_Order_By>;
    channelStackId?: InputMaybe<Order_By>;
    cloudFormationStackArn?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobStatusName?: InputMaybe<Order_By>;
    mediaLiveChannelId?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    newRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    newRtmpBInputId?: InputMaybe<Order_By>;
    newRtmpOutputStreamKey?: InputMaybe<Order_By>;
    newRtmpOutputUri?: InputMaybe<Order_By>;
    newRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    newRtmpRoomInputId?: InputMaybe<Order_By>;
    oldRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    oldRtmpBInputId?: InputMaybe<Order_By>;
    oldRtmpOutputDestinationId?: InputMaybe<Order_By>;
    oldRtmpOutputStreamKey?: InputMaybe<Order_By>;
    oldRtmpOutputUri?: InputMaybe<Order_By>;
    oldRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    oldRtmpRoomInputId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ChannelStackUpdateJob */
export type Job_Queues_ChannelStackUpdateJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "job_queues.ChannelStackUpdateJob" */
export enum Job_Queues_ChannelStackUpdateJob_Select_Column {
    /** column name */
    ChannelStackId = "channelStackId",
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    Message = "message",
    /** column name */
    NewRtmpBInputAttachmentName = "newRtmpBInputAttachmentName",
    /** column name */
    NewRtmpBInputId = "newRtmpBInputId",
    /** column name */
    NewRtmpOutputStreamKey = "newRtmpOutputStreamKey",
    /** column name */
    NewRtmpOutputUri = "newRtmpOutputUri",
    /** column name */
    NewRtmpRoomInputAttachmentName = "newRtmpRoomInputAttachmentName",
    /** column name */
    NewRtmpRoomInputId = "newRtmpRoomInputId",
    /** column name */
    OldRtmpBInputAttachmentName = "oldRtmpBInputAttachmentName",
    /** column name */
    OldRtmpBInputId = "oldRtmpBInputId",
    /** column name */
    OldRtmpOutputDestinationId = "oldRtmpOutputDestinationId",
    /** column name */
    OldRtmpOutputStreamKey = "oldRtmpOutputStreamKey",
    /** column name */
    OldRtmpOutputUri = "oldRtmpOutputUri",
    /** column name */
    OldRtmpRoomInputAttachmentName = "oldRtmpRoomInputAttachmentName",
    /** column name */
    OldRtmpRoomInputId = "oldRtmpRoomInputId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Set_Input = {
    channelStackId?: InputMaybe<Scalars["uuid"]>;
    cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    message?: InputMaybe<Scalars["String"]>;
    newRtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    newRtmpBInputId?: InputMaybe<Scalars["String"]>;
    newRtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    newRtmpOutputUri?: InputMaybe<Scalars["String"]>;
    newRtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    newRtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    oldRtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    oldRtmpBInputId?: InputMaybe<Scalars["String"]>;
    oldRtmpOutputDestinationId?: InputMaybe<Scalars["String"]>;
    oldRtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    oldRtmpOutputUri?: InputMaybe<Scalars["String"]>;
    oldRtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    oldRtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.ChannelStackUpdateJob" */
export enum Job_Queues_ChannelStackUpdateJob_Update_Column {
    /** column name */
    ChannelStackId = "channelStackId",
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    Message = "message",
    /** column name */
    NewRtmpBInputAttachmentName = "newRtmpBInputAttachmentName",
    /** column name */
    NewRtmpBInputId = "newRtmpBInputId",
    /** column name */
    NewRtmpOutputStreamKey = "newRtmpOutputStreamKey",
    /** column name */
    NewRtmpOutputUri = "newRtmpOutputUri",
    /** column name */
    NewRtmpRoomInputAttachmentName = "newRtmpRoomInputAttachmentName",
    /** column name */
    NewRtmpRoomInputId = "newRtmpRoomInputId",
    /** column name */
    OldRtmpBInputAttachmentName = "oldRtmpBInputAttachmentName",
    /** column name */
    OldRtmpBInputId = "oldRtmpBInputId",
    /** column name */
    OldRtmpOutputDestinationId = "oldRtmpOutputDestinationId",
    /** column name */
    OldRtmpOutputStreamKey = "oldRtmpOutputStreamKey",
    /** column name */
    OldRtmpOutputUri = "oldRtmpOutputUri",
    /** column name */
    OldRtmpRoomInputAttachmentName = "oldRtmpRoomInputAttachmentName",
    /** column name */
    OldRtmpRoomInputId = "oldRtmpRoomInputId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob = {
    __typename?: "job_queues_CombineVideosJob";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    created_at: Scalars["timestamptz"];
    data: Scalars["jsonb"];
    id: Scalars["uuid"];
    /** An object relationship */
    jobStatus: Job_Queues_JobStatus;
    jobStatusName: Job_Queues_JobStatus_Enum;
    mediaConvertJobId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    outputName: Scalars["String"];
    /** An object relationship */
    registrant?: Maybe<Registrant_Registrant>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJobDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate = {
    __typename?: "job_queues_CombineVideosJob_aggregate";
    aggregate?: Maybe<Job_Queues_CombineVideosJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_CombineVideosJob>;
};

/** aggregate fields of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate_Fields = {
    __typename?: "job_queues_CombineVideosJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_CombineVideosJob_Max_Fields>;
    min?: Maybe<Job_Queues_CombineVideosJob_Min_Fields>;
};

/** aggregate fields of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CombineVideosJob_Append_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "job_queues.CombineVideosJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_CombineVideosJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_CombineVideosJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_CombineVideosJob_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdByRegistrantId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    data?: InputMaybe<Jsonb_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    mediaConvertJobId?: InputMaybe<String_Comparison_Exp>;
    message?: InputMaybe<String_Comparison_Exp>;
    outputName?: InputMaybe<String_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.CombineVideosJob" */
export enum Job_Queues_CombineVideosJob_Constraint {
    /** unique or primary key constraint */
    CombineVideosJobPkey = "CombineVideosJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_CombineVideosJob_Delete_At_Path_Input = {
    data?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_CombineVideosJob_Delete_Elem_Input = {
    data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_CombineVideosJob_Delete_Key_Input = {
    data?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdByRegistrantId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    mediaConvertJobId?: InputMaybe<Scalars["String"]>;
    message?: InputMaybe<Scalars["String"]>;
    outputName?: InputMaybe<Scalars["String"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_CombineVideosJob_Max_Fields = {
    __typename?: "job_queues_CombineVideosJob_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    mediaConvertJobId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    outputName?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_CombineVideosJob_Min_Fields = {
    __typename?: "job_queues_CombineVideosJob_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    mediaConvertJobId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    outputName?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Mutation_Response = {
    __typename?: "job_queues_CombineVideosJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_CombineVideosJob>;
};

/** on_conflict condition type for table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_On_Conflict = {
    constraint: Job_Queues_CombineVideosJob_Constraint;
    update_columns?: Array<Job_Queues_CombineVideosJob_Update_Column>;
    where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.CombineVideosJob". */
export type Job_Queues_CombineVideosJob_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdByRegistrantId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    data?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    jobStatusName?: InputMaybe<Order_By>;
    mediaConvertJobId?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    outputName?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_CombineVideosJob */
export type Job_Queues_CombineVideosJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CombineVideosJob_Prepend_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.CombineVideosJob" */
export enum Job_Queues_CombineVideosJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedByRegistrantId = "createdByRegistrantId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaConvertJobId = "mediaConvertJobId",
    /** column name */
    Message = "message",
    /** column name */
    OutputName = "outputName",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdByRegistrantId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    mediaConvertJobId?: InputMaybe<Scalars["String"]>;
    message?: InputMaybe<Scalars["String"]>;
    outputName?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.CombineVideosJob" */
export enum Job_Queues_CombineVideosJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedByRegistrantId = "createdByRegistrantId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaConvertJobId = "mediaConvertJobId",
    /** column name */
    Message = "message",
    /** column name */
    OutputName = "outputName",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob = {
    __typename?: "job_queues_CustomEmailJob";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    markdownBody: Scalars["String"];
    processed: Scalars["Boolean"];
    registrantIds: Scalars["jsonb"];
    /** An object relationship */
    subconference?: Maybe<Conference_Subconference>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    subject: Scalars["String"];
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJobRegistrantIdsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate = {
    __typename?: "job_queues_CustomEmailJob_aggregate";
    aggregate?: Maybe<Job_Queues_CustomEmailJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_CustomEmailJob>;
};

/** aggregate fields of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate_Fields = {
    __typename?: "job_queues_CustomEmailJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_CustomEmailJob_Max_Fields>;
    min?: Maybe<Job_Queues_CustomEmailJob_Min_Fields>;
};

/** aggregate fields of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CustomEmailJob_Append_Input = {
    registrantIds?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "job_queues.CustomEmailJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_CustomEmailJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_CustomEmailJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_CustomEmailJob_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    markdownBody?: InputMaybe<String_Comparison_Exp>;
    processed?: InputMaybe<Boolean_Comparison_Exp>;
    registrantIds?: InputMaybe<Jsonb_Comparison_Exp>;
    subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    subject?: InputMaybe<String_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.CustomEmailJob" */
export enum Job_Queues_CustomEmailJob_Constraint {
    /** unique or primary key constraint */
    CustomEmailJobPkey = "CustomEmailJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_CustomEmailJob_Delete_At_Path_Input = {
    registrantIds?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_CustomEmailJob_Delete_Elem_Input = {
    registrantIds?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_CustomEmailJob_Delete_Key_Input = {
    registrantIds?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    markdownBody?: InputMaybe<Scalars["String"]>;
    processed?: InputMaybe<Scalars["Boolean"]>;
    registrantIds?: InputMaybe<Scalars["jsonb"]>;
    subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    subject?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_CustomEmailJob_Max_Fields = {
    __typename?: "job_queues_CustomEmailJob_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    markdownBody?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    subject?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_CustomEmailJob_Min_Fields = {
    __typename?: "job_queues_CustomEmailJob_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    markdownBody?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    subject?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Mutation_Response = {
    __typename?: "job_queues_CustomEmailJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_CustomEmailJob>;
};

/** on_conflict condition type for table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_On_Conflict = {
    constraint: Job_Queues_CustomEmailJob_Constraint;
    update_columns?: Array<Job_Queues_CustomEmailJob_Update_Column>;
    where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.CustomEmailJob". */
export type Job_Queues_CustomEmailJob_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    markdownBody?: InputMaybe<Order_By>;
    processed?: InputMaybe<Order_By>;
    registrantIds?: InputMaybe<Order_By>;
    subconference?: InputMaybe<Conference_Subconference_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    subject?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_CustomEmailJob */
export type Job_Queues_CustomEmailJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CustomEmailJob_Prepend_Input = {
    registrantIds?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.CustomEmailJob" */
export enum Job_Queues_CustomEmailJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    MarkdownBody = "markdownBody",
    /** column name */
    Processed = "processed",
    /** column name */
    RegistrantIds = "registrantIds",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Subject = "subject",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    markdownBody?: InputMaybe<Scalars["String"]>;
    processed?: InputMaybe<Scalars["Boolean"]>;
    registrantIds?: InputMaybe<Scalars["jsonb"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    subject?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.CustomEmailJob" */
export enum Job_Queues_CustomEmailJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    MarkdownBody = "markdownBody",
    /** column name */
    Processed = "processed",
    /** column name */
    RegistrantIds = "registrantIds",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Subject = "subject",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJob = {
    __typename?: "job_queues_ImportJob";
    completed_at?: Maybe<Scalars["timestamptz"]>;
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdBy?: Maybe<Scalars["uuid"]>;
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    creator?: Maybe<Registrant_Registrant>;
    data: Scalars["jsonb"];
    errors?: Maybe<Scalars["jsonb"]>;
    id: Scalars["uuid"];
    options: Scalars["jsonb"];
    /** An array relationship */
    outputs: Array<Job_Queues_ImportJobOutput>;
    /** An aggregate relationship */
    outputs_aggregate: Job_Queues_ImportJobOutput_Aggregate;
    progress: Scalars["Int"];
    progressMaximum: Scalars["Int"];
    status: Scalars["String"];
    /** An object relationship */
    subconference?: Maybe<Conference_Subconference>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobErrorsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobOptionsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobOutputsArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobOutputs_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

/** columns and relationships of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput = {
    __typename?: "job_queues_ImportJobOutput";
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    jobId: Scalars["uuid"];
    name: Scalars["String"];
    updated_at: Scalars["timestamptz"];
    value: Scalars["jsonb"];
};

/** columns and relationships of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutputValueArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Aggregate = {
    __typename?: "job_queues_ImportJobOutput_aggregate";
    aggregate?: Maybe<Job_Queues_ImportJobOutput_Aggregate_Fields>;
    nodes: Array<Job_Queues_ImportJobOutput>;
};

/** aggregate fields of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Aggregate_Fields = {
    __typename?: "job_queues_ImportJobOutput_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_ImportJobOutput_Max_Fields>;
    min?: Maybe<Job_Queues_ImportJobOutput_Min_Fields>;
};

/** aggregate fields of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_ImportJobOutput_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Job_Queues_ImportJobOutput_Max_Order_By>;
    min?: InputMaybe<Job_Queues_ImportJobOutput_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_ImportJobOutput_Append_Input = {
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Arr_Rel_Insert_Input = {
    data: Array<Job_Queues_ImportJobOutput_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Job_Queues_ImportJobOutput_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.ImportJobOutput". All fields are combined with a logical 'AND'. */
export type Job_Queues_ImportJobOutput_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_ImportJobOutput_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_ImportJobOutput_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobId?: InputMaybe<Uuid_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    value?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ImportJobOutput" */
export enum Job_Queues_ImportJobOutput_Constraint {
    /** unique or primary key constraint */
    ImportJobOutputJobIdNameKey = "ImportJobOutput_jobId_name_key",
    /** unique or primary key constraint */
    ImportJobOutputPkey = "ImportJobOutput_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_ImportJobOutput_Delete_At_Path_Input = {
    value?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_ImportJobOutput_Delete_Elem_Input = {
    value?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_ImportJobOutput_Delete_Key_Input = {
    value?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobId?: InputMaybe<Scalars["uuid"]>;
    name?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type Job_Queues_ImportJobOutput_Max_Fields = {
    __typename?: "job_queues_ImportJobOutput_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    jobId?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobId?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_ImportJobOutput_Min_Fields = {
    __typename?: "job_queues_ImportJobOutput_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    jobId?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobId?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Mutation_Response = {
    __typename?: "job_queues_ImportJobOutput_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_ImportJobOutput>;
};

/** on_conflict condition type for table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_On_Conflict = {
    constraint: Job_Queues_ImportJobOutput_Constraint;
    update_columns?: Array<Job_Queues_ImportJobOutput_Update_Column>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ImportJobOutput". */
export type Job_Queues_ImportJobOutput_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobId?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ImportJobOutput */
export type Job_Queues_ImportJobOutput_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_ImportJobOutput_Prepend_Input = {
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.ImportJobOutput" */
export enum Job_Queues_ImportJobOutput_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobId = "jobId",
    /** column name */
    Name = "name",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Value = "value",
}

/** input type for updating data in table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobId?: InputMaybe<Scalars["uuid"]>;
    name?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** update columns of table "job_queues.ImportJobOutput" */
export enum Job_Queues_ImportJobOutput_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobId = "jobId",
    /** column name */
    Name = "name",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Value = "value",
}

/** aggregated selection of "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Aggregate = {
    __typename?: "job_queues_ImportJob_aggregate";
    aggregate?: Maybe<Job_Queues_ImportJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_ImportJob>;
};

/** aggregate fields of "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Aggregate_Fields = {
    __typename?: "job_queues_ImportJob_aggregate_fields";
    avg?: Maybe<Job_Queues_ImportJob_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_ImportJob_Max_Fields>;
    min?: Maybe<Job_Queues_ImportJob_Min_Fields>;
    stddev?: Maybe<Job_Queues_ImportJob_Stddev_Fields>;
    stddev_pop?: Maybe<Job_Queues_ImportJob_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Job_Queues_ImportJob_Stddev_Samp_Fields>;
    sum?: Maybe<Job_Queues_ImportJob_Sum_Fields>;
    var_pop?: Maybe<Job_Queues_ImportJob_Var_Pop_Fields>;
    var_samp?: Maybe<Job_Queues_ImportJob_Var_Samp_Fields>;
    variance?: Maybe<Job_Queues_ImportJob_Variance_Fields>;
};

/** aggregate fields of "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_ImportJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_ImportJob_Append_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
    errors?: InputMaybe<Scalars["jsonb"]>;
    options?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate avg on columns */
export type Job_Queues_ImportJob_Avg_Fields = {
    __typename?: "job_queues_ImportJob_avg_fields";
    progress?: Maybe<Scalars["Float"]>;
    progressMaximum?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "job_queues.ImportJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_ImportJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_ImportJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_ImportJob_Bool_Exp>>;
    completed_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdBy?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    creator?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    data?: InputMaybe<Jsonb_Comparison_Exp>;
    errors?: InputMaybe<Jsonb_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    options?: InputMaybe<Jsonb_Comparison_Exp>;
    outputs?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
    progress?: InputMaybe<Int_Comparison_Exp>;
    progressMaximum?: InputMaybe<Int_Comparison_Exp>;
    status?: InputMaybe<String_Comparison_Exp>;
    subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ImportJob" */
export enum Job_Queues_ImportJob_Constraint {
    /** unique or primary key constraint */
    ImportJobConferenceIdStatusKey = "ImportJob_conferenceId_status_key",
    /** unique or primary key constraint */
    ImportJobConferenceIdSubconferenceIdStatusKey = "ImportJob_conferenceId_subconferenceId_status_key",
    /** unique or primary key constraint */
    ImportJobPkey = "ImportJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_ImportJob_Delete_At_Path_Input = {
    data?: InputMaybe<Array<Scalars["String"]>>;
    errors?: InputMaybe<Array<Scalars["String"]>>;
    options?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_ImportJob_Delete_Elem_Input = {
    data?: InputMaybe<Scalars["Int"]>;
    errors?: InputMaybe<Scalars["Int"]>;
    options?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_ImportJob_Delete_Key_Input = {
    data?: InputMaybe<Scalars["String"]>;
    errors?: InputMaybe<Scalars["String"]>;
    options?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Inc_Input = {
    progress?: InputMaybe<Scalars["Int"]>;
    progressMaximum?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Insert_Input = {
    completed_at?: InputMaybe<Scalars["timestamptz"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdBy?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    creator?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    data?: InputMaybe<Scalars["jsonb"]>;
    errors?: InputMaybe<Scalars["jsonb"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    options?: InputMaybe<Scalars["jsonb"]>;
    outputs?: InputMaybe<Job_Queues_ImportJobOutput_Arr_Rel_Insert_Input>;
    progress?: InputMaybe<Scalars["Int"]>;
    progressMaximum?: InputMaybe<Scalars["Int"]>;
    status?: InputMaybe<Scalars["String"]>;
    subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_ImportJob_Max_Fields = {
    __typename?: "job_queues_ImportJob_max_fields";
    completed_at?: Maybe<Scalars["timestamptz"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdBy?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    progress?: Maybe<Scalars["Int"]>;
    progressMaximum?: Maybe<Scalars["Int"]>;
    status?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_ImportJob_Min_Fields = {
    __typename?: "job_queues_ImportJob_min_fields";
    completed_at?: Maybe<Scalars["timestamptz"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdBy?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    progress?: Maybe<Scalars["Int"]>;
    progressMaximum?: Maybe<Scalars["Int"]>;
    status?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Mutation_Response = {
    __typename?: "job_queues_ImportJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_ImportJob>;
};

/** on_conflict condition type for table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_On_Conflict = {
    constraint: Job_Queues_ImportJob_Constraint;
    update_columns?: Array<Job_Queues_ImportJob_Update_Column>;
    where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ImportJob". */
export type Job_Queues_ImportJob_Order_By = {
    completed_at?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdBy?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    creator?: InputMaybe<Registrant_Registrant_Order_By>;
    data?: InputMaybe<Order_By>;
    errors?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    options?: InputMaybe<Order_By>;
    outputs_aggregate?: InputMaybe<Job_Queues_ImportJobOutput_Aggregate_Order_By>;
    progress?: InputMaybe<Order_By>;
    progressMaximum?: InputMaybe<Order_By>;
    status?: InputMaybe<Order_By>;
    subconference?: InputMaybe<Conference_Subconference_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ImportJob */
export type Job_Queues_ImportJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_ImportJob_Prepend_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
    errors?: InputMaybe<Scalars["jsonb"]>;
    options?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.ImportJob" */
export enum Job_Queues_ImportJob_Select_Column {
    /** column name */
    CompletedAt = "completed_at",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedBy = "createdBy",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    Errors = "errors",
    /** column name */
    Id = "id",
    /** column name */
    Options = "options",
    /** column name */
    Progress = "progress",
    /** column name */
    ProgressMaximum = "progressMaximum",
    /** column name */
    Status = "status",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Set_Input = {
    completed_at?: InputMaybe<Scalars["timestamptz"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdBy?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    errors?: InputMaybe<Scalars["jsonb"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    options?: InputMaybe<Scalars["jsonb"]>;
    progress?: InputMaybe<Scalars["Int"]>;
    progressMaximum?: InputMaybe<Scalars["Int"]>;
    status?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Job_Queues_ImportJob_Stddev_Fields = {
    __typename?: "job_queues_ImportJob_stddev_fields";
    progress?: Maybe<Scalars["Float"]>;
    progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Job_Queues_ImportJob_Stddev_Pop_Fields = {
    __typename?: "job_queues_ImportJob_stddev_pop_fields";
    progress?: Maybe<Scalars["Float"]>;
    progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Job_Queues_ImportJob_Stddev_Samp_Fields = {
    __typename?: "job_queues_ImportJob_stddev_samp_fields";
    progress?: Maybe<Scalars["Float"]>;
    progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Job_Queues_ImportJob_Sum_Fields = {
    __typename?: "job_queues_ImportJob_sum_fields";
    progress?: Maybe<Scalars["Int"]>;
    progressMaximum?: Maybe<Scalars["Int"]>;
};

/** update columns of table "job_queues.ImportJob" */
export enum Job_Queues_ImportJob_Update_Column {
    /** column name */
    CompletedAt = "completed_at",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedBy = "createdBy",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    Errors = "errors",
    /** column name */
    Id = "id",
    /** column name */
    Options = "options",
    /** column name */
    Progress = "progress",
    /** column name */
    ProgressMaximum = "progressMaximum",
    /** column name */
    Status = "status",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Job_Queues_ImportJob_Var_Pop_Fields = {
    __typename?: "job_queues_ImportJob_var_pop_fields";
    progress?: Maybe<Scalars["Float"]>;
    progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Job_Queues_ImportJob_Var_Samp_Fields = {
    __typename?: "job_queues_ImportJob_var_samp_fields";
    progress?: Maybe<Scalars["Float"]>;
    progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Job_Queues_ImportJob_Variance_Fields = {
    __typename?: "job_queues_ImportJob_variance_fields";
    progress?: Maybe<Scalars["Float"]>;
    progressMaximum?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob = {
    __typename?: "job_queues_InvitationEmailJob";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    id: Scalars["uuid"];
    processed: Scalars["Boolean"];
    registrantIds: Scalars["jsonb"];
    sendRepeat: Scalars["Boolean"];
    updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJobRegistrantIdsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate = {
    __typename?: "job_queues_InvitationEmailJob_aggregate";
    aggregate?: Maybe<Job_Queues_InvitationEmailJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_InvitationEmailJob>;
};

/** aggregate fields of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate_Fields = {
    __typename?: "job_queues_InvitationEmailJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_InvitationEmailJob_Max_Fields>;
    min?: Maybe<Job_Queues_InvitationEmailJob_Min_Fields>;
};

/** aggregate fields of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_InvitationEmailJob_Append_Input = {
    registrantIds?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "job_queues.InvitationEmailJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_InvitationEmailJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    processed?: InputMaybe<Boolean_Comparison_Exp>;
    registrantIds?: InputMaybe<Jsonb_Comparison_Exp>;
    sendRepeat?: InputMaybe<Boolean_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.InvitationEmailJob" */
export enum Job_Queues_InvitationEmailJob_Constraint {
    /** unique or primary key constraint */
    InvitationEmailJobsPkey = "InvitationEmailJobs_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_InvitationEmailJob_Delete_At_Path_Input = {
    registrantIds?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_InvitationEmailJob_Delete_Elem_Input = {
    registrantIds?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_InvitationEmailJob_Delete_Key_Input = {
    registrantIds?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    processed?: InputMaybe<Scalars["Boolean"]>;
    registrantIds?: InputMaybe<Scalars["jsonb"]>;
    sendRepeat?: InputMaybe<Scalars["Boolean"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_InvitationEmailJob_Max_Fields = {
    __typename?: "job_queues_InvitationEmailJob_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_InvitationEmailJob_Min_Fields = {
    __typename?: "job_queues_InvitationEmailJob_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Mutation_Response = {
    __typename?: "job_queues_InvitationEmailJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_InvitationEmailJob>;
};

/** on_conflict condition type for table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_On_Conflict = {
    constraint: Job_Queues_InvitationEmailJob_Constraint;
    update_columns?: Array<Job_Queues_InvitationEmailJob_Update_Column>;
    where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.InvitationEmailJob". */
export type Job_Queues_InvitationEmailJob_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    processed?: InputMaybe<Order_By>;
    registrantIds?: InputMaybe<Order_By>;
    sendRepeat?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_InvitationEmailJob */
export type Job_Queues_InvitationEmailJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_InvitationEmailJob_Prepend_Input = {
    registrantIds?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.InvitationEmailJob" */
export enum Job_Queues_InvitationEmailJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Processed = "processed",
    /** column name */
    RegistrantIds = "registrantIds",
    /** column name */
    SendRepeat = "sendRepeat",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    processed?: InputMaybe<Scalars["Boolean"]>;
    registrantIds?: InputMaybe<Scalars["jsonb"]>;
    sendRepeat?: InputMaybe<Scalars["Boolean"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.InvitationEmailJob" */
export enum Job_Queues_InvitationEmailJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Processed = "processed",
    /** column name */
    RegistrantIds = "registrantIds",
    /** column name */
    SendRepeat = "sendRepeat",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "job_queues.JobStatus" */
export type Job_Queues_JobStatus = {
    __typename?: "job_queues_JobStatus";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Aggregate = {
    __typename?: "job_queues_JobStatus_aggregate";
    aggregate?: Maybe<Job_Queues_JobStatus_Aggregate_Fields>;
    nodes: Array<Job_Queues_JobStatus>;
};

/** aggregate fields of "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Aggregate_Fields = {
    __typename?: "job_queues_JobStatus_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_JobStatus_Max_Fields>;
    min?: Maybe<Job_Queues_JobStatus_Min_Fields>;
};

/** aggregate fields of "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_JobStatus_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.JobStatus". All fields are combined with a logical 'AND'. */
export type Job_Queues_JobStatus_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_JobStatus_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_JobStatus_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.JobStatus" */
export enum Job_Queues_JobStatus_Constraint {
    /** unique or primary key constraint */
    JobStatusPkey = "JobStatus_pkey",
}

export enum Job_Queues_JobStatus_Enum {
    /** Job completed successfully. */
    Completed = "COMPLETED",
    /** Job is no longer valid. */
    Expired = "EXPIRED",
    /** Job failed during execution. */
    Failed = "FAILED",
    /** Job is currently in progress. */
    InProgress = "IN_PROGRESS",
    /** Job has not yet started execution. */
    New = "NEW",
}

/** Boolean expression to compare columns of type "job_queues_JobStatus_enum". All fields are combined with logical 'AND'. */
export type Job_Queues_JobStatus_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Job_Queues_JobStatus_Enum>;
    _in?: InputMaybe<Array<Job_Queues_JobStatus_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Job_Queues_JobStatus_Enum>;
    _nin?: InputMaybe<Array<Job_Queues_JobStatus_Enum>>;
};

/** input type for inserting data into table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Job_Queues_JobStatus_Max_Fields = {
    __typename?: "job_queues_JobStatus_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Job_Queues_JobStatus_Min_Fields = {
    __typename?: "job_queues_JobStatus_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Mutation_Response = {
    __typename?: "job_queues_JobStatus_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_JobStatus>;
};

/** input type for inserting object relation for remote table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Obj_Rel_Insert_Input = {
    data: Job_Queues_JobStatus_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Job_Queues_JobStatus_On_Conflict>;
};

/** on_conflict condition type for table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_On_Conflict = {
    constraint: Job_Queues_JobStatus_Constraint;
    update_columns?: Array<Job_Queues_JobStatus_Update_Column>;
    where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.JobStatus". */
export type Job_Queues_JobStatus_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_JobStatus */
export type Job_Queues_JobStatus_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "job_queues.JobStatus" */
export enum Job_Queues_JobStatus_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "job_queues.JobStatus" */
export enum Job_Queues_JobStatus_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob = {
    __typename?: "job_queues_MediaPackageHarvestJob";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    event: Schedule_Event;
    eventId: Scalars["uuid"];
    id: Scalars["uuid"];
    /** An object relationship */
    jobStatus: Job_Queues_JobStatus;
    jobStatusName: Job_Queues_JobStatus_Enum;
    mediaPackageHarvestJobId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate = {
    __typename?: "job_queues_MediaPackageHarvestJob_aggregate";
    aggregate?: Maybe<Job_Queues_MediaPackageHarvestJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_MediaPackageHarvestJob>;
};

/** aggregate fields of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate_Fields = {
    __typename?: "job_queues_MediaPackageHarvestJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_MediaPackageHarvestJob_Max_Fields>;
    min?: Maybe<Job_Queues_MediaPackageHarvestJob_Min_Fields>;
};

/** aggregate fields of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.MediaPackageHarvestJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_MediaPackageHarvestJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    event?: InputMaybe<Schedule_Event_Bool_Exp>;
    eventId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    mediaPackageHarvestJobId?: InputMaybe<String_Comparison_Exp>;
    message?: InputMaybe<String_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.MediaPackageHarvestJob" */
export enum Job_Queues_MediaPackageHarvestJob_Constraint {
    /** unique or primary key constraint */
    MediaPackageHarvestJobMediaPackageHarvestJobIdKey = "MediaPackageHarvestJob_mediaPackageHarvestJobId_key",
    /** unique or primary key constraint */
    MediaPackageHarvestJobPkey = "MediaPackageHarvestJob_pkey",
}

/** input type for inserting data into table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    mediaPackageHarvestJobId?: InputMaybe<Scalars["String"]>;
    message?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_MediaPackageHarvestJob_Max_Fields = {
    __typename?: "job_queues_MediaPackageHarvestJob_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    mediaPackageHarvestJobId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_MediaPackageHarvestJob_Min_Fields = {
    __typename?: "job_queues_MediaPackageHarvestJob_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    mediaPackageHarvestJobId?: Maybe<Scalars["String"]>;
    message?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Mutation_Response = {
    __typename?: "job_queues_MediaPackageHarvestJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_MediaPackageHarvestJob>;
};

/** on_conflict condition type for table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_On_Conflict = {
    constraint: Job_Queues_MediaPackageHarvestJob_Constraint;
    update_columns?: Array<Job_Queues_MediaPackageHarvestJob_Update_Column>;
    where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.MediaPackageHarvestJob". */
export type Job_Queues_MediaPackageHarvestJob_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    event?: InputMaybe<Schedule_Event_Order_By>;
    eventId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    jobStatusName?: InputMaybe<Order_By>;
    mediaPackageHarvestJobId?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_MediaPackageHarvestJob */
export type Job_Queues_MediaPackageHarvestJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "job_queues.MediaPackageHarvestJob" */
export enum Job_Queues_MediaPackageHarvestJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaPackageHarvestJobId = "mediaPackageHarvestJobId",
    /** column name */
    Message = "message",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    mediaPackageHarvestJobId?: InputMaybe<Scalars["String"]>;
    message?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.MediaPackageHarvestJob" */
export enum Job_Queues_MediaPackageHarvestJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaPackageHarvestJobId = "mediaPackageHarvestJobId",
    /** column name */
    Message = "message",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob = {
    __typename?: "job_queues_PrepareJob";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An object relationship */
    jobStatus: Job_Queues_JobStatus;
    jobStatusName: Job_Queues_JobStatus_Enum;
    message?: Maybe<Scalars["String"]>;
    updatedAt: Scalars["timestamptz"];
    /** An array relationship */
    videoRenderJobs: Array<Video_VideoRenderJob>;
    /** An aggregate relationship */
    videoRenderJobs_aggregate: Video_VideoRenderJob_Aggregate;
};

/** columns and relationships of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJobVideoRenderJobsArgs = {
    distinct_on?: InputMaybe<Array<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

/** columns and relationships of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJobVideoRenderJobs_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

/** aggregated selection of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Aggregate = {
    __typename?: "job_queues_PrepareJob_aggregate";
    aggregate?: Maybe<Job_Queues_PrepareJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_PrepareJob>;
};

/** aggregate fields of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Aggregate_Fields = {
    __typename?: "job_queues_PrepareJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_PrepareJob_Max_Fields>;
    min?: Maybe<Job_Queues_PrepareJob_Min_Fields>;
};

/** aggregate fields of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_PrepareJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.PrepareJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_PrepareJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_PrepareJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_PrepareJob_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    message?: InputMaybe<String_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    videoRenderJobs?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

/** unique or primary key constraints on table "job_queues.PrepareJob" */
export enum Job_Queues_PrepareJob_Constraint {
    /** unique or primary key constraint */
    PrepareJobPkey = "PrepareJob_pkey",
}

/** input type for inserting data into table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    message?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    videoRenderJobs?: InputMaybe<Video_VideoRenderJob_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Job_Queues_PrepareJob_Max_Fields = {
    __typename?: "job_queues_PrepareJob_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    message?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_PrepareJob_Min_Fields = {
    __typename?: "job_queues_PrepareJob_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    message?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Mutation_Response = {
    __typename?: "job_queues_PrepareJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_PrepareJob>;
};

/** input type for inserting object relation for remote table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Obj_Rel_Insert_Input = {
    data: Job_Queues_PrepareJob_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Job_Queues_PrepareJob_On_Conflict>;
};

/** on_conflict condition type for table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_On_Conflict = {
    constraint: Job_Queues_PrepareJob_Constraint;
    update_columns?: Array<Job_Queues_PrepareJob_Update_Column>;
    where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.PrepareJob". */
export type Job_Queues_PrepareJob_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    jobStatusName?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    videoRenderJobs_aggregate?: InputMaybe<Video_VideoRenderJob_Aggregate_Order_By>;
};

/** primary key columns input for table: job_queues_PrepareJob */
export type Job_Queues_PrepareJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "job_queues.PrepareJob" */
export enum Job_Queues_PrepareJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    message?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.PrepareJob" */
export enum Job_Queues_PrepareJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob = {
    __typename?: "job_queues_PublishVideoJob";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    /** An object relationship */
    element: Content_Element;
    elementId: Scalars["uuid"];
    id: Scalars["uuid"];
    jobStatusName: Scalars["String"];
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt: Scalars["timestamptz"];
    vimeoVideoUrl?: Maybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate = {
    __typename?: "job_queues_PublishVideoJob_aggregate";
    aggregate?: Maybe<Job_Queues_PublishVideoJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_PublishVideoJob>;
};

/** aggregate fields of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate_Fields = {
    __typename?: "job_queues_PublishVideoJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_PublishVideoJob_Max_Fields>;
    min?: Maybe<Job_Queues_PublishVideoJob_Min_Fields>;
};

/** aggregate fields of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.PublishVideoJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_PublishVideoJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_PublishVideoJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_PublishVideoJob_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    element?: InputMaybe<Content_Element_Bool_Exp>;
    elementId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobStatusName?: InputMaybe<String_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    vimeoVideoUrl?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.PublishVideoJob" */
export enum Job_Queues_PublishVideoJob_Constraint {
    /** unique or primary key constraint */
    PublishVideoJobPkey = "PublishVideoJob_pkey",
}

/** input type for inserting data into table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    vimeoVideoUrl?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Job_Queues_PublishVideoJob_Max_Fields = {
    __typename?: "job_queues_PublishVideoJob_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    jobStatusName?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    vimeoVideoUrl?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Job_Queues_PublishVideoJob_Min_Fields = {
    __typename?: "job_queues_PublishVideoJob_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    jobStatusName?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    vimeoVideoUrl?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Mutation_Response = {
    __typename?: "job_queues_PublishVideoJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_PublishVideoJob>;
};

/** on_conflict condition type for table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_On_Conflict = {
    constraint: Job_Queues_PublishVideoJob_Constraint;
    update_columns?: Array<Job_Queues_PublishVideoJob_Update_Column>;
    where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.PublishVideoJob". */
export type Job_Queues_PublishVideoJob_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    element?: InputMaybe<Content_Element_Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobStatusName?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    vimeoVideoUrl?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_PublishVideoJob */
export type Job_Queues_PublishVideoJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "job_queues.PublishVideoJob" */
export enum Job_Queues_PublishVideoJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VimeoVideoUrl = "vimeoVideoUrl",
}

/** input type for updating data in table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    vimeoVideoUrl?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "job_queues.PublishVideoJob" */
export enum Job_Queues_PublishVideoJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VimeoVideoUrl = "vimeoVideoUrl",
}

/** columns and relationships of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob = {
    __typename?: "job_queues_SubmissionRequestEmailJob";
    created_at: Scalars["timestamptz"];
    emailTemplate?: Maybe<Scalars["jsonb"]>;
    id: Scalars["uuid"];
    /** An object relationship */
    person: Collection_ProgramPerson;
    personId: Scalars["uuid"];
    processed: Scalars["Boolean"];
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJobEmailTemplateArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate = {
    __typename?: "job_queues_SubmissionRequestEmailJob_aggregate";
    aggregate?: Maybe<Job_Queues_SubmissionRequestEmailJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_SubmissionRequestEmailJob>;
};

/** aggregate fields of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate_Fields = {
    __typename?: "job_queues_SubmissionRequestEmailJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_SubmissionRequestEmailJob_Max_Fields>;
    min?: Maybe<Job_Queues_SubmissionRequestEmailJob_Min_Fields>;
};

/** aggregate fields of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_SubmissionRequestEmailJob_Append_Input = {
    emailTemplate?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "job_queues.SubmissionRequestEmailJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_SubmissionRequestEmailJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    emailTemplate?: InputMaybe<Jsonb_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    person?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    personId?: InputMaybe<Uuid_Comparison_Exp>;
    processed?: InputMaybe<Boolean_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.SubmissionRequestEmailJob" */
export enum Job_Queues_SubmissionRequestEmailJob_Constraint {
    /** unique or primary key constraint */
    SubmissionRequestEmailJobPkey = "SubmissionRequestEmailJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_SubmissionRequestEmailJob_Delete_At_Path_Input = {
    emailTemplate?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_SubmissionRequestEmailJob_Delete_Elem_Input = {
    emailTemplate?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_SubmissionRequestEmailJob_Delete_Key_Input = {
    emailTemplate?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    emailTemplate?: InputMaybe<Scalars["jsonb"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    person?: InputMaybe<Collection_ProgramPerson_Obj_Rel_Insert_Input>;
    personId?: InputMaybe<Scalars["uuid"]>;
    processed?: InputMaybe<Scalars["Boolean"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_SubmissionRequestEmailJob_Max_Fields = {
    __typename?: "job_queues_SubmissionRequestEmailJob_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    personId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_SubmissionRequestEmailJob_Min_Fields = {
    __typename?: "job_queues_SubmissionRequestEmailJob_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    personId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Mutation_Response = {
    __typename?: "job_queues_SubmissionRequestEmailJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_SubmissionRequestEmailJob>;
};

/** on_conflict condition type for table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_On_Conflict = {
    constraint: Job_Queues_SubmissionRequestEmailJob_Constraint;
    update_columns?: Array<Job_Queues_SubmissionRequestEmailJob_Update_Column>;
    where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.SubmissionRequestEmailJob". */
export type Job_Queues_SubmissionRequestEmailJob_Order_By = {
    created_at?: InputMaybe<Order_By>;
    emailTemplate?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    person?: InputMaybe<Collection_ProgramPerson_Order_By>;
    personId?: InputMaybe<Order_By>;
    processed?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_SubmissionRequestEmailJob */
export type Job_Queues_SubmissionRequestEmailJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_SubmissionRequestEmailJob_Prepend_Input = {
    emailTemplate?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.SubmissionRequestEmailJob" */
export enum Job_Queues_SubmissionRequestEmailJob_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EmailTemplate = "emailTemplate",
    /** column name */
    Id = "id",
    /** column name */
    PersonId = "personId",
    /** column name */
    Processed = "processed",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    emailTemplate?: InputMaybe<Scalars["jsonb"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    personId?: InputMaybe<Scalars["uuid"]>;
    processed?: InputMaybe<Scalars["Boolean"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.SubmissionRequestEmailJob" */
export enum Job_Queues_SubmissionRequestEmailJob_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EmailTemplate = "emailTemplate",
    /** column name */
    Id = "id",
    /** column name */
    PersonId = "personId",
    /** column name */
    Processed = "processed",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob = {
    __typename?: "job_queues_UploadYouTubeVideoJob";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    /** An object relationship */
    element: Content_Element;
    elementId: Scalars["uuid"];
    id: Scalars["uuid"];
    /** An object relationship */
    jobStatus: Job_Queues_JobStatus;
    jobStatusName: Job_Queues_JobStatus_Enum;
    message?: Maybe<Scalars["String"]>;
    playlistId?: Maybe<Scalars["String"]>;
    /** An object relationship */
    registrantGoogleAccount: Registrant_GoogleAccount;
    registrantGoogleAccountId: Scalars["uuid"];
    result?: Maybe<Scalars["jsonb"]>;
    retriesCount: Scalars["Int"];
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt: Scalars["timestamptz"];
    videoDescription: Scalars["String"];
    videoPrivacyStatus: Scalars["String"];
    videoTitle: Scalars["String"];
    /** An array relationship */
    youTubeUploads: Array<Video_YouTubeUpload>;
    /** An aggregate relationship */
    youTubeUploads_aggregate: Video_YouTubeUpload_Aggregate;
};

/** columns and relationships of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJobResultArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJobYouTubeUploadsArgs = {
    distinct_on?: InputMaybe<Array<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** columns and relationships of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJobYouTubeUploads_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** aggregated selection of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate = {
    __typename?: "job_queues_UploadYouTubeVideoJob_aggregate";
    aggregate?: Maybe<Job_Queues_UploadYouTubeVideoJob_Aggregate_Fields>;
    nodes: Array<Job_Queues_UploadYouTubeVideoJob>;
};

/** aggregate fields of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_aggregate_fields";
    avg?: Maybe<Job_Queues_UploadYouTubeVideoJob_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Job_Queues_UploadYouTubeVideoJob_Max_Fields>;
    min?: Maybe<Job_Queues_UploadYouTubeVideoJob_Min_Fields>;
    stddev?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Fields>;
    stddev_pop?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Samp_Fields>;
    sum?: Maybe<Job_Queues_UploadYouTubeVideoJob_Sum_Fields>;
    var_pop?: Maybe<Job_Queues_UploadYouTubeVideoJob_Var_Pop_Fields>;
    var_samp?: Maybe<Job_Queues_UploadYouTubeVideoJob_Var_Samp_Fields>;
    variance?: Maybe<Job_Queues_UploadYouTubeVideoJob_Variance_Fields>;
};

/** aggregate fields of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_UploadYouTubeVideoJob_Append_Input = {
    result?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate avg on columns */
export type Job_Queues_UploadYouTubeVideoJob_Avg_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_avg_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "job_queues.UploadYouTubeVideoJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_UploadYouTubeVideoJob_Bool_Exp = {
    _and?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>>;
    _not?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
    _or?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    element?: InputMaybe<Content_Element_Bool_Exp>;
    elementId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    message?: InputMaybe<String_Comparison_Exp>;
    playlistId?: InputMaybe<String_Comparison_Exp>;
    registrantGoogleAccount?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
    registrantGoogleAccountId?: InputMaybe<Uuid_Comparison_Exp>;
    result?: InputMaybe<Jsonb_Comparison_Exp>;
    retriesCount?: InputMaybe<Int_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    videoDescription?: InputMaybe<String_Comparison_Exp>;
    videoPrivacyStatus?: InputMaybe<String_Comparison_Exp>;
    videoTitle?: InputMaybe<String_Comparison_Exp>;
    youTubeUploads?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** unique or primary key constraints on table "job_queues.UploadYouTubeVideoJob" */
export enum Job_Queues_UploadYouTubeVideoJob_Constraint {
    /** unique or primary key constraint */
    UploadYouTubeVideoJobPkey = "UploadYouTubeVideoJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_UploadYouTubeVideoJob_Delete_At_Path_Input = {
    result?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_UploadYouTubeVideoJob_Delete_Elem_Input = {
    result?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_UploadYouTubeVideoJob_Delete_Key_Input = {
    result?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Inc_Input = {
    retriesCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    message?: InputMaybe<Scalars["String"]>;
    playlistId?: InputMaybe<Scalars["String"]>;
    registrantGoogleAccount?: InputMaybe<Registrant_GoogleAccount_Obj_Rel_Insert_Input>;
    registrantGoogleAccountId?: InputMaybe<Scalars["uuid"]>;
    result?: InputMaybe<Scalars["jsonb"]>;
    retriesCount?: InputMaybe<Scalars["Int"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    videoDescription?: InputMaybe<Scalars["String"]>;
    videoPrivacyStatus?: InputMaybe<Scalars["String"]>;
    videoTitle?: InputMaybe<Scalars["String"]>;
    youTubeUploads?: InputMaybe<Video_YouTubeUpload_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Job_Queues_UploadYouTubeVideoJob_Max_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    message?: Maybe<Scalars["String"]>;
    playlistId?: Maybe<Scalars["String"]>;
    registrantGoogleAccountId?: Maybe<Scalars["uuid"]>;
    retriesCount?: Maybe<Scalars["Int"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    videoDescription?: Maybe<Scalars["String"]>;
    videoPrivacyStatus?: Maybe<Scalars["String"]>;
    videoTitle?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Job_Queues_UploadYouTubeVideoJob_Min_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    message?: Maybe<Scalars["String"]>;
    playlistId?: Maybe<Scalars["String"]>;
    registrantGoogleAccountId?: Maybe<Scalars["uuid"]>;
    retriesCount?: Maybe<Scalars["Int"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    videoDescription?: Maybe<Scalars["String"]>;
    videoPrivacyStatus?: Maybe<Scalars["String"]>;
    videoTitle?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Mutation_Response = {
    __typename?: "job_queues_UploadYouTubeVideoJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Job_Queues_UploadYouTubeVideoJob>;
};

/** on_conflict condition type for table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_On_Conflict = {
    constraint: Job_Queues_UploadYouTubeVideoJob_Constraint;
    update_columns?: Array<Job_Queues_UploadYouTubeVideoJob_Update_Column>;
    where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.UploadYouTubeVideoJob". */
export type Job_Queues_UploadYouTubeVideoJob_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    element?: InputMaybe<Content_Element_Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    jobStatusName?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    playlistId?: InputMaybe<Order_By>;
    registrantGoogleAccount?: InputMaybe<Registrant_GoogleAccount_Order_By>;
    registrantGoogleAccountId?: InputMaybe<Order_By>;
    result?: InputMaybe<Order_By>;
    retriesCount?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    videoDescription?: InputMaybe<Order_By>;
    videoPrivacyStatus?: InputMaybe<Order_By>;
    videoTitle?: InputMaybe<Order_By>;
    youTubeUploads_aggregate?: InputMaybe<Video_YouTubeUpload_Aggregate_Order_By>;
};

/** primary key columns input for table: job_queues_UploadYouTubeVideoJob */
export type Job_Queues_UploadYouTubeVideoJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_UploadYouTubeVideoJob_Prepend_Input = {
    result?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.UploadYouTubeVideoJob" */
export enum Job_Queues_UploadYouTubeVideoJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    PlaylistId = "playlistId",
    /** column name */
    RegistrantGoogleAccountId = "registrantGoogleAccountId",
    /** column name */
    Result = "result",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VideoDescription = "videoDescription",
    /** column name */
    VideoPrivacyStatus = "videoPrivacyStatus",
    /** column name */
    VideoTitle = "videoTitle",
}

/** input type for updating data in table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    message?: InputMaybe<Scalars["String"]>;
    playlistId?: InputMaybe<Scalars["String"]>;
    registrantGoogleAccountId?: InputMaybe<Scalars["uuid"]>;
    result?: InputMaybe<Scalars["jsonb"]>;
    retriesCount?: InputMaybe<Scalars["Int"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    videoDescription?: InputMaybe<Scalars["String"]>;
    videoPrivacyStatus?: InputMaybe<Scalars["String"]>;
    videoTitle?: InputMaybe<Scalars["String"]>;
};

/** aggregate stddev on columns */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_stddev_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Pop_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_stddev_pop_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Samp_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_stddev_samp_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Job_Queues_UploadYouTubeVideoJob_Sum_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_sum_fields";
    retriesCount?: Maybe<Scalars["Int"]>;
};

/** update columns of table "job_queues.UploadYouTubeVideoJob" */
export enum Job_Queues_UploadYouTubeVideoJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    PlaylistId = "playlistId",
    /** column name */
    RegistrantGoogleAccountId = "registrantGoogleAccountId",
    /** column name */
    Result = "result",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VideoDescription = "videoDescription",
    /** column name */
    VideoPrivacyStatus = "videoPrivacyStatus",
    /** column name */
    VideoTitle = "videoTitle",
}

/** aggregate var_pop on columns */
export type Job_Queues_UploadYouTubeVideoJob_Var_Pop_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_var_pop_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Job_Queues_UploadYouTubeVideoJob_Var_Samp_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_var_samp_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Job_Queues_UploadYouTubeVideoJob_Variance_Fields = {
    __typename?: "job_queues_UploadYouTubeVideoJob_variance_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

export type Jsonb_Cast_Exp = {
    String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
    _cast?: InputMaybe<Jsonb_Cast_Exp>;
    /** is the column contained in the given json value */
    _contained_in?: InputMaybe<Scalars["jsonb"]>;
    /** does the column contain the given json value at the top level */
    _contains?: InputMaybe<Scalars["jsonb"]>;
    _eq?: InputMaybe<Scalars["jsonb"]>;
    _gt?: InputMaybe<Scalars["jsonb"]>;
    _gte?: InputMaybe<Scalars["jsonb"]>;
    /** does the string exist as a top-level key in the column */
    _has_key?: InputMaybe<Scalars["String"]>;
    /** do all of these strings exist as top-level keys in the column */
    _has_keys_all?: InputMaybe<Array<Scalars["String"]>>;
    /** do any of these strings exist as top-level keys in the column */
    _has_keys_any?: InputMaybe<Array<Scalars["String"]>>;
    _in?: InputMaybe<Array<Scalars["jsonb"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["jsonb"]>;
    _lte?: InputMaybe<Scalars["jsonb"]>;
    _neq?: InputMaybe<Scalars["jsonb"]>;
    _nin?: InputMaybe<Array<Scalars["jsonb"]>>;
};

/** mutation root */
export type Mutation_Root = {
    __typename?: "mutation_root";
    /** execute VOLATILE function "conference.updateEventUsage" which returns "conference.Usage" */
    conference_updateEventUsage: Array<Conference_Usage>;
    createItemRoom?: Maybe<CreateItemRoomOutput>;
    createRoomDm?: Maybe<CreateRoomDmOutput>;
    /** delete data from the table: "Email" */
    delete_Email?: Maybe<Email_Mutation_Response>;
    /** delete single row from the table: "Email" */
    delete_Email_by_pk?: Maybe<Email>;
    /** delete data from the table: "PushNotificationSubscription" */
    delete_PushNotificationSubscription?: Maybe<PushNotificationSubscription_Mutation_Response>;
    /** delete single row from the table: "PushNotificationSubscription" */
    delete_PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
    /** delete data from the table: "User" */
    delete_User?: Maybe<User_Mutation_Response>;
    /** delete single row from the table: "User" */
    delete_User_by_pk?: Maybe<User>;
    /** delete data from the table: "analytics.AppStats" */
    delete_analytics_AppStats?: Maybe<Analytics_AppStats_Mutation_Response>;
    /** delete single row from the table: "analytics.AppStats" */
    delete_analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
    /** delete data from the table: "analytics.ContentElementStats" */
    delete_analytics_ContentElementStats?: Maybe<Analytics_ContentElementStats_Mutation_Response>;
    /** delete single row from the table: "analytics.ContentElementStats" */
    delete_analytics_ContentElementStats_by_pk?: Maybe<Analytics_ContentElementStats>;
    /** delete data from the table: "analytics.ContentItemStats" */
    delete_analytics_ContentItemStats?: Maybe<Analytics_ContentItemStats_Mutation_Response>;
    /** delete single row from the table: "analytics.ContentItemStats" */
    delete_analytics_ContentItemStats_by_pk?: Maybe<Analytics_ContentItemStats>;
    /** delete data from the table: "analytics.ElementTotalViews" */
    delete_analytics_ElementTotalViews?: Maybe<Analytics_ElementTotalViews_Mutation_Response>;
    /** delete single row from the table: "analytics.ElementTotalViews" */
    delete_analytics_ElementTotalViews_by_pk?: Maybe<Analytics_ElementTotalViews>;
    /** delete data from the table: "analytics.ItemTotalViews" */
    delete_analytics_ItemTotalViews?: Maybe<Analytics_ItemTotalViews_Mutation_Response>;
    /** delete single row from the table: "analytics.ItemTotalViews" */
    delete_analytics_ItemTotalViews_by_pk?: Maybe<Analytics_ItemTotalViews>;
    /** delete data from the table: "analytics.RoomPresence" */
    delete_analytics_RoomPresence?: Maybe<Analytics_RoomPresence_Mutation_Response>;
    /** delete single row from the table: "analytics.RoomPresence" */
    delete_analytics_RoomPresence_by_pk?: Maybe<Analytics_RoomPresence>;
    /** delete data from the table: "analytics.RoomStats" */
    delete_analytics_RoomStats?: Maybe<Analytics_RoomStats_Mutation_Response>;
    /** delete single row from the table: "analytics.RoomStats" */
    delete_analytics_RoomStats_by_pk?: Maybe<Analytics_RoomStats>;
    /** delete data from the table: "chat.Chat" */
    delete_chat_Chat?: Maybe<Chat_Chat_Mutation_Response>;
    /** delete single row from the table: "chat.Chat" */
    delete_chat_Chat_by_pk?: Maybe<Chat_Chat>;
    /** delete data from the table: "chat.Flag" */
    delete_chat_Flag?: Maybe<Chat_Flag_Mutation_Response>;
    /** delete data from the table: "chat.FlagType" */
    delete_chat_FlagType?: Maybe<Chat_FlagType_Mutation_Response>;
    /** delete single row from the table: "chat.FlagType" */
    delete_chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
    /** delete single row from the table: "chat.Flag" */
    delete_chat_Flag_by_pk?: Maybe<Chat_Flag>;
    /** delete data from the table: "chat.Message" */
    delete_chat_Message?: Maybe<Chat_Message_Mutation_Response>;
    /** delete data from the table: "chat.MessageType" */
    delete_chat_MessageType?: Maybe<Chat_MessageType_Mutation_Response>;
    /** delete single row from the table: "chat.MessageType" */
    delete_chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
    /** delete single row from the table: "chat.Message" */
    delete_chat_Message_by_pk?: Maybe<Chat_Message>;
    /** delete data from the table: "chat.Pin" */
    delete_chat_Pin?: Maybe<Chat_Pin_Mutation_Response>;
    /** delete single row from the table: "chat.Pin" */
    delete_chat_Pin_by_pk?: Maybe<Chat_Pin>;
    /** delete data from the table: "chat.Reaction" */
    delete_chat_Reaction?: Maybe<Chat_Reaction_Mutation_Response>;
    /** delete data from the table: "chat.ReactionType" */
    delete_chat_ReactionType?: Maybe<Chat_ReactionType_Mutation_Response>;
    /** delete single row from the table: "chat.ReactionType" */
    delete_chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
    /** delete single row from the table: "chat.Reaction" */
    delete_chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
    /** delete data from the table: "chat.ReadUpToIndex" */
    delete_chat_ReadUpToIndex?: Maybe<Chat_ReadUpToIndex_Mutation_Response>;
    /** delete single row from the table: "chat.ReadUpToIndex" */
    delete_chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
    /** delete data from the table: "chat.Subscription" */
    delete_chat_Subscription?: Maybe<Chat_Subscription_Mutation_Response>;
    /** delete single row from the table: "chat.Subscription" */
    delete_chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
    /** delete data from the table: "collection.Exhibition" */
    delete_collection_Exhibition?: Maybe<Collection_Exhibition_Mutation_Response>;
    /** delete single row from the table: "collection.Exhibition" */
    delete_collection_Exhibition_by_pk?: Maybe<Collection_Exhibition>;
    /** delete data from the table: "collection.ProgramPerson" */
    delete_collection_ProgramPerson?: Maybe<Collection_ProgramPerson_Mutation_Response>;
    /** delete single row from the table: "collection.ProgramPerson" */
    delete_collection_ProgramPerson_by_pk?: Maybe<Collection_ProgramPerson>;
    /** delete data from the table: "collection.Tag" */
    delete_collection_Tag?: Maybe<Collection_Tag_Mutation_Response>;
    /** delete single row from the table: "collection.Tag" */
    delete_collection_Tag_by_pk?: Maybe<Collection_Tag>;
    /** delete data from the table: "conference.Conference" */
    delete_conference_Conference?: Maybe<Conference_Conference_Mutation_Response>;
    /** delete single row from the table: "conference.Conference" */
    delete_conference_Conference_by_pk?: Maybe<Conference_Conference>;
    /** delete data from the table: "conference.Configuration" */
    delete_conference_Configuration?: Maybe<Conference_Configuration_Mutation_Response>;
    /** delete data from the table: "conference.ConfigurationKey" */
    delete_conference_ConfigurationKey?: Maybe<Conference_ConfigurationKey_Mutation_Response>;
    /** delete single row from the table: "conference.ConfigurationKey" */
    delete_conference_ConfigurationKey_by_pk?: Maybe<Conference_ConfigurationKey>;
    /** delete single row from the table: "conference.Configuration" */
    delete_conference_Configuration_by_pk?: Maybe<Conference_Configuration>;
    /** delete data from the table: "conference.DemoCode" */
    delete_conference_DemoCode?: Maybe<Conference_DemoCode_Mutation_Response>;
    /** delete single row from the table: "conference.DemoCode" */
    delete_conference_DemoCode_by_pk?: Maybe<Conference_DemoCode>;
    /** delete data from the table: "conference.Quota" */
    delete_conference_Quota?: Maybe<Conference_Quota_Mutation_Response>;
    /** delete single row from the table: "conference.Quota" */
    delete_conference_Quota_by_pk?: Maybe<Conference_Quota>;
    /** delete data from the table: "conference.Subconference" */
    delete_conference_Subconference?: Maybe<Conference_Subconference_Mutation_Response>;
    /** delete single row from the table: "conference.Subconference" */
    delete_conference_Subconference_by_pk?: Maybe<Conference_Subconference>;
    /** delete data from the table: "conference.Usage" */
    delete_conference_Usage?: Maybe<Conference_Usage_Mutation_Response>;
    /** delete single row from the table: "conference.Usage" */
    delete_conference_Usage_by_pk?: Maybe<Conference_Usage>;
    /** delete data from the table: "conference.VisibilityLevel" */
    delete_conference_VisibilityLevel?: Maybe<Conference_VisibilityLevel_Mutation_Response>;
    /** delete single row from the table: "conference.VisibilityLevel" */
    delete_conference_VisibilityLevel_by_pk?: Maybe<Conference_VisibilityLevel>;
    /** delete data from the table: "content.Element" */
    delete_content_Element?: Maybe<Content_Element_Mutation_Response>;
    /** delete data from the table: "content.ElementType" */
    delete_content_ElementType?: Maybe<Content_ElementType_Mutation_Response>;
    /** delete single row from the table: "content.ElementType" */
    delete_content_ElementType_by_pk?: Maybe<Content_ElementType>;
    /** delete single row from the table: "content.Element" */
    delete_content_Element_by_pk?: Maybe<Content_Element>;
    /** delete data from the table: "content.Item" */
    delete_content_Item?: Maybe<Content_Item_Mutation_Response>;
    /** delete data from the table: "content.ItemExhibition" */
    delete_content_ItemExhibition?: Maybe<Content_ItemExhibition_Mutation_Response>;
    /** delete single row from the table: "content.ItemExhibition" */
    delete_content_ItemExhibition_by_pk?: Maybe<Content_ItemExhibition>;
    /** delete data from the table: "content.ItemProgramPerson" */
    delete_content_ItemProgramPerson?: Maybe<Content_ItemProgramPerson_Mutation_Response>;
    /** delete single row from the table: "content.ItemProgramPerson" */
    delete_content_ItemProgramPerson_by_pk?: Maybe<Content_ItemProgramPerson>;
    /** delete data from the table: "content.ItemTag" */
    delete_content_ItemTag?: Maybe<Content_ItemTag_Mutation_Response>;
    /** delete single row from the table: "content.ItemTag" */
    delete_content_ItemTag_by_pk?: Maybe<Content_ItemTag>;
    /** delete data from the table: "content.ItemType" */
    delete_content_ItemType?: Maybe<Content_ItemType_Mutation_Response>;
    /** delete single row from the table: "content.ItemType" */
    delete_content_ItemType_by_pk?: Maybe<Content_ItemType>;
    /** delete single row from the table: "content.Item" */
    delete_content_Item_by_pk?: Maybe<Content_Item>;
    /** delete data from the table: "job_queues.ChannelStackCreateJob" */
    delete_job_queues_ChannelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.ChannelStackCreateJob" */
    delete_job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** delete data from the table: "job_queues.ChannelStackDeleteJob" */
    delete_job_queues_ChannelStackDeleteJob?: Maybe<Job_Queues_ChannelStackDeleteJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.ChannelStackDeleteJob" */
    delete_job_queues_ChannelStackDeleteJob_by_pk?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** delete data from the table: "job_queues.ChannelStackUpdateJob" */
    delete_job_queues_ChannelStackUpdateJob?: Maybe<Job_Queues_ChannelStackUpdateJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.ChannelStackUpdateJob" */
    delete_job_queues_ChannelStackUpdateJob_by_pk?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** delete data from the table: "job_queues.CombineVideosJob" */
    delete_job_queues_CombineVideosJob?: Maybe<Job_Queues_CombineVideosJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.CombineVideosJob" */
    delete_job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
    /** delete data from the table: "job_queues.CustomEmailJob" */
    delete_job_queues_CustomEmailJob?: Maybe<Job_Queues_CustomEmailJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.CustomEmailJob" */
    delete_job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
    /** delete data from the table: "job_queues.ImportJob" */
    delete_job_queues_ImportJob?: Maybe<Job_Queues_ImportJob_Mutation_Response>;
    /** delete data from the table: "job_queues.ImportJobOutput" */
    delete_job_queues_ImportJobOutput?: Maybe<Job_Queues_ImportJobOutput_Mutation_Response>;
    /** delete single row from the table: "job_queues.ImportJobOutput" */
    delete_job_queues_ImportJobOutput_by_pk?: Maybe<Job_Queues_ImportJobOutput>;
    /** delete single row from the table: "job_queues.ImportJob" */
    delete_job_queues_ImportJob_by_pk?: Maybe<Job_Queues_ImportJob>;
    /** delete data from the table: "job_queues.InvitationEmailJob" */
    delete_job_queues_InvitationEmailJob?: Maybe<Job_Queues_InvitationEmailJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.InvitationEmailJob" */
    delete_job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
    /** delete data from the table: "job_queues.JobStatus" */
    delete_job_queues_JobStatus?: Maybe<Job_Queues_JobStatus_Mutation_Response>;
    /** delete single row from the table: "job_queues.JobStatus" */
    delete_job_queues_JobStatus_by_pk?: Maybe<Job_Queues_JobStatus>;
    /** delete data from the table: "job_queues.MediaPackageHarvestJob" */
    delete_job_queues_MediaPackageHarvestJob?: Maybe<Job_Queues_MediaPackageHarvestJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.MediaPackageHarvestJob" */
    delete_job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** delete data from the table: "job_queues.PrepareJob" */
    delete_job_queues_PrepareJob?: Maybe<Job_Queues_PrepareJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.PrepareJob" */
    delete_job_queues_PrepareJob_by_pk?: Maybe<Job_Queues_PrepareJob>;
    /** delete data from the table: "job_queues.PublishVideoJob" */
    delete_job_queues_PublishVideoJob?: Maybe<Job_Queues_PublishVideoJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.PublishVideoJob" */
    delete_job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
    /** delete data from the table: "job_queues.SubmissionRequestEmailJob" */
    delete_job_queues_SubmissionRequestEmailJob?: Maybe<Job_Queues_SubmissionRequestEmailJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.SubmissionRequestEmailJob" */
    delete_job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** delete data from the table: "job_queues.UploadYouTubeVideoJob" */
    delete_job_queues_UploadYouTubeVideoJob?: Maybe<Job_Queues_UploadYouTubeVideoJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.UploadYouTubeVideoJob" */
    delete_job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    /** delete data from the table: "registrant.GoogleAccount" */
    delete_registrant_GoogleAccount?: Maybe<Registrant_GoogleAccount_Mutation_Response>;
    /** delete single row from the table: "registrant.GoogleAccount" */
    delete_registrant_GoogleAccount_by_pk?: Maybe<Registrant_GoogleAccount>;
    /** delete data from the table: "registrant.Group" */
    delete_registrant_Group?: Maybe<Registrant_Group_Mutation_Response>;
    /** delete data from the table: "registrant.GroupRegistrant" */
    delete_registrant_GroupRegistrant?: Maybe<Registrant_GroupRegistrant_Mutation_Response>;
    /** delete single row from the table: "registrant.GroupRegistrant" */
    delete_registrant_GroupRegistrant_by_pk?: Maybe<Registrant_GroupRegistrant>;
    /** delete single row from the table: "registrant.Group" */
    delete_registrant_Group_by_pk?: Maybe<Registrant_Group>;
    /** delete data from the table: "registrant.Invitation" */
    delete_registrant_Invitation?: Maybe<Registrant_Invitation_Mutation_Response>;
    /** delete single row from the table: "registrant.Invitation" */
    delete_registrant_Invitation_by_pk?: Maybe<Registrant_Invitation>;
    /** delete data from the table: "registrant.Profile" */
    delete_registrant_Profile?: Maybe<Registrant_Profile_Mutation_Response>;
    /** delete single row from the table: "registrant.Profile" */
    delete_registrant_Profile_by_pk?: Maybe<Registrant_Profile>;
    /** delete data from the table: "registrant.Registrant" */
    delete_registrant_Registrant?: Maybe<Registrant_Registrant_Mutation_Response>;
    /** delete data from the table: "registrant.RegistrantRole" */
    delete_registrant_RegistrantRole?: Maybe<Registrant_RegistrantRole_Mutation_Response>;
    /** delete single row from the table: "registrant.RegistrantRole" */
    delete_registrant_RegistrantRole_by_pk?: Maybe<Registrant_RegistrantRole>;
    /** delete single row from the table: "registrant.Registrant" */
    delete_registrant_Registrant_by_pk?: Maybe<Registrant_Registrant>;
    /** delete data from the table: "registrant.SavedVonageRoomRecording" */
    delete_registrant_SavedVonageRoomRecording?: Maybe<Registrant_SavedVonageRoomRecording_Mutation_Response>;
    /** delete single row from the table: "registrant.SavedVonageRoomRecording" */
    delete_registrant_SavedVonageRoomRecording_by_pk?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** delete data from the table: "registrant.SubconferenceMembership" */
    delete_registrant_SubconferenceMembership?: Maybe<Registrant_SubconferenceMembership_Mutation_Response>;
    /** delete single row from the table: "registrant.SubconferenceMembership" */
    delete_registrant_SubconferenceMembership_by_pk?: Maybe<Registrant_SubconferenceMembership>;
    /** delete data from the table: "room.Backend" */
    delete_room_Backend?: Maybe<Room_Backend_Mutation_Response>;
    /** delete single row from the table: "room.Backend" */
    delete_room_Backend_by_pk?: Maybe<Room_Backend>;
    /** delete data from the table: "room.ChimeMeeting" */
    delete_room_ChimeMeeting?: Maybe<Room_ChimeMeeting_Mutation_Response>;
    /** delete single row from the table: "room.ChimeMeeting" */
    delete_room_ChimeMeeting_by_pk?: Maybe<Room_ChimeMeeting>;
    /** delete data from the table: "room.ManagementMode" */
    delete_room_ManagementMode?: Maybe<Room_ManagementMode_Mutation_Response>;
    /** delete single row from the table: "room.ManagementMode" */
    delete_room_ManagementMode_by_pk?: Maybe<Room_ManagementMode>;
    /** delete data from the table: "room.PersonRole" */
    delete_room_PersonRole?: Maybe<Room_PersonRole_Mutation_Response>;
    /** delete single row from the table: "room.PersonRole" */
    delete_room_PersonRole_by_pk?: Maybe<Room_PersonRole>;
    /** delete data from the table: "room.Room" */
    delete_room_Room?: Maybe<Room_Room_Mutation_Response>;
    /** delete data from the table: "room.RoomGroupMembership" */
    delete_room_RoomGroupMembership?: Maybe<Room_RoomGroupMembership_Mutation_Response>;
    /** delete single row from the table: "room.RoomGroupMembership" */
    delete_room_RoomGroupMembership_by_pk?: Maybe<Room_RoomGroupMembership>;
    /** delete data from the table: "room.RoomMembership" */
    delete_room_RoomMembership?: Maybe<Room_RoomMembership_Mutation_Response>;
    /** delete single row from the table: "room.RoomMembership" */
    delete_room_RoomMembership_by_pk?: Maybe<Room_RoomMembership>;
    /** delete single row from the table: "room.Room" */
    delete_room_Room_by_pk?: Maybe<Room_Room>;
    /** delete data from the table: "room.ShuffleAlgorithm" */
    delete_room_ShuffleAlgorithm?: Maybe<Room_ShuffleAlgorithm_Mutation_Response>;
    /** delete single row from the table: "room.ShuffleAlgorithm" */
    delete_room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
    /** delete data from the table: "room.ShufflePeriod" */
    delete_room_ShufflePeriod?: Maybe<Room_ShufflePeriod_Mutation_Response>;
    /** delete single row from the table: "room.ShufflePeriod" */
    delete_room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
    /** delete data from the table: "room.ShuffleQueueEntry" */
    delete_room_ShuffleQueueEntry?: Maybe<Room_ShuffleQueueEntry_Mutation_Response>;
    /** delete single row from the table: "room.ShuffleQueueEntry" */
    delete_room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
    /** delete data from the table: "room.ShuffleRoom" */
    delete_room_ShuffleRoom?: Maybe<Room_ShuffleRoom_Mutation_Response>;
    /** delete single row from the table: "room.ShuffleRoom" */
    delete_room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
    /** delete data from the table: "schedule.Continuation" */
    delete_schedule_Continuation?: Maybe<Schedule_Continuation_Mutation_Response>;
    /** delete single row from the table: "schedule.Continuation" */
    delete_schedule_Continuation_by_pk?: Maybe<Schedule_Continuation>;
    /** delete data from the table: "schedule.CurrentEvents" */
    delete_schedule_CurrentEvents?: Maybe<Schedule_CurrentEvents_Mutation_Response>;
    /** delete data from the table: "schedule.Event" */
    delete_schedule_Event?: Maybe<Schedule_Event_Mutation_Response>;
    /** delete data from the table: "schedule.EventProgramPerson" */
    delete_schedule_EventProgramPerson?: Maybe<Schedule_EventProgramPerson_Mutation_Response>;
    /** delete data from the table: "schedule.EventProgramPersonRole" */
    delete_schedule_EventProgramPersonRole?: Maybe<Schedule_EventProgramPersonRole_Mutation_Response>;
    /** delete single row from the table: "schedule.EventProgramPersonRole" */
    delete_schedule_EventProgramPersonRole_by_pk?: Maybe<Schedule_EventProgramPersonRole>;
    /** delete single row from the table: "schedule.EventProgramPerson" */
    delete_schedule_EventProgramPerson_by_pk?: Maybe<Schedule_EventProgramPerson>;
    /** delete single row from the table: "schedule.Event" */
    delete_schedule_Event_by_pk?: Maybe<Schedule_Event>;
    /** delete data from the table: "schedule.Mode" */
    delete_schedule_Mode?: Maybe<Schedule_Mode_Mutation_Response>;
    /** delete single row from the table: "schedule.Mode" */
    delete_schedule_Mode_by_pk?: Maybe<Schedule_Mode>;
    /** delete data from the table: "schedule.StarredEvent" */
    delete_schedule_StarredEvent?: Maybe<Schedule_StarredEvent_Mutation_Response>;
    /** delete single row from the table: "schedule.StarredEvent" */
    delete_schedule_StarredEvent_by_pk?: Maybe<Schedule_StarredEvent>;
    /** delete data from the table: "sponsor.Tier" */
    delete_sponsor_Tier?: Maybe<Sponsor_Tier_Mutation_Response>;
    /** delete data from the table: "sponsor.TierMember" */
    delete_sponsor_TierMember?: Maybe<Sponsor_TierMember_Mutation_Response>;
    /** delete single row from the table: "sponsor.TierMember" */
    delete_sponsor_TierMember_by_pk?: Maybe<Sponsor_TierMember>;
    /** delete single row from the table: "sponsor.Tier" */
    delete_sponsor_Tier_by_pk?: Maybe<Sponsor_Tier>;
    /** delete data from the table: "system.Configuration" */
    delete_system_Configuration?: Maybe<System_Configuration_Mutation_Response>;
    /** delete data from the table: "system.ConfigurationKey" */
    delete_system_ConfigurationKey?: Maybe<System_ConfigurationKey_Mutation_Response>;
    /** delete single row from the table: "system.ConfigurationKey" */
    delete_system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
    /** delete data from the table: "system.ConfigurationPermissionGrant" */
    delete_system_ConfigurationPermissionGrant?: Maybe<System_ConfigurationPermissionGrant_Mutation_Response>;
    /** delete single row from the table: "system.ConfigurationPermissionGrant" */
    delete_system_ConfigurationPermissionGrant_by_pk?: Maybe<System_ConfigurationPermissionGrant>;
    /** delete single row from the table: "system.Configuration" */
    delete_system_Configuration_by_pk?: Maybe<System_Configuration>;
    /** delete data from the table: "system.SuperUserPermission" */
    delete_system_SuperUserPermission?: Maybe<System_SuperUserPermission_Mutation_Response>;
    /** delete data from the table: "system.SuperUserPermissionGrant" */
    delete_system_SuperUserPermissionGrant?: Maybe<System_SuperUserPermissionGrant_Mutation_Response>;
    /** delete single row from the table: "system.SuperUserPermissionGrant" */
    delete_system_SuperUserPermissionGrant_by_pk?: Maybe<System_SuperUserPermissionGrant>;
    /** delete single row from the table: "system.SuperUserPermission" */
    delete_system_SuperUserPermission_by_pk?: Maybe<System_SuperUserPermission>;
    /** delete data from the table: "video.ChannelStack" */
    delete_video_ChannelStack?: Maybe<Video_ChannelStack_Mutation_Response>;
    /** delete single row from the table: "video.ChannelStack" */
    delete_video_ChannelStack_by_pk?: Maybe<Video_ChannelStack>;
    /** delete data from the table: "video.EventVonageSession" */
    delete_video_EventVonageSession?: Maybe<Video_EventVonageSession_Mutation_Response>;
    /** delete single row from the table: "video.EventVonageSession" */
    delete_video_EventVonageSession_by_pk?: Maybe<Video_EventVonageSession>;
    /** delete data from the table: "video.ImmediateSwitch" */
    delete_video_ImmediateSwitch?: Maybe<Video_ImmediateSwitch_Mutation_Response>;
    /** delete single row from the table: "video.ImmediateSwitch" */
    delete_video_ImmediateSwitch_by_pk?: Maybe<Video_ImmediateSwitch>;
    /** delete data from the table: "video.InputType" */
    delete_video_InputType?: Maybe<Video_InputType_Mutation_Response>;
    /** delete single row from the table: "video.InputType" */
    delete_video_InputType_by_pk?: Maybe<Video_InputType>;
    /** delete data from the table: "video.MediaLiveChannelStatus" */
    delete_video_MediaLiveChannelStatus?: Maybe<Video_MediaLiveChannelStatus_Mutation_Response>;
    /** delete single row from the table: "video.MediaLiveChannelStatus" */
    delete_video_MediaLiveChannelStatus_by_pk?: Maybe<Video_MediaLiveChannelStatus>;
    /** delete data from the table: "video.RoomRtmpInput" */
    delete_video_RoomRtmpInput?: Maybe<Video_RoomRtmpInput_Mutation_Response>;
    /** delete single row from the table: "video.RoomRtmpInput" */
    delete_video_RoomRtmpInput_by_pk?: Maybe<Video_RoomRtmpInput>;
    /** delete data from the table: "video.RoomRtmpOutput" */
    delete_video_RoomRtmpOutput?: Maybe<Video_RoomRtmpOutput_Mutation_Response>;
    /** delete single row from the table: "video.RoomRtmpOutput" */
    delete_video_RoomRtmpOutput_by_pk?: Maybe<Video_RoomRtmpOutput>;
    /** delete data from the table: "video.RtmpInput" */
    delete_video_RtmpInput?: Maybe<Video_RtmpInput_Mutation_Response>;
    /** delete single row from the table: "video.RtmpInput" */
    delete_video_RtmpInput_by_pk?: Maybe<Video_RtmpInput>;
    /** delete data from the table: "video.TranscriptionJob" */
    delete_video_TranscriptionJob?: Maybe<Video_TranscriptionJob_Mutation_Response>;
    /** delete single row from the table: "video.TranscriptionJob" */
    delete_video_TranscriptionJob_by_pk?: Maybe<Video_TranscriptionJob>;
    /** delete data from the table: "video.VideoRenderJob" */
    delete_video_VideoRenderJob?: Maybe<Video_VideoRenderJob_Mutation_Response>;
    /** delete single row from the table: "video.VideoRenderJob" */
    delete_video_VideoRenderJob_by_pk?: Maybe<Video_VideoRenderJob>;
    /** delete data from the table: "video.VonageParticipantStream" */
    delete_video_VonageParticipantStream?: Maybe<Video_VonageParticipantStream_Mutation_Response>;
    /** delete single row from the table: "video.VonageParticipantStream" */
    delete_video_VonageParticipantStream_by_pk?: Maybe<Video_VonageParticipantStream>;
    /** delete data from the table: "video.VonageRoomRecording" */
    delete_video_VonageRoomRecording?: Maybe<Video_VonageRoomRecording_Mutation_Response>;
    /** delete single row from the table: "video.VonageRoomRecording" */
    delete_video_VonageRoomRecording_by_pk?: Maybe<Video_VonageRoomRecording>;
    /** delete data from the table: "video.VonageSessionLayout" */
    delete_video_VonageSessionLayout?: Maybe<Video_VonageSessionLayout_Mutation_Response>;
    /** delete single row from the table: "video.VonageSessionLayout" */
    delete_video_VonageSessionLayout_by_pk?: Maybe<Video_VonageSessionLayout>;
    /** delete data from the table: "video.VonageVideoPlaybackCommand" */
    delete_video_VonageVideoPlaybackCommand?: Maybe<Video_VonageVideoPlaybackCommand_Mutation_Response>;
    /** delete single row from the table: "video.VonageVideoPlaybackCommand" */
    delete_video_VonageVideoPlaybackCommand_by_pk?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** delete data from the table: "video.YouTubeUpload" */
    delete_video_YouTubeUpload?: Maybe<Video_YouTubeUpload_Mutation_Response>;
    /** delete single row from the table: "video.YouTubeUpload" */
    delete_video_YouTubeUpload_by_pk?: Maybe<Video_YouTubeUpload>;
    getGoogleOAuthUrl?: Maybe<GetGoogleOAuthUrlOutput>;
    initialiseSuperUser?: Maybe<InitialiseSuperUserOutput>;
    /** insert data into the table: "Email" */
    insert_Email?: Maybe<Email_Mutation_Response>;
    /** insert a single row into the table: "Email" */
    insert_Email_one?: Maybe<Email>;
    /** insert data into the table: "PushNotificationSubscription" */
    insert_PushNotificationSubscription?: Maybe<PushNotificationSubscription_Mutation_Response>;
    /** insert a single row into the table: "PushNotificationSubscription" */
    insert_PushNotificationSubscription_one?: Maybe<PushNotificationSubscription>;
    /** insert data into the table: "User" */
    insert_User?: Maybe<User_Mutation_Response>;
    /** insert a single row into the table: "User" */
    insert_User_one?: Maybe<User>;
    /** insert data into the table: "analytics.AppStats" */
    insert_analytics_AppStats?: Maybe<Analytics_AppStats_Mutation_Response>;
    /** insert a single row into the table: "analytics.AppStats" */
    insert_analytics_AppStats_one?: Maybe<Analytics_AppStats>;
    /** insert data into the table: "analytics.ContentElementStats" */
    insert_analytics_ContentElementStats?: Maybe<Analytics_ContentElementStats_Mutation_Response>;
    /** insert a single row into the table: "analytics.ContentElementStats" */
    insert_analytics_ContentElementStats_one?: Maybe<Analytics_ContentElementStats>;
    /** insert data into the table: "analytics.ContentItemStats" */
    insert_analytics_ContentItemStats?: Maybe<Analytics_ContentItemStats_Mutation_Response>;
    /** insert a single row into the table: "analytics.ContentItemStats" */
    insert_analytics_ContentItemStats_one?: Maybe<Analytics_ContentItemStats>;
    /** insert data into the table: "analytics.ElementTotalViews" */
    insert_analytics_ElementTotalViews?: Maybe<Analytics_ElementTotalViews_Mutation_Response>;
    /** insert a single row into the table: "analytics.ElementTotalViews" */
    insert_analytics_ElementTotalViews_one?: Maybe<Analytics_ElementTotalViews>;
    /** insert data into the table: "analytics.ItemTotalViews" */
    insert_analytics_ItemTotalViews?: Maybe<Analytics_ItemTotalViews_Mutation_Response>;
    /** insert a single row into the table: "analytics.ItemTotalViews" */
    insert_analytics_ItemTotalViews_one?: Maybe<Analytics_ItemTotalViews>;
    /** insert data into the table: "analytics.RoomPresence" */
    insert_analytics_RoomPresence?: Maybe<Analytics_RoomPresence_Mutation_Response>;
    /** insert a single row into the table: "analytics.RoomPresence" */
    insert_analytics_RoomPresence_one?: Maybe<Analytics_RoomPresence>;
    /** insert data into the table: "analytics.RoomStats" */
    insert_analytics_RoomStats?: Maybe<Analytics_RoomStats_Mutation_Response>;
    /** insert a single row into the table: "analytics.RoomStats" */
    insert_analytics_RoomStats_one?: Maybe<Analytics_RoomStats>;
    /** insert data into the table: "chat.Chat" */
    insert_chat_Chat?: Maybe<Chat_Chat_Mutation_Response>;
    /** insert a single row into the table: "chat.Chat" */
    insert_chat_Chat_one?: Maybe<Chat_Chat>;
    /** insert data into the table: "chat.Flag" */
    insert_chat_Flag?: Maybe<Chat_Flag_Mutation_Response>;
    /** insert data into the table: "chat.FlagType" */
    insert_chat_FlagType?: Maybe<Chat_FlagType_Mutation_Response>;
    /** insert a single row into the table: "chat.FlagType" */
    insert_chat_FlagType_one?: Maybe<Chat_FlagType>;
    /** insert a single row into the table: "chat.Flag" */
    insert_chat_Flag_one?: Maybe<Chat_Flag>;
    /** insert data into the table: "chat.Message" */
    insert_chat_Message?: Maybe<Chat_Message_Mutation_Response>;
    /** insert data into the table: "chat.MessageType" */
    insert_chat_MessageType?: Maybe<Chat_MessageType_Mutation_Response>;
    /** insert a single row into the table: "chat.MessageType" */
    insert_chat_MessageType_one?: Maybe<Chat_MessageType>;
    /** insert a single row into the table: "chat.Message" */
    insert_chat_Message_one?: Maybe<Chat_Message>;
    /** insert data into the table: "chat.Pin" */
    insert_chat_Pin?: Maybe<Chat_Pin_Mutation_Response>;
    /** insert a single row into the table: "chat.Pin" */
    insert_chat_Pin_one?: Maybe<Chat_Pin>;
    /** insert data into the table: "chat.Reaction" */
    insert_chat_Reaction?: Maybe<Chat_Reaction_Mutation_Response>;
    /** insert data into the table: "chat.ReactionType" */
    insert_chat_ReactionType?: Maybe<Chat_ReactionType_Mutation_Response>;
    /** insert a single row into the table: "chat.ReactionType" */
    insert_chat_ReactionType_one?: Maybe<Chat_ReactionType>;
    /** insert a single row into the table: "chat.Reaction" */
    insert_chat_Reaction_one?: Maybe<Chat_Reaction>;
    /** insert data into the table: "chat.ReadUpToIndex" */
    insert_chat_ReadUpToIndex?: Maybe<Chat_ReadUpToIndex_Mutation_Response>;
    /** insert a single row into the table: "chat.ReadUpToIndex" */
    insert_chat_ReadUpToIndex_one?: Maybe<Chat_ReadUpToIndex>;
    /** insert data into the table: "chat.Subscription" */
    insert_chat_Subscription?: Maybe<Chat_Subscription_Mutation_Response>;
    /** insert a single row into the table: "chat.Subscription" */
    insert_chat_Subscription_one?: Maybe<Chat_Subscription>;
    /** insert data into the table: "collection.Exhibition" */
    insert_collection_Exhibition?: Maybe<Collection_Exhibition_Mutation_Response>;
    /** insert a single row into the table: "collection.Exhibition" */
    insert_collection_Exhibition_one?: Maybe<Collection_Exhibition>;
    /** insert data into the table: "collection.ProgramPerson" */
    insert_collection_ProgramPerson?: Maybe<Collection_ProgramPerson_Mutation_Response>;
    /** insert a single row into the table: "collection.ProgramPerson" */
    insert_collection_ProgramPerson_one?: Maybe<Collection_ProgramPerson>;
    /** insert data into the table: "collection.Tag" */
    insert_collection_Tag?: Maybe<Collection_Tag_Mutation_Response>;
    /** insert a single row into the table: "collection.Tag" */
    insert_collection_Tag_one?: Maybe<Collection_Tag>;
    /** insert data into the table: "conference.Conference" */
    insert_conference_Conference?: Maybe<Conference_Conference_Mutation_Response>;
    /** insert a single row into the table: "conference.Conference" */
    insert_conference_Conference_one?: Maybe<Conference_Conference>;
    /** insert data into the table: "conference.Configuration" */
    insert_conference_Configuration?: Maybe<Conference_Configuration_Mutation_Response>;
    /** insert data into the table: "conference.ConfigurationKey" */
    insert_conference_ConfigurationKey?: Maybe<Conference_ConfigurationKey_Mutation_Response>;
    /** insert a single row into the table: "conference.ConfigurationKey" */
    insert_conference_ConfigurationKey_one?: Maybe<Conference_ConfigurationKey>;
    /** insert a single row into the table: "conference.Configuration" */
    insert_conference_Configuration_one?: Maybe<Conference_Configuration>;
    /** insert data into the table: "conference.DemoCode" */
    insert_conference_DemoCode?: Maybe<Conference_DemoCode_Mutation_Response>;
    /** insert a single row into the table: "conference.DemoCode" */
    insert_conference_DemoCode_one?: Maybe<Conference_DemoCode>;
    /** insert data into the table: "conference.Quota" */
    insert_conference_Quota?: Maybe<Conference_Quota_Mutation_Response>;
    /** insert a single row into the table: "conference.Quota" */
    insert_conference_Quota_one?: Maybe<Conference_Quota>;
    /** insert data into the table: "conference.Subconference" */
    insert_conference_Subconference?: Maybe<Conference_Subconference_Mutation_Response>;
    /** insert a single row into the table: "conference.Subconference" */
    insert_conference_Subconference_one?: Maybe<Conference_Subconference>;
    /** insert data into the table: "conference.Usage" */
    insert_conference_Usage?: Maybe<Conference_Usage_Mutation_Response>;
    /** insert a single row into the table: "conference.Usage" */
    insert_conference_Usage_one?: Maybe<Conference_Usage>;
    /** insert data into the table: "conference.VisibilityLevel" */
    insert_conference_VisibilityLevel?: Maybe<Conference_VisibilityLevel_Mutation_Response>;
    /** insert a single row into the table: "conference.VisibilityLevel" */
    insert_conference_VisibilityLevel_one?: Maybe<Conference_VisibilityLevel>;
    /** insert data into the table: "content.Element" */
    insert_content_Element?: Maybe<Content_Element_Mutation_Response>;
    /** insert data into the table: "content.ElementType" */
    insert_content_ElementType?: Maybe<Content_ElementType_Mutation_Response>;
    /** insert a single row into the table: "content.ElementType" */
    insert_content_ElementType_one?: Maybe<Content_ElementType>;
    /** insert a single row into the table: "content.Element" */
    insert_content_Element_one?: Maybe<Content_Element>;
    /** insert data into the table: "content.Item" */
    insert_content_Item?: Maybe<Content_Item_Mutation_Response>;
    /** insert data into the table: "content.ItemExhibition" */
    insert_content_ItemExhibition?: Maybe<Content_ItemExhibition_Mutation_Response>;
    /** insert a single row into the table: "content.ItemExhibition" */
    insert_content_ItemExhibition_one?: Maybe<Content_ItemExhibition>;
    /** insert data into the table: "content.ItemProgramPerson" */
    insert_content_ItemProgramPerson?: Maybe<Content_ItemProgramPerson_Mutation_Response>;
    /** insert a single row into the table: "content.ItemProgramPerson" */
    insert_content_ItemProgramPerson_one?: Maybe<Content_ItemProgramPerson>;
    /** insert data into the table: "content.ItemTag" */
    insert_content_ItemTag?: Maybe<Content_ItemTag_Mutation_Response>;
    /** insert a single row into the table: "content.ItemTag" */
    insert_content_ItemTag_one?: Maybe<Content_ItemTag>;
    /** insert data into the table: "content.ItemType" */
    insert_content_ItemType?: Maybe<Content_ItemType_Mutation_Response>;
    /** insert a single row into the table: "content.ItemType" */
    insert_content_ItemType_one?: Maybe<Content_ItemType>;
    /** insert a single row into the table: "content.Item" */
    insert_content_Item_one?: Maybe<Content_Item>;
    /** insert data into the table: "job_queues.ChannelStackCreateJob" */
    insert_job_queues_ChannelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.ChannelStackCreateJob" */
    insert_job_queues_ChannelStackCreateJob_one?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** insert data into the table: "job_queues.ChannelStackDeleteJob" */
    insert_job_queues_ChannelStackDeleteJob?: Maybe<Job_Queues_ChannelStackDeleteJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.ChannelStackDeleteJob" */
    insert_job_queues_ChannelStackDeleteJob_one?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** insert data into the table: "job_queues.ChannelStackUpdateJob" */
    insert_job_queues_ChannelStackUpdateJob?: Maybe<Job_Queues_ChannelStackUpdateJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.ChannelStackUpdateJob" */
    insert_job_queues_ChannelStackUpdateJob_one?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** insert data into the table: "job_queues.CombineVideosJob" */
    insert_job_queues_CombineVideosJob?: Maybe<Job_Queues_CombineVideosJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.CombineVideosJob" */
    insert_job_queues_CombineVideosJob_one?: Maybe<Job_Queues_CombineVideosJob>;
    /** insert data into the table: "job_queues.CustomEmailJob" */
    insert_job_queues_CustomEmailJob?: Maybe<Job_Queues_CustomEmailJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.CustomEmailJob" */
    insert_job_queues_CustomEmailJob_one?: Maybe<Job_Queues_CustomEmailJob>;
    /** insert data into the table: "job_queues.ImportJob" */
    insert_job_queues_ImportJob?: Maybe<Job_Queues_ImportJob_Mutation_Response>;
    /** insert data into the table: "job_queues.ImportJobOutput" */
    insert_job_queues_ImportJobOutput?: Maybe<Job_Queues_ImportJobOutput_Mutation_Response>;
    /** insert a single row into the table: "job_queues.ImportJobOutput" */
    insert_job_queues_ImportJobOutput_one?: Maybe<Job_Queues_ImportJobOutput>;
    /** insert a single row into the table: "job_queues.ImportJob" */
    insert_job_queues_ImportJob_one?: Maybe<Job_Queues_ImportJob>;
    /** insert data into the table: "job_queues.InvitationEmailJob" */
    insert_job_queues_InvitationEmailJob?: Maybe<Job_Queues_InvitationEmailJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.InvitationEmailJob" */
    insert_job_queues_InvitationEmailJob_one?: Maybe<Job_Queues_InvitationEmailJob>;
    /** insert data into the table: "job_queues.JobStatus" */
    insert_job_queues_JobStatus?: Maybe<Job_Queues_JobStatus_Mutation_Response>;
    /** insert a single row into the table: "job_queues.JobStatus" */
    insert_job_queues_JobStatus_one?: Maybe<Job_Queues_JobStatus>;
    /** insert data into the table: "job_queues.MediaPackageHarvestJob" */
    insert_job_queues_MediaPackageHarvestJob?: Maybe<Job_Queues_MediaPackageHarvestJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.MediaPackageHarvestJob" */
    insert_job_queues_MediaPackageHarvestJob_one?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** insert data into the table: "job_queues.PrepareJob" */
    insert_job_queues_PrepareJob?: Maybe<Job_Queues_PrepareJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.PrepareJob" */
    insert_job_queues_PrepareJob_one?: Maybe<Job_Queues_PrepareJob>;
    /** insert data into the table: "job_queues.PublishVideoJob" */
    insert_job_queues_PublishVideoJob?: Maybe<Job_Queues_PublishVideoJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.PublishVideoJob" */
    insert_job_queues_PublishVideoJob_one?: Maybe<Job_Queues_PublishVideoJob>;
    /** insert data into the table: "job_queues.SubmissionRequestEmailJob" */
    insert_job_queues_SubmissionRequestEmailJob?: Maybe<Job_Queues_SubmissionRequestEmailJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.SubmissionRequestEmailJob" */
    insert_job_queues_SubmissionRequestEmailJob_one?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** insert data into the table: "job_queues.UploadYouTubeVideoJob" */
    insert_job_queues_UploadYouTubeVideoJob?: Maybe<Job_Queues_UploadYouTubeVideoJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.UploadYouTubeVideoJob" */
    insert_job_queues_UploadYouTubeVideoJob_one?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    /** insert data into the table: "registrant.GoogleAccount" */
    insert_registrant_GoogleAccount?: Maybe<Registrant_GoogleAccount_Mutation_Response>;
    /** insert a single row into the table: "registrant.GoogleAccount" */
    insert_registrant_GoogleAccount_one?: Maybe<Registrant_GoogleAccount>;
    /** insert data into the table: "registrant.Group" */
    insert_registrant_Group?: Maybe<Registrant_Group_Mutation_Response>;
    /** insert data into the table: "registrant.GroupRegistrant" */
    insert_registrant_GroupRegistrant?: Maybe<Registrant_GroupRegistrant_Mutation_Response>;
    /** insert a single row into the table: "registrant.GroupRegistrant" */
    insert_registrant_GroupRegistrant_one?: Maybe<Registrant_GroupRegistrant>;
    /** insert a single row into the table: "registrant.Group" */
    insert_registrant_Group_one?: Maybe<Registrant_Group>;
    /** insert data into the table: "registrant.Invitation" */
    insert_registrant_Invitation?: Maybe<Registrant_Invitation_Mutation_Response>;
    /** insert a single row into the table: "registrant.Invitation" */
    insert_registrant_Invitation_one?: Maybe<Registrant_Invitation>;
    /** insert data into the table: "registrant.Profile" */
    insert_registrant_Profile?: Maybe<Registrant_Profile_Mutation_Response>;
    /** insert a single row into the table: "registrant.Profile" */
    insert_registrant_Profile_one?: Maybe<Registrant_Profile>;
    /** insert data into the table: "registrant.Registrant" */
    insert_registrant_Registrant?: Maybe<Registrant_Registrant_Mutation_Response>;
    /** insert data into the table: "registrant.RegistrantRole" */
    insert_registrant_RegistrantRole?: Maybe<Registrant_RegistrantRole_Mutation_Response>;
    /** insert a single row into the table: "registrant.RegistrantRole" */
    insert_registrant_RegistrantRole_one?: Maybe<Registrant_RegistrantRole>;
    /** insert a single row into the table: "registrant.Registrant" */
    insert_registrant_Registrant_one?: Maybe<Registrant_Registrant>;
    /** insert data into the table: "registrant.SavedVonageRoomRecording" */
    insert_registrant_SavedVonageRoomRecording?: Maybe<Registrant_SavedVonageRoomRecording_Mutation_Response>;
    /** insert a single row into the table: "registrant.SavedVonageRoomRecording" */
    insert_registrant_SavedVonageRoomRecording_one?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** insert data into the table: "registrant.SubconferenceMembership" */
    insert_registrant_SubconferenceMembership?: Maybe<Registrant_SubconferenceMembership_Mutation_Response>;
    /** insert a single row into the table: "registrant.SubconferenceMembership" */
    insert_registrant_SubconferenceMembership_one?: Maybe<Registrant_SubconferenceMembership>;
    /** insert data into the table: "room.Backend" */
    insert_room_Backend?: Maybe<Room_Backend_Mutation_Response>;
    /** insert a single row into the table: "room.Backend" */
    insert_room_Backend_one?: Maybe<Room_Backend>;
    /** insert data into the table: "room.ChimeMeeting" */
    insert_room_ChimeMeeting?: Maybe<Room_ChimeMeeting_Mutation_Response>;
    /** insert a single row into the table: "room.ChimeMeeting" */
    insert_room_ChimeMeeting_one?: Maybe<Room_ChimeMeeting>;
    /** insert data into the table: "room.ManagementMode" */
    insert_room_ManagementMode?: Maybe<Room_ManagementMode_Mutation_Response>;
    /** insert a single row into the table: "room.ManagementMode" */
    insert_room_ManagementMode_one?: Maybe<Room_ManagementMode>;
    /** insert data into the table: "room.PersonRole" */
    insert_room_PersonRole?: Maybe<Room_PersonRole_Mutation_Response>;
    /** insert a single row into the table: "room.PersonRole" */
    insert_room_PersonRole_one?: Maybe<Room_PersonRole>;
    /** insert data into the table: "room.Room" */
    insert_room_Room?: Maybe<Room_Room_Mutation_Response>;
    /** insert data into the table: "room.RoomGroupMembership" */
    insert_room_RoomGroupMembership?: Maybe<Room_RoomGroupMembership_Mutation_Response>;
    /** insert a single row into the table: "room.RoomGroupMembership" */
    insert_room_RoomGroupMembership_one?: Maybe<Room_RoomGroupMembership>;
    /** insert data into the table: "room.RoomMembership" */
    insert_room_RoomMembership?: Maybe<Room_RoomMembership_Mutation_Response>;
    /** insert a single row into the table: "room.RoomMembership" */
    insert_room_RoomMembership_one?: Maybe<Room_RoomMembership>;
    /** insert a single row into the table: "room.Room" */
    insert_room_Room_one?: Maybe<Room_Room>;
    /** insert data into the table: "room.ShuffleAlgorithm" */
    insert_room_ShuffleAlgorithm?: Maybe<Room_ShuffleAlgorithm_Mutation_Response>;
    /** insert a single row into the table: "room.ShuffleAlgorithm" */
    insert_room_ShuffleAlgorithm_one?: Maybe<Room_ShuffleAlgorithm>;
    /** insert data into the table: "room.ShufflePeriod" */
    insert_room_ShufflePeriod?: Maybe<Room_ShufflePeriod_Mutation_Response>;
    /** insert a single row into the table: "room.ShufflePeriod" */
    insert_room_ShufflePeriod_one?: Maybe<Room_ShufflePeriod>;
    /** insert data into the table: "room.ShuffleQueueEntry" */
    insert_room_ShuffleQueueEntry?: Maybe<Room_ShuffleQueueEntry_Mutation_Response>;
    /** insert a single row into the table: "room.ShuffleQueueEntry" */
    insert_room_ShuffleQueueEntry_one?: Maybe<Room_ShuffleQueueEntry>;
    /** insert data into the table: "room.ShuffleRoom" */
    insert_room_ShuffleRoom?: Maybe<Room_ShuffleRoom_Mutation_Response>;
    /** insert a single row into the table: "room.ShuffleRoom" */
    insert_room_ShuffleRoom_one?: Maybe<Room_ShuffleRoom>;
    /** insert data into the table: "schedule.Continuation" */
    insert_schedule_Continuation?: Maybe<Schedule_Continuation_Mutation_Response>;
    /** insert a single row into the table: "schedule.Continuation" */
    insert_schedule_Continuation_one?: Maybe<Schedule_Continuation>;
    /** insert data into the table: "schedule.CurrentEvents" */
    insert_schedule_CurrentEvents?: Maybe<Schedule_CurrentEvents_Mutation_Response>;
    /** insert a single row into the table: "schedule.CurrentEvents" */
    insert_schedule_CurrentEvents_one?: Maybe<Schedule_CurrentEvents>;
    /** insert data into the table: "schedule.Event" */
    insert_schedule_Event?: Maybe<Schedule_Event_Mutation_Response>;
    /** insert data into the table: "schedule.EventProgramPerson" */
    insert_schedule_EventProgramPerson?: Maybe<Schedule_EventProgramPerson_Mutation_Response>;
    /** insert data into the table: "schedule.EventProgramPersonRole" */
    insert_schedule_EventProgramPersonRole?: Maybe<Schedule_EventProgramPersonRole_Mutation_Response>;
    /** insert a single row into the table: "schedule.EventProgramPersonRole" */
    insert_schedule_EventProgramPersonRole_one?: Maybe<Schedule_EventProgramPersonRole>;
    /** insert a single row into the table: "schedule.EventProgramPerson" */
    insert_schedule_EventProgramPerson_one?: Maybe<Schedule_EventProgramPerson>;
    /** insert a single row into the table: "schedule.Event" */
    insert_schedule_Event_one?: Maybe<Schedule_Event>;
    /** insert data into the table: "schedule.Mode" */
    insert_schedule_Mode?: Maybe<Schedule_Mode_Mutation_Response>;
    /** insert a single row into the table: "schedule.Mode" */
    insert_schedule_Mode_one?: Maybe<Schedule_Mode>;
    /** insert data into the table: "schedule.StarredEvent" */
    insert_schedule_StarredEvent?: Maybe<Schedule_StarredEvent_Mutation_Response>;
    /** insert a single row into the table: "schedule.StarredEvent" */
    insert_schedule_StarredEvent_one?: Maybe<Schedule_StarredEvent>;
    /** insert data into the table: "sponsor.Tier" */
    insert_sponsor_Tier?: Maybe<Sponsor_Tier_Mutation_Response>;
    /** insert data into the table: "sponsor.TierMember" */
    insert_sponsor_TierMember?: Maybe<Sponsor_TierMember_Mutation_Response>;
    /** insert a single row into the table: "sponsor.TierMember" */
    insert_sponsor_TierMember_one?: Maybe<Sponsor_TierMember>;
    /** insert a single row into the table: "sponsor.Tier" */
    insert_sponsor_Tier_one?: Maybe<Sponsor_Tier>;
    /** insert data into the table: "system.Configuration" */
    insert_system_Configuration?: Maybe<System_Configuration_Mutation_Response>;
    /** insert data into the table: "system.ConfigurationKey" */
    insert_system_ConfigurationKey?: Maybe<System_ConfigurationKey_Mutation_Response>;
    /** insert a single row into the table: "system.ConfigurationKey" */
    insert_system_ConfigurationKey_one?: Maybe<System_ConfigurationKey>;
    /** insert data into the table: "system.ConfigurationPermissionGrant" */
    insert_system_ConfigurationPermissionGrant?: Maybe<System_ConfigurationPermissionGrant_Mutation_Response>;
    /** insert a single row into the table: "system.ConfigurationPermissionGrant" */
    insert_system_ConfigurationPermissionGrant_one?: Maybe<System_ConfigurationPermissionGrant>;
    /** insert a single row into the table: "system.Configuration" */
    insert_system_Configuration_one?: Maybe<System_Configuration>;
    /** insert data into the table: "system.SuperUserPermission" */
    insert_system_SuperUserPermission?: Maybe<System_SuperUserPermission_Mutation_Response>;
    /** insert data into the table: "system.SuperUserPermissionGrant" */
    insert_system_SuperUserPermissionGrant?: Maybe<System_SuperUserPermissionGrant_Mutation_Response>;
    /** insert a single row into the table: "system.SuperUserPermissionGrant" */
    insert_system_SuperUserPermissionGrant_one?: Maybe<System_SuperUserPermissionGrant>;
    /** insert a single row into the table: "system.SuperUserPermission" */
    insert_system_SuperUserPermission_one?: Maybe<System_SuperUserPermission>;
    /** insert data into the table: "video.ChannelStack" */
    insert_video_ChannelStack?: Maybe<Video_ChannelStack_Mutation_Response>;
    /** insert a single row into the table: "video.ChannelStack" */
    insert_video_ChannelStack_one?: Maybe<Video_ChannelStack>;
    /** insert data into the table: "video.EventVonageSession" */
    insert_video_EventVonageSession?: Maybe<Video_EventVonageSession_Mutation_Response>;
    /** insert a single row into the table: "video.EventVonageSession" */
    insert_video_EventVonageSession_one?: Maybe<Video_EventVonageSession>;
    /** insert data into the table: "video.ImmediateSwitch" */
    insert_video_ImmediateSwitch?: Maybe<Video_ImmediateSwitch_Mutation_Response>;
    /** insert a single row into the table: "video.ImmediateSwitch" */
    insert_video_ImmediateSwitch_one?: Maybe<Video_ImmediateSwitch>;
    /** insert data into the table: "video.InputType" */
    insert_video_InputType?: Maybe<Video_InputType_Mutation_Response>;
    /** insert a single row into the table: "video.InputType" */
    insert_video_InputType_one?: Maybe<Video_InputType>;
    /** insert data into the table: "video.MediaLiveChannelStatus" */
    insert_video_MediaLiveChannelStatus?: Maybe<Video_MediaLiveChannelStatus_Mutation_Response>;
    /** insert a single row into the table: "video.MediaLiveChannelStatus" */
    insert_video_MediaLiveChannelStatus_one?: Maybe<Video_MediaLiveChannelStatus>;
    /** insert data into the table: "video.RoomRtmpInput" */
    insert_video_RoomRtmpInput?: Maybe<Video_RoomRtmpInput_Mutation_Response>;
    /** insert a single row into the table: "video.RoomRtmpInput" */
    insert_video_RoomRtmpInput_one?: Maybe<Video_RoomRtmpInput>;
    /** insert data into the table: "video.RoomRtmpOutput" */
    insert_video_RoomRtmpOutput?: Maybe<Video_RoomRtmpOutput_Mutation_Response>;
    /** insert a single row into the table: "video.RoomRtmpOutput" */
    insert_video_RoomRtmpOutput_one?: Maybe<Video_RoomRtmpOutput>;
    /** insert data into the table: "video.RtmpInput" */
    insert_video_RtmpInput?: Maybe<Video_RtmpInput_Mutation_Response>;
    /** insert a single row into the table: "video.RtmpInput" */
    insert_video_RtmpInput_one?: Maybe<Video_RtmpInput>;
    /** insert data into the table: "video.TranscriptionJob" */
    insert_video_TranscriptionJob?: Maybe<Video_TranscriptionJob_Mutation_Response>;
    /** insert a single row into the table: "video.TranscriptionJob" */
    insert_video_TranscriptionJob_one?: Maybe<Video_TranscriptionJob>;
    /** insert data into the table: "video.VideoRenderJob" */
    insert_video_VideoRenderJob?: Maybe<Video_VideoRenderJob_Mutation_Response>;
    /** insert a single row into the table: "video.VideoRenderJob" */
    insert_video_VideoRenderJob_one?: Maybe<Video_VideoRenderJob>;
    /** insert data into the table: "video.VonageParticipantStream" */
    insert_video_VonageParticipantStream?: Maybe<Video_VonageParticipantStream_Mutation_Response>;
    /** insert a single row into the table: "video.VonageParticipantStream" */
    insert_video_VonageParticipantStream_one?: Maybe<Video_VonageParticipantStream>;
    /** insert data into the table: "video.VonageRoomRecording" */
    insert_video_VonageRoomRecording?: Maybe<Video_VonageRoomRecording_Mutation_Response>;
    /** insert a single row into the table: "video.VonageRoomRecording" */
    insert_video_VonageRoomRecording_one?: Maybe<Video_VonageRoomRecording>;
    /** insert data into the table: "video.VonageSessionLayout" */
    insert_video_VonageSessionLayout?: Maybe<Video_VonageSessionLayout_Mutation_Response>;
    /** insert a single row into the table: "video.VonageSessionLayout" */
    insert_video_VonageSessionLayout_one?: Maybe<Video_VonageSessionLayout>;
    /** insert data into the table: "video.VonageVideoPlaybackCommand" */
    insert_video_VonageVideoPlaybackCommand?: Maybe<Video_VonageVideoPlaybackCommand_Mutation_Response>;
    /** insert a single row into the table: "video.VonageVideoPlaybackCommand" */
    insert_video_VonageVideoPlaybackCommand_one?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** insert data into the table: "video.YouTubeUpload" */
    insert_video_YouTubeUpload?: Maybe<Video_YouTubeUpload_Mutation_Response>;
    /** insert a single row into the table: "video.YouTubeUpload" */
    insert_video_YouTubeUpload_one?: Maybe<Video_YouTubeUpload>;
    invitationConfirmCurrent?: Maybe<ConfirmInvitationOutput>;
    joinEventVonageSession?: Maybe<JoinEventVonageSessionOutput>;
    joinRoomChimeSession?: Maybe<JoinRoomChimeSessionOutput>;
    joinRoomVonageSession?: Maybe<JoinRoomVonageSessionOutput>;
    migrateElement?: Maybe<MigrateElementOutput>;
    migrateProfilePhoto?: Maybe<MigrateProfilePhotoResponse>;
    notifyEventEnded: NotifyEventEnded;
    notifyEventStarted: NotifyEventStarted;
    presence_Flush: PresenceFlushOutput;
    refreshYouTubeData?: Maybe<RefreshYouTubeDataOutput>;
    /** execute VOLATILE function "schedule.shiftPresentationTimes" which returns "schedule.Event" */
    schedule_shiftPresentationTimes: Array<Schedule_Event>;
    /** execute VOLATILE function "schedule.shiftTimes" which returns "schedule.Event" */
    schedule_shiftTimes: Array<Schedule_Event>;
    stopEventBroadcast?: Maybe<StopEventBroadcastOutput>;
    submitGoogleOAuthCode?: Maybe<SubmitGoogleOAuthCodeOutput>;
    submitUploadableElement?: Maybe<SubmitUploadableElementOutput>;
    toggleVonageRecordingState?: Maybe<ToggleVonageRecordingStateOutput>;
    updateProfilePhoto?: Maybe<UpdateProfilePhotoResponse>;
    updateSubtitles?: Maybe<SubmitUpdatedSubtitlesOutput>;
    /** update data of the table: "Email" */
    update_Email?: Maybe<Email_Mutation_Response>;
    /** update single row of the table: "Email" */
    update_Email_by_pk?: Maybe<Email>;
    /** update data of the table: "PushNotificationSubscription" */
    update_PushNotificationSubscription?: Maybe<PushNotificationSubscription_Mutation_Response>;
    /** update single row of the table: "PushNotificationSubscription" */
    update_PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
    /** update data of the table: "User" */
    update_User?: Maybe<User_Mutation_Response>;
    /** update single row of the table: "User" */
    update_User_by_pk?: Maybe<User>;
    /** update data of the table: "analytics.AppStats" */
    update_analytics_AppStats?: Maybe<Analytics_AppStats_Mutation_Response>;
    /** update single row of the table: "analytics.AppStats" */
    update_analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
    /** update data of the table: "analytics.ContentElementStats" */
    update_analytics_ContentElementStats?: Maybe<Analytics_ContentElementStats_Mutation_Response>;
    /** update single row of the table: "analytics.ContentElementStats" */
    update_analytics_ContentElementStats_by_pk?: Maybe<Analytics_ContentElementStats>;
    /** update data of the table: "analytics.ContentItemStats" */
    update_analytics_ContentItemStats?: Maybe<Analytics_ContentItemStats_Mutation_Response>;
    /** update single row of the table: "analytics.ContentItemStats" */
    update_analytics_ContentItemStats_by_pk?: Maybe<Analytics_ContentItemStats>;
    /** update data of the table: "analytics.ElementTotalViews" */
    update_analytics_ElementTotalViews?: Maybe<Analytics_ElementTotalViews_Mutation_Response>;
    /** update single row of the table: "analytics.ElementTotalViews" */
    update_analytics_ElementTotalViews_by_pk?: Maybe<Analytics_ElementTotalViews>;
    /** update data of the table: "analytics.ItemTotalViews" */
    update_analytics_ItemTotalViews?: Maybe<Analytics_ItemTotalViews_Mutation_Response>;
    /** update single row of the table: "analytics.ItemTotalViews" */
    update_analytics_ItemTotalViews_by_pk?: Maybe<Analytics_ItemTotalViews>;
    /** update data of the table: "analytics.RoomPresence" */
    update_analytics_RoomPresence?: Maybe<Analytics_RoomPresence_Mutation_Response>;
    /** update single row of the table: "analytics.RoomPresence" */
    update_analytics_RoomPresence_by_pk?: Maybe<Analytics_RoomPresence>;
    /** update data of the table: "analytics.RoomStats" */
    update_analytics_RoomStats?: Maybe<Analytics_RoomStats_Mutation_Response>;
    /** update single row of the table: "analytics.RoomStats" */
    update_analytics_RoomStats_by_pk?: Maybe<Analytics_RoomStats>;
    /** update data of the table: "chat.Chat" */
    update_chat_Chat?: Maybe<Chat_Chat_Mutation_Response>;
    /** update single row of the table: "chat.Chat" */
    update_chat_Chat_by_pk?: Maybe<Chat_Chat>;
    /** update data of the table: "chat.Flag" */
    update_chat_Flag?: Maybe<Chat_Flag_Mutation_Response>;
    /** update data of the table: "chat.FlagType" */
    update_chat_FlagType?: Maybe<Chat_FlagType_Mutation_Response>;
    /** update single row of the table: "chat.FlagType" */
    update_chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
    /** update single row of the table: "chat.Flag" */
    update_chat_Flag_by_pk?: Maybe<Chat_Flag>;
    /** update data of the table: "chat.Message" */
    update_chat_Message?: Maybe<Chat_Message_Mutation_Response>;
    /** update data of the table: "chat.MessageType" */
    update_chat_MessageType?: Maybe<Chat_MessageType_Mutation_Response>;
    /** update single row of the table: "chat.MessageType" */
    update_chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
    /** update single row of the table: "chat.Message" */
    update_chat_Message_by_pk?: Maybe<Chat_Message>;
    /** update data of the table: "chat.Pin" */
    update_chat_Pin?: Maybe<Chat_Pin_Mutation_Response>;
    /** update single row of the table: "chat.Pin" */
    update_chat_Pin_by_pk?: Maybe<Chat_Pin>;
    /** update data of the table: "chat.Reaction" */
    update_chat_Reaction?: Maybe<Chat_Reaction_Mutation_Response>;
    /** update data of the table: "chat.ReactionType" */
    update_chat_ReactionType?: Maybe<Chat_ReactionType_Mutation_Response>;
    /** update single row of the table: "chat.ReactionType" */
    update_chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
    /** update single row of the table: "chat.Reaction" */
    update_chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
    /** update data of the table: "chat.ReadUpToIndex" */
    update_chat_ReadUpToIndex?: Maybe<Chat_ReadUpToIndex_Mutation_Response>;
    /** update single row of the table: "chat.ReadUpToIndex" */
    update_chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
    /** update data of the table: "chat.Subscription" */
    update_chat_Subscription?: Maybe<Chat_Subscription_Mutation_Response>;
    /** update single row of the table: "chat.Subscription" */
    update_chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
    /** update data of the table: "collection.Exhibition" */
    update_collection_Exhibition?: Maybe<Collection_Exhibition_Mutation_Response>;
    /** update single row of the table: "collection.Exhibition" */
    update_collection_Exhibition_by_pk?: Maybe<Collection_Exhibition>;
    /** update data of the table: "collection.ProgramPerson" */
    update_collection_ProgramPerson?: Maybe<Collection_ProgramPerson_Mutation_Response>;
    /** update single row of the table: "collection.ProgramPerson" */
    update_collection_ProgramPerson_by_pk?: Maybe<Collection_ProgramPerson>;
    /** update data of the table: "collection.Tag" */
    update_collection_Tag?: Maybe<Collection_Tag_Mutation_Response>;
    /** update single row of the table: "collection.Tag" */
    update_collection_Tag_by_pk?: Maybe<Collection_Tag>;
    /** update data of the table: "conference.Conference" */
    update_conference_Conference?: Maybe<Conference_Conference_Mutation_Response>;
    /** update single row of the table: "conference.Conference" */
    update_conference_Conference_by_pk?: Maybe<Conference_Conference>;
    /** update data of the table: "conference.Configuration" */
    update_conference_Configuration?: Maybe<Conference_Configuration_Mutation_Response>;
    /** update data of the table: "conference.ConfigurationKey" */
    update_conference_ConfigurationKey?: Maybe<Conference_ConfigurationKey_Mutation_Response>;
    /** update single row of the table: "conference.ConfigurationKey" */
    update_conference_ConfigurationKey_by_pk?: Maybe<Conference_ConfigurationKey>;
    /** update single row of the table: "conference.Configuration" */
    update_conference_Configuration_by_pk?: Maybe<Conference_Configuration>;
    /** update data of the table: "conference.DemoCode" */
    update_conference_DemoCode?: Maybe<Conference_DemoCode_Mutation_Response>;
    /** update single row of the table: "conference.DemoCode" */
    update_conference_DemoCode_by_pk?: Maybe<Conference_DemoCode>;
    /** update data of the table: "conference.Quota" */
    update_conference_Quota?: Maybe<Conference_Quota_Mutation_Response>;
    /** update single row of the table: "conference.Quota" */
    update_conference_Quota_by_pk?: Maybe<Conference_Quota>;
    /** update data of the table: "conference.Subconference" */
    update_conference_Subconference?: Maybe<Conference_Subconference_Mutation_Response>;
    /** update single row of the table: "conference.Subconference" */
    update_conference_Subconference_by_pk?: Maybe<Conference_Subconference>;
    /** update data of the table: "conference.Usage" */
    update_conference_Usage?: Maybe<Conference_Usage_Mutation_Response>;
    /** update single row of the table: "conference.Usage" */
    update_conference_Usage_by_pk?: Maybe<Conference_Usage>;
    /** update data of the table: "conference.VisibilityLevel" */
    update_conference_VisibilityLevel?: Maybe<Conference_VisibilityLevel_Mutation_Response>;
    /** update single row of the table: "conference.VisibilityLevel" */
    update_conference_VisibilityLevel_by_pk?: Maybe<Conference_VisibilityLevel>;
    /** update data of the table: "content.Element" */
    update_content_Element?: Maybe<Content_Element_Mutation_Response>;
    /** update data of the table: "content.ElementType" */
    update_content_ElementType?: Maybe<Content_ElementType_Mutation_Response>;
    /** update single row of the table: "content.ElementType" */
    update_content_ElementType_by_pk?: Maybe<Content_ElementType>;
    /** update single row of the table: "content.Element" */
    update_content_Element_by_pk?: Maybe<Content_Element>;
    /** update data of the table: "content.Item" */
    update_content_Item?: Maybe<Content_Item_Mutation_Response>;
    /** update data of the table: "content.ItemExhibition" */
    update_content_ItemExhibition?: Maybe<Content_ItemExhibition_Mutation_Response>;
    /** update single row of the table: "content.ItemExhibition" */
    update_content_ItemExhibition_by_pk?: Maybe<Content_ItemExhibition>;
    /** update data of the table: "content.ItemProgramPerson" */
    update_content_ItemProgramPerson?: Maybe<Content_ItemProgramPerson_Mutation_Response>;
    /** update single row of the table: "content.ItemProgramPerson" */
    update_content_ItemProgramPerson_by_pk?: Maybe<Content_ItemProgramPerson>;
    /** update data of the table: "content.ItemTag" */
    update_content_ItemTag?: Maybe<Content_ItemTag_Mutation_Response>;
    /** update single row of the table: "content.ItemTag" */
    update_content_ItemTag_by_pk?: Maybe<Content_ItemTag>;
    /** update data of the table: "content.ItemType" */
    update_content_ItemType?: Maybe<Content_ItemType_Mutation_Response>;
    /** update single row of the table: "content.ItemType" */
    update_content_ItemType_by_pk?: Maybe<Content_ItemType>;
    /** update single row of the table: "content.Item" */
    update_content_Item_by_pk?: Maybe<Content_Item>;
    /** update data of the table: "job_queues.ChannelStackCreateJob" */
    update_job_queues_ChannelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Mutation_Response>;
    /** update single row of the table: "job_queues.ChannelStackCreateJob" */
    update_job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** update data of the table: "job_queues.ChannelStackDeleteJob" */
    update_job_queues_ChannelStackDeleteJob?: Maybe<Job_Queues_ChannelStackDeleteJob_Mutation_Response>;
    /** update single row of the table: "job_queues.ChannelStackDeleteJob" */
    update_job_queues_ChannelStackDeleteJob_by_pk?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** update data of the table: "job_queues.ChannelStackUpdateJob" */
    update_job_queues_ChannelStackUpdateJob?: Maybe<Job_Queues_ChannelStackUpdateJob_Mutation_Response>;
    /** update single row of the table: "job_queues.ChannelStackUpdateJob" */
    update_job_queues_ChannelStackUpdateJob_by_pk?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** update data of the table: "job_queues.CombineVideosJob" */
    update_job_queues_CombineVideosJob?: Maybe<Job_Queues_CombineVideosJob_Mutation_Response>;
    /** update single row of the table: "job_queues.CombineVideosJob" */
    update_job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
    /** update data of the table: "job_queues.CustomEmailJob" */
    update_job_queues_CustomEmailJob?: Maybe<Job_Queues_CustomEmailJob_Mutation_Response>;
    /** update single row of the table: "job_queues.CustomEmailJob" */
    update_job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
    /** update data of the table: "job_queues.ImportJob" */
    update_job_queues_ImportJob?: Maybe<Job_Queues_ImportJob_Mutation_Response>;
    /** update data of the table: "job_queues.ImportJobOutput" */
    update_job_queues_ImportJobOutput?: Maybe<Job_Queues_ImportJobOutput_Mutation_Response>;
    /** update single row of the table: "job_queues.ImportJobOutput" */
    update_job_queues_ImportJobOutput_by_pk?: Maybe<Job_Queues_ImportJobOutput>;
    /** update single row of the table: "job_queues.ImportJob" */
    update_job_queues_ImportJob_by_pk?: Maybe<Job_Queues_ImportJob>;
    /** update data of the table: "job_queues.InvitationEmailJob" */
    update_job_queues_InvitationEmailJob?: Maybe<Job_Queues_InvitationEmailJob_Mutation_Response>;
    /** update single row of the table: "job_queues.InvitationEmailJob" */
    update_job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
    /** update data of the table: "job_queues.JobStatus" */
    update_job_queues_JobStatus?: Maybe<Job_Queues_JobStatus_Mutation_Response>;
    /** update single row of the table: "job_queues.JobStatus" */
    update_job_queues_JobStatus_by_pk?: Maybe<Job_Queues_JobStatus>;
    /** update data of the table: "job_queues.MediaPackageHarvestJob" */
    update_job_queues_MediaPackageHarvestJob?: Maybe<Job_Queues_MediaPackageHarvestJob_Mutation_Response>;
    /** update single row of the table: "job_queues.MediaPackageHarvestJob" */
    update_job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** update data of the table: "job_queues.PrepareJob" */
    update_job_queues_PrepareJob?: Maybe<Job_Queues_PrepareJob_Mutation_Response>;
    /** update single row of the table: "job_queues.PrepareJob" */
    update_job_queues_PrepareJob_by_pk?: Maybe<Job_Queues_PrepareJob>;
    /** update data of the table: "job_queues.PublishVideoJob" */
    update_job_queues_PublishVideoJob?: Maybe<Job_Queues_PublishVideoJob_Mutation_Response>;
    /** update single row of the table: "job_queues.PublishVideoJob" */
    update_job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
    /** update data of the table: "job_queues.SubmissionRequestEmailJob" */
    update_job_queues_SubmissionRequestEmailJob?: Maybe<Job_Queues_SubmissionRequestEmailJob_Mutation_Response>;
    /** update single row of the table: "job_queues.SubmissionRequestEmailJob" */
    update_job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** update data of the table: "job_queues.UploadYouTubeVideoJob" */
    update_job_queues_UploadYouTubeVideoJob?: Maybe<Job_Queues_UploadYouTubeVideoJob_Mutation_Response>;
    /** update single row of the table: "job_queues.UploadYouTubeVideoJob" */
    update_job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    /** update data of the table: "registrant.GoogleAccount" */
    update_registrant_GoogleAccount?: Maybe<Registrant_GoogleAccount_Mutation_Response>;
    /** update single row of the table: "registrant.GoogleAccount" */
    update_registrant_GoogleAccount_by_pk?: Maybe<Registrant_GoogleAccount>;
    /** update data of the table: "registrant.Group" */
    update_registrant_Group?: Maybe<Registrant_Group_Mutation_Response>;
    /** update data of the table: "registrant.GroupRegistrant" */
    update_registrant_GroupRegistrant?: Maybe<Registrant_GroupRegistrant_Mutation_Response>;
    /** update single row of the table: "registrant.GroupRegistrant" */
    update_registrant_GroupRegistrant_by_pk?: Maybe<Registrant_GroupRegistrant>;
    /** update single row of the table: "registrant.Group" */
    update_registrant_Group_by_pk?: Maybe<Registrant_Group>;
    /** update data of the table: "registrant.Invitation" */
    update_registrant_Invitation?: Maybe<Registrant_Invitation_Mutation_Response>;
    /** update single row of the table: "registrant.Invitation" */
    update_registrant_Invitation_by_pk?: Maybe<Registrant_Invitation>;
    /** update data of the table: "registrant.Profile" */
    update_registrant_Profile?: Maybe<Registrant_Profile_Mutation_Response>;
    /** update single row of the table: "registrant.Profile" */
    update_registrant_Profile_by_pk?: Maybe<Registrant_Profile>;
    /** update data of the table: "registrant.Registrant" */
    update_registrant_Registrant?: Maybe<Registrant_Registrant_Mutation_Response>;
    /** update data of the table: "registrant.RegistrantRole" */
    update_registrant_RegistrantRole?: Maybe<Registrant_RegistrantRole_Mutation_Response>;
    /** update single row of the table: "registrant.RegistrantRole" */
    update_registrant_RegistrantRole_by_pk?: Maybe<Registrant_RegistrantRole>;
    /** update single row of the table: "registrant.Registrant" */
    update_registrant_Registrant_by_pk?: Maybe<Registrant_Registrant>;
    /** update data of the table: "registrant.SavedVonageRoomRecording" */
    update_registrant_SavedVonageRoomRecording?: Maybe<Registrant_SavedVonageRoomRecording_Mutation_Response>;
    /** update single row of the table: "registrant.SavedVonageRoomRecording" */
    update_registrant_SavedVonageRoomRecording_by_pk?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** update data of the table: "registrant.SubconferenceMembership" */
    update_registrant_SubconferenceMembership?: Maybe<Registrant_SubconferenceMembership_Mutation_Response>;
    /** update single row of the table: "registrant.SubconferenceMembership" */
    update_registrant_SubconferenceMembership_by_pk?: Maybe<Registrant_SubconferenceMembership>;
    /** update data of the table: "room.Backend" */
    update_room_Backend?: Maybe<Room_Backend_Mutation_Response>;
    /** update single row of the table: "room.Backend" */
    update_room_Backend_by_pk?: Maybe<Room_Backend>;
    /** update data of the table: "room.ChimeMeeting" */
    update_room_ChimeMeeting?: Maybe<Room_ChimeMeeting_Mutation_Response>;
    /** update single row of the table: "room.ChimeMeeting" */
    update_room_ChimeMeeting_by_pk?: Maybe<Room_ChimeMeeting>;
    /** update data of the table: "room.ManagementMode" */
    update_room_ManagementMode?: Maybe<Room_ManagementMode_Mutation_Response>;
    /** update single row of the table: "room.ManagementMode" */
    update_room_ManagementMode_by_pk?: Maybe<Room_ManagementMode>;
    /** update data of the table: "room.PersonRole" */
    update_room_PersonRole?: Maybe<Room_PersonRole_Mutation_Response>;
    /** update single row of the table: "room.PersonRole" */
    update_room_PersonRole_by_pk?: Maybe<Room_PersonRole>;
    /** update data of the table: "room.Room" */
    update_room_Room?: Maybe<Room_Room_Mutation_Response>;
    /** update data of the table: "room.RoomGroupMembership" */
    update_room_RoomGroupMembership?: Maybe<Room_RoomGroupMembership_Mutation_Response>;
    /** update single row of the table: "room.RoomGroupMembership" */
    update_room_RoomGroupMembership_by_pk?: Maybe<Room_RoomGroupMembership>;
    /** update data of the table: "room.RoomMembership" */
    update_room_RoomMembership?: Maybe<Room_RoomMembership_Mutation_Response>;
    /** update single row of the table: "room.RoomMembership" */
    update_room_RoomMembership_by_pk?: Maybe<Room_RoomMembership>;
    /** update single row of the table: "room.Room" */
    update_room_Room_by_pk?: Maybe<Room_Room>;
    /** update data of the table: "room.ShuffleAlgorithm" */
    update_room_ShuffleAlgorithm?: Maybe<Room_ShuffleAlgorithm_Mutation_Response>;
    /** update single row of the table: "room.ShuffleAlgorithm" */
    update_room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
    /** update data of the table: "room.ShufflePeriod" */
    update_room_ShufflePeriod?: Maybe<Room_ShufflePeriod_Mutation_Response>;
    /** update single row of the table: "room.ShufflePeriod" */
    update_room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
    /** update data of the table: "room.ShuffleQueueEntry" */
    update_room_ShuffleQueueEntry?: Maybe<Room_ShuffleQueueEntry_Mutation_Response>;
    /** update single row of the table: "room.ShuffleQueueEntry" */
    update_room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
    /** update data of the table: "room.ShuffleRoom" */
    update_room_ShuffleRoom?: Maybe<Room_ShuffleRoom_Mutation_Response>;
    /** update single row of the table: "room.ShuffleRoom" */
    update_room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
    /** update data of the table: "schedule.Continuation" */
    update_schedule_Continuation?: Maybe<Schedule_Continuation_Mutation_Response>;
    /** update single row of the table: "schedule.Continuation" */
    update_schedule_Continuation_by_pk?: Maybe<Schedule_Continuation>;
    /** update data of the table: "schedule.CurrentEvents" */
    update_schedule_CurrentEvents?: Maybe<Schedule_CurrentEvents_Mutation_Response>;
    /** update data of the table: "schedule.Event" */
    update_schedule_Event?: Maybe<Schedule_Event_Mutation_Response>;
    /** update data of the table: "schedule.EventProgramPerson" */
    update_schedule_EventProgramPerson?: Maybe<Schedule_EventProgramPerson_Mutation_Response>;
    /** update data of the table: "schedule.EventProgramPersonRole" */
    update_schedule_EventProgramPersonRole?: Maybe<Schedule_EventProgramPersonRole_Mutation_Response>;
    /** update single row of the table: "schedule.EventProgramPersonRole" */
    update_schedule_EventProgramPersonRole_by_pk?: Maybe<Schedule_EventProgramPersonRole>;
    /** update single row of the table: "schedule.EventProgramPerson" */
    update_schedule_EventProgramPerson_by_pk?: Maybe<Schedule_EventProgramPerson>;
    /** update single row of the table: "schedule.Event" */
    update_schedule_Event_by_pk?: Maybe<Schedule_Event>;
    /** update data of the table: "schedule.Mode" */
    update_schedule_Mode?: Maybe<Schedule_Mode_Mutation_Response>;
    /** update single row of the table: "schedule.Mode" */
    update_schedule_Mode_by_pk?: Maybe<Schedule_Mode>;
    /** update data of the table: "schedule.StarredEvent" */
    update_schedule_StarredEvent?: Maybe<Schedule_StarredEvent_Mutation_Response>;
    /** update single row of the table: "schedule.StarredEvent" */
    update_schedule_StarredEvent_by_pk?: Maybe<Schedule_StarredEvent>;
    /** update data of the table: "sponsor.Tier" */
    update_sponsor_Tier?: Maybe<Sponsor_Tier_Mutation_Response>;
    /** update data of the table: "sponsor.TierMember" */
    update_sponsor_TierMember?: Maybe<Sponsor_TierMember_Mutation_Response>;
    /** update single row of the table: "sponsor.TierMember" */
    update_sponsor_TierMember_by_pk?: Maybe<Sponsor_TierMember>;
    /** update single row of the table: "sponsor.Tier" */
    update_sponsor_Tier_by_pk?: Maybe<Sponsor_Tier>;
    /** update data of the table: "system.Configuration" */
    update_system_Configuration?: Maybe<System_Configuration_Mutation_Response>;
    /** update data of the table: "system.ConfigurationKey" */
    update_system_ConfigurationKey?: Maybe<System_ConfigurationKey_Mutation_Response>;
    /** update single row of the table: "system.ConfigurationKey" */
    update_system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
    /** update data of the table: "system.ConfigurationPermissionGrant" */
    update_system_ConfigurationPermissionGrant?: Maybe<System_ConfigurationPermissionGrant_Mutation_Response>;
    /** update single row of the table: "system.ConfigurationPermissionGrant" */
    update_system_ConfigurationPermissionGrant_by_pk?: Maybe<System_ConfigurationPermissionGrant>;
    /** update single row of the table: "system.Configuration" */
    update_system_Configuration_by_pk?: Maybe<System_Configuration>;
    /** update data of the table: "system.SuperUserPermission" */
    update_system_SuperUserPermission?: Maybe<System_SuperUserPermission_Mutation_Response>;
    /** update data of the table: "system.SuperUserPermissionGrant" */
    update_system_SuperUserPermissionGrant?: Maybe<System_SuperUserPermissionGrant_Mutation_Response>;
    /** update single row of the table: "system.SuperUserPermissionGrant" */
    update_system_SuperUserPermissionGrant_by_pk?: Maybe<System_SuperUserPermissionGrant>;
    /** update single row of the table: "system.SuperUserPermission" */
    update_system_SuperUserPermission_by_pk?: Maybe<System_SuperUserPermission>;
    /** update data of the table: "video.ChannelStack" */
    update_video_ChannelStack?: Maybe<Video_ChannelStack_Mutation_Response>;
    /** update single row of the table: "video.ChannelStack" */
    update_video_ChannelStack_by_pk?: Maybe<Video_ChannelStack>;
    /** update data of the table: "video.EventVonageSession" */
    update_video_EventVonageSession?: Maybe<Video_EventVonageSession_Mutation_Response>;
    /** update single row of the table: "video.EventVonageSession" */
    update_video_EventVonageSession_by_pk?: Maybe<Video_EventVonageSession>;
    /** update data of the table: "video.ImmediateSwitch" */
    update_video_ImmediateSwitch?: Maybe<Video_ImmediateSwitch_Mutation_Response>;
    /** update single row of the table: "video.ImmediateSwitch" */
    update_video_ImmediateSwitch_by_pk?: Maybe<Video_ImmediateSwitch>;
    /** update data of the table: "video.InputType" */
    update_video_InputType?: Maybe<Video_InputType_Mutation_Response>;
    /** update single row of the table: "video.InputType" */
    update_video_InputType_by_pk?: Maybe<Video_InputType>;
    /** update data of the table: "video.MediaLiveChannelStatus" */
    update_video_MediaLiveChannelStatus?: Maybe<Video_MediaLiveChannelStatus_Mutation_Response>;
    /** update single row of the table: "video.MediaLiveChannelStatus" */
    update_video_MediaLiveChannelStatus_by_pk?: Maybe<Video_MediaLiveChannelStatus>;
    /** update data of the table: "video.RoomRtmpInput" */
    update_video_RoomRtmpInput?: Maybe<Video_RoomRtmpInput_Mutation_Response>;
    /** update single row of the table: "video.RoomRtmpInput" */
    update_video_RoomRtmpInput_by_pk?: Maybe<Video_RoomRtmpInput>;
    /** update data of the table: "video.RoomRtmpOutput" */
    update_video_RoomRtmpOutput?: Maybe<Video_RoomRtmpOutput_Mutation_Response>;
    /** update single row of the table: "video.RoomRtmpOutput" */
    update_video_RoomRtmpOutput_by_pk?: Maybe<Video_RoomRtmpOutput>;
    /** update data of the table: "video.RtmpInput" */
    update_video_RtmpInput?: Maybe<Video_RtmpInput_Mutation_Response>;
    /** update single row of the table: "video.RtmpInput" */
    update_video_RtmpInput_by_pk?: Maybe<Video_RtmpInput>;
    /** update data of the table: "video.TranscriptionJob" */
    update_video_TranscriptionJob?: Maybe<Video_TranscriptionJob_Mutation_Response>;
    /** update single row of the table: "video.TranscriptionJob" */
    update_video_TranscriptionJob_by_pk?: Maybe<Video_TranscriptionJob>;
    /** update data of the table: "video.VideoRenderJob" */
    update_video_VideoRenderJob?: Maybe<Video_VideoRenderJob_Mutation_Response>;
    /** update single row of the table: "video.VideoRenderJob" */
    update_video_VideoRenderJob_by_pk?: Maybe<Video_VideoRenderJob>;
    /** update data of the table: "video.VonageParticipantStream" */
    update_video_VonageParticipantStream?: Maybe<Video_VonageParticipantStream_Mutation_Response>;
    /** update single row of the table: "video.VonageParticipantStream" */
    update_video_VonageParticipantStream_by_pk?: Maybe<Video_VonageParticipantStream>;
    /** update data of the table: "video.VonageRoomRecording" */
    update_video_VonageRoomRecording?: Maybe<Video_VonageRoomRecording_Mutation_Response>;
    /** update single row of the table: "video.VonageRoomRecording" */
    update_video_VonageRoomRecording_by_pk?: Maybe<Video_VonageRoomRecording>;
    /** update data of the table: "video.VonageSessionLayout" */
    update_video_VonageSessionLayout?: Maybe<Video_VonageSessionLayout_Mutation_Response>;
    /** update single row of the table: "video.VonageSessionLayout" */
    update_video_VonageSessionLayout_by_pk?: Maybe<Video_VonageSessionLayout>;
    /** update data of the table: "video.VonageVideoPlaybackCommand" */
    update_video_VonageVideoPlaybackCommand?: Maybe<Video_VonageVideoPlaybackCommand_Mutation_Response>;
    /** update single row of the table: "video.VonageVideoPlaybackCommand" */
    update_video_VonageVideoPlaybackCommand_by_pk?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** update data of the table: "video.YouTubeUpload" */
    update_video_YouTubeUpload?: Maybe<Video_YouTubeUpload_Mutation_Response>;
    /** update single row of the table: "video.YouTubeUpload" */
    update_video_YouTubeUpload_by_pk?: Maybe<Video_YouTubeUpload>;
};

/** mutation root */
export type Mutation_RootConference_UpdateEventUsageArgs = {
    distinct_on?: InputMaybe<Array<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

/** mutation root */
export type Mutation_RootCreateItemRoomArgs = {
    conferenceId: Scalars["uuid"];
    itemId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
};

/** mutation root */
export type Mutation_RootCreateRoomDmArgs = {
    conferenceId: Scalars["uuid"];
    registrantIds: Array<InputMaybe<Scalars["uuid"]>>;
};

/** mutation root */
export type Mutation_RootDelete_EmailArgs = {
    where: Email_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Email_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_PushNotificationSubscriptionArgs = {
    where: PushNotificationSubscription_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_PushNotificationSubscription_By_PkArgs = {
    endpoint: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_UserArgs = {
    where: User_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_By_PkArgs = {
    id: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_AppStatsArgs = {
    where: Analytics_AppStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_AppStats_By_PkArgs = {
    id: Scalars["Int"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ContentElementStatsArgs = {
    where: Analytics_ContentElementStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ContentElementStats_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ContentItemStatsArgs = {
    where: Analytics_ContentItemStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ContentItemStats_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ElementTotalViewsArgs = {
    where: Analytics_ElementTotalViews_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ElementTotalViews_By_PkArgs = {
    elementId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ItemTotalViewsArgs = {
    where: Analytics_ItemTotalViews_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ItemTotalViews_By_PkArgs = {
    itemId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_RoomPresenceArgs = {
    where: Analytics_RoomPresence_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_RoomPresence_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_RoomStatsArgs = {
    where: Analytics_RoomStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_RoomStats_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_ChatArgs = {
    where: Chat_Chat_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_Chat_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_FlagArgs = {
    where: Chat_Flag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_FlagTypeArgs = {
    where: Chat_FlagType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_FlagType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_Flag_By_PkArgs = {
    id: Scalars["Int"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_MessageArgs = {
    where: Chat_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_MessageTypeArgs = {
    where: Chat_MessageType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_MessageType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_Message_By_PkArgs = {
    id: Scalars["Int"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_PinArgs = {
    where: Chat_Pin_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_Pin_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReactionArgs = {
    where: Chat_Reaction_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReactionTypeArgs = {
    where: Chat_ReactionType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReactionType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_Reaction_By_PkArgs = {
    sId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReadUpToIndexArgs = {
    where: Chat_ReadUpToIndex_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReadUpToIndex_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_SubscriptionArgs = {
    where: Chat_Subscription_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_Subscription_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Collection_ExhibitionArgs = {
    where: Collection_Exhibition_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Collection_Exhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Collection_ProgramPersonArgs = {
    where: Collection_ProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Collection_ProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Collection_TagArgs = {
    where: Collection_Tag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Collection_Tag_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_ConferenceArgs = {
    where: Conference_Conference_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_Conference_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_ConfigurationArgs = {
    where: Conference_Configuration_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_ConfigurationKeyArgs = {
    where: Conference_ConfigurationKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_Configuration_By_PkArgs = {
    conferenceId: Scalars["uuid"];
    key: Conference_ConfigurationKey_Enum;
};

/** mutation root */
export type Mutation_RootDelete_Conference_DemoCodeArgs = {
    where: Conference_DemoCode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_DemoCode_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_QuotaArgs = {
    where: Conference_Quota_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_Quota_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_SubconferenceArgs = {
    where: Conference_Subconference_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_Subconference_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_UsageArgs = {
    where: Conference_Usage_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_Usage_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_VisibilityLevelArgs = {
    where: Conference_VisibilityLevel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_VisibilityLevel_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ElementArgs = {
    where: Content_Element_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ElementTypeArgs = {
    where: Content_ElementType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ElementType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Content_Element_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemArgs = {
    where: Content_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemExhibitionArgs = {
    where: Content_ItemExhibition_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemExhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemProgramPersonArgs = {
    where: Content_ItemProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemTagArgs = {
    where: Content_ItemTag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemTag_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemTypeArgs = {
    where: Content_ItemType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Content_Item_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackCreateJobArgs = {
    where: Job_Queues_ChannelStackCreateJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackCreateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackDeleteJobArgs = {
    where: Job_Queues_ChannelStackDeleteJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackDeleteJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackUpdateJobArgs = {
    where: Job_Queues_ChannelStackUpdateJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackUpdateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_CombineVideosJobArgs = {
    where: Job_Queues_CombineVideosJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_CombineVideosJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_CustomEmailJobArgs = {
    where: Job_Queues_CustomEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_CustomEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ImportJobArgs = {
    where: Job_Queues_ImportJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ImportJobOutputArgs = {
    where: Job_Queues_ImportJobOutput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ImportJobOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ImportJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_InvitationEmailJobArgs = {
    where: Job_Queues_InvitationEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_InvitationEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_JobStatusArgs = {
    where: Job_Queues_JobStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_JobStatus_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_MediaPackageHarvestJobArgs = {
    where: Job_Queues_MediaPackageHarvestJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_MediaPackageHarvestJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_PrepareJobArgs = {
    where: Job_Queues_PrepareJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_PrepareJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_PublishVideoJobArgs = {
    where: Job_Queues_PublishVideoJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_PublishVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_SubmissionRequestEmailJobArgs = {
    where: Job_Queues_SubmissionRequestEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_SubmissionRequestEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_UploadYouTubeVideoJobArgs = {
    where: Job_Queues_UploadYouTubeVideoJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_UploadYouTubeVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GoogleAccountArgs = {
    where: Registrant_GoogleAccount_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GoogleAccount_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GroupArgs = {
    where: Registrant_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GroupRegistrantArgs = {
    where: Registrant_GroupRegistrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GroupRegistrant_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_Group_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_InvitationArgs = {
    where: Registrant_Invitation_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_Invitation_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_ProfileArgs = {
    where: Registrant_Profile_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_Profile_By_PkArgs = {
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_RegistrantArgs = {
    where: Registrant_Registrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_RegistrantRoleArgs = {
    where: Registrant_RegistrantRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_RegistrantRole_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_Registrant_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_SavedVonageRoomRecordingArgs = {
    where: Registrant_SavedVonageRoomRecording_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_SavedVonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_SubconferenceMembershipArgs = {
    where: Registrant_SubconferenceMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_SubconferenceMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_BackendArgs = {
    where: Room_Backend_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_Backend_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ChimeMeetingArgs = {
    where: Room_ChimeMeeting_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ChimeMeeting_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ManagementModeArgs = {
    where: Room_ManagementMode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ManagementMode_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Room_PersonRoleArgs = {
    where: Room_PersonRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_PersonRole_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomArgs = {
    where: Room_Room_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomGroupMembershipArgs = {
    where: Room_RoomGroupMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomGroupMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomMembershipArgs = {
    where: Room_RoomMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_Room_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleAlgorithmArgs = {
    where: Room_ShuffleAlgorithm_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleAlgorithm_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ShufflePeriodArgs = {
    where: Room_ShufflePeriod_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ShufflePeriod_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleQueueEntryArgs = {
    where: Room_ShuffleQueueEntry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleQueueEntry_By_PkArgs = {
    id: Scalars["bigint"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleRoomArgs = {
    where: Room_ShuffleRoom_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleRoom_By_PkArgs = {
    id: Scalars["bigint"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_ContinuationArgs = {
    where: Schedule_Continuation_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_Continuation_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_CurrentEventsArgs = {
    where: Schedule_CurrentEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventArgs = {
    where: Schedule_Event_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventProgramPersonArgs = {
    where: Schedule_EventProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventProgramPersonRoleArgs = {
    where: Schedule_EventProgramPersonRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventProgramPersonRole_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_Event_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_ModeArgs = {
    where: Schedule_Mode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_Mode_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_StarredEventArgs = {
    where: Schedule_StarredEvent_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_StarredEvent_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Sponsor_TierArgs = {
    where: Sponsor_Tier_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Sponsor_TierMemberArgs = {
    where: Sponsor_TierMember_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Sponsor_TierMember_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Sponsor_Tier_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationArgs = {
    where: System_Configuration_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationKeyArgs = {
    where: System_ConfigurationKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationPermissionGrantArgs = {
    where: System_ConfigurationPermissionGrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_System_Configuration_By_PkArgs = {
    key: System_ConfigurationKey_Enum;
};

/** mutation root */
export type Mutation_RootDelete_System_SuperUserPermissionArgs = {
    where: System_SuperUserPermission_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_SuperUserPermissionGrantArgs = {
    where: System_SuperUserPermissionGrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_SuperUserPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_System_SuperUserPermission_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Video_ChannelStackArgs = {
    where: Video_ChannelStack_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_ChannelStack_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_EventVonageSessionArgs = {
    where: Video_EventVonageSession_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_EventVonageSession_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_ImmediateSwitchArgs = {
    where: Video_ImmediateSwitch_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_ImmediateSwitch_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_InputTypeArgs = {
    where: Video_InputType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_InputType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Video_MediaLiveChannelStatusArgs = {
    where: Video_MediaLiveChannelStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_MediaLiveChannelStatus_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_RoomRtmpInputArgs = {
    where: Video_RoomRtmpInput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_RoomRtmpInput_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_RoomRtmpOutputArgs = {
    where: Video_RoomRtmpOutput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_RoomRtmpOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_RtmpInputArgs = {
    where: Video_RtmpInput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_RtmpInput_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Video_TranscriptionJobArgs = {
    where: Video_TranscriptionJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_TranscriptionJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VideoRenderJobArgs = {
    where: Video_VideoRenderJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VideoRenderJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageParticipantStreamArgs = {
    where: Video_VonageParticipantStream_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageParticipantStream_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageRoomRecordingArgs = {
    where: Video_VonageRoomRecording_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageSessionLayoutArgs = {
    where: Video_VonageSessionLayout_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageSessionLayout_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageVideoPlaybackCommandArgs = {
    where: Video_VonageVideoPlaybackCommand_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageVideoPlaybackCommand_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_YouTubeUploadArgs = {
    where: Video_YouTubeUpload_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_YouTubeUpload_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootGetGoogleOAuthUrlArgs = {
    registrantId: Scalars["uuid"];
    scopes: Array<Scalars["String"]>;
};

/** mutation root */
export type Mutation_RootInsert_EmailArgs = {
    objects: Array<Email_Insert_Input>;
    on_conflict?: InputMaybe<Email_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Email_OneArgs = {
    object: Email_Insert_Input;
    on_conflict?: InputMaybe<Email_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_PushNotificationSubscriptionArgs = {
    objects: Array<PushNotificationSubscription_Insert_Input>;
    on_conflict?: InputMaybe<PushNotificationSubscription_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_PushNotificationSubscription_OneArgs = {
    object: PushNotificationSubscription_Insert_Input;
    on_conflict?: InputMaybe<PushNotificationSubscription_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_UserArgs = {
    objects: Array<User_Insert_Input>;
    on_conflict?: InputMaybe<User_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_OneArgs = {
    object: User_Insert_Input;
    on_conflict?: InputMaybe<User_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_AppStatsArgs = {
    objects: Array<Analytics_AppStats_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_AppStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_AppStats_OneArgs = {
    object: Analytics_AppStats_Insert_Input;
    on_conflict?: InputMaybe<Analytics_AppStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ContentElementStatsArgs = {
    objects: Array<Analytics_ContentElementStats_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_ContentElementStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ContentElementStats_OneArgs = {
    object: Analytics_ContentElementStats_Insert_Input;
    on_conflict?: InputMaybe<Analytics_ContentElementStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ContentItemStatsArgs = {
    objects: Array<Analytics_ContentItemStats_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_ContentItemStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ContentItemStats_OneArgs = {
    object: Analytics_ContentItemStats_Insert_Input;
    on_conflict?: InputMaybe<Analytics_ContentItemStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ElementTotalViewsArgs = {
    objects: Array<Analytics_ElementTotalViews_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_ElementTotalViews_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ElementTotalViews_OneArgs = {
    object: Analytics_ElementTotalViews_Insert_Input;
    on_conflict?: InputMaybe<Analytics_ElementTotalViews_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ItemTotalViewsArgs = {
    objects: Array<Analytics_ItemTotalViews_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_ItemTotalViews_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ItemTotalViews_OneArgs = {
    object: Analytics_ItemTotalViews_Insert_Input;
    on_conflict?: InputMaybe<Analytics_ItemTotalViews_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_RoomPresenceArgs = {
    objects: Array<Analytics_RoomPresence_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_RoomPresence_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_RoomPresence_OneArgs = {
    object: Analytics_RoomPresence_Insert_Input;
    on_conflict?: InputMaybe<Analytics_RoomPresence_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_RoomStatsArgs = {
    objects: Array<Analytics_RoomStats_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_RoomStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_RoomStats_OneArgs = {
    object: Analytics_RoomStats_Insert_Input;
    on_conflict?: InputMaybe<Analytics_RoomStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ChatArgs = {
    objects: Array<Chat_Chat_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Chat_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Chat_OneArgs = {
    object: Chat_Chat_Insert_Input;
    on_conflict?: InputMaybe<Chat_Chat_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_FlagArgs = {
    objects: Array<Chat_Flag_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Flag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_FlagTypeArgs = {
    objects: Array<Chat_FlagType_Insert_Input>;
    on_conflict?: InputMaybe<Chat_FlagType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_FlagType_OneArgs = {
    object: Chat_FlagType_Insert_Input;
    on_conflict?: InputMaybe<Chat_FlagType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Flag_OneArgs = {
    object: Chat_Flag_Insert_Input;
    on_conflict?: InputMaybe<Chat_Flag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_MessageArgs = {
    objects: Array<Chat_Message_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_MessageTypeArgs = {
    objects: Array<Chat_MessageType_Insert_Input>;
    on_conflict?: InputMaybe<Chat_MessageType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_MessageType_OneArgs = {
    object: Chat_MessageType_Insert_Input;
    on_conflict?: InputMaybe<Chat_MessageType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Message_OneArgs = {
    object: Chat_Message_Insert_Input;
    on_conflict?: InputMaybe<Chat_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_PinArgs = {
    objects: Array<Chat_Pin_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Pin_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Pin_OneArgs = {
    object: Chat_Pin_Insert_Input;
    on_conflict?: InputMaybe<Chat_Pin_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReactionArgs = {
    objects: Array<Chat_Reaction_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Reaction_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReactionTypeArgs = {
    objects: Array<Chat_ReactionType_Insert_Input>;
    on_conflict?: InputMaybe<Chat_ReactionType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReactionType_OneArgs = {
    object: Chat_ReactionType_Insert_Input;
    on_conflict?: InputMaybe<Chat_ReactionType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Reaction_OneArgs = {
    object: Chat_Reaction_Insert_Input;
    on_conflict?: InputMaybe<Chat_Reaction_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReadUpToIndexArgs = {
    objects: Array<Chat_ReadUpToIndex_Insert_Input>;
    on_conflict?: InputMaybe<Chat_ReadUpToIndex_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReadUpToIndex_OneArgs = {
    object: Chat_ReadUpToIndex_Insert_Input;
    on_conflict?: InputMaybe<Chat_ReadUpToIndex_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_SubscriptionArgs = {
    objects: Array<Chat_Subscription_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Subscription_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Subscription_OneArgs = {
    object: Chat_Subscription_Insert_Input;
    on_conflict?: InputMaybe<Chat_Subscription_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_ExhibitionArgs = {
    objects: Array<Collection_Exhibition_Insert_Input>;
    on_conflict?: InputMaybe<Collection_Exhibition_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_Exhibition_OneArgs = {
    object: Collection_Exhibition_Insert_Input;
    on_conflict?: InputMaybe<Collection_Exhibition_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_ProgramPersonArgs = {
    objects: Array<Collection_ProgramPerson_Insert_Input>;
    on_conflict?: InputMaybe<Collection_ProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_ProgramPerson_OneArgs = {
    object: Collection_ProgramPerson_Insert_Input;
    on_conflict?: InputMaybe<Collection_ProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_TagArgs = {
    objects: Array<Collection_Tag_Insert_Input>;
    on_conflict?: InputMaybe<Collection_Tag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_Tag_OneArgs = {
    object: Collection_Tag_Insert_Input;
    on_conflict?: InputMaybe<Collection_Tag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_ConferenceArgs = {
    objects: Array<Conference_Conference_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Conference_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Conference_OneArgs = {
    object: Conference_Conference_Insert_Input;
    on_conflict?: InputMaybe<Conference_Conference_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_ConfigurationArgs = {
    objects: Array<Conference_Configuration_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Configuration_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_ConfigurationKeyArgs = {
    objects: Array<Conference_ConfigurationKey_Insert_Input>;
    on_conflict?: InputMaybe<Conference_ConfigurationKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_ConfigurationKey_OneArgs = {
    object: Conference_ConfigurationKey_Insert_Input;
    on_conflict?: InputMaybe<Conference_ConfigurationKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Configuration_OneArgs = {
    object: Conference_Configuration_Insert_Input;
    on_conflict?: InputMaybe<Conference_Configuration_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_DemoCodeArgs = {
    objects: Array<Conference_DemoCode_Insert_Input>;
    on_conflict?: InputMaybe<Conference_DemoCode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_DemoCode_OneArgs = {
    object: Conference_DemoCode_Insert_Input;
    on_conflict?: InputMaybe<Conference_DemoCode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_QuotaArgs = {
    objects: Array<Conference_Quota_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Quota_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Quota_OneArgs = {
    object: Conference_Quota_Insert_Input;
    on_conflict?: InputMaybe<Conference_Quota_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_SubconferenceArgs = {
    objects: Array<Conference_Subconference_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Subconference_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Subconference_OneArgs = {
    object: Conference_Subconference_Insert_Input;
    on_conflict?: InputMaybe<Conference_Subconference_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_UsageArgs = {
    objects: Array<Conference_Usage_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Usage_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Usage_OneArgs = {
    object: Conference_Usage_Insert_Input;
    on_conflict?: InputMaybe<Conference_Usage_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_VisibilityLevelArgs = {
    objects: Array<Conference_VisibilityLevel_Insert_Input>;
    on_conflict?: InputMaybe<Conference_VisibilityLevel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_VisibilityLevel_OneArgs = {
    object: Conference_VisibilityLevel_Insert_Input;
    on_conflict?: InputMaybe<Conference_VisibilityLevel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ElementArgs = {
    objects: Array<Content_Element_Insert_Input>;
    on_conflict?: InputMaybe<Content_Element_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ElementTypeArgs = {
    objects: Array<Content_ElementType_Insert_Input>;
    on_conflict?: InputMaybe<Content_ElementType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ElementType_OneArgs = {
    object: Content_ElementType_Insert_Input;
    on_conflict?: InputMaybe<Content_ElementType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_Element_OneArgs = {
    object: Content_Element_Insert_Input;
    on_conflict?: InputMaybe<Content_Element_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemArgs = {
    objects: Array<Content_Item_Insert_Input>;
    on_conflict?: InputMaybe<Content_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemExhibitionArgs = {
    objects: Array<Content_ItemExhibition_Insert_Input>;
    on_conflict?: InputMaybe<Content_ItemExhibition_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemExhibition_OneArgs = {
    object: Content_ItemExhibition_Insert_Input;
    on_conflict?: InputMaybe<Content_ItemExhibition_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemProgramPersonArgs = {
    objects: Array<Content_ItemProgramPerson_Insert_Input>;
    on_conflict?: InputMaybe<Content_ItemProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemProgramPerson_OneArgs = {
    object: Content_ItemProgramPerson_Insert_Input;
    on_conflict?: InputMaybe<Content_ItemProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemTagArgs = {
    objects: Array<Content_ItemTag_Insert_Input>;
    on_conflict?: InputMaybe<Content_ItemTag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemTag_OneArgs = {
    object: Content_ItemTag_Insert_Input;
    on_conflict?: InputMaybe<Content_ItemTag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemTypeArgs = {
    objects: Array<Content_ItemType_Insert_Input>;
    on_conflict?: InputMaybe<Content_ItemType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemType_OneArgs = {
    object: Content_ItemType_Insert_Input;
    on_conflict?: InputMaybe<Content_ItemType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_Item_OneArgs = {
    object: Content_Item_Insert_Input;
    on_conflict?: InputMaybe<Content_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackCreateJobArgs = {
    objects: Array<Job_Queues_ChannelStackCreateJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackCreateJob_OneArgs = {
    object: Job_Queues_ChannelStackCreateJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackDeleteJobArgs = {
    objects: Array<Job_Queues_ChannelStackDeleteJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackDeleteJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackDeleteJob_OneArgs = {
    object: Job_Queues_ChannelStackDeleteJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackDeleteJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackUpdateJobArgs = {
    objects: Array<Job_Queues_ChannelStackUpdateJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackUpdateJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackUpdateJob_OneArgs = {
    object: Job_Queues_ChannelStackUpdateJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackUpdateJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_CombineVideosJobArgs = {
    objects: Array<Job_Queues_CombineVideosJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_CombineVideosJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_CombineVideosJob_OneArgs = {
    object: Job_Queues_CombineVideosJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_CombineVideosJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_CustomEmailJobArgs = {
    objects: Array<Job_Queues_CustomEmailJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_CustomEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_CustomEmailJob_OneArgs = {
    object: Job_Queues_CustomEmailJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_CustomEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ImportJobArgs = {
    objects: Array<Job_Queues_ImportJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ImportJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ImportJobOutputArgs = {
    objects: Array<Job_Queues_ImportJobOutput_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ImportJobOutput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ImportJobOutput_OneArgs = {
    object: Job_Queues_ImportJobOutput_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ImportJobOutput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ImportJob_OneArgs = {
    object: Job_Queues_ImportJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ImportJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_InvitationEmailJobArgs = {
    objects: Array<Job_Queues_InvitationEmailJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_InvitationEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_InvitationEmailJob_OneArgs = {
    object: Job_Queues_InvitationEmailJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_InvitationEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_JobStatusArgs = {
    objects: Array<Job_Queues_JobStatus_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_JobStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_JobStatus_OneArgs = {
    object: Job_Queues_JobStatus_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_JobStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_MediaPackageHarvestJobArgs = {
    objects: Array<Job_Queues_MediaPackageHarvestJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_MediaPackageHarvestJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_MediaPackageHarvestJob_OneArgs = {
    object: Job_Queues_MediaPackageHarvestJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_MediaPackageHarvestJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_PrepareJobArgs = {
    objects: Array<Job_Queues_PrepareJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_PrepareJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_PrepareJob_OneArgs = {
    object: Job_Queues_PrepareJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_PrepareJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_PublishVideoJobArgs = {
    objects: Array<Job_Queues_PublishVideoJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_PublishVideoJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_PublishVideoJob_OneArgs = {
    object: Job_Queues_PublishVideoJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_PublishVideoJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_SubmissionRequestEmailJobArgs = {
    objects: Array<Job_Queues_SubmissionRequestEmailJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_SubmissionRequestEmailJob_OneArgs = {
    object: Job_Queues_SubmissionRequestEmailJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_UploadYouTubeVideoJobArgs = {
    objects: Array<Job_Queues_UploadYouTubeVideoJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_UploadYouTubeVideoJob_OneArgs = {
    object: Job_Queues_UploadYouTubeVideoJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GoogleAccountArgs = {
    objects: Array<Registrant_GoogleAccount_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_GoogleAccount_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GoogleAccount_OneArgs = {
    object: Registrant_GoogleAccount_Insert_Input;
    on_conflict?: InputMaybe<Registrant_GoogleAccount_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GroupArgs = {
    objects: Array<Registrant_Group_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GroupRegistrantArgs = {
    objects: Array<Registrant_GroupRegistrant_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_GroupRegistrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GroupRegistrant_OneArgs = {
    object: Registrant_GroupRegistrant_Insert_Input;
    on_conflict?: InputMaybe<Registrant_GroupRegistrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_Group_OneArgs = {
    object: Registrant_Group_Insert_Input;
    on_conflict?: InputMaybe<Registrant_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_InvitationArgs = {
    objects: Array<Registrant_Invitation_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_Invitation_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_Invitation_OneArgs = {
    object: Registrant_Invitation_Insert_Input;
    on_conflict?: InputMaybe<Registrant_Invitation_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_ProfileArgs = {
    objects: Array<Registrant_Profile_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_Profile_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_Profile_OneArgs = {
    object: Registrant_Profile_Insert_Input;
    on_conflict?: InputMaybe<Registrant_Profile_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_RegistrantArgs = {
    objects: Array<Registrant_Registrant_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_Registrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_RegistrantRoleArgs = {
    objects: Array<Registrant_RegistrantRole_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_RegistrantRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_RegistrantRole_OneArgs = {
    object: Registrant_RegistrantRole_Insert_Input;
    on_conflict?: InputMaybe<Registrant_RegistrantRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_Registrant_OneArgs = {
    object: Registrant_Registrant_Insert_Input;
    on_conflict?: InputMaybe<Registrant_Registrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_SavedVonageRoomRecordingArgs = {
    objects: Array<Registrant_SavedVonageRoomRecording_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_SavedVonageRoomRecording_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_SavedVonageRoomRecording_OneArgs = {
    object: Registrant_SavedVonageRoomRecording_Insert_Input;
    on_conflict?: InputMaybe<Registrant_SavedVonageRoomRecording_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_SubconferenceMembershipArgs = {
    objects: Array<Registrant_SubconferenceMembership_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_SubconferenceMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_SubconferenceMembership_OneArgs = {
    object: Registrant_SubconferenceMembership_Insert_Input;
    on_conflict?: InputMaybe<Registrant_SubconferenceMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_BackendArgs = {
    objects: Array<Room_Backend_Insert_Input>;
    on_conflict?: InputMaybe<Room_Backend_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_Backend_OneArgs = {
    object: Room_Backend_Insert_Input;
    on_conflict?: InputMaybe<Room_Backend_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ChimeMeetingArgs = {
    objects: Array<Room_ChimeMeeting_Insert_Input>;
    on_conflict?: InputMaybe<Room_ChimeMeeting_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ChimeMeeting_OneArgs = {
    object: Room_ChimeMeeting_Insert_Input;
    on_conflict?: InputMaybe<Room_ChimeMeeting_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ManagementModeArgs = {
    objects: Array<Room_ManagementMode_Insert_Input>;
    on_conflict?: InputMaybe<Room_ManagementMode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ManagementMode_OneArgs = {
    object: Room_ManagementMode_Insert_Input;
    on_conflict?: InputMaybe<Room_ManagementMode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_PersonRoleArgs = {
    objects: Array<Room_PersonRole_Insert_Input>;
    on_conflict?: InputMaybe<Room_PersonRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_PersonRole_OneArgs = {
    object: Room_PersonRole_Insert_Input;
    on_conflict?: InputMaybe<Room_PersonRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomArgs = {
    objects: Array<Room_Room_Insert_Input>;
    on_conflict?: InputMaybe<Room_Room_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomGroupMembershipArgs = {
    objects: Array<Room_RoomGroupMembership_Insert_Input>;
    on_conflict?: InputMaybe<Room_RoomGroupMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomGroupMembership_OneArgs = {
    object: Room_RoomGroupMembership_Insert_Input;
    on_conflict?: InputMaybe<Room_RoomGroupMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomMembershipArgs = {
    objects: Array<Room_RoomMembership_Insert_Input>;
    on_conflict?: InputMaybe<Room_RoomMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomMembership_OneArgs = {
    object: Room_RoomMembership_Insert_Input;
    on_conflict?: InputMaybe<Room_RoomMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_Room_OneArgs = {
    object: Room_Room_Insert_Input;
    on_conflict?: InputMaybe<Room_Room_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleAlgorithmArgs = {
    objects: Array<Room_ShuffleAlgorithm_Insert_Input>;
    on_conflict?: InputMaybe<Room_ShuffleAlgorithm_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleAlgorithm_OneArgs = {
    object: Room_ShuffleAlgorithm_Insert_Input;
    on_conflict?: InputMaybe<Room_ShuffleAlgorithm_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShufflePeriodArgs = {
    objects: Array<Room_ShufflePeriod_Insert_Input>;
    on_conflict?: InputMaybe<Room_ShufflePeriod_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShufflePeriod_OneArgs = {
    object: Room_ShufflePeriod_Insert_Input;
    on_conflict?: InputMaybe<Room_ShufflePeriod_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleQueueEntryArgs = {
    objects: Array<Room_ShuffleQueueEntry_Insert_Input>;
    on_conflict?: InputMaybe<Room_ShuffleQueueEntry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleQueueEntry_OneArgs = {
    object: Room_ShuffleQueueEntry_Insert_Input;
    on_conflict?: InputMaybe<Room_ShuffleQueueEntry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleRoomArgs = {
    objects: Array<Room_ShuffleRoom_Insert_Input>;
    on_conflict?: InputMaybe<Room_ShuffleRoom_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleRoom_OneArgs = {
    object: Room_ShuffleRoom_Insert_Input;
    on_conflict?: InputMaybe<Room_ShuffleRoom_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_ContinuationArgs = {
    objects: Array<Schedule_Continuation_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_Continuation_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_Continuation_OneArgs = {
    object: Schedule_Continuation_Insert_Input;
    on_conflict?: InputMaybe<Schedule_Continuation_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_CurrentEventsArgs = {
    objects: Array<Schedule_CurrentEvents_Insert_Input>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_CurrentEvents_OneArgs = {
    object: Schedule_CurrentEvents_Insert_Input;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventArgs = {
    objects: Array<Schedule_Event_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_Event_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventProgramPersonArgs = {
    objects: Array<Schedule_EventProgramPerson_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_EventProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventProgramPersonRoleArgs = {
    objects: Array<Schedule_EventProgramPersonRole_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_EventProgramPersonRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventProgramPersonRole_OneArgs = {
    object: Schedule_EventProgramPersonRole_Insert_Input;
    on_conflict?: InputMaybe<Schedule_EventProgramPersonRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventProgramPerson_OneArgs = {
    object: Schedule_EventProgramPerson_Insert_Input;
    on_conflict?: InputMaybe<Schedule_EventProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_Event_OneArgs = {
    object: Schedule_Event_Insert_Input;
    on_conflict?: InputMaybe<Schedule_Event_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_ModeArgs = {
    objects: Array<Schedule_Mode_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_Mode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_Mode_OneArgs = {
    object: Schedule_Mode_Insert_Input;
    on_conflict?: InputMaybe<Schedule_Mode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_StarredEventArgs = {
    objects: Array<Schedule_StarredEvent_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_StarredEvent_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_StarredEvent_OneArgs = {
    object: Schedule_StarredEvent_Insert_Input;
    on_conflict?: InputMaybe<Schedule_StarredEvent_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Sponsor_TierArgs = {
    objects: Array<Sponsor_Tier_Insert_Input>;
    on_conflict?: InputMaybe<Sponsor_Tier_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Sponsor_TierMemberArgs = {
    objects: Array<Sponsor_TierMember_Insert_Input>;
    on_conflict?: InputMaybe<Sponsor_TierMember_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Sponsor_TierMember_OneArgs = {
    object: Sponsor_TierMember_Insert_Input;
    on_conflict?: InputMaybe<Sponsor_TierMember_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Sponsor_Tier_OneArgs = {
    object: Sponsor_Tier_Insert_Input;
    on_conflict?: InputMaybe<Sponsor_Tier_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationArgs = {
    objects: Array<System_Configuration_Insert_Input>;
    on_conflict?: InputMaybe<System_Configuration_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationKeyArgs = {
    objects: Array<System_ConfigurationKey_Insert_Input>;
    on_conflict?: InputMaybe<System_ConfigurationKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationKey_OneArgs = {
    object: System_ConfigurationKey_Insert_Input;
    on_conflict?: InputMaybe<System_ConfigurationKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationPermissionGrantArgs = {
    objects: Array<System_ConfigurationPermissionGrant_Insert_Input>;
    on_conflict?: InputMaybe<System_ConfigurationPermissionGrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationPermissionGrant_OneArgs = {
    object: System_ConfigurationPermissionGrant_Insert_Input;
    on_conflict?: InputMaybe<System_ConfigurationPermissionGrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_Configuration_OneArgs = {
    object: System_Configuration_Insert_Input;
    on_conflict?: InputMaybe<System_Configuration_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_SuperUserPermissionArgs = {
    objects: Array<System_SuperUserPermission_Insert_Input>;
    on_conflict?: InputMaybe<System_SuperUserPermission_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_SuperUserPermissionGrantArgs = {
    objects: Array<System_SuperUserPermissionGrant_Insert_Input>;
    on_conflict?: InputMaybe<System_SuperUserPermissionGrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_SuperUserPermissionGrant_OneArgs = {
    object: System_SuperUserPermissionGrant_Insert_Input;
    on_conflict?: InputMaybe<System_SuperUserPermissionGrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_SuperUserPermission_OneArgs = {
    object: System_SuperUserPermission_Insert_Input;
    on_conflict?: InputMaybe<System_SuperUserPermission_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_ChannelStackArgs = {
    objects: Array<Video_ChannelStack_Insert_Input>;
    on_conflict?: InputMaybe<Video_ChannelStack_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_ChannelStack_OneArgs = {
    object: Video_ChannelStack_Insert_Input;
    on_conflict?: InputMaybe<Video_ChannelStack_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_EventVonageSessionArgs = {
    objects: Array<Video_EventVonageSession_Insert_Input>;
    on_conflict?: InputMaybe<Video_EventVonageSession_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_EventVonageSession_OneArgs = {
    object: Video_EventVonageSession_Insert_Input;
    on_conflict?: InputMaybe<Video_EventVonageSession_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_ImmediateSwitchArgs = {
    objects: Array<Video_ImmediateSwitch_Insert_Input>;
    on_conflict?: InputMaybe<Video_ImmediateSwitch_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_ImmediateSwitch_OneArgs = {
    object: Video_ImmediateSwitch_Insert_Input;
    on_conflict?: InputMaybe<Video_ImmediateSwitch_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_InputTypeArgs = {
    objects: Array<Video_InputType_Insert_Input>;
    on_conflict?: InputMaybe<Video_InputType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_InputType_OneArgs = {
    object: Video_InputType_Insert_Input;
    on_conflict?: InputMaybe<Video_InputType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_MediaLiveChannelStatusArgs = {
    objects: Array<Video_MediaLiveChannelStatus_Insert_Input>;
    on_conflict?: InputMaybe<Video_MediaLiveChannelStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_MediaLiveChannelStatus_OneArgs = {
    object: Video_MediaLiveChannelStatus_Insert_Input;
    on_conflict?: InputMaybe<Video_MediaLiveChannelStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RoomRtmpInputArgs = {
    objects: Array<Video_RoomRtmpInput_Insert_Input>;
    on_conflict?: InputMaybe<Video_RoomRtmpInput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RoomRtmpInput_OneArgs = {
    object: Video_RoomRtmpInput_Insert_Input;
    on_conflict?: InputMaybe<Video_RoomRtmpInput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RoomRtmpOutputArgs = {
    objects: Array<Video_RoomRtmpOutput_Insert_Input>;
    on_conflict?: InputMaybe<Video_RoomRtmpOutput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RoomRtmpOutput_OneArgs = {
    object: Video_RoomRtmpOutput_Insert_Input;
    on_conflict?: InputMaybe<Video_RoomRtmpOutput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RtmpInputArgs = {
    objects: Array<Video_RtmpInput_Insert_Input>;
    on_conflict?: InputMaybe<Video_RtmpInput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RtmpInput_OneArgs = {
    object: Video_RtmpInput_Insert_Input;
    on_conflict?: InputMaybe<Video_RtmpInput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_TranscriptionJobArgs = {
    objects: Array<Video_TranscriptionJob_Insert_Input>;
    on_conflict?: InputMaybe<Video_TranscriptionJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_TranscriptionJob_OneArgs = {
    object: Video_TranscriptionJob_Insert_Input;
    on_conflict?: InputMaybe<Video_TranscriptionJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VideoRenderJobArgs = {
    objects: Array<Video_VideoRenderJob_Insert_Input>;
    on_conflict?: InputMaybe<Video_VideoRenderJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VideoRenderJob_OneArgs = {
    object: Video_VideoRenderJob_Insert_Input;
    on_conflict?: InputMaybe<Video_VideoRenderJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageParticipantStreamArgs = {
    objects: Array<Video_VonageParticipantStream_Insert_Input>;
    on_conflict?: InputMaybe<Video_VonageParticipantStream_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageParticipantStream_OneArgs = {
    object: Video_VonageParticipantStream_Insert_Input;
    on_conflict?: InputMaybe<Video_VonageParticipantStream_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageRoomRecordingArgs = {
    objects: Array<Video_VonageRoomRecording_Insert_Input>;
    on_conflict?: InputMaybe<Video_VonageRoomRecording_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageRoomRecording_OneArgs = {
    object: Video_VonageRoomRecording_Insert_Input;
    on_conflict?: InputMaybe<Video_VonageRoomRecording_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageSessionLayoutArgs = {
    objects: Array<Video_VonageSessionLayout_Insert_Input>;
    on_conflict?: InputMaybe<Video_VonageSessionLayout_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageSessionLayout_OneArgs = {
    object: Video_VonageSessionLayout_Insert_Input;
    on_conflict?: InputMaybe<Video_VonageSessionLayout_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageVideoPlaybackCommandArgs = {
    objects: Array<Video_VonageVideoPlaybackCommand_Insert_Input>;
    on_conflict?: InputMaybe<Video_VonageVideoPlaybackCommand_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageVideoPlaybackCommand_OneArgs = {
    object: Video_VonageVideoPlaybackCommand_Insert_Input;
    on_conflict?: InputMaybe<Video_VonageVideoPlaybackCommand_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_YouTubeUploadArgs = {
    objects: Array<Video_YouTubeUpload_Insert_Input>;
    on_conflict?: InputMaybe<Video_YouTubeUpload_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_YouTubeUpload_OneArgs = {
    object: Video_YouTubeUpload_Insert_Input;
    on_conflict?: InputMaybe<Video_YouTubeUpload_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInvitationConfirmCurrentArgs = {
    inviteCode: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootJoinEventVonageSessionArgs = {
    eventId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootJoinRoomChimeSessionArgs = {
    registrantId: Scalars["uuid"];
    roomId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootJoinRoomVonageSessionArgs = {
    registrantId: Scalars["uuid"];
    roomId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootMigrateElementArgs = {
    elementId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootMigrateProfilePhotoArgs = {
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootNotifyEventEndedArgs = {
    eventId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootNotifyEventStartedArgs = {
    eventId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootRefreshYouTubeDataArgs = {
    registrantGoogleAccountId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootSchedule_ShiftPresentationTimesArgs = {
    args: Schedule_ShiftPresentationTimes_Args;
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** mutation root */
export type Mutation_RootSchedule_ShiftTimesArgs = {
    args: Schedule_ShiftTimes_Args;
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** mutation root */
export type Mutation_RootStopEventBroadcastArgs = {
    eventId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootSubmitGoogleOAuthCodeArgs = {
    code: Scalars["String"];
    state: Scalars["String"];
};

/** mutation root */
export type Mutation_RootSubmitUploadableElementArgs = {
    data: Scalars["jsonb"];
    elementId: Scalars["uuid"];
    magicToken: Scalars["String"];
};

/** mutation root */
export type Mutation_RootToggleVonageRecordingStateArgs = {
    recordingActive: Scalars["Boolean"];
    vonageSessionId: Scalars["String"];
};

/** mutation root */
export type Mutation_RootUpdateProfilePhotoArgs = {
    registrantId: Scalars["uuid"];
    s3URL?: InputMaybe<Scalars["String"]>;
};

/** mutation root */
export type Mutation_RootUpdateSubtitlesArgs = {
    elementId: Scalars["String"];
    magicToken: Scalars["String"];
    subtitleText: Scalars["String"];
};

/** mutation root */
export type Mutation_RootUpdate_EmailArgs = {
    _inc?: InputMaybe<Email_Inc_Input>;
    _set?: InputMaybe<Email_Set_Input>;
    where: Email_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Email_By_PkArgs = {
    _inc?: InputMaybe<Email_Inc_Input>;
    _set?: InputMaybe<Email_Set_Input>;
    pk_columns: Email_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_PushNotificationSubscriptionArgs = {
    _set?: InputMaybe<PushNotificationSubscription_Set_Input>;
    where: PushNotificationSubscription_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_PushNotificationSubscription_By_PkArgs = {
    _set?: InputMaybe<PushNotificationSubscription_Set_Input>;
    pk_columns: PushNotificationSubscription_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_UserArgs = {
    _set?: InputMaybe<User_Set_Input>;
    where: User_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_By_PkArgs = {
    _set?: InputMaybe<User_Set_Input>;
    pk_columns: User_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_AppStatsArgs = {
    _append?: InputMaybe<Analytics_AppStats_Append_Input>;
    _delete_at_path?: InputMaybe<Analytics_AppStats_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Analytics_AppStats_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Analytics_AppStats_Delete_Key_Input>;
    _inc?: InputMaybe<Analytics_AppStats_Inc_Input>;
    _prepend?: InputMaybe<Analytics_AppStats_Prepend_Input>;
    _set?: InputMaybe<Analytics_AppStats_Set_Input>;
    where: Analytics_AppStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_AppStats_By_PkArgs = {
    _append?: InputMaybe<Analytics_AppStats_Append_Input>;
    _delete_at_path?: InputMaybe<Analytics_AppStats_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Analytics_AppStats_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Analytics_AppStats_Delete_Key_Input>;
    _inc?: InputMaybe<Analytics_AppStats_Inc_Input>;
    _prepend?: InputMaybe<Analytics_AppStats_Prepend_Input>;
    _set?: InputMaybe<Analytics_AppStats_Set_Input>;
    pk_columns: Analytics_AppStats_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ContentElementStatsArgs = {
    _inc?: InputMaybe<Analytics_ContentElementStats_Inc_Input>;
    _set?: InputMaybe<Analytics_ContentElementStats_Set_Input>;
    where: Analytics_ContentElementStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ContentElementStats_By_PkArgs = {
    _inc?: InputMaybe<Analytics_ContentElementStats_Inc_Input>;
    _set?: InputMaybe<Analytics_ContentElementStats_Set_Input>;
    pk_columns: Analytics_ContentElementStats_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ContentItemStatsArgs = {
    _inc?: InputMaybe<Analytics_ContentItemStats_Inc_Input>;
    _set?: InputMaybe<Analytics_ContentItemStats_Set_Input>;
    where: Analytics_ContentItemStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ContentItemStats_By_PkArgs = {
    _inc?: InputMaybe<Analytics_ContentItemStats_Inc_Input>;
    _set?: InputMaybe<Analytics_ContentItemStats_Set_Input>;
    pk_columns: Analytics_ContentItemStats_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ElementTotalViewsArgs = {
    _inc?: InputMaybe<Analytics_ElementTotalViews_Inc_Input>;
    _set?: InputMaybe<Analytics_ElementTotalViews_Set_Input>;
    where: Analytics_ElementTotalViews_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ElementTotalViews_By_PkArgs = {
    _inc?: InputMaybe<Analytics_ElementTotalViews_Inc_Input>;
    _set?: InputMaybe<Analytics_ElementTotalViews_Set_Input>;
    pk_columns: Analytics_ElementTotalViews_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ItemTotalViewsArgs = {
    _inc?: InputMaybe<Analytics_ItemTotalViews_Inc_Input>;
    _set?: InputMaybe<Analytics_ItemTotalViews_Set_Input>;
    where: Analytics_ItemTotalViews_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ItemTotalViews_By_PkArgs = {
    _inc?: InputMaybe<Analytics_ItemTotalViews_Inc_Input>;
    _set?: InputMaybe<Analytics_ItemTotalViews_Set_Input>;
    pk_columns: Analytics_ItemTotalViews_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_RoomPresenceArgs = {
    _inc?: InputMaybe<Analytics_RoomPresence_Inc_Input>;
    _set?: InputMaybe<Analytics_RoomPresence_Set_Input>;
    where: Analytics_RoomPresence_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_RoomPresence_By_PkArgs = {
    _inc?: InputMaybe<Analytics_RoomPresence_Inc_Input>;
    _set?: InputMaybe<Analytics_RoomPresence_Set_Input>;
    pk_columns: Analytics_RoomPresence_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_RoomStatsArgs = {
    _inc?: InputMaybe<Analytics_RoomStats_Inc_Input>;
    _set?: InputMaybe<Analytics_RoomStats_Set_Input>;
    where: Analytics_RoomStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_RoomStats_By_PkArgs = {
    _inc?: InputMaybe<Analytics_RoomStats_Inc_Input>;
    _set?: InputMaybe<Analytics_RoomStats_Set_Input>;
    pk_columns: Analytics_RoomStats_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ChatArgs = {
    _set?: InputMaybe<Chat_Chat_Set_Input>;
    where: Chat_Chat_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Chat_By_PkArgs = {
    _set?: InputMaybe<Chat_Chat_Set_Input>;
    pk_columns: Chat_Chat_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_FlagArgs = {
    _inc?: InputMaybe<Chat_Flag_Inc_Input>;
    _set?: InputMaybe<Chat_Flag_Set_Input>;
    where: Chat_Flag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_FlagTypeArgs = {
    _set?: InputMaybe<Chat_FlagType_Set_Input>;
    where: Chat_FlagType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_FlagType_By_PkArgs = {
    _set?: InputMaybe<Chat_FlagType_Set_Input>;
    pk_columns: Chat_FlagType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Flag_By_PkArgs = {
    _inc?: InputMaybe<Chat_Flag_Inc_Input>;
    _set?: InputMaybe<Chat_Flag_Set_Input>;
    pk_columns: Chat_Flag_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_MessageArgs = {
    _append?: InputMaybe<Chat_Message_Append_Input>;
    _delete_at_path?: InputMaybe<Chat_Message_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Chat_Message_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Chat_Message_Delete_Key_Input>;
    _inc?: InputMaybe<Chat_Message_Inc_Input>;
    _prepend?: InputMaybe<Chat_Message_Prepend_Input>;
    _set?: InputMaybe<Chat_Message_Set_Input>;
    where: Chat_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_MessageTypeArgs = {
    _set?: InputMaybe<Chat_MessageType_Set_Input>;
    where: Chat_MessageType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_MessageType_By_PkArgs = {
    _set?: InputMaybe<Chat_MessageType_Set_Input>;
    pk_columns: Chat_MessageType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Message_By_PkArgs = {
    _append?: InputMaybe<Chat_Message_Append_Input>;
    _delete_at_path?: InputMaybe<Chat_Message_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Chat_Message_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Chat_Message_Delete_Key_Input>;
    _inc?: InputMaybe<Chat_Message_Inc_Input>;
    _prepend?: InputMaybe<Chat_Message_Prepend_Input>;
    _set?: InputMaybe<Chat_Message_Set_Input>;
    pk_columns: Chat_Message_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_PinArgs = {
    _set?: InputMaybe<Chat_Pin_Set_Input>;
    where: Chat_Pin_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Pin_By_PkArgs = {
    _set?: InputMaybe<Chat_Pin_Set_Input>;
    pk_columns: Chat_Pin_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReactionArgs = {
    _append?: InputMaybe<Chat_Reaction_Append_Input>;
    _delete_at_path?: InputMaybe<Chat_Reaction_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Chat_Reaction_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Chat_Reaction_Delete_Key_Input>;
    _prepend?: InputMaybe<Chat_Reaction_Prepend_Input>;
    _set?: InputMaybe<Chat_Reaction_Set_Input>;
    where: Chat_Reaction_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReactionTypeArgs = {
    _set?: InputMaybe<Chat_ReactionType_Set_Input>;
    where: Chat_ReactionType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReactionType_By_PkArgs = {
    _set?: InputMaybe<Chat_ReactionType_Set_Input>;
    pk_columns: Chat_ReactionType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Reaction_By_PkArgs = {
    _append?: InputMaybe<Chat_Reaction_Append_Input>;
    _delete_at_path?: InputMaybe<Chat_Reaction_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Chat_Reaction_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Chat_Reaction_Delete_Key_Input>;
    _prepend?: InputMaybe<Chat_Reaction_Prepend_Input>;
    _set?: InputMaybe<Chat_Reaction_Set_Input>;
    pk_columns: Chat_Reaction_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReadUpToIndexArgs = {
    _set?: InputMaybe<Chat_ReadUpToIndex_Set_Input>;
    where: Chat_ReadUpToIndex_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReadUpToIndex_By_PkArgs = {
    _set?: InputMaybe<Chat_ReadUpToIndex_Set_Input>;
    pk_columns: Chat_ReadUpToIndex_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_SubscriptionArgs = {
    _set?: InputMaybe<Chat_Subscription_Set_Input>;
    where: Chat_Subscription_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Subscription_By_PkArgs = {
    _set?: InputMaybe<Chat_Subscription_Set_Input>;
    pk_columns: Chat_Subscription_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_ExhibitionArgs = {
    _inc?: InputMaybe<Collection_Exhibition_Inc_Input>;
    _set?: InputMaybe<Collection_Exhibition_Set_Input>;
    where: Collection_Exhibition_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_Exhibition_By_PkArgs = {
    _inc?: InputMaybe<Collection_Exhibition_Inc_Input>;
    _set?: InputMaybe<Collection_Exhibition_Set_Input>;
    pk_columns: Collection_Exhibition_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_ProgramPersonArgs = {
    _inc?: InputMaybe<Collection_ProgramPerson_Inc_Input>;
    _set?: InputMaybe<Collection_ProgramPerson_Set_Input>;
    where: Collection_ProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_ProgramPerson_By_PkArgs = {
    _inc?: InputMaybe<Collection_ProgramPerson_Inc_Input>;
    _set?: InputMaybe<Collection_ProgramPerson_Set_Input>;
    pk_columns: Collection_ProgramPerson_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_TagArgs = {
    _inc?: InputMaybe<Collection_Tag_Inc_Input>;
    _set?: InputMaybe<Collection_Tag_Set_Input>;
    where: Collection_Tag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_Tag_By_PkArgs = {
    _inc?: InputMaybe<Collection_Tag_Inc_Input>;
    _set?: InputMaybe<Collection_Tag_Set_Input>;
    pk_columns: Collection_Tag_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_ConferenceArgs = {
    _set?: InputMaybe<Conference_Conference_Set_Input>;
    where: Conference_Conference_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Conference_By_PkArgs = {
    _set?: InputMaybe<Conference_Conference_Set_Input>;
    pk_columns: Conference_Conference_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_ConfigurationArgs = {
    _append?: InputMaybe<Conference_Configuration_Append_Input>;
    _delete_at_path?: InputMaybe<Conference_Configuration_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Conference_Configuration_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Conference_Configuration_Delete_Key_Input>;
    _prepend?: InputMaybe<Conference_Configuration_Prepend_Input>;
    _set?: InputMaybe<Conference_Configuration_Set_Input>;
    where: Conference_Configuration_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_ConfigurationKeyArgs = {
    _set?: InputMaybe<Conference_ConfigurationKey_Set_Input>;
    where: Conference_ConfigurationKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_ConfigurationKey_By_PkArgs = {
    _set?: InputMaybe<Conference_ConfigurationKey_Set_Input>;
    pk_columns: Conference_ConfigurationKey_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Configuration_By_PkArgs = {
    _append?: InputMaybe<Conference_Configuration_Append_Input>;
    _delete_at_path?: InputMaybe<Conference_Configuration_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Conference_Configuration_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Conference_Configuration_Delete_Key_Input>;
    _prepend?: InputMaybe<Conference_Configuration_Prepend_Input>;
    _set?: InputMaybe<Conference_Configuration_Set_Input>;
    pk_columns: Conference_Configuration_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_DemoCodeArgs = {
    _set?: InputMaybe<Conference_DemoCode_Set_Input>;
    where: Conference_DemoCode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_DemoCode_By_PkArgs = {
    _set?: InputMaybe<Conference_DemoCode_Set_Input>;
    pk_columns: Conference_DemoCode_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_QuotaArgs = {
    _inc?: InputMaybe<Conference_Quota_Inc_Input>;
    _set?: InputMaybe<Conference_Quota_Set_Input>;
    where: Conference_Quota_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Quota_By_PkArgs = {
    _inc?: InputMaybe<Conference_Quota_Inc_Input>;
    _set?: InputMaybe<Conference_Quota_Set_Input>;
    pk_columns: Conference_Quota_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_SubconferenceArgs = {
    _set?: InputMaybe<Conference_Subconference_Set_Input>;
    where: Conference_Subconference_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Subconference_By_PkArgs = {
    _set?: InputMaybe<Conference_Subconference_Set_Input>;
    pk_columns: Conference_Subconference_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_UsageArgs = {
    _inc?: InputMaybe<Conference_Usage_Inc_Input>;
    _set?: InputMaybe<Conference_Usage_Set_Input>;
    where: Conference_Usage_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Usage_By_PkArgs = {
    _inc?: InputMaybe<Conference_Usage_Inc_Input>;
    _set?: InputMaybe<Conference_Usage_Set_Input>;
    pk_columns: Conference_Usage_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_VisibilityLevelArgs = {
    _set?: InputMaybe<Conference_VisibilityLevel_Set_Input>;
    where: Conference_VisibilityLevel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_VisibilityLevel_By_PkArgs = {
    _set?: InputMaybe<Conference_VisibilityLevel_Set_Input>;
    pk_columns: Conference_VisibilityLevel_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ElementArgs = {
    _append?: InputMaybe<Content_Element_Append_Input>;
    _delete_at_path?: InputMaybe<Content_Element_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Content_Element_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Content_Element_Delete_Key_Input>;
    _inc?: InputMaybe<Content_Element_Inc_Input>;
    _prepend?: InputMaybe<Content_Element_Prepend_Input>;
    _set?: InputMaybe<Content_Element_Set_Input>;
    where: Content_Element_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ElementTypeArgs = {
    _set?: InputMaybe<Content_ElementType_Set_Input>;
    where: Content_ElementType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ElementType_By_PkArgs = {
    _set?: InputMaybe<Content_ElementType_Set_Input>;
    pk_columns: Content_ElementType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_Element_By_PkArgs = {
    _append?: InputMaybe<Content_Element_Append_Input>;
    _delete_at_path?: InputMaybe<Content_Element_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Content_Element_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Content_Element_Delete_Key_Input>;
    _inc?: InputMaybe<Content_Element_Inc_Input>;
    _prepend?: InputMaybe<Content_Element_Prepend_Input>;
    _set?: InputMaybe<Content_Element_Set_Input>;
    pk_columns: Content_Element_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemArgs = {
    _set?: InputMaybe<Content_Item_Set_Input>;
    where: Content_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemExhibitionArgs = {
    _append?: InputMaybe<Content_ItemExhibition_Append_Input>;
    _delete_at_path?: InputMaybe<Content_ItemExhibition_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Content_ItemExhibition_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Content_ItemExhibition_Delete_Key_Input>;
    _inc?: InputMaybe<Content_ItemExhibition_Inc_Input>;
    _prepend?: InputMaybe<Content_ItemExhibition_Prepend_Input>;
    _set?: InputMaybe<Content_ItemExhibition_Set_Input>;
    where: Content_ItemExhibition_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemExhibition_By_PkArgs = {
    _append?: InputMaybe<Content_ItemExhibition_Append_Input>;
    _delete_at_path?: InputMaybe<Content_ItemExhibition_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Content_ItemExhibition_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Content_ItemExhibition_Delete_Key_Input>;
    _inc?: InputMaybe<Content_ItemExhibition_Inc_Input>;
    _prepend?: InputMaybe<Content_ItemExhibition_Prepend_Input>;
    _set?: InputMaybe<Content_ItemExhibition_Set_Input>;
    pk_columns: Content_ItemExhibition_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemProgramPersonArgs = {
    _inc?: InputMaybe<Content_ItemProgramPerson_Inc_Input>;
    _set?: InputMaybe<Content_ItemProgramPerson_Set_Input>;
    where: Content_ItemProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemProgramPerson_By_PkArgs = {
    _inc?: InputMaybe<Content_ItemProgramPerson_Inc_Input>;
    _set?: InputMaybe<Content_ItemProgramPerson_Set_Input>;
    pk_columns: Content_ItemProgramPerson_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemTagArgs = {
    _set?: InputMaybe<Content_ItemTag_Set_Input>;
    where: Content_ItemTag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemTag_By_PkArgs = {
    _set?: InputMaybe<Content_ItemTag_Set_Input>;
    pk_columns: Content_ItemTag_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemTypeArgs = {
    _set?: InputMaybe<Content_ItemType_Set_Input>;
    where: Content_ItemType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemType_By_PkArgs = {
    _set?: InputMaybe<Content_ItemType_Set_Input>;
    pk_columns: Content_ItemType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_Item_By_PkArgs = {
    _set?: InputMaybe<Content_Item_Set_Input>;
    pk_columns: Content_Item_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackCreateJobArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackCreateJob_Set_Input>;
    where: Job_Queues_ChannelStackCreateJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackCreateJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackCreateJob_Set_Input>;
    pk_columns: Job_Queues_ChannelStackCreateJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackDeleteJobArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Set_Input>;
    where: Job_Queues_ChannelStackDeleteJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackDeleteJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Set_Input>;
    pk_columns: Job_Queues_ChannelStackDeleteJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackUpdateJobArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Set_Input>;
    where: Job_Queues_ChannelStackUpdateJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackUpdateJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Set_Input>;
    pk_columns: Job_Queues_ChannelStackUpdateJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CombineVideosJobArgs = {
    _append?: InputMaybe<Job_Queues_CombineVideosJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_CombineVideosJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_CombineVideosJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_CombineVideosJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_CombineVideosJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_CombineVideosJob_Set_Input>;
    where: Job_Queues_CombineVideosJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CombineVideosJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_CombineVideosJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_CombineVideosJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_CombineVideosJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_CombineVideosJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_CombineVideosJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_CombineVideosJob_Set_Input>;
    pk_columns: Job_Queues_CombineVideosJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CustomEmailJobArgs = {
    _append?: InputMaybe<Job_Queues_CustomEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_CustomEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_CustomEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_CustomEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_CustomEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_CustomEmailJob_Set_Input>;
    where: Job_Queues_CustomEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CustomEmailJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_CustomEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_CustomEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_CustomEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_CustomEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_CustomEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_CustomEmailJob_Set_Input>;
    pk_columns: Job_Queues_CustomEmailJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ImportJobArgs = {
    _append?: InputMaybe<Job_Queues_ImportJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_ImportJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_ImportJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_ImportJob_Delete_Key_Input>;
    _inc?: InputMaybe<Job_Queues_ImportJob_Inc_Input>;
    _prepend?: InputMaybe<Job_Queues_ImportJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_ImportJob_Set_Input>;
    where: Job_Queues_ImportJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ImportJobOutputArgs = {
    _append?: InputMaybe<Job_Queues_ImportJobOutput_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_ImportJobOutput_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_ImportJobOutput_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_ImportJobOutput_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_ImportJobOutput_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_ImportJobOutput_Set_Input>;
    where: Job_Queues_ImportJobOutput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ImportJobOutput_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_ImportJobOutput_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_ImportJobOutput_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_ImportJobOutput_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_ImportJobOutput_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_ImportJobOutput_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_ImportJobOutput_Set_Input>;
    pk_columns: Job_Queues_ImportJobOutput_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ImportJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_ImportJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_ImportJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_ImportJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_ImportJob_Delete_Key_Input>;
    _inc?: InputMaybe<Job_Queues_ImportJob_Inc_Input>;
    _prepend?: InputMaybe<Job_Queues_ImportJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_ImportJob_Set_Input>;
    pk_columns: Job_Queues_ImportJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_InvitationEmailJobArgs = {
    _append?: InputMaybe<Job_Queues_InvitationEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_InvitationEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_InvitationEmailJob_Set_Input>;
    where: Job_Queues_InvitationEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_InvitationEmailJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_InvitationEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_InvitationEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_InvitationEmailJob_Set_Input>;
    pk_columns: Job_Queues_InvitationEmailJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_JobStatusArgs = {
    _set?: InputMaybe<Job_Queues_JobStatus_Set_Input>;
    where: Job_Queues_JobStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_JobStatus_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_JobStatus_Set_Input>;
    pk_columns: Job_Queues_JobStatus_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_MediaPackageHarvestJobArgs = {
    _set?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Set_Input>;
    where: Job_Queues_MediaPackageHarvestJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_MediaPackageHarvestJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Set_Input>;
    pk_columns: Job_Queues_MediaPackageHarvestJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PrepareJobArgs = {
    _set?: InputMaybe<Job_Queues_PrepareJob_Set_Input>;
    where: Job_Queues_PrepareJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PrepareJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_PrepareJob_Set_Input>;
    pk_columns: Job_Queues_PrepareJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PublishVideoJobArgs = {
    _set?: InputMaybe<Job_Queues_PublishVideoJob_Set_Input>;
    where: Job_Queues_PublishVideoJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PublishVideoJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_PublishVideoJob_Set_Input>;
    pk_columns: Job_Queues_PublishVideoJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_SubmissionRequestEmailJobArgs = {
    _append?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Set_Input>;
    where: Job_Queues_SubmissionRequestEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_SubmissionRequestEmailJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Set_Input>;
    pk_columns: Job_Queues_SubmissionRequestEmailJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_UploadYouTubeVideoJobArgs = {
    _append?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_Key_Input>;
    _inc?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Inc_Input>;
    _prepend?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Set_Input>;
    where: Job_Queues_UploadYouTubeVideoJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_UploadYouTubeVideoJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_Key_Input>;
    _inc?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Inc_Input>;
    _prepend?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Set_Input>;
    pk_columns: Job_Queues_UploadYouTubeVideoJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GoogleAccountArgs = {
    _append?: InputMaybe<Registrant_GoogleAccount_Append_Input>;
    _delete_at_path?: InputMaybe<Registrant_GoogleAccount_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Registrant_GoogleAccount_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Registrant_GoogleAccount_Delete_Key_Input>;
    _prepend?: InputMaybe<Registrant_GoogleAccount_Prepend_Input>;
    _set?: InputMaybe<Registrant_GoogleAccount_Set_Input>;
    where: Registrant_GoogleAccount_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GoogleAccount_By_PkArgs = {
    _append?: InputMaybe<Registrant_GoogleAccount_Append_Input>;
    _delete_at_path?: InputMaybe<Registrant_GoogleAccount_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Registrant_GoogleAccount_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Registrant_GoogleAccount_Delete_Key_Input>;
    _prepend?: InputMaybe<Registrant_GoogleAccount_Prepend_Input>;
    _set?: InputMaybe<Registrant_GoogleAccount_Set_Input>;
    pk_columns: Registrant_GoogleAccount_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GroupArgs = {
    _set?: InputMaybe<Registrant_Group_Set_Input>;
    where: Registrant_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GroupRegistrantArgs = {
    _set?: InputMaybe<Registrant_GroupRegistrant_Set_Input>;
    where: Registrant_GroupRegistrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GroupRegistrant_By_PkArgs = {
    _set?: InputMaybe<Registrant_GroupRegistrant_Set_Input>;
    pk_columns: Registrant_GroupRegistrant_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_Group_By_PkArgs = {
    _set?: InputMaybe<Registrant_Group_Set_Input>;
    pk_columns: Registrant_Group_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_InvitationArgs = {
    _set?: InputMaybe<Registrant_Invitation_Set_Input>;
    where: Registrant_Invitation_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_Invitation_By_PkArgs = {
    _set?: InputMaybe<Registrant_Invitation_Set_Input>;
    pk_columns: Registrant_Invitation_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_ProfileArgs = {
    _append?: InputMaybe<Registrant_Profile_Append_Input>;
    _delete_at_path?: InputMaybe<Registrant_Profile_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Registrant_Profile_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Registrant_Profile_Delete_Key_Input>;
    _inc?: InputMaybe<Registrant_Profile_Inc_Input>;
    _prepend?: InputMaybe<Registrant_Profile_Prepend_Input>;
    _set?: InputMaybe<Registrant_Profile_Set_Input>;
    where: Registrant_Profile_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_Profile_By_PkArgs = {
    _append?: InputMaybe<Registrant_Profile_Append_Input>;
    _delete_at_path?: InputMaybe<Registrant_Profile_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Registrant_Profile_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Registrant_Profile_Delete_Key_Input>;
    _inc?: InputMaybe<Registrant_Profile_Inc_Input>;
    _prepend?: InputMaybe<Registrant_Profile_Prepend_Input>;
    _set?: InputMaybe<Registrant_Profile_Set_Input>;
    pk_columns: Registrant_Profile_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_RegistrantArgs = {
    _set?: InputMaybe<Registrant_Registrant_Set_Input>;
    where: Registrant_Registrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_RegistrantRoleArgs = {
    _set?: InputMaybe<Registrant_RegistrantRole_Set_Input>;
    where: Registrant_RegistrantRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_RegistrantRole_By_PkArgs = {
    _set?: InputMaybe<Registrant_RegistrantRole_Set_Input>;
    pk_columns: Registrant_RegistrantRole_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_Registrant_By_PkArgs = {
    _set?: InputMaybe<Registrant_Registrant_Set_Input>;
    pk_columns: Registrant_Registrant_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_SavedVonageRoomRecordingArgs = {
    _set?: InputMaybe<Registrant_SavedVonageRoomRecording_Set_Input>;
    where: Registrant_SavedVonageRoomRecording_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_SavedVonageRoomRecording_By_PkArgs = {
    _set?: InputMaybe<Registrant_SavedVonageRoomRecording_Set_Input>;
    pk_columns: Registrant_SavedVonageRoomRecording_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_SubconferenceMembershipArgs = {
    _set?: InputMaybe<Registrant_SubconferenceMembership_Set_Input>;
    where: Registrant_SubconferenceMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_SubconferenceMembership_By_PkArgs = {
    _set?: InputMaybe<Registrant_SubconferenceMembership_Set_Input>;
    pk_columns: Registrant_SubconferenceMembership_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_BackendArgs = {
    _set?: InputMaybe<Room_Backend_Set_Input>;
    where: Room_Backend_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_Backend_By_PkArgs = {
    _set?: InputMaybe<Room_Backend_Set_Input>;
    pk_columns: Room_Backend_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ChimeMeetingArgs = {
    _append?: InputMaybe<Room_ChimeMeeting_Append_Input>;
    _delete_at_path?: InputMaybe<Room_ChimeMeeting_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Room_ChimeMeeting_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Room_ChimeMeeting_Delete_Key_Input>;
    _prepend?: InputMaybe<Room_ChimeMeeting_Prepend_Input>;
    _set?: InputMaybe<Room_ChimeMeeting_Set_Input>;
    where: Room_ChimeMeeting_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ChimeMeeting_By_PkArgs = {
    _append?: InputMaybe<Room_ChimeMeeting_Append_Input>;
    _delete_at_path?: InputMaybe<Room_ChimeMeeting_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Room_ChimeMeeting_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Room_ChimeMeeting_Delete_Key_Input>;
    _prepend?: InputMaybe<Room_ChimeMeeting_Prepend_Input>;
    _set?: InputMaybe<Room_ChimeMeeting_Set_Input>;
    pk_columns: Room_ChimeMeeting_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ManagementModeArgs = {
    _set?: InputMaybe<Room_ManagementMode_Set_Input>;
    where: Room_ManagementMode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ManagementMode_By_PkArgs = {
    _set?: InputMaybe<Room_ManagementMode_Set_Input>;
    pk_columns: Room_ManagementMode_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_PersonRoleArgs = {
    _set?: InputMaybe<Room_PersonRole_Set_Input>;
    where: Room_PersonRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_PersonRole_By_PkArgs = {
    _set?: InputMaybe<Room_PersonRole_Set_Input>;
    pk_columns: Room_PersonRole_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomArgs = {
    _inc?: InputMaybe<Room_Room_Inc_Input>;
    _set?: InputMaybe<Room_Room_Set_Input>;
    where: Room_Room_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomGroupMembershipArgs = {
    _set?: InputMaybe<Room_RoomGroupMembership_Set_Input>;
    where: Room_RoomGroupMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomGroupMembership_By_PkArgs = {
    _set?: InputMaybe<Room_RoomGroupMembership_Set_Input>;
    pk_columns: Room_RoomGroupMembership_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomMembershipArgs = {
    _set?: InputMaybe<Room_RoomMembership_Set_Input>;
    where: Room_RoomMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomMembership_By_PkArgs = {
    _set?: InputMaybe<Room_RoomMembership_Set_Input>;
    pk_columns: Room_RoomMembership_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_Room_By_PkArgs = {
    _inc?: InputMaybe<Room_Room_Inc_Input>;
    _set?: InputMaybe<Room_Room_Set_Input>;
    pk_columns: Room_Room_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleAlgorithmArgs = {
    _set?: InputMaybe<Room_ShuffleAlgorithm_Set_Input>;
    where: Room_ShuffleAlgorithm_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleAlgorithm_By_PkArgs = {
    _set?: InputMaybe<Room_ShuffleAlgorithm_Set_Input>;
    pk_columns: Room_ShuffleAlgorithm_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShufflePeriodArgs = {
    _inc?: InputMaybe<Room_ShufflePeriod_Inc_Input>;
    _set?: InputMaybe<Room_ShufflePeriod_Set_Input>;
    where: Room_ShufflePeriod_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShufflePeriod_By_PkArgs = {
    _inc?: InputMaybe<Room_ShufflePeriod_Inc_Input>;
    _set?: InputMaybe<Room_ShufflePeriod_Set_Input>;
    pk_columns: Room_ShufflePeriod_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleQueueEntryArgs = {
    _inc?: InputMaybe<Room_ShuffleQueueEntry_Inc_Input>;
    _set?: InputMaybe<Room_ShuffleQueueEntry_Set_Input>;
    where: Room_ShuffleQueueEntry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleQueueEntry_By_PkArgs = {
    _inc?: InputMaybe<Room_ShuffleQueueEntry_Inc_Input>;
    _set?: InputMaybe<Room_ShuffleQueueEntry_Set_Input>;
    pk_columns: Room_ShuffleQueueEntry_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleRoomArgs = {
    _inc?: InputMaybe<Room_ShuffleRoom_Inc_Input>;
    _set?: InputMaybe<Room_ShuffleRoom_Set_Input>;
    where: Room_ShuffleRoom_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleRoom_By_PkArgs = {
    _inc?: InputMaybe<Room_ShuffleRoom_Inc_Input>;
    _set?: InputMaybe<Room_ShuffleRoom_Set_Input>;
    pk_columns: Room_ShuffleRoom_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_ContinuationArgs = {
    _append?: InputMaybe<Schedule_Continuation_Append_Input>;
    _delete_at_path?: InputMaybe<Schedule_Continuation_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Schedule_Continuation_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Schedule_Continuation_Delete_Key_Input>;
    _inc?: InputMaybe<Schedule_Continuation_Inc_Input>;
    _prepend?: InputMaybe<Schedule_Continuation_Prepend_Input>;
    _set?: InputMaybe<Schedule_Continuation_Set_Input>;
    where: Schedule_Continuation_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_Continuation_By_PkArgs = {
    _append?: InputMaybe<Schedule_Continuation_Append_Input>;
    _delete_at_path?: InputMaybe<Schedule_Continuation_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Schedule_Continuation_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Schedule_Continuation_Delete_Key_Input>;
    _inc?: InputMaybe<Schedule_Continuation_Inc_Input>;
    _prepend?: InputMaybe<Schedule_Continuation_Prepend_Input>;
    _set?: InputMaybe<Schedule_Continuation_Set_Input>;
    pk_columns: Schedule_Continuation_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_CurrentEventsArgs = {
    _set?: InputMaybe<Schedule_CurrentEvents_Set_Input>;
    where: Schedule_CurrentEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventArgs = {
    _set?: InputMaybe<Schedule_Event_Set_Input>;
    where: Schedule_Event_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventProgramPersonArgs = {
    _set?: InputMaybe<Schedule_EventProgramPerson_Set_Input>;
    where: Schedule_EventProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventProgramPersonRoleArgs = {
    _set?: InputMaybe<Schedule_EventProgramPersonRole_Set_Input>;
    where: Schedule_EventProgramPersonRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventProgramPersonRole_By_PkArgs = {
    _set?: InputMaybe<Schedule_EventProgramPersonRole_Set_Input>;
    pk_columns: Schedule_EventProgramPersonRole_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventProgramPerson_By_PkArgs = {
    _set?: InputMaybe<Schedule_EventProgramPerson_Set_Input>;
    pk_columns: Schedule_EventProgramPerson_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_Event_By_PkArgs = {
    _set?: InputMaybe<Schedule_Event_Set_Input>;
    pk_columns: Schedule_Event_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_ModeArgs = {
    _set?: InputMaybe<Schedule_Mode_Set_Input>;
    where: Schedule_Mode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_Mode_By_PkArgs = {
    _set?: InputMaybe<Schedule_Mode_Set_Input>;
    pk_columns: Schedule_Mode_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_StarredEventArgs = {
    _set?: InputMaybe<Schedule_StarredEvent_Set_Input>;
    where: Schedule_StarredEvent_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_StarredEvent_By_PkArgs = {
    _set?: InputMaybe<Schedule_StarredEvent_Set_Input>;
    pk_columns: Schedule_StarredEvent_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Sponsor_TierArgs = {
    _inc?: InputMaybe<Sponsor_Tier_Inc_Input>;
    _set?: InputMaybe<Sponsor_Tier_Set_Input>;
    where: Sponsor_Tier_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Sponsor_TierMemberArgs = {
    _inc?: InputMaybe<Sponsor_TierMember_Inc_Input>;
    _set?: InputMaybe<Sponsor_TierMember_Set_Input>;
    where: Sponsor_TierMember_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Sponsor_TierMember_By_PkArgs = {
    _inc?: InputMaybe<Sponsor_TierMember_Inc_Input>;
    _set?: InputMaybe<Sponsor_TierMember_Set_Input>;
    pk_columns: Sponsor_TierMember_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Sponsor_Tier_By_PkArgs = {
    _inc?: InputMaybe<Sponsor_Tier_Inc_Input>;
    _set?: InputMaybe<Sponsor_Tier_Set_Input>;
    pk_columns: Sponsor_Tier_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationArgs = {
    _append?: InputMaybe<System_Configuration_Append_Input>;
    _delete_at_path?: InputMaybe<System_Configuration_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<System_Configuration_Delete_Elem_Input>;
    _delete_key?: InputMaybe<System_Configuration_Delete_Key_Input>;
    _prepend?: InputMaybe<System_Configuration_Prepend_Input>;
    _set?: InputMaybe<System_Configuration_Set_Input>;
    where: System_Configuration_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationKeyArgs = {
    _set?: InputMaybe<System_ConfigurationKey_Set_Input>;
    where: System_ConfigurationKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationKey_By_PkArgs = {
    _set?: InputMaybe<System_ConfigurationKey_Set_Input>;
    pk_columns: System_ConfigurationKey_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationPermissionGrantArgs = {
    _set?: InputMaybe<System_ConfigurationPermissionGrant_Set_Input>;
    where: System_ConfigurationPermissionGrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationPermissionGrant_By_PkArgs = {
    _set?: InputMaybe<System_ConfigurationPermissionGrant_Set_Input>;
    pk_columns: System_ConfigurationPermissionGrant_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_Configuration_By_PkArgs = {
    _append?: InputMaybe<System_Configuration_Append_Input>;
    _delete_at_path?: InputMaybe<System_Configuration_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<System_Configuration_Delete_Elem_Input>;
    _delete_key?: InputMaybe<System_Configuration_Delete_Key_Input>;
    _prepend?: InputMaybe<System_Configuration_Prepend_Input>;
    _set?: InputMaybe<System_Configuration_Set_Input>;
    pk_columns: System_Configuration_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_SuperUserPermissionArgs = {
    _set?: InputMaybe<System_SuperUserPermission_Set_Input>;
    where: System_SuperUserPermission_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_SuperUserPermissionGrantArgs = {
    _set?: InputMaybe<System_SuperUserPermissionGrant_Set_Input>;
    where: System_SuperUserPermissionGrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_SuperUserPermissionGrant_By_PkArgs = {
    _set?: InputMaybe<System_SuperUserPermissionGrant_Set_Input>;
    pk_columns: System_SuperUserPermissionGrant_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_SuperUserPermission_By_PkArgs = {
    _set?: InputMaybe<System_SuperUserPermission_Set_Input>;
    pk_columns: System_SuperUserPermission_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_ChannelStackArgs = {
    _set?: InputMaybe<Video_ChannelStack_Set_Input>;
    where: Video_ChannelStack_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_ChannelStack_By_PkArgs = {
    _set?: InputMaybe<Video_ChannelStack_Set_Input>;
    pk_columns: Video_ChannelStack_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_EventVonageSessionArgs = {
    _set?: InputMaybe<Video_EventVonageSession_Set_Input>;
    where: Video_EventVonageSession_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_EventVonageSession_By_PkArgs = {
    _set?: InputMaybe<Video_EventVonageSession_Set_Input>;
    pk_columns: Video_EventVonageSession_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_ImmediateSwitchArgs = {
    _append?: InputMaybe<Video_ImmediateSwitch_Append_Input>;
    _delete_at_path?: InputMaybe<Video_ImmediateSwitch_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_ImmediateSwitch_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_ImmediateSwitch_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_ImmediateSwitch_Prepend_Input>;
    _set?: InputMaybe<Video_ImmediateSwitch_Set_Input>;
    where: Video_ImmediateSwitch_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_ImmediateSwitch_By_PkArgs = {
    _append?: InputMaybe<Video_ImmediateSwitch_Append_Input>;
    _delete_at_path?: InputMaybe<Video_ImmediateSwitch_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_ImmediateSwitch_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_ImmediateSwitch_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_ImmediateSwitch_Prepend_Input>;
    _set?: InputMaybe<Video_ImmediateSwitch_Set_Input>;
    pk_columns: Video_ImmediateSwitch_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_InputTypeArgs = {
    _set?: InputMaybe<Video_InputType_Set_Input>;
    where: Video_InputType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_InputType_By_PkArgs = {
    _set?: InputMaybe<Video_InputType_Set_Input>;
    pk_columns: Video_InputType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_MediaLiveChannelStatusArgs = {
    _inc?: InputMaybe<Video_MediaLiveChannelStatus_Inc_Input>;
    _set?: InputMaybe<Video_MediaLiveChannelStatus_Set_Input>;
    where: Video_MediaLiveChannelStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_MediaLiveChannelStatus_By_PkArgs = {
    _inc?: InputMaybe<Video_MediaLiveChannelStatus_Inc_Input>;
    _set?: InputMaybe<Video_MediaLiveChannelStatus_Set_Input>;
    pk_columns: Video_MediaLiveChannelStatus_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RoomRtmpInputArgs = {
    _set?: InputMaybe<Video_RoomRtmpInput_Set_Input>;
    where: Video_RoomRtmpInput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RoomRtmpInput_By_PkArgs = {
    _set?: InputMaybe<Video_RoomRtmpInput_Set_Input>;
    pk_columns: Video_RoomRtmpInput_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RoomRtmpOutputArgs = {
    _set?: InputMaybe<Video_RoomRtmpOutput_Set_Input>;
    where: Video_RoomRtmpOutput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RoomRtmpOutput_By_PkArgs = {
    _set?: InputMaybe<Video_RoomRtmpOutput_Set_Input>;
    pk_columns: Video_RoomRtmpOutput_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RtmpInputArgs = {
    _set?: InputMaybe<Video_RtmpInput_Set_Input>;
    where: Video_RtmpInput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RtmpInput_By_PkArgs = {
    _set?: InputMaybe<Video_RtmpInput_Set_Input>;
    pk_columns: Video_RtmpInput_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_TranscriptionJobArgs = {
    _set?: InputMaybe<Video_TranscriptionJob_Set_Input>;
    where: Video_TranscriptionJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_TranscriptionJob_By_PkArgs = {
    _set?: InputMaybe<Video_TranscriptionJob_Set_Input>;
    pk_columns: Video_TranscriptionJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VideoRenderJobArgs = {
    _append?: InputMaybe<Video_VideoRenderJob_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VideoRenderJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VideoRenderJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VideoRenderJob_Delete_Key_Input>;
    _inc?: InputMaybe<Video_VideoRenderJob_Inc_Input>;
    _prepend?: InputMaybe<Video_VideoRenderJob_Prepend_Input>;
    _set?: InputMaybe<Video_VideoRenderJob_Set_Input>;
    where: Video_VideoRenderJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VideoRenderJob_By_PkArgs = {
    _append?: InputMaybe<Video_VideoRenderJob_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VideoRenderJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VideoRenderJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VideoRenderJob_Delete_Key_Input>;
    _inc?: InputMaybe<Video_VideoRenderJob_Inc_Input>;
    _prepend?: InputMaybe<Video_VideoRenderJob_Prepend_Input>;
    _set?: InputMaybe<Video_VideoRenderJob_Set_Input>;
    pk_columns: Video_VideoRenderJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageParticipantStreamArgs = {
    _set?: InputMaybe<Video_VonageParticipantStream_Set_Input>;
    where: Video_VonageParticipantStream_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageParticipantStream_By_PkArgs = {
    _set?: InputMaybe<Video_VonageParticipantStream_Set_Input>;
    pk_columns: Video_VonageParticipantStream_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageRoomRecordingArgs = {
    _set?: InputMaybe<Video_VonageRoomRecording_Set_Input>;
    where: Video_VonageRoomRecording_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageRoomRecording_By_PkArgs = {
    _set?: InputMaybe<Video_VonageRoomRecording_Set_Input>;
    pk_columns: Video_VonageRoomRecording_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageSessionLayoutArgs = {
    _append?: InputMaybe<Video_VonageSessionLayout_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VonageSessionLayout_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VonageSessionLayout_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VonageSessionLayout_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_VonageSessionLayout_Prepend_Input>;
    _set?: InputMaybe<Video_VonageSessionLayout_Set_Input>;
    where: Video_VonageSessionLayout_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageSessionLayout_By_PkArgs = {
    _append?: InputMaybe<Video_VonageSessionLayout_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VonageSessionLayout_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VonageSessionLayout_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VonageSessionLayout_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_VonageSessionLayout_Prepend_Input>;
    _set?: InputMaybe<Video_VonageSessionLayout_Set_Input>;
    pk_columns: Video_VonageSessionLayout_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageVideoPlaybackCommandArgs = {
    _append?: InputMaybe<Video_VonageVideoPlaybackCommand_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_VonageVideoPlaybackCommand_Prepend_Input>;
    _set?: InputMaybe<Video_VonageVideoPlaybackCommand_Set_Input>;
    where: Video_VonageVideoPlaybackCommand_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageVideoPlaybackCommand_By_PkArgs = {
    _append?: InputMaybe<Video_VonageVideoPlaybackCommand_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_VonageVideoPlaybackCommand_Prepend_Input>;
    _set?: InputMaybe<Video_VonageVideoPlaybackCommand_Set_Input>;
    pk_columns: Video_VonageVideoPlaybackCommand_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_YouTubeUploadArgs = {
    _set?: InputMaybe<Video_YouTubeUpload_Set_Input>;
    where: Video_YouTubeUpload_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_YouTubeUpload_By_PkArgs = {
    _set?: InputMaybe<Video_YouTubeUpload_Set_Input>;
    pk_columns: Video_YouTubeUpload_Pk_Columns_Input;
};

/** Boolean expression to compare columns of type "name". All fields are combined with logical 'AND'. */
export type Name_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["name"]>;
    _gt?: InputMaybe<Scalars["name"]>;
    _gte?: InputMaybe<Scalars["name"]>;
    _in?: InputMaybe<Array<Scalars["name"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["name"]>;
    _lte?: InputMaybe<Scalars["name"]>;
    _neq?: InputMaybe<Scalars["name"]>;
    _nin?: InputMaybe<Array<Scalars["name"]>>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["numeric"]>;
    _gt?: InputMaybe<Scalars["numeric"]>;
    _gte?: InputMaybe<Scalars["numeric"]>;
    _in?: InputMaybe<Array<Scalars["numeric"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["numeric"]>;
    _lte?: InputMaybe<Scalars["numeric"]>;
    _neq?: InputMaybe<Scalars["numeric"]>;
    _nin?: InputMaybe<Array<Scalars["numeric"]>>;
};

/** column ordering options */
export enum Order_By {
    /** in ascending order, nulls last */
    Asc = "asc",
    /** in ascending order, nulls first */
    AscNullsFirst = "asc_nulls_first",
    /** in ascending order, nulls last */
    AscNullsLast = "asc_nulls_last",
    /** in descending order, nulls first */
    Desc = "desc",
    /** in descending order, nulls first */
    DescNullsFirst = "desc_nulls_first",
    /** in descending order, nulls last */
    DescNullsLast = "desc_nulls_last",
}

export type Query_Root = {
    __typename?: "query_root";
    /** fetch data from the table: "Email" */
    Email: Array<Email>;
    /** fetch aggregated fields from the table: "Email" */
    Email_aggregate: Email_Aggregate;
    /** fetch data from the table: "Email" using primary key columns */
    Email_by_pk?: Maybe<Email>;
    /** fetch data from the table: "ForeignKeyIntrospection" */
    ForeignKeyIntrospection: Array<ForeignKeyIntrospection>;
    /** fetch aggregated fields from the table: "ForeignKeyIntrospection" */
    ForeignKeyIntrospection_aggregate: ForeignKeyIntrospection_Aggregate;
    /** fetch data from the table: "PushNotificationSubscription" */
    PushNotificationSubscription: Array<PushNotificationSubscription>;
    /** fetch aggregated fields from the table: "PushNotificationSubscription" */
    PushNotificationSubscription_aggregate: PushNotificationSubscription_Aggregate;
    /** fetch data from the table: "PushNotificationSubscription" using primary key columns */
    PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
    /** fetch data from the table: "User" */
    User: Array<User>;
    /** fetch aggregated fields from the table: "User" */
    User_aggregate: User_Aggregate;
    /** fetch data from the table: "User" using primary key columns */
    User_by_pk?: Maybe<User>;
    /** fetch data from the table: "analytics.AppStats" */
    analytics_AppStats: Array<Analytics_AppStats>;
    /** fetch aggregated fields from the table: "analytics.AppStats" */
    analytics_AppStats_aggregate: Analytics_AppStats_Aggregate;
    /** fetch data from the table: "analytics.AppStats" using primary key columns */
    analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
    /** fetch data from the table: "analytics.CompletedRegistrations" */
    analytics_CompletedRegistrations: Array<Analytics_CompletedRegistrations>;
    /** fetch aggregated fields from the table: "analytics.CompletedRegistrations" */
    analytics_CompletedRegistrations_aggregate: Analytics_CompletedRegistrations_Aggregate;
    /** fetch data from the table: "analytics.ContentElementStats" */
    analytics_ContentElementStats: Array<Analytics_ContentElementStats>;
    /** fetch aggregated fields from the table: "analytics.ContentElementStats" */
    analytics_ContentElementStats_aggregate: Analytics_ContentElementStats_Aggregate;
    /** fetch data from the table: "analytics.ContentElementStats" using primary key columns */
    analytics_ContentElementStats_by_pk?: Maybe<Analytics_ContentElementStats>;
    /** fetch data from the table: "analytics.ContentItemStats" */
    analytics_ContentItemStats: Array<Analytics_ContentItemStats>;
    /** fetch aggregated fields from the table: "analytics.ContentItemStats" */
    analytics_ContentItemStats_aggregate: Analytics_ContentItemStats_Aggregate;
    /** fetch data from the table: "analytics.ContentItemStats" using primary key columns */
    analytics_ContentItemStats_by_pk?: Maybe<Analytics_ContentItemStats>;
    /** fetch data from the table: "analytics.ElementTotalViews" */
    analytics_ElementTotalViews: Array<Analytics_ElementTotalViews>;
    /** fetch aggregated fields from the table: "analytics.ElementTotalViews" */
    analytics_ElementTotalViews_aggregate: Analytics_ElementTotalViews_Aggregate;
    /** fetch data from the table: "analytics.ElementTotalViews" using primary key columns */
    analytics_ElementTotalViews_by_pk?: Maybe<Analytics_ElementTotalViews>;
    /** fetch data from the table: "analytics.ItemTotalViews" */
    analytics_ItemTotalViews: Array<Analytics_ItemTotalViews>;
    /** fetch aggregated fields from the table: "analytics.ItemTotalViews" */
    analytics_ItemTotalViews_aggregate: Analytics_ItemTotalViews_Aggregate;
    /** fetch data from the table: "analytics.ItemTotalViews" using primary key columns */
    analytics_ItemTotalViews_by_pk?: Maybe<Analytics_ItemTotalViews>;
    /** fetch data from the table: "analytics.RoomPresence" */
    analytics_RoomPresence: Array<Analytics_RoomPresence>;
    /** fetch aggregated fields from the table: "analytics.RoomPresence" */
    analytics_RoomPresence_aggregate: Analytics_RoomPresence_Aggregate;
    /** fetch data from the table: "analytics.RoomPresence" using primary key columns */
    analytics_RoomPresence_by_pk?: Maybe<Analytics_RoomPresence>;
    /** fetch data from the table: "analytics.RoomStats" */
    analytics_RoomStats: Array<Analytics_RoomStats>;
    /** fetch aggregated fields from the table: "analytics.RoomStats" */
    analytics_RoomStats_aggregate: Analytics_RoomStats_Aggregate;
    /** fetch data from the table: "analytics.RoomStats" using primary key columns */
    analytics_RoomStats_by_pk?: Maybe<Analytics_RoomStats>;
    /** fetch data from the table: "chat.Chat" */
    chat_Chat: Array<Chat_Chat>;
    /** fetch aggregated fields from the table: "chat.Chat" */
    chat_Chat_aggregate: Chat_Chat_Aggregate;
    /** fetch data from the table: "chat.Chat" using primary key columns */
    chat_Chat_by_pk?: Maybe<Chat_Chat>;
    /** fetch data from the table: "chat.Flag" */
    chat_Flag: Array<Chat_Flag>;
    /** fetch data from the table: "chat.FlagType" */
    chat_FlagType: Array<Chat_FlagType>;
    /** fetch aggregated fields from the table: "chat.FlagType" */
    chat_FlagType_aggregate: Chat_FlagType_Aggregate;
    /** fetch data from the table: "chat.FlagType" using primary key columns */
    chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
    /** fetch aggregated fields from the table: "chat.Flag" */
    chat_Flag_aggregate: Chat_Flag_Aggregate;
    /** fetch data from the table: "chat.Flag" using primary key columns */
    chat_Flag_by_pk?: Maybe<Chat_Flag>;
    /** fetch data from the table: "chat.Message" */
    chat_Message: Array<Chat_Message>;
    /** fetch data from the table: "chat.MessageType" */
    chat_MessageType: Array<Chat_MessageType>;
    /** fetch aggregated fields from the table: "chat.MessageType" */
    chat_MessageType_aggregate: Chat_MessageType_Aggregate;
    /** fetch data from the table: "chat.MessageType" using primary key columns */
    chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
    /** fetch aggregated fields from the table: "chat.Message" */
    chat_Message_aggregate: Chat_Message_Aggregate;
    /** fetch data from the table: "chat.Message" using primary key columns */
    chat_Message_by_pk?: Maybe<Chat_Message>;
    /** fetch data from the table: "chat.Pin" */
    chat_Pin: Array<Chat_Pin>;
    /** fetch aggregated fields from the table: "chat.Pin" */
    chat_Pin_aggregate: Chat_Pin_Aggregate;
    /** fetch data from the table: "chat.Pin" using primary key columns */
    chat_Pin_by_pk?: Maybe<Chat_Pin>;
    /** fetch data from the table: "chat.Reaction" */
    chat_Reaction: Array<Chat_Reaction>;
    /** fetch data from the table: "chat.ReactionType" */
    chat_ReactionType: Array<Chat_ReactionType>;
    /** fetch aggregated fields from the table: "chat.ReactionType" */
    chat_ReactionType_aggregate: Chat_ReactionType_Aggregate;
    /** fetch data from the table: "chat.ReactionType" using primary key columns */
    chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
    /** fetch aggregated fields from the table: "chat.Reaction" */
    chat_Reaction_aggregate: Chat_Reaction_Aggregate;
    /** fetch data from the table: "chat.Reaction" using primary key columns */
    chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
    /** fetch data from the table: "chat.ReadUpToIndex" */
    chat_ReadUpToIndex: Array<Chat_ReadUpToIndex>;
    /** fetch aggregated fields from the table: "chat.ReadUpToIndex" */
    chat_ReadUpToIndex_aggregate: Chat_ReadUpToIndex_Aggregate;
    /** fetch data from the table: "chat.ReadUpToIndex" using primary key columns */
    chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
    /** fetch data from the table: "chat.Subscription" */
    chat_Subscription: Array<Chat_Subscription>;
    /** fetch aggregated fields from the table: "chat.Subscription" */
    chat_Subscription_aggregate: Chat_Subscription_Aggregate;
    /** fetch data from the table: "chat.Subscription" using primary key columns */
    chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
    /** fetch data from the table: "collection.Exhibition" */
    collection_Exhibition: Array<Collection_Exhibition>;
    /** fetch aggregated fields from the table: "collection.Exhibition" */
    collection_Exhibition_aggregate: Collection_Exhibition_Aggregate;
    /** fetch data from the table: "collection.Exhibition" using primary key columns */
    collection_Exhibition_by_pk?: Maybe<Collection_Exhibition>;
    /** fetch data from the table: "collection.ProgramPerson" */
    collection_ProgramPerson: Array<Collection_ProgramPerson>;
    /** fetch aggregated fields from the table: "collection.ProgramPerson" */
    collection_ProgramPerson_aggregate: Collection_ProgramPerson_Aggregate;
    /** fetch data from the table: "collection.ProgramPerson" using primary key columns */
    collection_ProgramPerson_by_pk?: Maybe<Collection_ProgramPerson>;
    /** fetch data from the table: "collection.Tag" */
    collection_Tag: Array<Collection_Tag>;
    /** fetch aggregated fields from the table: "collection.Tag" */
    collection_Tag_aggregate: Collection_Tag_Aggregate;
    /** fetch data from the table: "collection.Tag" using primary key columns */
    collection_Tag_by_pk?: Maybe<Collection_Tag>;
    /** execute function "collection.searchProgramPerson" which returns "collection.ProgramPerson" */
    collection_searchProgramPerson: Array<Collection_ProgramPerson>;
    /** execute function "collection.searchProgramPerson" and query aggregates on result of table type "collection.ProgramPerson" */
    collection_searchProgramPerson_aggregate: Collection_ProgramPerson_Aggregate;
    /** fetch data from the table: "conference.Conference" */
    conference_Conference: Array<Conference_Conference>;
    /** fetch aggregated fields from the table: "conference.Conference" */
    conference_Conference_aggregate: Conference_Conference_Aggregate;
    /** fetch data from the table: "conference.Conference" using primary key columns */
    conference_Conference_by_pk?: Maybe<Conference_Conference>;
    /** fetch data from the table: "conference.Configuration" */
    conference_Configuration: Array<Conference_Configuration>;
    /** fetch data from the table: "conference.ConfigurationKey" */
    conference_ConfigurationKey: Array<Conference_ConfigurationKey>;
    /** fetch aggregated fields from the table: "conference.ConfigurationKey" */
    conference_ConfigurationKey_aggregate: Conference_ConfigurationKey_Aggregate;
    /** fetch data from the table: "conference.ConfigurationKey" using primary key columns */
    conference_ConfigurationKey_by_pk?: Maybe<Conference_ConfigurationKey>;
    /** fetch aggregated fields from the table: "conference.Configuration" */
    conference_Configuration_aggregate: Conference_Configuration_Aggregate;
    /** fetch data from the table: "conference.Configuration" using primary key columns */
    conference_Configuration_by_pk?: Maybe<Conference_Configuration>;
    /** fetch data from the table: "conference.DemoCode" */
    conference_DemoCode: Array<Conference_DemoCode>;
    /** fetch aggregated fields from the table: "conference.DemoCode" */
    conference_DemoCode_aggregate: Conference_DemoCode_Aggregate;
    /** fetch data from the table: "conference.DemoCode" using primary key columns */
    conference_DemoCode_by_pk?: Maybe<Conference_DemoCode>;
    /** fetch data from the table: "conference.Quota" */
    conference_Quota: Array<Conference_Quota>;
    /** fetch aggregated fields from the table: "conference.Quota" */
    conference_Quota_aggregate: Conference_Quota_Aggregate;
    /** fetch data from the table: "conference.Quota" using primary key columns */
    conference_Quota_by_pk?: Maybe<Conference_Quota>;
    /** fetch data from the table: "conference.RemainingQuota" */
    conference_RemainingQuota: Array<Conference_RemainingQuota>;
    /** fetch aggregated fields from the table: "conference.RemainingQuota" */
    conference_RemainingQuota_aggregate: Conference_RemainingQuota_Aggregate;
    /** fetch data from the table: "conference.Subconference" */
    conference_Subconference: Array<Conference_Subconference>;
    /** fetch aggregated fields from the table: "conference.Subconference" */
    conference_Subconference_aggregate: Conference_Subconference_Aggregate;
    /** fetch data from the table: "conference.Subconference" using primary key columns */
    conference_Subconference_by_pk?: Maybe<Conference_Subconference>;
    /** fetch data from the table: "conference.Usage" */
    conference_Usage: Array<Conference_Usage>;
    /** fetch aggregated fields from the table: "conference.Usage" */
    conference_Usage_aggregate: Conference_Usage_Aggregate;
    /** fetch data from the table: "conference.Usage" using primary key columns */
    conference_Usage_by_pk?: Maybe<Conference_Usage>;
    /** fetch data from the table: "conference.VisibilityLevel" */
    conference_VisibilityLevel: Array<Conference_VisibilityLevel>;
    /** fetch aggregated fields from the table: "conference.VisibilityLevel" */
    conference_VisibilityLevel_aggregate: Conference_VisibilityLevel_Aggregate;
    /** fetch data from the table: "conference.VisibilityLevel" using primary key columns */
    conference_VisibilityLevel_by_pk?: Maybe<Conference_VisibilityLevel>;
    /** fetch data from the table: "content.Element" */
    content_Element: Array<Content_Element>;
    /** fetch data from the table: "content.ElementType" */
    content_ElementType: Array<Content_ElementType>;
    /** fetch aggregated fields from the table: "content.ElementType" */
    content_ElementType_aggregate: Content_ElementType_Aggregate;
    /** fetch data from the table: "content.ElementType" using primary key columns */
    content_ElementType_by_pk?: Maybe<Content_ElementType>;
    /** fetch aggregated fields from the table: "content.Element" */
    content_Element_aggregate: Content_Element_Aggregate;
    /** fetch data from the table: "content.Element" using primary key columns */
    content_Element_by_pk?: Maybe<Content_Element>;
    /** fetch data from the table: "content.Item" */
    content_Item: Array<Content_Item>;
    /** fetch data from the table: "content.ItemExhibition" */
    content_ItemExhibition: Array<Content_ItemExhibition>;
    /** fetch aggregated fields from the table: "content.ItemExhibition" */
    content_ItemExhibition_aggregate: Content_ItemExhibition_Aggregate;
    /** fetch data from the table: "content.ItemExhibition" using primary key columns */
    content_ItemExhibition_by_pk?: Maybe<Content_ItemExhibition>;
    /** fetch data from the table: "content.ItemProgramPerson" */
    content_ItemProgramPerson: Array<Content_ItemProgramPerson>;
    /** fetch aggregated fields from the table: "content.ItemProgramPerson" */
    content_ItemProgramPerson_aggregate: Content_ItemProgramPerson_Aggregate;
    /** fetch data from the table: "content.ItemProgramPerson" using primary key columns */
    content_ItemProgramPerson_by_pk?: Maybe<Content_ItemProgramPerson>;
    /** fetch data from the table: "content.ItemTag" */
    content_ItemTag: Array<Content_ItemTag>;
    /** fetch aggregated fields from the table: "content.ItemTag" */
    content_ItemTag_aggregate: Content_ItemTag_Aggregate;
    /** fetch data from the table: "content.ItemTag" using primary key columns */
    content_ItemTag_by_pk?: Maybe<Content_ItemTag>;
    /** fetch data from the table: "content.ItemType" */
    content_ItemType: Array<Content_ItemType>;
    /** fetch aggregated fields from the table: "content.ItemType" */
    content_ItemType_aggregate: Content_ItemType_Aggregate;
    /** fetch data from the table: "content.ItemType" using primary key columns */
    content_ItemType_by_pk?: Maybe<Content_ItemType>;
    /** fetch aggregated fields from the table: "content.Item" */
    content_Item_aggregate: Content_Item_Aggregate;
    /** fetch data from the table: "content.Item" using primary key columns */
    content_Item_by_pk?: Maybe<Content_Item>;
    /** execute function "content.searchItems" which returns "content.Item" */
    content_searchItems: Array<Content_Item>;
    /** execute function "content.searchItems" and query aggregates on result of table type "content.Item" */
    content_searchItems_aggregate: Content_Item_Aggregate;
    getSlug: GetSlugOutput;
    getUploadAgreement?: Maybe<GetUploadAgreementOutput>;
    /** fetch data from the table: "job_queues.ChannelStackCreateJob" */
    job_queues_ChannelStackCreateJob: Array<Job_Queues_ChannelStackCreateJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackCreateJob" */
    job_queues_ChannelStackCreateJob_aggregate: Job_Queues_ChannelStackCreateJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackCreateJob" using primary key columns */
    job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** fetch data from the table: "job_queues.ChannelStackDeleteJob" */
    job_queues_ChannelStackDeleteJob: Array<Job_Queues_ChannelStackDeleteJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackDeleteJob" */
    job_queues_ChannelStackDeleteJob_aggregate: Job_Queues_ChannelStackDeleteJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackDeleteJob" using primary key columns */
    job_queues_ChannelStackDeleteJob_by_pk?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** fetch data from the table: "job_queues.ChannelStackUpdateJob" */
    job_queues_ChannelStackUpdateJob: Array<Job_Queues_ChannelStackUpdateJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackUpdateJob" */
    job_queues_ChannelStackUpdateJob_aggregate: Job_Queues_ChannelStackUpdateJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackUpdateJob" using primary key columns */
    job_queues_ChannelStackUpdateJob_by_pk?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** fetch data from the table: "job_queues.CombineVideosJob" */
    job_queues_CombineVideosJob: Array<Job_Queues_CombineVideosJob>;
    /** fetch aggregated fields from the table: "job_queues.CombineVideosJob" */
    job_queues_CombineVideosJob_aggregate: Job_Queues_CombineVideosJob_Aggregate;
    /** fetch data from the table: "job_queues.CombineVideosJob" using primary key columns */
    job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
    /** fetch data from the table: "job_queues.CustomEmailJob" */
    job_queues_CustomEmailJob: Array<Job_Queues_CustomEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.CustomEmailJob" */
    job_queues_CustomEmailJob_aggregate: Job_Queues_CustomEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.CustomEmailJob" using primary key columns */
    job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
    /** fetch data from the table: "job_queues.ImportJob" */
    job_queues_ImportJob: Array<Job_Queues_ImportJob>;
    /** fetch data from the table: "job_queues.ImportJobOutput" */
    job_queues_ImportJobOutput: Array<Job_Queues_ImportJobOutput>;
    /** fetch aggregated fields from the table: "job_queues.ImportJobOutput" */
    job_queues_ImportJobOutput_aggregate: Job_Queues_ImportJobOutput_Aggregate;
    /** fetch data from the table: "job_queues.ImportJobOutput" using primary key columns */
    job_queues_ImportJobOutput_by_pk?: Maybe<Job_Queues_ImportJobOutput>;
    /** fetch aggregated fields from the table: "job_queues.ImportJob" */
    job_queues_ImportJob_aggregate: Job_Queues_ImportJob_Aggregate;
    /** fetch data from the table: "job_queues.ImportJob" using primary key columns */
    job_queues_ImportJob_by_pk?: Maybe<Job_Queues_ImportJob>;
    /** fetch data from the table: "job_queues.InvitationEmailJob" */
    job_queues_InvitationEmailJob: Array<Job_Queues_InvitationEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.InvitationEmailJob" */
    job_queues_InvitationEmailJob_aggregate: Job_Queues_InvitationEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.InvitationEmailJob" using primary key columns */
    job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
    /** fetch data from the table: "job_queues.JobStatus" */
    job_queues_JobStatus: Array<Job_Queues_JobStatus>;
    /** fetch aggregated fields from the table: "job_queues.JobStatus" */
    job_queues_JobStatus_aggregate: Job_Queues_JobStatus_Aggregate;
    /** fetch data from the table: "job_queues.JobStatus" using primary key columns */
    job_queues_JobStatus_by_pk?: Maybe<Job_Queues_JobStatus>;
    /** fetch data from the table: "job_queues.MediaPackageHarvestJob" */
    job_queues_MediaPackageHarvestJob: Array<Job_Queues_MediaPackageHarvestJob>;
    /** fetch aggregated fields from the table: "job_queues.MediaPackageHarvestJob" */
    job_queues_MediaPackageHarvestJob_aggregate: Job_Queues_MediaPackageHarvestJob_Aggregate;
    /** fetch data from the table: "job_queues.MediaPackageHarvestJob" using primary key columns */
    job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** fetch data from the table: "job_queues.PrepareJob" */
    job_queues_PrepareJob: Array<Job_Queues_PrepareJob>;
    /** fetch aggregated fields from the table: "job_queues.PrepareJob" */
    job_queues_PrepareJob_aggregate: Job_Queues_PrepareJob_Aggregate;
    /** fetch data from the table: "job_queues.PrepareJob" using primary key columns */
    job_queues_PrepareJob_by_pk?: Maybe<Job_Queues_PrepareJob>;
    /** fetch data from the table: "job_queues.PublishVideoJob" */
    job_queues_PublishVideoJob: Array<Job_Queues_PublishVideoJob>;
    /** fetch aggregated fields from the table: "job_queues.PublishVideoJob" */
    job_queues_PublishVideoJob_aggregate: Job_Queues_PublishVideoJob_Aggregate;
    /** fetch data from the table: "job_queues.PublishVideoJob" using primary key columns */
    job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
    /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" */
    job_queues_SubmissionRequestEmailJob: Array<Job_Queues_SubmissionRequestEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.SubmissionRequestEmailJob" */
    job_queues_SubmissionRequestEmailJob_aggregate: Job_Queues_SubmissionRequestEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" using primary key columns */
    job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" */
    job_queues_UploadYouTubeVideoJob: Array<Job_Queues_UploadYouTubeVideoJob>;
    /** fetch aggregated fields from the table: "job_queues.UploadYouTubeVideoJob" */
    job_queues_UploadYouTubeVideoJob_aggregate: Job_Queues_UploadYouTubeVideoJob_Aggregate;
    /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" using primary key columns */
    job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    presence_Summary?: Maybe<PresenceSummaryOutput>;
    /** fetch data from the table: "registrant.GoogleAccount" */
    registrant_GoogleAccount: Array<Registrant_GoogleAccount>;
    /** fetch aggregated fields from the table: "registrant.GoogleAccount" */
    registrant_GoogleAccount_aggregate: Registrant_GoogleAccount_Aggregate;
    /** fetch data from the table: "registrant.GoogleAccount" using primary key columns */
    registrant_GoogleAccount_by_pk?: Maybe<Registrant_GoogleAccount>;
    /** fetch data from the table: "registrant.Group" */
    registrant_Group: Array<Registrant_Group>;
    /** fetch data from the table: "registrant.GroupRegistrant" */
    registrant_GroupRegistrant: Array<Registrant_GroupRegistrant>;
    /** fetch aggregated fields from the table: "registrant.GroupRegistrant" */
    registrant_GroupRegistrant_aggregate: Registrant_GroupRegistrant_Aggregate;
    /** fetch data from the table: "registrant.GroupRegistrant" using primary key columns */
    registrant_GroupRegistrant_by_pk?: Maybe<Registrant_GroupRegistrant>;
    /** fetch aggregated fields from the table: "registrant.Group" */
    registrant_Group_aggregate: Registrant_Group_Aggregate;
    /** fetch data from the table: "registrant.Group" using primary key columns */
    registrant_Group_by_pk?: Maybe<Registrant_Group>;
    /** fetch data from the table: "registrant.Invitation" */
    registrant_Invitation: Array<Registrant_Invitation>;
    /** fetch aggregated fields from the table: "registrant.Invitation" */
    registrant_Invitation_aggregate: Registrant_Invitation_Aggregate;
    /** fetch data from the table: "registrant.Invitation" using primary key columns */
    registrant_Invitation_by_pk?: Maybe<Registrant_Invitation>;
    /** fetch data from the table: "registrant.Profile" */
    registrant_Profile: Array<Registrant_Profile>;
    /** fetch data from the table: "registrant.ProfileBadges" */
    registrant_ProfileBadges: Array<Registrant_ProfileBadges>;
    /** fetch aggregated fields from the table: "registrant.ProfileBadges" */
    registrant_ProfileBadges_aggregate: Registrant_ProfileBadges_Aggregate;
    /** fetch aggregated fields from the table: "registrant.Profile" */
    registrant_Profile_aggregate: Registrant_Profile_Aggregate;
    /** fetch data from the table: "registrant.Profile" using primary key columns */
    registrant_Profile_by_pk?: Maybe<Registrant_Profile>;
    /** fetch data from the table: "registrant.Registrant" */
    registrant_Registrant: Array<Registrant_Registrant>;
    /** fetch data from the table: "registrant.RegistrantRole" */
    registrant_RegistrantRole: Array<Registrant_RegistrantRole>;
    /** fetch aggregated fields from the table: "registrant.RegistrantRole" */
    registrant_RegistrantRole_aggregate: Registrant_RegistrantRole_Aggregate;
    /** fetch data from the table: "registrant.RegistrantRole" using primary key columns */
    registrant_RegistrantRole_by_pk?: Maybe<Registrant_RegistrantRole>;
    /** fetch aggregated fields from the table: "registrant.Registrant" */
    registrant_Registrant_aggregate: Registrant_Registrant_Aggregate;
    /** fetch data from the table: "registrant.Registrant" using primary key columns */
    registrant_Registrant_by_pk?: Maybe<Registrant_Registrant>;
    /** fetch data from the table: "registrant.SavedVonageRoomRecording" */
    registrant_SavedVonageRoomRecording: Array<Registrant_SavedVonageRoomRecording>;
    /** fetch aggregated fields from the table: "registrant.SavedVonageRoomRecording" */
    registrant_SavedVonageRoomRecording_aggregate: Registrant_SavedVonageRoomRecording_Aggregate;
    /** fetch data from the table: "registrant.SavedVonageRoomRecording" using primary key columns */
    registrant_SavedVonageRoomRecording_by_pk?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** fetch data from the table: "registrant.SubconferenceMembership" */
    registrant_SubconferenceMembership: Array<Registrant_SubconferenceMembership>;
    /** fetch aggregated fields from the table: "registrant.SubconferenceMembership" */
    registrant_SubconferenceMembership_aggregate: Registrant_SubconferenceMembership_Aggregate;
    /** fetch data from the table: "registrant.SubconferenceMembership" using primary key columns */
    registrant_SubconferenceMembership_by_pk?: Maybe<Registrant_SubconferenceMembership>;
    /** execute function "registrant.searchRegistrants" which returns "registrant.Registrant" */
    registrant_searchRegistrants: Array<Registrant_Registrant>;
    /** execute function "registrant.searchRegistrants" and query aggregates on result of table type "registrant.Registrant" */
    registrant_searchRegistrants_aggregate: Registrant_Registrant_Aggregate;
    /** fetch data from the table: "room.Backend" */
    room_Backend: Array<Room_Backend>;
    /** fetch aggregated fields from the table: "room.Backend" */
    room_Backend_aggregate: Room_Backend_Aggregate;
    /** fetch data from the table: "room.Backend" using primary key columns */
    room_Backend_by_pk?: Maybe<Room_Backend>;
    /** fetch data from the table: "room.ChimeMeeting" */
    room_ChimeMeeting: Array<Room_ChimeMeeting>;
    /** fetch aggregated fields from the table: "room.ChimeMeeting" */
    room_ChimeMeeting_aggregate: Room_ChimeMeeting_Aggregate;
    /** fetch data from the table: "room.ChimeMeeting" using primary key columns */
    room_ChimeMeeting_by_pk?: Maybe<Room_ChimeMeeting>;
    /** fetch data from the table: "room.LivestreamDurations" */
    room_LivestreamDurations: Array<Room_LivestreamDurations>;
    /** fetch aggregated fields from the table: "room.LivestreamDurations" */
    room_LivestreamDurations_aggregate: Room_LivestreamDurations_Aggregate;
    /** fetch data from the table: "room.ManagementMode" */
    room_ManagementMode: Array<Room_ManagementMode>;
    /** fetch aggregated fields from the table: "room.ManagementMode" */
    room_ManagementMode_aggregate: Room_ManagementMode_Aggregate;
    /** fetch data from the table: "room.ManagementMode" using primary key columns */
    room_ManagementMode_by_pk?: Maybe<Room_ManagementMode>;
    /** fetch data from the table: "room.PersonRole" */
    room_PersonRole: Array<Room_PersonRole>;
    /** fetch aggregated fields from the table: "room.PersonRole" */
    room_PersonRole_aggregate: Room_PersonRole_Aggregate;
    /** fetch data from the table: "room.PersonRole" using primary key columns */
    room_PersonRole_by_pk?: Maybe<Room_PersonRole>;
    /** fetch data from the table: "room.Room" */
    room_Room: Array<Room_Room>;
    /** fetch data from the table: "room.RoomGroupMembership" */
    room_RoomGroupMembership: Array<Room_RoomGroupMembership>;
    /** fetch aggregated fields from the table: "room.RoomGroupMembership" */
    room_RoomGroupMembership_aggregate: Room_RoomGroupMembership_Aggregate;
    /** fetch data from the table: "room.RoomGroupMembership" using primary key columns */
    room_RoomGroupMembership_by_pk?: Maybe<Room_RoomGroupMembership>;
    /** fetch data from the table: "room.RoomMembership" */
    room_RoomMembership: Array<Room_RoomMembership>;
    /** fetch aggregated fields from the table: "room.RoomMembership" */
    room_RoomMembership_aggregate: Room_RoomMembership_Aggregate;
    /** fetch data from the table: "room.RoomMembership" using primary key columns */
    room_RoomMembership_by_pk?: Maybe<Room_RoomMembership>;
    /** fetch aggregated fields from the table: "room.Room" */
    room_Room_aggregate: Room_Room_Aggregate;
    /** fetch data from the table: "room.Room" using primary key columns */
    room_Room_by_pk?: Maybe<Room_Room>;
    /** fetch data from the table: "room.ShuffleAlgorithm" */
    room_ShuffleAlgorithm: Array<Room_ShuffleAlgorithm>;
    /** fetch aggregated fields from the table: "room.ShuffleAlgorithm" */
    room_ShuffleAlgorithm_aggregate: Room_ShuffleAlgorithm_Aggregate;
    /** fetch data from the table: "room.ShuffleAlgorithm" using primary key columns */
    room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
    /** fetch data from the table: "room.ShufflePeriod" */
    room_ShufflePeriod: Array<Room_ShufflePeriod>;
    /** fetch aggregated fields from the table: "room.ShufflePeriod" */
    room_ShufflePeriod_aggregate: Room_ShufflePeriod_Aggregate;
    /** fetch data from the table: "room.ShufflePeriod" using primary key columns */
    room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
    /** fetch data from the table: "room.ShuffleQueueEntry" */
    room_ShuffleQueueEntry: Array<Room_ShuffleQueueEntry>;
    /** fetch aggregated fields from the table: "room.ShuffleQueueEntry" */
    room_ShuffleQueueEntry_aggregate: Room_ShuffleQueueEntry_Aggregate;
    /** fetch data from the table: "room.ShuffleQueueEntry" using primary key columns */
    room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
    /** fetch data from the table: "room.ShuffleRoom" */
    room_ShuffleRoom: Array<Room_ShuffleRoom>;
    /** fetch aggregated fields from the table: "room.ShuffleRoom" */
    room_ShuffleRoom_aggregate: Room_ShuffleRoom_Aggregate;
    /** fetch data from the table: "room.ShuffleRoom" using primary key columns */
    room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
    /** fetch data from the table: "schedule.Continuation" */
    schedule_Continuation: Array<Schedule_Continuation>;
    /** fetch aggregated fields from the table: "schedule.Continuation" */
    schedule_Continuation_aggregate: Schedule_Continuation_Aggregate;
    /** fetch data from the table: "schedule.Continuation" using primary key columns */
    schedule_Continuation_by_pk?: Maybe<Schedule_Continuation>;
    /** fetch data from the table: "schedule.CurrentEvents" */
    schedule_CurrentEvents: Array<Schedule_CurrentEvents>;
    /** fetch aggregated fields from the table: "schedule.CurrentEvents" */
    schedule_CurrentEvents_aggregate: Schedule_CurrentEvents_Aggregate;
    /** fetch data from the table: "schedule.Event" */
    schedule_Event: Array<Schedule_Event>;
    /** fetch data from the table: "schedule.EventProgramPerson" */
    schedule_EventProgramPerson: Array<Schedule_EventProgramPerson>;
    /** fetch data from the table: "schedule.EventProgramPersonRole" */
    schedule_EventProgramPersonRole: Array<Schedule_EventProgramPersonRole>;
    /** fetch aggregated fields from the table: "schedule.EventProgramPersonRole" */
    schedule_EventProgramPersonRole_aggregate: Schedule_EventProgramPersonRole_Aggregate;
    /** fetch data from the table: "schedule.EventProgramPersonRole" using primary key columns */
    schedule_EventProgramPersonRole_by_pk?: Maybe<Schedule_EventProgramPersonRole>;
    /** fetch aggregated fields from the table: "schedule.EventProgramPerson" */
    schedule_EventProgramPerson_aggregate: Schedule_EventProgramPerson_Aggregate;
    /** fetch data from the table: "schedule.EventProgramPerson" using primary key columns */
    schedule_EventProgramPerson_by_pk?: Maybe<Schedule_EventProgramPerson>;
    /** fetch aggregated fields from the table: "schedule.Event" */
    schedule_Event_aggregate: Schedule_Event_Aggregate;
    /** fetch data from the table: "schedule.Event" using primary key columns */
    schedule_Event_by_pk?: Maybe<Schedule_Event>;
    /** fetch data from the table: "schedule.Mode" */
    schedule_Mode: Array<Schedule_Mode>;
    /** fetch aggregated fields from the table: "schedule.Mode" */
    schedule_Mode_aggregate: Schedule_Mode_Aggregate;
    /** fetch data from the table: "schedule.Mode" using primary key columns */
    schedule_Mode_by_pk?: Maybe<Schedule_Mode>;
    /** fetch data from the table: "schedule.OverlappingEvents" */
    schedule_OverlappingEvents: Array<Schedule_OverlappingEvents>;
    /** fetch aggregated fields from the table: "schedule.OverlappingEvents" */
    schedule_OverlappingEvents_aggregate: Schedule_OverlappingEvents_Aggregate;
    /** fetch data from the table: "schedule.StarredEvent" */
    schedule_StarredEvent: Array<Schedule_StarredEvent>;
    /** fetch aggregated fields from the table: "schedule.StarredEvent" */
    schedule_StarredEvent_aggregate: Schedule_StarredEvent_Aggregate;
    /** fetch data from the table: "schedule.StarredEvent" using primary key columns */
    schedule_StarredEvent_by_pk?: Maybe<Schedule_StarredEvent>;
    /** execute function "schedule.searchEvents" which returns "schedule.Event" */
    schedule_searchEvents: Array<Schedule_Event>;
    /** execute function "schedule.searchEvents" and query aggregates on result of table type "schedule.Event" */
    schedule_searchEvents_aggregate: Schedule_Event_Aggregate;
    /** fetch data from the table: "sponsor.Tier" */
    sponsor_Tier: Array<Sponsor_Tier>;
    /** fetch data from the table: "sponsor.TierMember" */
    sponsor_TierMember: Array<Sponsor_TierMember>;
    /** fetch aggregated fields from the table: "sponsor.TierMember" */
    sponsor_TierMember_aggregate: Sponsor_TierMember_Aggregate;
    /** fetch data from the table: "sponsor.TierMember" using primary key columns */
    sponsor_TierMember_by_pk?: Maybe<Sponsor_TierMember>;
    /** fetch aggregated fields from the table: "sponsor.Tier" */
    sponsor_Tier_aggregate: Sponsor_Tier_Aggregate;
    /** fetch data from the table: "sponsor.Tier" using primary key columns */
    sponsor_Tier_by_pk?: Maybe<Sponsor_Tier>;
    /** fetch data from the table: "system.Configuration" */
    system_Configuration: Array<System_Configuration>;
    /** fetch data from the table: "system.ConfigurationKey" */
    system_ConfigurationKey: Array<System_ConfigurationKey>;
    /** fetch aggregated fields from the table: "system.ConfigurationKey" */
    system_ConfigurationKey_aggregate: System_ConfigurationKey_Aggregate;
    /** fetch data from the table: "system.ConfigurationKey" using primary key columns */
    system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
    /** fetch data from the table: "system.ConfigurationPermissionGrant" */
    system_ConfigurationPermissionGrant: Array<System_ConfigurationPermissionGrant>;
    /** fetch aggregated fields from the table: "system.ConfigurationPermissionGrant" */
    system_ConfigurationPermissionGrant_aggregate: System_ConfigurationPermissionGrant_Aggregate;
    /** fetch data from the table: "system.ConfigurationPermissionGrant" using primary key columns */
    system_ConfigurationPermissionGrant_by_pk?: Maybe<System_ConfigurationPermissionGrant>;
    /** fetch aggregated fields from the table: "system.Configuration" */
    system_Configuration_aggregate: System_Configuration_Aggregate;
    /** fetch data from the table: "system.Configuration" using primary key columns */
    system_Configuration_by_pk?: Maybe<System_Configuration>;
    /** fetch data from the table: "system.SuperUserPermission" */
    system_SuperUserPermission: Array<System_SuperUserPermission>;
    /** fetch data from the table: "system.SuperUserPermissionGrant" */
    system_SuperUserPermissionGrant: Array<System_SuperUserPermissionGrant>;
    /** fetch aggregated fields from the table: "system.SuperUserPermissionGrant" */
    system_SuperUserPermissionGrant_aggregate: System_SuperUserPermissionGrant_Aggregate;
    /** fetch data from the table: "system.SuperUserPermissionGrant" using primary key columns */
    system_SuperUserPermissionGrant_by_pk?: Maybe<System_SuperUserPermissionGrant>;
    /** fetch aggregated fields from the table: "system.SuperUserPermission" */
    system_SuperUserPermission_aggregate: System_SuperUserPermission_Aggregate;
    /** fetch data from the table: "system.SuperUserPermission" using primary key columns */
    system_SuperUserPermission_by_pk?: Maybe<System_SuperUserPermission>;
    /** fetch data from the table: "system.SuperUserState" */
    system_SuperUserState: Array<System_SuperUserState>;
    /** fetch aggregated fields from the table: "system.SuperUserState" */
    system_SuperUserState_aggregate: System_SuperUserState_Aggregate;
    transcribeGeneratePresignedUrl: TranscribeGeneratePresignedUrlOutput;
    vapidPublicKey: VapidPublicKeyOutput;
    /** fetch data from the table: "video.ChannelStack" */
    video_ChannelStack: Array<Video_ChannelStack>;
    /** fetch aggregated fields from the table: "video.ChannelStack" */
    video_ChannelStack_aggregate: Video_ChannelStack_Aggregate;
    /** fetch data from the table: "video.ChannelStack" using primary key columns */
    video_ChannelStack_by_pk?: Maybe<Video_ChannelStack>;
    /** fetch data from the table: "video.EventVonageSession" */
    video_EventVonageSession: Array<Video_EventVonageSession>;
    /** fetch aggregated fields from the table: "video.EventVonageSession" */
    video_EventVonageSession_aggregate: Video_EventVonageSession_Aggregate;
    /** fetch data from the table: "video.EventVonageSession" using primary key columns */
    video_EventVonageSession_by_pk?: Maybe<Video_EventVonageSession>;
    /** fetch data from the table: "video.ImmediateSwitch" */
    video_ImmediateSwitch: Array<Video_ImmediateSwitch>;
    /** fetch aggregated fields from the table: "video.ImmediateSwitch" */
    video_ImmediateSwitch_aggregate: Video_ImmediateSwitch_Aggregate;
    /** fetch data from the table: "video.ImmediateSwitch" using primary key columns */
    video_ImmediateSwitch_by_pk?: Maybe<Video_ImmediateSwitch>;
    /** fetch data from the table: "video.InputType" */
    video_InputType: Array<Video_InputType>;
    /** fetch aggregated fields from the table: "video.InputType" */
    video_InputType_aggregate: Video_InputType_Aggregate;
    /** fetch data from the table: "video.InputType" using primary key columns */
    video_InputType_by_pk?: Maybe<Video_InputType>;
    /** fetch data from the table: "video.MediaLiveChannelStatus" */
    video_MediaLiveChannelStatus: Array<Video_MediaLiveChannelStatus>;
    /** fetch aggregated fields from the table: "video.MediaLiveChannelStatus" */
    video_MediaLiveChannelStatus_aggregate: Video_MediaLiveChannelStatus_Aggregate;
    /** fetch data from the table: "video.MediaLiveChannelStatus" using primary key columns */
    video_MediaLiveChannelStatus_by_pk?: Maybe<Video_MediaLiveChannelStatus>;
    /** fetch data from the table: "video.RoomRtmpInput" */
    video_RoomRtmpInput: Array<Video_RoomRtmpInput>;
    /** fetch aggregated fields from the table: "video.RoomRtmpInput" */
    video_RoomRtmpInput_aggregate: Video_RoomRtmpInput_Aggregate;
    /** fetch data from the table: "video.RoomRtmpInput" using primary key columns */
    video_RoomRtmpInput_by_pk?: Maybe<Video_RoomRtmpInput>;
    /** fetch data from the table: "video.RoomRtmpOutput" */
    video_RoomRtmpOutput: Array<Video_RoomRtmpOutput>;
    /** fetch aggregated fields from the table: "video.RoomRtmpOutput" */
    video_RoomRtmpOutput_aggregate: Video_RoomRtmpOutput_Aggregate;
    /** fetch data from the table: "video.RoomRtmpOutput" using primary key columns */
    video_RoomRtmpOutput_by_pk?: Maybe<Video_RoomRtmpOutput>;
    /** fetch data from the table: "video.RtmpInput" */
    video_RtmpInput: Array<Video_RtmpInput>;
    /** fetch aggregated fields from the table: "video.RtmpInput" */
    video_RtmpInput_aggregate: Video_RtmpInput_Aggregate;
    /** fetch data from the table: "video.RtmpInput" using primary key columns */
    video_RtmpInput_by_pk?: Maybe<Video_RtmpInput>;
    /** fetch data from the table: "video.TranscriptionJob" */
    video_TranscriptionJob: Array<Video_TranscriptionJob>;
    /** fetch aggregated fields from the table: "video.TranscriptionJob" */
    video_TranscriptionJob_aggregate: Video_TranscriptionJob_Aggregate;
    /** fetch data from the table: "video.TranscriptionJob" using primary key columns */
    video_TranscriptionJob_by_pk?: Maybe<Video_TranscriptionJob>;
    /** fetch data from the table: "video.VideoRenderJob" */
    video_VideoRenderJob: Array<Video_VideoRenderJob>;
    /** fetch aggregated fields from the table: "video.VideoRenderJob" */
    video_VideoRenderJob_aggregate: Video_VideoRenderJob_Aggregate;
    /** fetch data from the table: "video.VideoRenderJob" using primary key columns */
    video_VideoRenderJob_by_pk?: Maybe<Video_VideoRenderJob>;
    /** fetch data from the table: "video.VonageParticipantStream" */
    video_VonageParticipantStream: Array<Video_VonageParticipantStream>;
    /** fetch aggregated fields from the table: "video.VonageParticipantStream" */
    video_VonageParticipantStream_aggregate: Video_VonageParticipantStream_Aggregate;
    /** fetch data from the table: "video.VonageParticipantStream" using primary key columns */
    video_VonageParticipantStream_by_pk?: Maybe<Video_VonageParticipantStream>;
    /** fetch data from the table: "video.VonageRoomRecording" */
    video_VonageRoomRecording: Array<Video_VonageRoomRecording>;
    /** fetch aggregated fields from the table: "video.VonageRoomRecording" */
    video_VonageRoomRecording_aggregate: Video_VonageRoomRecording_Aggregate;
    /** fetch data from the table: "video.VonageRoomRecording" using primary key columns */
    video_VonageRoomRecording_by_pk?: Maybe<Video_VonageRoomRecording>;
    /** fetch data from the table: "video.VonageSessionLayout" */
    video_VonageSessionLayout: Array<Video_VonageSessionLayout>;
    /** fetch aggregated fields from the table: "video.VonageSessionLayout" */
    video_VonageSessionLayout_aggregate: Video_VonageSessionLayout_Aggregate;
    /** fetch data from the table: "video.VonageSessionLayout" using primary key columns */
    video_VonageSessionLayout_by_pk?: Maybe<Video_VonageSessionLayout>;
    /** fetch data from the table: "video.VonageVideoPlaybackCommand" */
    video_VonageVideoPlaybackCommand: Array<Video_VonageVideoPlaybackCommand>;
    /** fetch aggregated fields from the table: "video.VonageVideoPlaybackCommand" */
    video_VonageVideoPlaybackCommand_aggregate: Video_VonageVideoPlaybackCommand_Aggregate;
    /** fetch data from the table: "video.VonageVideoPlaybackCommand" using primary key columns */
    video_VonageVideoPlaybackCommand_by_pk?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** fetch data from the table: "video.YouTubeUpload" */
    video_YouTubeUpload: Array<Video_YouTubeUpload>;
    /** fetch aggregated fields from the table: "video.YouTubeUpload" */
    video_YouTubeUpload_aggregate: Video_YouTubeUpload_Aggregate;
    /** fetch data from the table: "video.YouTubeUpload" using primary key columns */
    video_YouTubeUpload_by_pk?: Maybe<Video_YouTubeUpload>;
};

export type Query_RootEmailArgs = {
    distinct_on?: InputMaybe<Array<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

export type Query_RootEmail_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

export type Query_RootEmail_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootForeignKeyIntrospectionArgs = {
    distinct_on?: InputMaybe<Array<ForeignKeyIntrospection_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<ForeignKeyIntrospection_Order_By>>;
    where?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
};

export type Query_RootForeignKeyIntrospection_AggregateArgs = {
    distinct_on?: InputMaybe<Array<ForeignKeyIntrospection_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<ForeignKeyIntrospection_Order_By>>;
    where?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
};

export type Query_RootPushNotificationSubscriptionArgs = {
    distinct_on?: InputMaybe<Array<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

export type Query_RootPushNotificationSubscription_AggregateArgs = {
    distinct_on?: InputMaybe<Array<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

export type Query_RootPushNotificationSubscription_By_PkArgs = {
    endpoint: Scalars["String"];
};

export type Query_RootUserArgs = {
    distinct_on?: InputMaybe<Array<User_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<User_Order_By>>;
    where?: InputMaybe<User_Bool_Exp>;
};

export type Query_RootUser_AggregateArgs = {
    distinct_on?: InputMaybe<Array<User_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<User_Order_By>>;
    where?: InputMaybe<User_Bool_Exp>;
};

export type Query_RootUser_By_PkArgs = {
    id: Scalars["String"];
};

export type Query_RootAnalytics_AppStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_AppStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_AppStats_Order_By>>;
    where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

export type Query_RootAnalytics_AppStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_AppStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_AppStats_Order_By>>;
    where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

export type Query_RootAnalytics_AppStats_By_PkArgs = {
    id: Scalars["Int"];
};

export type Query_RootAnalytics_CompletedRegistrationsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_CompletedRegistrations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_CompletedRegistrations_Order_By>>;
    where?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
};

export type Query_RootAnalytics_CompletedRegistrations_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_CompletedRegistrations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_CompletedRegistrations_Order_By>>;
    where?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
};

export type Query_RootAnalytics_ContentElementStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

export type Query_RootAnalytics_ContentElementStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

export type Query_RootAnalytics_ContentElementStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootAnalytics_ContentItemStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

export type Query_RootAnalytics_ContentItemStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

export type Query_RootAnalytics_ContentItemStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootAnalytics_ElementTotalViewsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ElementTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ElementTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

export type Query_RootAnalytics_ElementTotalViews_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ElementTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ElementTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

export type Query_RootAnalytics_ElementTotalViews_By_PkArgs = {
    elementId: Scalars["uuid"];
};

export type Query_RootAnalytics_ItemTotalViewsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ItemTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ItemTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

export type Query_RootAnalytics_ItemTotalViews_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ItemTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ItemTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

export type Query_RootAnalytics_ItemTotalViews_By_PkArgs = {
    itemId: Scalars["uuid"];
};

export type Query_RootAnalytics_RoomPresenceArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

export type Query_RootAnalytics_RoomPresence_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

export type Query_RootAnalytics_RoomPresence_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootAnalytics_RoomStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

export type Query_RootAnalytics_RoomStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

export type Query_RootAnalytics_RoomStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootChat_ChatArgs = {
    distinct_on?: InputMaybe<Array<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

export type Query_RootChat_Chat_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

export type Query_RootChat_Chat_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootChat_FlagArgs = {
    distinct_on?: InputMaybe<Array<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

export type Query_RootChat_FlagTypeArgs = {
    distinct_on?: InputMaybe<Array<Chat_FlagType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_FlagType_Order_By>>;
    where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

export type Query_RootChat_FlagType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_FlagType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_FlagType_Order_By>>;
    where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

export type Query_RootChat_FlagType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootChat_Flag_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

export type Query_RootChat_Flag_By_PkArgs = {
    id: Scalars["Int"];
};

export type Query_RootChat_MessageArgs = {
    distinct_on?: InputMaybe<Array<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

export type Query_RootChat_MessageTypeArgs = {
    distinct_on?: InputMaybe<Array<Chat_MessageType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_MessageType_Order_By>>;
    where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

export type Query_RootChat_MessageType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_MessageType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_MessageType_Order_By>>;
    where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

export type Query_RootChat_MessageType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootChat_Message_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

export type Query_RootChat_Message_By_PkArgs = {
    id: Scalars["Int"];
};

export type Query_RootChat_PinArgs = {
    distinct_on?: InputMaybe<Array<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

export type Query_RootChat_Pin_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

export type Query_RootChat_Pin_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Query_RootChat_ReactionArgs = {
    distinct_on?: InputMaybe<Array<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

export type Query_RootChat_ReactionTypeArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReactionType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReactionType_Order_By>>;
    where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

export type Query_RootChat_ReactionType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReactionType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReactionType_Order_By>>;
    where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

export type Query_RootChat_ReactionType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootChat_Reaction_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

export type Query_RootChat_Reaction_By_PkArgs = {
    sId: Scalars["uuid"];
};

export type Query_RootChat_ReadUpToIndexArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

export type Query_RootChat_ReadUpToIndex_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

export type Query_RootChat_ReadUpToIndex_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Query_RootChat_SubscriptionArgs = {
    distinct_on?: InputMaybe<Array<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

export type Query_RootChat_Subscription_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

export type Query_RootChat_Subscription_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Query_RootCollection_ExhibitionArgs = {
    distinct_on?: InputMaybe<Array<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

export type Query_RootCollection_Exhibition_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

export type Query_RootCollection_Exhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootCollection_ProgramPersonArgs = {
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Query_RootCollection_ProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Query_RootCollection_ProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootCollection_TagArgs = {
    distinct_on?: InputMaybe<Array<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

export type Query_RootCollection_Tag_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

export type Query_RootCollection_Tag_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootCollection_SearchProgramPersonArgs = {
    args: Collection_SearchProgramPerson_Args;
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Query_RootCollection_SearchProgramPerson_AggregateArgs = {
    args: Collection_SearchProgramPerson_Args;
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Query_RootConference_ConferenceArgs = {
    distinct_on?: InputMaybe<Array<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

export type Query_RootConference_Conference_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

export type Query_RootConference_Conference_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_ConfigurationArgs = {
    distinct_on?: InputMaybe<Array<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

export type Query_RootConference_ConfigurationKeyArgs = {
    distinct_on?: InputMaybe<Array<Conference_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_ConfigurationKey_Order_By>>;
    where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

export type Query_RootConference_ConfigurationKey_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_ConfigurationKey_Order_By>>;
    where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

export type Query_RootConference_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootConference_Configuration_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

export type Query_RootConference_Configuration_By_PkArgs = {
    conferenceId: Scalars["uuid"];
    key: Conference_ConfigurationKey_Enum;
};

export type Query_RootConference_DemoCodeArgs = {
    distinct_on?: InputMaybe<Array<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

export type Query_RootConference_DemoCode_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

export type Query_RootConference_DemoCode_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_QuotaArgs = {
    distinct_on?: InputMaybe<Array<Conference_Quota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Quota_Order_By>>;
    where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

export type Query_RootConference_Quota_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Quota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Quota_Order_By>>;
    where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

export type Query_RootConference_Quota_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_RemainingQuotaArgs = {
    distinct_on?: InputMaybe<Array<Conference_RemainingQuota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_RemainingQuota_Order_By>>;
    where?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
};

export type Query_RootConference_RemainingQuota_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_RemainingQuota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_RemainingQuota_Order_By>>;
    where?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
};

export type Query_RootConference_SubconferenceArgs = {
    distinct_on?: InputMaybe<Array<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

export type Query_RootConference_Subconference_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

export type Query_RootConference_Subconference_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_UsageArgs = {
    distinct_on?: InputMaybe<Array<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

export type Query_RootConference_Usage_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

export type Query_RootConference_Usage_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_VisibilityLevelArgs = {
    distinct_on?: InputMaybe<Array<Conference_VisibilityLevel_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_VisibilityLevel_Order_By>>;
    where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

export type Query_RootConference_VisibilityLevel_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_VisibilityLevel_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_VisibilityLevel_Order_By>>;
    where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

export type Query_RootConference_VisibilityLevel_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootContent_ElementArgs = {
    distinct_on?: InputMaybe<Array<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

export type Query_RootContent_ElementTypeArgs = {
    distinct_on?: InputMaybe<Array<Content_ElementType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ElementType_Order_By>>;
    where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

export type Query_RootContent_ElementType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ElementType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ElementType_Order_By>>;
    where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

export type Query_RootContent_ElementType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootContent_Element_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

export type Query_RootContent_Element_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_ItemArgs = {
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Query_RootContent_ItemExhibitionArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

export type Query_RootContent_ItemExhibition_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

export type Query_RootContent_ItemExhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_ItemProgramPersonArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

export type Query_RootContent_ItemProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

export type Query_RootContent_ItemProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_ItemTagArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

export type Query_RootContent_ItemTag_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

export type Query_RootContent_ItemTag_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_ItemTypeArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemType_Order_By>>;
    where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

export type Query_RootContent_ItemType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemType_Order_By>>;
    where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

export type Query_RootContent_ItemType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootContent_Item_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Query_RootContent_Item_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_SearchItemsArgs = {
    args: Content_SearchItems_Args;
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Query_RootContent_SearchItems_AggregateArgs = {
    args: Content_SearchItems_Args;
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Query_RootGetSlugArgs = {
    url: Scalars["String"];
};

export type Query_RootJob_Queues_ChannelStackCreateJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackCreateJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackCreateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_ChannelStackDeleteJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackDeleteJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackDeleteJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_ChannelStackUpdateJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackUpdateJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackUpdateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_CombineVideosJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_CombineVideosJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

export type Query_RootJob_Queues_CombineVideosJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_CombineVideosJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

export type Query_RootJob_Queues_CombineVideosJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_CustomEmailJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_CustomEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_CustomEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_CustomEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_CustomEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_ImportJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ImportJobOutputArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

export type Query_RootJob_Queues_ImportJobOutput_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

export type Query_RootJob_Queues_ImportJobOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_ImportJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ImportJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_InvitationEmailJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_InvitationEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_InvitationEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_JobStatusArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_JobStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_JobStatus_Order_By>>;
    where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

export type Query_RootJob_Queues_JobStatus_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_JobStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_JobStatus_Order_By>>;
    where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

export type Query_RootJob_Queues_JobStatus_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootJob_Queues_MediaPackageHarvestJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Order_By>>;
    where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

export type Query_RootJob_Queues_MediaPackageHarvestJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Order_By>>;
    where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

export type Query_RootJob_Queues_MediaPackageHarvestJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_PrepareJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_PrepareJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_PrepareJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

export type Query_RootJob_Queues_PrepareJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_PrepareJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_PrepareJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

export type Query_RootJob_Queues_PrepareJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_PublishVideoJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_PublishVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

export type Query_RootJob_Queues_PublishVideoJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_PublishVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

export type Query_RootJob_Queues_PublishVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_SubmissionRequestEmailJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_SubmissionRequestEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_SubmissionRequestEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_UploadYouTubeVideoJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

export type Query_RootJob_Queues_UploadYouTubeVideoJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

export type Query_RootJob_Queues_UploadYouTubeVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_GoogleAccountArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GoogleAccount_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GoogleAccount_Order_By>>;
    where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

export type Query_RootRegistrant_GoogleAccount_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GoogleAccount_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GoogleAccount_Order_By>>;
    where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

export type Query_RootRegistrant_GoogleAccount_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_GroupArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Group_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Group_Order_By>>;
    where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

export type Query_RootRegistrant_GroupRegistrantArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

export type Query_RootRegistrant_GroupRegistrant_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

export type Query_RootRegistrant_GroupRegistrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_Group_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Group_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Group_Order_By>>;
    where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

export type Query_RootRegistrant_Group_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_InvitationArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

export type Query_RootRegistrant_Invitation_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

export type Query_RootRegistrant_Invitation_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_ProfileArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Profile_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Profile_Order_By>>;
    where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

export type Query_RootRegistrant_ProfileBadgesArgs = {
    distinct_on?: InputMaybe<Array<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

export type Query_RootRegistrant_ProfileBadges_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

export type Query_RootRegistrant_Profile_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Profile_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Profile_Order_By>>;
    where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

export type Query_RootRegistrant_Profile_By_PkArgs = {
    registrantId: Scalars["uuid"];
};

export type Query_RootRegistrant_RegistrantArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Query_RootRegistrant_RegistrantRoleArgs = {
    distinct_on?: InputMaybe<Array<Registrant_RegistrantRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_RegistrantRole_Order_By>>;
    where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

export type Query_RootRegistrant_RegistrantRole_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_RegistrantRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_RegistrantRole_Order_By>>;
    where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

export type Query_RootRegistrant_RegistrantRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRegistrant_Registrant_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Query_RootRegistrant_Registrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_SavedVonageRoomRecordingArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

export type Query_RootRegistrant_SavedVonageRoomRecording_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

export type Query_RootRegistrant_SavedVonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_SubconferenceMembershipArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

export type Query_RootRegistrant_SubconferenceMembership_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

export type Query_RootRegistrant_SubconferenceMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_SearchRegistrantsArgs = {
    args: Registrant_SearchRegistrants_Args;
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Query_RootRegistrant_SearchRegistrants_AggregateArgs = {
    args: Registrant_SearchRegistrants_Args;
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Query_RootRoom_BackendArgs = {
    distinct_on?: InputMaybe<Array<Room_Backend_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Backend_Order_By>>;
    where?: InputMaybe<Room_Backend_Bool_Exp>;
};

export type Query_RootRoom_Backend_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_Backend_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Backend_Order_By>>;
    where?: InputMaybe<Room_Backend_Bool_Exp>;
};

export type Query_RootRoom_Backend_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRoom_ChimeMeetingArgs = {
    distinct_on?: InputMaybe<Array<Room_ChimeMeeting_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ChimeMeeting_Order_By>>;
    where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

export type Query_RootRoom_ChimeMeeting_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ChimeMeeting_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ChimeMeeting_Order_By>>;
    where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

export type Query_RootRoom_ChimeMeeting_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_LivestreamDurationsArgs = {
    distinct_on?: InputMaybe<Array<Room_LivestreamDurations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_LivestreamDurations_Order_By>>;
    where?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
};

export type Query_RootRoom_LivestreamDurations_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_LivestreamDurations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_LivestreamDurations_Order_By>>;
    where?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
};

export type Query_RootRoom_ManagementModeArgs = {
    distinct_on?: InputMaybe<Array<Room_ManagementMode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ManagementMode_Order_By>>;
    where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

export type Query_RootRoom_ManagementMode_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ManagementMode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ManagementMode_Order_By>>;
    where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

export type Query_RootRoom_ManagementMode_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRoom_PersonRoleArgs = {
    distinct_on?: InputMaybe<Array<Room_PersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_PersonRole_Order_By>>;
    where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

export type Query_RootRoom_PersonRole_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_PersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_PersonRole_Order_By>>;
    where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

export type Query_RootRoom_PersonRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRoom_RoomArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

export type Query_RootRoom_RoomGroupMembershipArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomGroupMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomGroupMembership_Order_By>>;
    where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

export type Query_RootRoom_RoomGroupMembership_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomGroupMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomGroupMembership_Order_By>>;
    where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

export type Query_RootRoom_RoomGroupMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_RoomMembershipArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

export type Query_RootRoom_RoomMembership_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

export type Query_RootRoom_RoomMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_Room_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

export type Query_RootRoom_Room_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_ShuffleAlgorithmArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleAlgorithm_Order_By>>;
    where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

export type Query_RootRoom_ShuffleAlgorithm_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleAlgorithm_Order_By>>;
    where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

export type Query_RootRoom_ShuffleAlgorithm_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRoom_ShufflePeriodArgs = {
    distinct_on?: InputMaybe<Array<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

export type Query_RootRoom_ShufflePeriod_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

export type Query_RootRoom_ShufflePeriod_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_ShuffleQueueEntryArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

export type Query_RootRoom_ShuffleQueueEntry_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

export type Query_RootRoom_ShuffleQueueEntry_By_PkArgs = {
    id: Scalars["bigint"];
};

export type Query_RootRoom_ShuffleRoomArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

export type Query_RootRoom_ShuffleRoom_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

export type Query_RootRoom_ShuffleRoom_By_PkArgs = {
    id: Scalars["bigint"];
};

export type Query_RootSchedule_ContinuationArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

export type Query_RootSchedule_Continuation_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

export type Query_RootSchedule_Continuation_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSchedule_CurrentEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

export type Query_RootSchedule_CurrentEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

export type Query_RootSchedule_EventArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPersonArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPersonRoleArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPersonRole_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPersonRole_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPersonRole_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPersonRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootSchedule_EventProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSchedule_Event_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Query_RootSchedule_Event_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSchedule_ModeArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Mode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Mode_Order_By>>;
    where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

export type Query_RootSchedule_Mode_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Mode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Mode_Order_By>>;
    where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

export type Query_RootSchedule_Mode_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootSchedule_OverlappingEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_OverlappingEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_OverlappingEvents_Order_By>>;
    where?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
};

export type Query_RootSchedule_OverlappingEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_OverlappingEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_OverlappingEvents_Order_By>>;
    where?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
};

export type Query_RootSchedule_StarredEventArgs = {
    distinct_on?: InputMaybe<Array<Schedule_StarredEvent_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_StarredEvent_Order_By>>;
    where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

export type Query_RootSchedule_StarredEvent_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_StarredEvent_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_StarredEvent_Order_By>>;
    where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

export type Query_RootSchedule_StarredEvent_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSchedule_SearchEventsArgs = {
    args: Schedule_SearchEvents_Args;
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Query_RootSchedule_SearchEvents_AggregateArgs = {
    args: Schedule_SearchEvents_Args;
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Query_RootSponsor_TierArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

export type Query_RootSponsor_TierMemberArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

export type Query_RootSponsor_TierMember_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

export type Query_RootSponsor_TierMember_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSponsor_Tier_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

export type Query_RootSponsor_Tier_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSystem_ConfigurationArgs = {
    distinct_on?: InputMaybe<Array<System_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_Configuration_Order_By>>;
    where?: InputMaybe<System_Configuration_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationKeyArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationKey_Order_By>>;
    where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationKey_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationKey_Order_By>>;
    where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootSystem_ConfigurationPermissionGrantArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationPermissionGrant_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSystem_Configuration_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_Configuration_Order_By>>;
    where?: InputMaybe<System_Configuration_Bool_Exp>;
};

export type Query_RootSystem_Configuration_By_PkArgs = {
    key: System_ConfigurationKey_Enum;
};

export type Query_RootSystem_SuperUserPermissionArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermission_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermission_Order_By>>;
    where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

export type Query_RootSystem_SuperUserPermissionGrantArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

export type Query_RootSystem_SuperUserPermissionGrant_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

export type Query_RootSystem_SuperUserPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSystem_SuperUserPermission_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermission_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermission_Order_By>>;
    where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

export type Query_RootSystem_SuperUserPermission_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootSystem_SuperUserStateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserState_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserState_Order_By>>;
    where?: InputMaybe<System_SuperUserState_Bool_Exp>;
};

export type Query_RootSystem_SuperUserState_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserState_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserState_Order_By>>;
    where?: InputMaybe<System_SuperUserState_Bool_Exp>;
};

export type Query_RootTranscribeGeneratePresignedUrlArgs = {
    languageCode: Scalars["String"];
    sampleRate: Scalars["String"];
};

export type Query_RootVideo_ChannelStackArgs = {
    distinct_on?: InputMaybe<Array<Video_ChannelStack_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_ChannelStack_Order_By>>;
    where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

export type Query_RootVideo_ChannelStack_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_ChannelStack_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_ChannelStack_Order_By>>;
    where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

export type Query_RootVideo_ChannelStack_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_EventVonageSessionArgs = {
    distinct_on?: InputMaybe<Array<Video_EventVonageSession_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_EventVonageSession_Order_By>>;
    where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

export type Query_RootVideo_EventVonageSession_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_EventVonageSession_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_EventVonageSession_Order_By>>;
    where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

export type Query_RootVideo_EventVonageSession_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_ImmediateSwitchArgs = {
    distinct_on?: InputMaybe<Array<Video_ImmediateSwitch_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_ImmediateSwitch_Order_By>>;
    where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

export type Query_RootVideo_ImmediateSwitch_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_ImmediateSwitch_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_ImmediateSwitch_Order_By>>;
    where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

export type Query_RootVideo_ImmediateSwitch_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_InputTypeArgs = {
    distinct_on?: InputMaybe<Array<Video_InputType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_InputType_Order_By>>;
    where?: InputMaybe<Video_InputType_Bool_Exp>;
};

export type Query_RootVideo_InputType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_InputType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_InputType_Order_By>>;
    where?: InputMaybe<Video_InputType_Bool_Exp>;
};

export type Query_RootVideo_InputType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootVideo_MediaLiveChannelStatusArgs = {
    distinct_on?: InputMaybe<Array<Video_MediaLiveChannelStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_MediaLiveChannelStatus_Order_By>>;
    where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

export type Query_RootVideo_MediaLiveChannelStatus_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_MediaLiveChannelStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_MediaLiveChannelStatus_Order_By>>;
    where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

export type Query_RootVideo_MediaLiveChannelStatus_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_RoomRtmpInputArgs = {
    distinct_on?: InputMaybe<Array<Video_RoomRtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RoomRtmpInput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

export type Query_RootVideo_RoomRtmpInput_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_RoomRtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RoomRtmpInput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

export type Query_RootVideo_RoomRtmpInput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_RoomRtmpOutputArgs = {
    distinct_on?: InputMaybe<Array<Video_RoomRtmpOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RoomRtmpOutput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

export type Query_RootVideo_RoomRtmpOutput_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_RoomRtmpOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RoomRtmpOutput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

export type Query_RootVideo_RoomRtmpOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_RtmpInputArgs = {
    distinct_on?: InputMaybe<Array<Video_RtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RtmpInput_Order_By>>;
    where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

export type Query_RootVideo_RtmpInput_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_RtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RtmpInput_Order_By>>;
    where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

export type Query_RootVideo_RtmpInput_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootVideo_TranscriptionJobArgs = {
    distinct_on?: InputMaybe<Array<Video_TranscriptionJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_TranscriptionJob_Order_By>>;
    where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

export type Query_RootVideo_TranscriptionJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_TranscriptionJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_TranscriptionJob_Order_By>>;
    where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

export type Query_RootVideo_TranscriptionJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VideoRenderJobArgs = {
    distinct_on?: InputMaybe<Array<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

export type Query_RootVideo_VideoRenderJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

export type Query_RootVideo_VideoRenderJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VonageParticipantStreamArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

export type Query_RootVideo_VonageParticipantStream_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

export type Query_RootVideo_VonageParticipantStream_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VonageRoomRecordingArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

export type Query_RootVideo_VonageRoomRecording_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

export type Query_RootVideo_VonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VonageSessionLayoutArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

export type Query_RootVideo_VonageSessionLayout_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

export type Query_RootVideo_VonageSessionLayout_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VonageVideoPlaybackCommandArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Order_By>>;
    where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

export type Query_RootVideo_VonageVideoPlaybackCommand_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Order_By>>;
    where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

export type Query_RootVideo_VonageVideoPlaybackCommand_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_YouTubeUploadArgs = {
    distinct_on?: InputMaybe<Array<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

export type Query_RootVideo_YouTubeUpload_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

export type Query_RootVideo_YouTubeUpload_By_PkArgs = {
    id: Scalars["uuid"];
};

/** columns and relationships of "registrant.GoogleAccount" */
export type Registrant_GoogleAccount = {
    __typename?: "registrant_GoogleAccount";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    googleAccountEmail: Scalars["String"];
    id: Scalars["uuid"];
    isDeleted: Scalars["Boolean"];
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    tokenData: Scalars["jsonb"];
    updatedAt: Scalars["timestamptz"];
    youTubeData?: Maybe<Scalars["jsonb"]>;
};

/** columns and relationships of "registrant.GoogleAccount" */
export type Registrant_GoogleAccountTokenDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.GoogleAccount" */
export type Registrant_GoogleAccountYouTubeDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Aggregate = {
    __typename?: "registrant_GoogleAccount_aggregate";
    aggregate?: Maybe<Registrant_GoogleAccount_Aggregate_Fields>;
    nodes: Array<Registrant_GoogleAccount>;
};

/** aggregate fields of "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Aggregate_Fields = {
    __typename?: "registrant_GoogleAccount_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Registrant_GoogleAccount_Max_Fields>;
    min?: Maybe<Registrant_GoogleAccount_Min_Fields>;
};

/** aggregate fields of "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_GoogleAccount_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Registrant_GoogleAccount_Append_Input = {
    tokenData?: InputMaybe<Scalars["jsonb"]>;
    youTubeData?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "registrant.GoogleAccount". All fields are combined with a logical 'AND'. */
export type Registrant_GoogleAccount_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_GoogleAccount_Bool_Exp>>;
    _not?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_GoogleAccount_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    googleAccountEmail?: InputMaybe<String_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    isDeleted?: InputMaybe<Boolean_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    tokenData?: InputMaybe<Jsonb_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    youTubeData?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.GoogleAccount" */
export enum Registrant_GoogleAccount_Constraint {
    /** unique or primary key constraint */
    GoogleAccountPkey = "GoogleAccount_pkey",
    /** unique or primary key constraint */
    GoogleAccountRegistrantIdGoogleAccountEmailKey = "GoogleAccount_registrantId_googleAccountEmail_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Registrant_GoogleAccount_Delete_At_Path_Input = {
    tokenData?: InputMaybe<Array<Scalars["String"]>>;
    youTubeData?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Registrant_GoogleAccount_Delete_Elem_Input = {
    tokenData?: InputMaybe<Scalars["Int"]>;
    youTubeData?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Registrant_GoogleAccount_Delete_Key_Input = {
    tokenData?: InputMaybe<Scalars["String"]>;
    youTubeData?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    googleAccountEmail?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isDeleted?: InputMaybe<Scalars["Boolean"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    tokenData?: InputMaybe<Scalars["jsonb"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    youTubeData?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type Registrant_GoogleAccount_Max_Fields = {
    __typename?: "registrant_GoogleAccount_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    googleAccountEmail?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Registrant_GoogleAccount_Min_Fields = {
    __typename?: "registrant_GoogleAccount_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    googleAccountEmail?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Mutation_Response = {
    __typename?: "registrant_GoogleAccount_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Registrant_GoogleAccount>;
};

/** input type for inserting object relation for remote table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Obj_Rel_Insert_Input = {
    data: Registrant_GoogleAccount_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_GoogleAccount_On_Conflict>;
};

/** on_conflict condition type for table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_On_Conflict = {
    constraint: Registrant_GoogleAccount_Constraint;
    update_columns?: Array<Registrant_GoogleAccount_Update_Column>;
    where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.GoogleAccount". */
export type Registrant_GoogleAccount_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    googleAccountEmail?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    isDeleted?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    tokenData?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    youTubeData?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_GoogleAccount */
export type Registrant_GoogleAccount_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Registrant_GoogleAccount_Prepend_Input = {
    tokenData?: InputMaybe<Scalars["jsonb"]>;
    youTubeData?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "registrant.GoogleAccount" */
export enum Registrant_GoogleAccount_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    GoogleAccountEmail = "googleAccountEmail",
    /** column name */
    Id = "id",
    /** column name */
    IsDeleted = "isDeleted",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    TokenData = "tokenData",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    YouTubeData = "youTubeData",
}

/** input type for updating data in table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    googleAccountEmail?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isDeleted?: InputMaybe<Scalars["Boolean"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    tokenData?: InputMaybe<Scalars["jsonb"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    youTubeData?: InputMaybe<Scalars["jsonb"]>;
};

/** update columns of table "registrant.GoogleAccount" */
export enum Registrant_GoogleAccount_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    GoogleAccountEmail = "googleAccountEmail",
    /** column name */
    Id = "id",
    /** column name */
    IsDeleted = "isDeleted",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    TokenData = "tokenData",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    YouTubeData = "youTubeData",
}

/** columns and relationships of "registrant.Group" */
export type Registrant_Group = {
    __typename?: "registrant_Group";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    /** An array relationship */
    groupRegistrants: Array<Registrant_GroupRegistrant>;
    /** An aggregate relationship */
    groupRegistrants_aggregate: Registrant_GroupRegistrant_Aggregate;
    id: Scalars["uuid"];
    name: Scalars["String"];
    /** An object relationship */
    subconference?: Maybe<Conference_Subconference>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "registrant.Group" */
export type Registrant_GroupGroupRegistrantsArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** columns and relationships of "registrant.Group" */
export type Registrant_GroupGroupRegistrants_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** columns and relationships of "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant = {
    __typename?: "registrant_GroupRegistrant";
    createdAt: Scalars["timestamptz"];
    /** An object relationship */
    group: Registrant_Group;
    groupId: Scalars["uuid"];
    id: Scalars["uuid"];
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    updatedAt: Scalars["timestamptz"];
};

/** aggregated selection of "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Aggregate = {
    __typename?: "registrant_GroupRegistrant_aggregate";
    aggregate?: Maybe<Registrant_GroupRegistrant_Aggregate_Fields>;
    nodes: Array<Registrant_GroupRegistrant>;
};

/** aggregate fields of "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Aggregate_Fields = {
    __typename?: "registrant_GroupRegistrant_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Registrant_GroupRegistrant_Max_Fields>;
    min?: Maybe<Registrant_GroupRegistrant_Min_Fields>;
};

/** aggregate fields of "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_GroupRegistrant_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Registrant_GroupRegistrant_Max_Order_By>;
    min?: InputMaybe<Registrant_GroupRegistrant_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Arr_Rel_Insert_Input = {
    data: Array<Registrant_GroupRegistrant_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_GroupRegistrant_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.GroupRegistrant". All fields are combined with a logical 'AND'. */
export type Registrant_GroupRegistrant_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_GroupRegistrant_Bool_Exp>>;
    _not?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_GroupRegistrant_Bool_Exp>>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    group?: InputMaybe<Registrant_Group_Bool_Exp>;
    groupId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.GroupRegistrant" */
export enum Registrant_GroupRegistrant_Constraint {
    /** unique or primary key constraint */
    GroupRegistrantGroupIdRegistrantIdKey = "GroupRegistrant_groupId_registrantId_key",
    /** unique or primary key constraint */
    GroupRegistrantPkey = "GroupRegistrant_pkey",
}

/** input type for inserting data into table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Insert_Input = {
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    group?: InputMaybe<Registrant_Group_Obj_Rel_Insert_Input>;
    groupId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Registrant_GroupRegistrant_Max_Fields = {
    __typename?: "registrant_GroupRegistrant_max_fields";
    createdAt?: Maybe<Scalars["timestamptz"]>;
    groupId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Max_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    groupId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_GroupRegistrant_Min_Fields = {
    __typename?: "registrant_GroupRegistrant_min_fields";
    createdAt?: Maybe<Scalars["timestamptz"]>;
    groupId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Min_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    groupId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Mutation_Response = {
    __typename?: "registrant_GroupRegistrant_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Registrant_GroupRegistrant>;
};

/** on_conflict condition type for table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_On_Conflict = {
    constraint: Registrant_GroupRegistrant_Constraint;
    update_columns?: Array<Registrant_GroupRegistrant_Update_Column>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.GroupRegistrant". */
export type Registrant_GroupRegistrant_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    group?: InputMaybe<Registrant_Group_Order_By>;
    groupId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_GroupRegistrant */
export type Registrant_GroupRegistrant_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "registrant.GroupRegistrant" */
export enum Registrant_GroupRegistrant_Select_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    GroupId = "groupId",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Set_Input = {
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    groupId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.GroupRegistrant" */
export enum Registrant_GroupRegistrant_Update_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    GroupId = "groupId",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** aggregated selection of "registrant.Group" */
export type Registrant_Group_Aggregate = {
    __typename?: "registrant_Group_aggregate";
    aggregate?: Maybe<Registrant_Group_Aggregate_Fields>;
    nodes: Array<Registrant_Group>;
};

/** aggregate fields of "registrant.Group" */
export type Registrant_Group_Aggregate_Fields = {
    __typename?: "registrant_Group_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Registrant_Group_Max_Fields>;
    min?: Maybe<Registrant_Group_Min_Fields>;
};

/** aggregate fields of "registrant.Group" */
export type Registrant_Group_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_Group_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "registrant.Group". All fields are combined with a logical 'AND'. */
export type Registrant_Group_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_Group_Bool_Exp>>;
    _not?: InputMaybe<Registrant_Group_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_Group_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    groupRegistrants?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.Group" */
export enum Registrant_Group_Constraint {
    /** unique or primary key constraint */
    GroupPkey = "Group_pkey",
    /** unique or primary key constraint */
    RegistrantGroupConferenceIdName = "registrant_Group_conferenceId_name",
    /** unique or primary key constraint */
    RegistrantGroupSubconferenceIdName = "registrant_Group_subconferenceId_name",
}

/** input type for inserting data into table "registrant.Group" */
export type Registrant_Group_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    groupRegistrants?: InputMaybe<Registrant_GroupRegistrant_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    name?: InputMaybe<Scalars["String"]>;
    subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Registrant_Group_Max_Fields = {
    __typename?: "registrant_Group_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Registrant_Group_Min_Fields = {
    __typename?: "registrant_Group_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "registrant.Group" */
export type Registrant_Group_Mutation_Response = {
    __typename?: "registrant_Group_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Registrant_Group>;
};

/** input type for inserting object relation for remote table "registrant.Group" */
export type Registrant_Group_Obj_Rel_Insert_Input = {
    data: Registrant_Group_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_Group_On_Conflict>;
};

/** on_conflict condition type for table "registrant.Group" */
export type Registrant_Group_On_Conflict = {
    constraint: Registrant_Group_Constraint;
    update_columns?: Array<Registrant_Group_Update_Column>;
    where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.Group". */
export type Registrant_Group_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    groupRegistrants_aggregate?: InputMaybe<Registrant_GroupRegistrant_Aggregate_Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    subconference?: InputMaybe<Conference_Subconference_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_Group */
export type Registrant_Group_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "registrant.Group" */
export enum Registrant_Group_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "registrant.Group" */
export type Registrant_Group_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    name?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.Group" */
export enum Registrant_Group_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "registrant.Invitation" */
export type Registrant_Invitation = {
    __typename?: "registrant_Invitation";
    conferenceId: Scalars["uuid"];
    confirmationCode?: Maybe<Scalars["uuid"]>;
    createdAt: Scalars["timestamptz"];
    /** An array relationship */
    emails: Array<Email>;
    /** An aggregate relationship */
    emails_aggregate: Email_Aggregate;
    hash?: Maybe<Scalars["String"]>;
    id: Scalars["uuid"];
    inviteCode: Scalars["uuid"];
    invitedEmailAddress: Scalars["String"];
    linkToUserId?: Maybe<Scalars["String"]>;
    /** An object relationship */
    registrant?: Maybe<Registrant_Registrant>;
    registrantId: Scalars["uuid"];
    updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    user?: Maybe<User>;
};

/** columns and relationships of "registrant.Invitation" */
export type Registrant_InvitationEmailsArgs = {
    distinct_on?: InputMaybe<Array<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

/** columns and relationships of "registrant.Invitation" */
export type Registrant_InvitationEmails_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

/** aggregated selection of "registrant.Invitation" */
export type Registrant_Invitation_Aggregate = {
    __typename?: "registrant_Invitation_aggregate";
    aggregate?: Maybe<Registrant_Invitation_Aggregate_Fields>;
    nodes: Array<Registrant_Invitation>;
};

/** aggregate fields of "registrant.Invitation" */
export type Registrant_Invitation_Aggregate_Fields = {
    __typename?: "registrant_Invitation_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Registrant_Invitation_Max_Fields>;
    min?: Maybe<Registrant_Invitation_Min_Fields>;
};

/** aggregate fields of "registrant.Invitation" */
export type Registrant_Invitation_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_Invitation_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.Invitation" */
export type Registrant_Invitation_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Registrant_Invitation_Max_Order_By>;
    min?: InputMaybe<Registrant_Invitation_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.Invitation" */
export type Registrant_Invitation_Arr_Rel_Insert_Input = {
    data: Array<Registrant_Invitation_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_Invitation_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.Invitation". All fields are combined with a logical 'AND'. */
export type Registrant_Invitation_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_Invitation_Bool_Exp>>;
    _not?: InputMaybe<Registrant_Invitation_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_Invitation_Bool_Exp>>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    confirmationCode?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    emails?: InputMaybe<Email_Bool_Exp>;
    hash?: InputMaybe<String_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    inviteCode?: InputMaybe<Uuid_Comparison_Exp>;
    invitedEmailAddress?: InputMaybe<String_Comparison_Exp>;
    linkToUserId?: InputMaybe<String_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "registrant.Invitation" */
export enum Registrant_Invitation_Constraint {
    /** unique or primary key constraint */
    InvitationConfirmationCodeKey = "Invitation_confirmationCode_key",
    /** unique or primary key constraint */
    InvitationInviteCodeKey = "Invitation_inviteCode_key",
    /** unique or primary key constraint */
    InvitationInvitedEmailAddressConferenceIdKey = "Invitation_invitedEmailAddress_conferenceId_key",
    /** unique or primary key constraint */
    InvitationPkey = "Invitation_pkey",
    /** unique or primary key constraint */
    InvitationRegistrantIdKey = "Invitation_registrantId_key",
}

/** input type for inserting data into table "registrant.Invitation" */
export type Registrant_Invitation_Insert_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    confirmationCode?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    emails?: InputMaybe<Email_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    inviteCode?: InputMaybe<Scalars["uuid"]>;
    invitedEmailAddress?: InputMaybe<Scalars["String"]>;
    linkToUserId?: InputMaybe<Scalars["String"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Registrant_Invitation_Max_Fields = {
    __typename?: "registrant_Invitation_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    confirmationCode?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    inviteCode?: Maybe<Scalars["uuid"]>;
    invitedEmailAddress?: Maybe<Scalars["String"]>;
    linkToUserId?: Maybe<Scalars["String"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "registrant.Invitation" */
export type Registrant_Invitation_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    confirmationCode?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    inviteCode?: InputMaybe<Order_By>;
    invitedEmailAddress?: InputMaybe<Order_By>;
    linkToUserId?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_Invitation_Min_Fields = {
    __typename?: "registrant_Invitation_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    confirmationCode?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    inviteCode?: Maybe<Scalars["uuid"]>;
    invitedEmailAddress?: Maybe<Scalars["String"]>;
    linkToUserId?: Maybe<Scalars["String"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "registrant.Invitation" */
export type Registrant_Invitation_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    confirmationCode?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    inviteCode?: InputMaybe<Order_By>;
    invitedEmailAddress?: InputMaybe<Order_By>;
    linkToUserId?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.Invitation" */
export type Registrant_Invitation_Mutation_Response = {
    __typename?: "registrant_Invitation_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Registrant_Invitation>;
};

/** input type for inserting object relation for remote table "registrant.Invitation" */
export type Registrant_Invitation_Obj_Rel_Insert_Input = {
    data: Registrant_Invitation_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_Invitation_On_Conflict>;
};

/** on_conflict condition type for table "registrant.Invitation" */
export type Registrant_Invitation_On_Conflict = {
    constraint: Registrant_Invitation_Constraint;
    update_columns?: Array<Registrant_Invitation_Update_Column>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.Invitation". */
export type Registrant_Invitation_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    confirmationCode?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    emails_aggregate?: InputMaybe<Email_Aggregate_Order_By>;
    hash?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    inviteCode?: InputMaybe<Order_By>;
    invitedEmailAddress?: InputMaybe<Order_By>;
    linkToUserId?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: registrant_Invitation */
export type Registrant_Invitation_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "registrant.Invitation" */
export enum Registrant_Invitation_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConfirmationCode = "confirmationCode",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    InviteCode = "inviteCode",
    /** column name */
    InvitedEmailAddress = "invitedEmailAddress",
    /** column name */
    LinkToUserId = "linkToUserId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "registrant.Invitation" */
export type Registrant_Invitation_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    confirmationCode?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    inviteCode?: InputMaybe<Scalars["uuid"]>;
    invitedEmailAddress?: InputMaybe<Scalars["String"]>;
    linkToUserId?: InputMaybe<Scalars["String"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.Invitation" */
export enum Registrant_Invitation_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConfirmationCode = "confirmationCode",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    InviteCode = "inviteCode",
    /** column name */
    InvitedEmailAddress = "invitedEmailAddress",
    /** column name */
    LinkToUserId = "linkToUserId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "registrant.Profile" */
export type Registrant_Profile = {
    __typename?: "registrant_Profile";
    affiliation?: Maybe<Scalars["String"]>;
    affiliationURL?: Maybe<Scalars["String"]>;
    badges?: Maybe<Scalars["jsonb"]>;
    bio?: Maybe<Scalars["String"]>;
    country?: Maybe<Scalars["String"]>;
    created_at: Scalars["timestamptz"];
    github?: Maybe<Scalars["String"]>;
    hasBeenEdited: Scalars["Boolean"];
    photoS3BucketName?: Maybe<Scalars["String"]>;
    photoS3BucketRegion?: Maybe<Scalars["String"]>;
    photoS3ObjectName?: Maybe<Scalars["String"]>;
    photoURL_50x50?: Maybe<Scalars["String"]>;
    photoURL_350x350?: Maybe<Scalars["String"]>;
    pronouns?: Maybe<Scalars["jsonb"]>;
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
    twitter?: Maybe<Scalars["String"]>;
    updated_at: Scalars["timestamptz"];
    website?: Maybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.Profile" */
export type Registrant_ProfileBadgesArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.Profile" */
export type Registrant_ProfilePronounsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.ProfileBadges" */
export type Registrant_ProfileBadges = {
    __typename?: "registrant_ProfileBadges";
    colour?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
    /** An object relationship */
    registrant?: Maybe<Registrant_Registrant>;
    registrantId?: Maybe<Scalars["uuid"]>;
};

/** aggregated selection of "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Aggregate = {
    __typename?: "registrant_ProfileBadges_aggregate";
    aggregate?: Maybe<Registrant_ProfileBadges_Aggregate_Fields>;
    nodes: Array<Registrant_ProfileBadges>;
};

/** aggregate fields of "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Aggregate_Fields = {
    __typename?: "registrant_ProfileBadges_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Registrant_ProfileBadges_Max_Fields>;
    min?: Maybe<Registrant_ProfileBadges_Min_Fields>;
};

/** aggregate fields of "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_ProfileBadges_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Registrant_ProfileBadges_Max_Order_By>;
    min?: InputMaybe<Registrant_ProfileBadges_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Arr_Rel_Insert_Input = {
    data: Array<Registrant_ProfileBadges_Insert_Input>;
};

/** Boolean expression to filter rows from the table "registrant.ProfileBadges". All fields are combined with a logical 'AND'. */
export type Registrant_ProfileBadges_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_ProfileBadges_Bool_Exp>>;
    _not?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_ProfileBadges_Bool_Exp>>;
    colour?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** input type for inserting data into table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Insert_Input = {
    colour?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate max on columns */
export type Registrant_ProfileBadges_Max_Fields = {
    __typename?: "registrant_ProfileBadges_max_fields";
    colour?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Max_Order_By = {
    colour?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_ProfileBadges_Min_Fields = {
    __typename?: "registrant_ProfileBadges_min_fields";
    colour?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Min_Order_By = {
    colour?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "registrant.ProfileBadges". */
export type Registrant_ProfileBadges_Order_By = {
    colour?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
};

/** select columns of table "registrant.ProfileBadges" */
export enum Registrant_ProfileBadges_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    Name = "name",
    /** column name */
    RegistrantId = "registrantId",
}

/** aggregated selection of "registrant.Profile" */
export type Registrant_Profile_Aggregate = {
    __typename?: "registrant_Profile_aggregate";
    aggregate?: Maybe<Registrant_Profile_Aggregate_Fields>;
    nodes: Array<Registrant_Profile>;
};

/** aggregate fields of "registrant.Profile" */
export type Registrant_Profile_Aggregate_Fields = {
    __typename?: "registrant_Profile_aggregate_fields";
    avg?: Maybe<Registrant_Profile_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Registrant_Profile_Max_Fields>;
    min?: Maybe<Registrant_Profile_Min_Fields>;
    stddev?: Maybe<Registrant_Profile_Stddev_Fields>;
    stddev_pop?: Maybe<Registrant_Profile_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Registrant_Profile_Stddev_Samp_Fields>;
    sum?: Maybe<Registrant_Profile_Sum_Fields>;
    var_pop?: Maybe<Registrant_Profile_Var_Pop_Fields>;
    var_samp?: Maybe<Registrant_Profile_Var_Samp_Fields>;
    variance?: Maybe<Registrant_Profile_Variance_Fields>;
};

/** aggregate fields of "registrant.Profile" */
export type Registrant_Profile_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_Profile_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Registrant_Profile_Append_Input = {
    badges?: InputMaybe<Scalars["jsonb"]>;
    pronouns?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate avg on columns */
export type Registrant_Profile_Avg_Fields = {
    __typename?: "registrant_Profile_avg_fields";
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "registrant.Profile". All fields are combined with a logical 'AND'. */
export type Registrant_Profile_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_Profile_Bool_Exp>>;
    _not?: InputMaybe<Registrant_Profile_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_Profile_Bool_Exp>>;
    affiliation?: InputMaybe<String_Comparison_Exp>;
    affiliationURL?: InputMaybe<String_Comparison_Exp>;
    badges?: InputMaybe<Jsonb_Comparison_Exp>;
    bio?: InputMaybe<String_Comparison_Exp>;
    country?: InputMaybe<String_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    github?: InputMaybe<String_Comparison_Exp>;
    hasBeenEdited?: InputMaybe<Boolean_Comparison_Exp>;
    photoS3BucketName?: InputMaybe<String_Comparison_Exp>;
    photoS3BucketRegion?: InputMaybe<String_Comparison_Exp>;
    photoS3ObjectName?: InputMaybe<String_Comparison_Exp>;
    photoURL_50x50?: InputMaybe<String_Comparison_Exp>;
    photoURL_350x350?: InputMaybe<String_Comparison_Exp>;
    pronouns?: InputMaybe<Jsonb_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    timezoneUTCOffset?: InputMaybe<Float_Comparison_Exp>;
    twitter?: InputMaybe<String_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    website?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.Profile" */
export enum Registrant_Profile_Constraint {
    /** unique or primary key constraint */
    ProfilePkey = "Profile_pkey",
    /** unique or primary key constraint */
    ProfileRegistrantIdKey = "Profile_registrantId_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Registrant_Profile_Delete_At_Path_Input = {
    badges?: InputMaybe<Array<Scalars["String"]>>;
    pronouns?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Registrant_Profile_Delete_Elem_Input = {
    badges?: InputMaybe<Scalars["Int"]>;
    pronouns?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Registrant_Profile_Delete_Key_Input = {
    badges?: InputMaybe<Scalars["String"]>;
    pronouns?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "registrant.Profile" */
export type Registrant_Profile_Inc_Input = {
    timezoneUTCOffset?: InputMaybe<Scalars["Float"]>;
};

/** input type for inserting data into table "registrant.Profile" */
export type Registrant_Profile_Insert_Input = {
    affiliation?: InputMaybe<Scalars["String"]>;
    affiliationURL?: InputMaybe<Scalars["String"]>;
    badges?: InputMaybe<Scalars["jsonb"]>;
    bio?: InputMaybe<Scalars["String"]>;
    country?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    github?: InputMaybe<Scalars["String"]>;
    hasBeenEdited?: InputMaybe<Scalars["Boolean"]>;
    photoS3BucketName?: InputMaybe<Scalars["String"]>;
    photoS3BucketRegion?: InputMaybe<Scalars["String"]>;
    photoS3ObjectName?: InputMaybe<Scalars["String"]>;
    photoURL_50x50?: InputMaybe<Scalars["String"]>;
    photoURL_350x350?: InputMaybe<Scalars["String"]>;
    pronouns?: InputMaybe<Scalars["jsonb"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    timezoneUTCOffset?: InputMaybe<Scalars["Float"]>;
    twitter?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    website?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Registrant_Profile_Max_Fields = {
    __typename?: "registrant_Profile_max_fields";
    affiliation?: Maybe<Scalars["String"]>;
    affiliationURL?: Maybe<Scalars["String"]>;
    bio?: Maybe<Scalars["String"]>;
    country?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    github?: Maybe<Scalars["String"]>;
    photoS3BucketName?: Maybe<Scalars["String"]>;
    photoS3BucketRegion?: Maybe<Scalars["String"]>;
    photoS3ObjectName?: Maybe<Scalars["String"]>;
    photoURL_50x50?: Maybe<Scalars["String"]>;
    photoURL_350x350?: Maybe<Scalars["String"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
    twitter?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    website?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Registrant_Profile_Min_Fields = {
    __typename?: "registrant_Profile_min_fields";
    affiliation?: Maybe<Scalars["String"]>;
    affiliationURL?: Maybe<Scalars["String"]>;
    bio?: Maybe<Scalars["String"]>;
    country?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    github?: Maybe<Scalars["String"]>;
    photoS3BucketName?: Maybe<Scalars["String"]>;
    photoS3BucketRegion?: Maybe<Scalars["String"]>;
    photoS3ObjectName?: Maybe<Scalars["String"]>;
    photoURL_50x50?: Maybe<Scalars["String"]>;
    photoURL_350x350?: Maybe<Scalars["String"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
    twitter?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    website?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "registrant.Profile" */
export type Registrant_Profile_Mutation_Response = {
    __typename?: "registrant_Profile_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Registrant_Profile>;
};

/** input type for inserting object relation for remote table "registrant.Profile" */
export type Registrant_Profile_Obj_Rel_Insert_Input = {
    data: Registrant_Profile_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_Profile_On_Conflict>;
};

/** on_conflict condition type for table "registrant.Profile" */
export type Registrant_Profile_On_Conflict = {
    constraint: Registrant_Profile_Constraint;
    update_columns?: Array<Registrant_Profile_Update_Column>;
    where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.Profile". */
export type Registrant_Profile_Order_By = {
    affiliation?: InputMaybe<Order_By>;
    affiliationURL?: InputMaybe<Order_By>;
    badges?: InputMaybe<Order_By>;
    bio?: InputMaybe<Order_By>;
    country?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    github?: InputMaybe<Order_By>;
    hasBeenEdited?: InputMaybe<Order_By>;
    photoS3BucketName?: InputMaybe<Order_By>;
    photoS3BucketRegion?: InputMaybe<Order_By>;
    photoS3ObjectName?: InputMaybe<Order_By>;
    photoURL_50x50?: InputMaybe<Order_By>;
    photoURL_350x350?: InputMaybe<Order_By>;
    pronouns?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    timezoneUTCOffset?: InputMaybe<Order_By>;
    twitter?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    website?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_Profile */
export type Registrant_Profile_Pk_Columns_Input = {
    registrantId: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Registrant_Profile_Prepend_Input = {
    badges?: InputMaybe<Scalars["jsonb"]>;
    pronouns?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "registrant.Profile" */
export enum Registrant_Profile_Select_Column {
    /** column name */
    Affiliation = "affiliation",
    /** column name */
    AffiliationUrl = "affiliationURL",
    /** column name */
    Badges = "badges",
    /** column name */
    Bio = "bio",
    /** column name */
    Country = "country",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Github = "github",
    /** column name */
    HasBeenEdited = "hasBeenEdited",
    /** column name */
    PhotoS3BucketName = "photoS3BucketName",
    /** column name */
    PhotoS3BucketRegion = "photoS3BucketRegion",
    /** column name */
    PhotoS3ObjectName = "photoS3ObjectName",
    /** column name */
    PhotoUrl_50x50 = "photoURL_50x50",
    /** column name */
    PhotoUrl_350x350 = "photoURL_350x350",
    /** column name */
    Pronouns = "pronouns",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    TimezoneUtcOffset = "timezoneUTCOffset",
    /** column name */
    Twitter = "twitter",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Website = "website",
}

/** input type for updating data in table "registrant.Profile" */
export type Registrant_Profile_Set_Input = {
    affiliation?: InputMaybe<Scalars["String"]>;
    affiliationURL?: InputMaybe<Scalars["String"]>;
    badges?: InputMaybe<Scalars["jsonb"]>;
    bio?: InputMaybe<Scalars["String"]>;
    country?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    github?: InputMaybe<Scalars["String"]>;
    hasBeenEdited?: InputMaybe<Scalars["Boolean"]>;
    photoS3BucketName?: InputMaybe<Scalars["String"]>;
    photoS3BucketRegion?: InputMaybe<Scalars["String"]>;
    photoS3ObjectName?: InputMaybe<Scalars["String"]>;
    photoURL_50x50?: InputMaybe<Scalars["String"]>;
    photoURL_350x350?: InputMaybe<Scalars["String"]>;
    pronouns?: InputMaybe<Scalars["jsonb"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    timezoneUTCOffset?: InputMaybe<Scalars["Float"]>;
    twitter?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    website?: InputMaybe<Scalars["String"]>;
};

/** aggregate stddev on columns */
export type Registrant_Profile_Stddev_Fields = {
    __typename?: "registrant_Profile_stddev_fields";
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Registrant_Profile_Stddev_Pop_Fields = {
    __typename?: "registrant_Profile_stddev_pop_fields";
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Registrant_Profile_Stddev_Samp_Fields = {
    __typename?: "registrant_Profile_stddev_samp_fields";
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Registrant_Profile_Sum_Fields = {
    __typename?: "registrant_Profile_sum_fields";
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** update columns of table "registrant.Profile" */
export enum Registrant_Profile_Update_Column {
    /** column name */
    Affiliation = "affiliation",
    /** column name */
    AffiliationUrl = "affiliationURL",
    /** column name */
    Badges = "badges",
    /** column name */
    Bio = "bio",
    /** column name */
    Country = "country",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Github = "github",
    /** column name */
    HasBeenEdited = "hasBeenEdited",
    /** column name */
    PhotoS3BucketName = "photoS3BucketName",
    /** column name */
    PhotoS3BucketRegion = "photoS3BucketRegion",
    /** column name */
    PhotoS3ObjectName = "photoS3ObjectName",
    /** column name */
    PhotoUrl_50x50 = "photoURL_50x50",
    /** column name */
    PhotoUrl_350x350 = "photoURL_350x350",
    /** column name */
    Pronouns = "pronouns",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    TimezoneUtcOffset = "timezoneUTCOffset",
    /** column name */
    Twitter = "twitter",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Website = "website",
}

/** aggregate var_pop on columns */
export type Registrant_Profile_Var_Pop_Fields = {
    __typename?: "registrant_Profile_var_pop_fields";
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Registrant_Profile_Var_Samp_Fields = {
    __typename?: "registrant_Profile_var_samp_fields";
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Registrant_Profile_Variance_Fields = {
    __typename?: "registrant_Profile_variance_fields";
    timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_Registrant = {
    __typename?: "registrant_Registrant";
    /** An array relationship */
    badges: Array<Registrant_ProfileBadges>;
    /** An aggregate relationship */
    badges_aggregate: Registrant_ProfileBadges_Aggregate;
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    conferenceRole: Registrant_RegistrantRole_Enum;
    createdAt: Scalars["timestamptz"];
    displayName: Scalars["String"];
    /** An array relationship */
    groupRegistrants: Array<Registrant_GroupRegistrant>;
    /** An aggregate relationship */
    groupRegistrants_aggregate: Registrant_GroupRegistrant_Aggregate;
    id: Scalars["uuid"];
    /** An object relationship */
    invitation?: Maybe<Registrant_Invitation>;
    /** A computed field, executes function "registrant.InvitationEmailStatus" */
    invitationStatus?: Maybe<Scalars["jsonb"]>;
    inviteSent?: Maybe<Scalars["Boolean"]>;
    /** A computed field, executes function "registrant.isProgramPerson" */
    isProgramPerson?: Maybe<Scalars["Boolean"]>;
    /** An object relationship */
    profile?: Maybe<Registrant_Profile>;
    /** An array relationship */
    programPeople: Array<Collection_ProgramPerson>;
    /** An aggregate relationship */
    programPeople_aggregate: Collection_ProgramPerson_Aggregate;
    /** An array relationship */
    subconferenceMemberships: Array<Registrant_SubconferenceMembership>;
    /** An aggregate relationship */
    subconferenceMemberships_aggregate: Registrant_SubconferenceMembership_Aggregate;
    updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    user?: Maybe<User>;
    userId?: Maybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantBadgesArgs = {
    distinct_on?: InputMaybe<Array<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantBadges_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantGroupRegistrantsArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantGroupRegistrants_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantInvitationStatusArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantProgramPeopleArgs = {
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantProgramPeople_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantSubconferenceMembershipsArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantSubconferenceMemberships_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** columns and relationships of "registrant.RegistrantRole" */
export type Registrant_RegistrantRole = {
    __typename?: "registrant_RegistrantRole";
    description?: Maybe<Scalars["String"]>;
    name: Scalars["String"];
};

/** aggregated selection of "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Aggregate = {
    __typename?: "registrant_RegistrantRole_aggregate";
    aggregate?: Maybe<Registrant_RegistrantRole_Aggregate_Fields>;
    nodes: Array<Registrant_RegistrantRole>;
};

/** aggregate fields of "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Aggregate_Fields = {
    __typename?: "registrant_RegistrantRole_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Registrant_RegistrantRole_Max_Fields>;
    min?: Maybe<Registrant_RegistrantRole_Min_Fields>;
};

/** aggregate fields of "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_RegistrantRole_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "registrant.RegistrantRole". All fields are combined with a logical 'AND'. */
export type Registrant_RegistrantRole_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_RegistrantRole_Bool_Exp>>;
    _not?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_RegistrantRole_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.RegistrantRole" */
export enum Registrant_RegistrantRole_Constraint {
    /** unique or primary key constraint */
    RegistrantRolePkey = "RegistrantRole_pkey",
}

export enum Registrant_RegistrantRole_Enum {
    Attendee = "ATTENDEE",
    Moderator = "MODERATOR",
    Organizer = "ORGANIZER",
}

/** Boolean expression to compare columns of type "registrant_RegistrantRole_enum". All fields are combined with logical 'AND'. */
export type Registrant_RegistrantRole_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Registrant_RegistrantRole_Enum>;
    _in?: InputMaybe<Array<Registrant_RegistrantRole_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Registrant_RegistrantRole_Enum>;
    _nin?: InputMaybe<Array<Registrant_RegistrantRole_Enum>>;
};

/** input type for inserting data into table "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Registrant_RegistrantRole_Max_Fields = {
    __typename?: "registrant_RegistrantRole_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Registrant_RegistrantRole_Min_Fields = {
    __typename?: "registrant_RegistrantRole_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Mutation_Response = {
    __typename?: "registrant_RegistrantRole_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Registrant_RegistrantRole>;
};

/** on_conflict condition type for table "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_On_Conflict = {
    constraint: Registrant_RegistrantRole_Constraint;
    update_columns?: Array<Registrant_RegistrantRole_Update_Column>;
    where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.RegistrantRole". */
export type Registrant_RegistrantRole_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_RegistrantRole */
export type Registrant_RegistrantRole_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "registrant.RegistrantRole" */
export enum Registrant_RegistrantRole_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "registrant.RegistrantRole" */
export enum Registrant_RegistrantRole_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "registrant.Registrant" */
export type Registrant_Registrant_Aggregate = {
    __typename?: "registrant_Registrant_aggregate";
    aggregate?: Maybe<Registrant_Registrant_Aggregate_Fields>;
    nodes: Array<Registrant_Registrant>;
};

/** aggregate fields of "registrant.Registrant" */
export type Registrant_Registrant_Aggregate_Fields = {
    __typename?: "registrant_Registrant_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Registrant_Registrant_Max_Fields>;
    min?: Maybe<Registrant_Registrant_Min_Fields>;
};

/** aggregate fields of "registrant.Registrant" */
export type Registrant_Registrant_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.Registrant" */
export type Registrant_Registrant_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Registrant_Registrant_Max_Order_By>;
    min?: InputMaybe<Registrant_Registrant_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.Registrant" */
export type Registrant_Registrant_Arr_Rel_Insert_Input = {
    data: Array<Registrant_Registrant_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_Registrant_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.Registrant". All fields are combined with a logical 'AND'. */
export type Registrant_Registrant_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_Registrant_Bool_Exp>>;
    _not?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_Registrant_Bool_Exp>>;
    badges?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    conferenceRole?: InputMaybe<Registrant_RegistrantRole_Enum_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    displayName?: InputMaybe<String_Comparison_Exp>;
    groupRegistrants?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    invitation?: InputMaybe<Registrant_Invitation_Bool_Exp>;
    invitationStatus?: InputMaybe<Jsonb_Comparison_Exp>;
    inviteSent?: InputMaybe<Boolean_Comparison_Exp>;
    isProgramPerson?: InputMaybe<Boolean_Comparison_Exp>;
    profile?: InputMaybe<Registrant_Profile_Bool_Exp>;
    programPeople?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    subconferenceMemberships?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    user?: InputMaybe<User_Bool_Exp>;
    userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.Registrant" */
export enum Registrant_Registrant_Constraint {
    /** unique or primary key constraint */
    RegistrantConferenceIdUserIdKey = "Registrant_conferenceId_userId_key",
    /** unique or primary key constraint */
    RegistrantPkey = "Registrant_pkey",
}

/** input type for inserting data into table "registrant.Registrant" */
export type Registrant_Registrant_Insert_Input = {
    badges?: InputMaybe<Registrant_ProfileBadges_Arr_Rel_Insert_Input>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    conferenceRole?: InputMaybe<Registrant_RegistrantRole_Enum>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    displayName?: InputMaybe<Scalars["String"]>;
    groupRegistrants?: InputMaybe<Registrant_GroupRegistrant_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    invitation?: InputMaybe<Registrant_Invitation_Obj_Rel_Insert_Input>;
    profile?: InputMaybe<Registrant_Profile_Obj_Rel_Insert_Input>;
    programPeople?: InputMaybe<Collection_ProgramPerson_Arr_Rel_Insert_Input>;
    subconferenceMemberships?: InputMaybe<Registrant_SubconferenceMembership_Arr_Rel_Insert_Input>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Registrant_Registrant_Max_Fields = {
    __typename?: "registrant_Registrant_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    displayName?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "registrant.Registrant" */
export type Registrant_Registrant_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    displayName?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_Registrant_Min_Fields = {
    __typename?: "registrant_Registrant_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    displayName?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "registrant.Registrant" */
export type Registrant_Registrant_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    displayName?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.Registrant" */
export type Registrant_Registrant_Mutation_Response = {
    __typename?: "registrant_Registrant_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Registrant_Registrant>;
};

/** input type for inserting object relation for remote table "registrant.Registrant" */
export type Registrant_Registrant_Obj_Rel_Insert_Input = {
    data: Registrant_Registrant_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_Registrant_On_Conflict>;
};

/** on_conflict condition type for table "registrant.Registrant" */
export type Registrant_Registrant_On_Conflict = {
    constraint: Registrant_Registrant_Constraint;
    update_columns?: Array<Registrant_Registrant_Update_Column>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.Registrant". */
export type Registrant_Registrant_Order_By = {
    badges_aggregate?: InputMaybe<Registrant_ProfileBadges_Aggregate_Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    conferenceRole?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    displayName?: InputMaybe<Order_By>;
    groupRegistrants_aggregate?: InputMaybe<Registrant_GroupRegistrant_Aggregate_Order_By>;
    id?: InputMaybe<Order_By>;
    invitation?: InputMaybe<Registrant_Invitation_Order_By>;
    invitationStatus?: InputMaybe<Order_By>;
    inviteSent?: InputMaybe<Order_By>;
    isProgramPerson?: InputMaybe<Order_By>;
    profile?: InputMaybe<Registrant_Profile_Order_By>;
    programPeople_aggregate?: InputMaybe<Collection_ProgramPerson_Aggregate_Order_By>;
    subconferenceMemberships_aggregate?: InputMaybe<Registrant_SubconferenceMembership_Aggregate_Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    user?: InputMaybe<User_Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_Registrant */
export type Registrant_Registrant_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "registrant.Registrant" */
export enum Registrant_Registrant_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferenceRole = "conferenceRole",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    DisplayName = "displayName",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "registrant.Registrant" */
export type Registrant_Registrant_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    conferenceRole?: InputMaybe<Registrant_RegistrantRole_Enum>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    displayName?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "registrant.Registrant" */
export enum Registrant_Registrant_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferenceRole = "conferenceRole",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    DisplayName = "displayName",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UserId = "userId",
}

/** columns and relationships of "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording = {
    __typename?: "registrant_SavedVonageRoomRecording";
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    isHidden: Scalars["Boolean"];
    /** An object relationship */
    recording: Video_VonageRoomRecording;
    recordingId: Scalars["uuid"];
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Aggregate = {
    __typename?: "registrant_SavedVonageRoomRecording_aggregate";
    aggregate?: Maybe<Registrant_SavedVonageRoomRecording_Aggregate_Fields>;
    nodes: Array<Registrant_SavedVonageRoomRecording>;
};

/** aggregate fields of "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Aggregate_Fields = {
    __typename?: "registrant_SavedVonageRoomRecording_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Registrant_SavedVonageRoomRecording_Max_Fields>;
    min?: Maybe<Registrant_SavedVonageRoomRecording_Min_Fields>;
};

/** aggregate fields of "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Registrant_SavedVonageRoomRecording_Max_Order_By>;
    min?: InputMaybe<Registrant_SavedVonageRoomRecording_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Arr_Rel_Insert_Input = {
    data: Array<Registrant_SavedVonageRoomRecording_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_SavedVonageRoomRecording_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.SavedVonageRoomRecording". All fields are combined with a logical 'AND'. */
export type Registrant_SavedVonageRoomRecording_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Bool_Exp>>;
    _not?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    isHidden?: InputMaybe<Boolean_Comparison_Exp>;
    recording?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
    recordingId?: InputMaybe<Uuid_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.SavedVonageRoomRecording" */
export enum Registrant_SavedVonageRoomRecording_Constraint {
    /** unique or primary key constraint */
    SavedVonageRoomRecordingPkey = "SavedVonageRoomRecording_pkey",
    /** unique or primary key constraint */
    SavedVonageRoomRecordingRecordingIdRegistrantIdKey = "SavedVonageRoomRecording_recordingId_registrantId_key",
}

/** input type for inserting data into table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isHidden?: InputMaybe<Scalars["Boolean"]>;
    recording?: InputMaybe<Video_VonageRoomRecording_Obj_Rel_Insert_Input>;
    recordingId?: InputMaybe<Scalars["uuid"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Registrant_SavedVonageRoomRecording_Max_Fields = {
    __typename?: "registrant_SavedVonageRoomRecording_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    recordingId?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    recordingId?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_SavedVonageRoomRecording_Min_Fields = {
    __typename?: "registrant_SavedVonageRoomRecording_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    recordingId?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    recordingId?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Mutation_Response = {
    __typename?: "registrant_SavedVonageRoomRecording_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Registrant_SavedVonageRoomRecording>;
};

/** on_conflict condition type for table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_On_Conflict = {
    constraint: Registrant_SavedVonageRoomRecording_Constraint;
    update_columns?: Array<Registrant_SavedVonageRoomRecording_Update_Column>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.SavedVonageRoomRecording". */
export type Registrant_SavedVonageRoomRecording_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    isHidden?: InputMaybe<Order_By>;
    recording?: InputMaybe<Video_VonageRoomRecording_Order_By>;
    recordingId?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_SavedVonageRoomRecording */
export type Registrant_SavedVonageRoomRecording_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "registrant.SavedVonageRoomRecording" */
export enum Registrant_SavedVonageRoomRecording_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    RecordingId = "recordingId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isHidden?: InputMaybe<Scalars["Boolean"]>;
    recordingId?: InputMaybe<Scalars["uuid"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.SavedVonageRoomRecording" */
export enum Registrant_SavedVonageRoomRecording_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    RecordingId = "recordingId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership = {
    __typename?: "registrant_SubconferenceMembership";
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    role: Registrant_RegistrantRole_Enum;
    /** An object relationship */
    subconference: Conference_Subconference;
    subconferenceId: Scalars["uuid"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Aggregate = {
    __typename?: "registrant_SubconferenceMembership_aggregate";
    aggregate?: Maybe<Registrant_SubconferenceMembership_Aggregate_Fields>;
    nodes: Array<Registrant_SubconferenceMembership>;
};

/** aggregate fields of "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Aggregate_Fields = {
    __typename?: "registrant_SubconferenceMembership_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Registrant_SubconferenceMembership_Max_Fields>;
    min?: Maybe<Registrant_SubconferenceMembership_Min_Fields>;
};

/** aggregate fields of "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Registrant_SubconferenceMembership_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Registrant_SubconferenceMembership_Max_Order_By>;
    min?: InputMaybe<Registrant_SubconferenceMembership_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Arr_Rel_Insert_Input = {
    data: Array<Registrant_SubconferenceMembership_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Registrant_SubconferenceMembership_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.SubconferenceMembership". All fields are combined with a logical 'AND'. */
export type Registrant_SubconferenceMembership_Bool_Exp = {
    _and?: InputMaybe<Array<Registrant_SubconferenceMembership_Bool_Exp>>;
    _not?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
    _or?: InputMaybe<Array<Registrant_SubconferenceMembership_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    role?: InputMaybe<Registrant_RegistrantRole_Enum_Comparison_Exp>;
    subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.SubconferenceMembership" */
export enum Registrant_SubconferenceMembership_Constraint {
    /** unique or primary key constraint */
    SubconferenceMembershipPkey = "SubconferenceMembership_pkey",
    /** unique or primary key constraint */
    SubconferenceMembershipSubconferenceIdRegistrantIdKey = "SubconferenceMembership_subconferenceId_registrantId_key",
}

/** input type for inserting data into table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    role?: InputMaybe<Registrant_RegistrantRole_Enum>;
    subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Registrant_SubconferenceMembership_Max_Fields = {
    __typename?: "registrant_SubconferenceMembership_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_SubconferenceMembership_Min_Fields = {
    __typename?: "registrant_SubconferenceMembership_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Mutation_Response = {
    __typename?: "registrant_SubconferenceMembership_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Registrant_SubconferenceMembership>;
};

/** on_conflict condition type for table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_On_Conflict = {
    constraint: Registrant_SubconferenceMembership_Constraint;
    update_columns?: Array<Registrant_SubconferenceMembership_Update_Column>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.SubconferenceMembership". */
export type Registrant_SubconferenceMembership_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    role?: InputMaybe<Order_By>;
    subconference?: InputMaybe<Conference_Subconference_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_SubconferenceMembership */
export type Registrant_SubconferenceMembership_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "registrant.SubconferenceMembership" */
export enum Registrant_SubconferenceMembership_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    Role = "role",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    role?: InputMaybe<Registrant_RegistrantRole_Enum>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.SubconferenceMembership" */
export enum Registrant_SubconferenceMembership_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    Role = "role",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

export type Registrant_SearchRegistrants_Args = {
    conferenceid?: InputMaybe<Scalars["uuid"]>;
    search?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "room.Backend" */
export type Room_Backend = {
    __typename?: "room_Backend";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "room.Backend" */
export type Room_Backend_Aggregate = {
    __typename?: "room_Backend_aggregate";
    aggregate?: Maybe<Room_Backend_Aggregate_Fields>;
    nodes: Array<Room_Backend>;
};

/** aggregate fields of "room.Backend" */
export type Room_Backend_Aggregate_Fields = {
    __typename?: "room_Backend_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Room_Backend_Max_Fields>;
    min?: Maybe<Room_Backend_Min_Fields>;
};

/** aggregate fields of "room.Backend" */
export type Room_Backend_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_Backend_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.Backend". All fields are combined with a logical 'AND'. */
export type Room_Backend_Bool_Exp = {
    _and?: InputMaybe<Array<Room_Backend_Bool_Exp>>;
    _not?: InputMaybe<Room_Backend_Bool_Exp>;
    _or?: InputMaybe<Array<Room_Backend_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.Backend" */
export enum Room_Backend_Constraint {
    /** unique or primary key constraint */
    VideoRoomBackendPkey = "VideoRoomBackend_pkey",
}

export enum Room_Backend_Enum {
    /** AWS Chime SDK */
    Chime = "CHIME",
    /** Vonage Video API */
    Vonage = "VONAGE",
}

/** Boolean expression to compare columns of type "room_Backend_enum". All fields are combined with logical 'AND'. */
export type Room_Backend_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Room_Backend_Enum>;
    _in?: InputMaybe<Array<Room_Backend_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Room_Backend_Enum>;
    _nin?: InputMaybe<Array<Room_Backend_Enum>>;
};

/** input type for inserting data into table "room.Backend" */
export type Room_Backend_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Room_Backend_Max_Fields = {
    __typename?: "room_Backend_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Room_Backend_Min_Fields = {
    __typename?: "room_Backend_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "room.Backend" */
export type Room_Backend_Mutation_Response = {
    __typename?: "room_Backend_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_Backend>;
};

/** on_conflict condition type for table "room.Backend" */
export type Room_Backend_On_Conflict = {
    constraint: Room_Backend_Constraint;
    update_columns?: Array<Room_Backend_Update_Column>;
    where?: InputMaybe<Room_Backend_Bool_Exp>;
};

/** Ordering options when selecting data from "room.Backend". */
export type Room_Backend_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_Backend */
export type Room_Backend_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "room.Backend" */
export enum Room_Backend_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "room.Backend" */
export type Room_Backend_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "room.Backend" */
export enum Room_Backend_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "room.ChimeMeeting" */
export type Room_ChimeMeeting = {
    __typename?: "room_ChimeMeeting";
    chimeMeetingData: Scalars["jsonb"];
    chimeMeetingId: Scalars["String"];
    /** An object relationship */
    conference?: Maybe<Conference_Conference>;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An object relationship */
    room?: Maybe<Room_Room>;
    roomId: Scalars["uuid"];
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "room.ChimeMeeting" */
export type Room_ChimeMeetingChimeMeetingDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "room.ChimeMeeting" */
export type Room_ChimeMeeting_Aggregate = {
    __typename?: "room_ChimeMeeting_aggregate";
    aggregate?: Maybe<Room_ChimeMeeting_Aggregate_Fields>;
    nodes: Array<Room_ChimeMeeting>;
};

/** aggregate fields of "room.ChimeMeeting" */
export type Room_ChimeMeeting_Aggregate_Fields = {
    __typename?: "room_ChimeMeeting_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Room_ChimeMeeting_Max_Fields>;
    min?: Maybe<Room_ChimeMeeting_Min_Fields>;
};

/** aggregate fields of "room.ChimeMeeting" */
export type Room_ChimeMeeting_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_ChimeMeeting_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Room_ChimeMeeting_Append_Input = {
    chimeMeetingData?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "room.ChimeMeeting". All fields are combined with a logical 'AND'. */
export type Room_ChimeMeeting_Bool_Exp = {
    _and?: InputMaybe<Array<Room_ChimeMeeting_Bool_Exp>>;
    _not?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
    _or?: InputMaybe<Array<Room_ChimeMeeting_Bool_Exp>>;
    chimeMeetingData?: InputMaybe<Jsonb_Comparison_Exp>;
    chimeMeetingId?: InputMaybe<String_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ChimeMeeting" */
export enum Room_ChimeMeeting_Constraint {
    /** unique or primary key constraint */
    ChimeMeetingPkey = "ChimeMeeting_pkey",
    /** unique or primary key constraint */
    ChimeMeetingRoomIdKey = "ChimeMeeting_roomId_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Room_ChimeMeeting_Delete_At_Path_Input = {
    chimeMeetingData?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Room_ChimeMeeting_Delete_Elem_Input = {
    chimeMeetingData?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Room_ChimeMeeting_Delete_Key_Input = {
    chimeMeetingData?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "room.ChimeMeeting" */
export type Room_ChimeMeeting_Insert_Input = {
    chimeMeetingData?: InputMaybe<Scalars["jsonb"]>;
    chimeMeetingId?: InputMaybe<Scalars["String"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_ChimeMeeting_Max_Fields = {
    __typename?: "room_ChimeMeeting_max_fields";
    chimeMeetingId?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Room_ChimeMeeting_Min_Fields = {
    __typename?: "room_ChimeMeeting_min_fields";
    chimeMeetingId?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "room.ChimeMeeting" */
export type Room_ChimeMeeting_Mutation_Response = {
    __typename?: "room_ChimeMeeting_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_ChimeMeeting>;
};

/** input type for inserting object relation for remote table "room.ChimeMeeting" */
export type Room_ChimeMeeting_Obj_Rel_Insert_Input = {
    data: Room_ChimeMeeting_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_ChimeMeeting_On_Conflict>;
};

/** on_conflict condition type for table "room.ChimeMeeting" */
export type Room_ChimeMeeting_On_Conflict = {
    constraint: Room_ChimeMeeting_Constraint;
    update_columns?: Array<Room_ChimeMeeting_Update_Column>;
    where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ChimeMeeting". */
export type Room_ChimeMeeting_Order_By = {
    chimeMeetingData?: InputMaybe<Order_By>;
    chimeMeetingId?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ChimeMeeting */
export type Room_ChimeMeeting_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Room_ChimeMeeting_Prepend_Input = {
    chimeMeetingData?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "room.ChimeMeeting" */
export enum Room_ChimeMeeting_Select_Column {
    /** column name */
    ChimeMeetingData = "chimeMeetingData",
    /** column name */
    ChimeMeetingId = "chimeMeetingId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "room.ChimeMeeting" */
export type Room_ChimeMeeting_Set_Input = {
    chimeMeetingData?: InputMaybe<Scalars["jsonb"]>;
    chimeMeetingId?: InputMaybe<Scalars["String"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "room.ChimeMeeting" */
export enum Room_ChimeMeeting_Update_Column {
    /** column name */
    ChimeMeetingData = "chimeMeetingData",
    /** column name */
    ChimeMeetingId = "chimeMeetingId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "room.LivestreamDurations" */
export type Room_LivestreamDurations = {
    __typename?: "room_LivestreamDurations";
    /** An object relationship */
    conference?: Maybe<Conference_Conference>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    room?: Maybe<Room_Room>;
    roomId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    sum?: Maybe<Scalars["float8"]>;
};

/** aggregated selection of "room.LivestreamDurations" */
export type Room_LivestreamDurations_Aggregate = {
    __typename?: "room_LivestreamDurations_aggregate";
    aggregate?: Maybe<Room_LivestreamDurations_Aggregate_Fields>;
    nodes: Array<Room_LivestreamDurations>;
};

/** aggregate fields of "room.LivestreamDurations" */
export type Room_LivestreamDurations_Aggregate_Fields = {
    __typename?: "room_LivestreamDurations_aggregate_fields";
    avg?: Maybe<Room_LivestreamDurations_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Room_LivestreamDurations_Max_Fields>;
    min?: Maybe<Room_LivestreamDurations_Min_Fields>;
    stddev?: Maybe<Room_LivestreamDurations_Stddev_Fields>;
    stddev_pop?: Maybe<Room_LivestreamDurations_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Room_LivestreamDurations_Stddev_Samp_Fields>;
    sum?: Maybe<Room_LivestreamDurations_Sum_Fields>;
    var_pop?: Maybe<Room_LivestreamDurations_Var_Pop_Fields>;
    var_samp?: Maybe<Room_LivestreamDurations_Var_Samp_Fields>;
    variance?: Maybe<Room_LivestreamDurations_Variance_Fields>;
};

/** aggregate fields of "room.LivestreamDurations" */
export type Room_LivestreamDurations_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_LivestreamDurations_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Room_LivestreamDurations_Avg_Fields = {
    __typename?: "room_LivestreamDurations_avg_fields";
    sum?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "room.LivestreamDurations". All fields are combined with a logical 'AND'. */
export type Room_LivestreamDurations_Bool_Exp = {
    _and?: InputMaybe<Array<Room_LivestreamDurations_Bool_Exp>>;
    _not?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
    _or?: InputMaybe<Array<Room_LivestreamDurations_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    sum?: InputMaybe<Float8_Comparison_Exp>;
};

/** input type for inserting data into table "room.LivestreamDurations" */
export type Room_LivestreamDurations_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    sum?: InputMaybe<Scalars["float8"]>;
};

/** aggregate max on columns */
export type Room_LivestreamDurations_Max_Fields = {
    __typename?: "room_LivestreamDurations_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    sum?: Maybe<Scalars["float8"]>;
};

/** aggregate min on columns */
export type Room_LivestreamDurations_Min_Fields = {
    __typename?: "room_LivestreamDurations_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    sum?: Maybe<Scalars["float8"]>;
};

/** input type for inserting object relation for remote table "room.LivestreamDurations" */
export type Room_LivestreamDurations_Obj_Rel_Insert_Input = {
    data: Room_LivestreamDurations_Insert_Input;
};

/** Ordering options when selecting data from "room.LivestreamDurations". */
export type Room_LivestreamDurations_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    sum?: InputMaybe<Order_By>;
};

/** select columns of table "room.LivestreamDurations" */
export enum Room_LivestreamDurations_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Sum = "sum",
}

/** aggregate stddev on columns */
export type Room_LivestreamDurations_Stddev_Fields = {
    __typename?: "room_LivestreamDurations_stddev_fields";
    sum?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Room_LivestreamDurations_Stddev_Pop_Fields = {
    __typename?: "room_LivestreamDurations_stddev_pop_fields";
    sum?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Room_LivestreamDurations_Stddev_Samp_Fields = {
    __typename?: "room_LivestreamDurations_stddev_samp_fields";
    sum?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Room_LivestreamDurations_Sum_Fields = {
    __typename?: "room_LivestreamDurations_sum_fields";
    sum?: Maybe<Scalars["float8"]>;
};

/** aggregate var_pop on columns */
export type Room_LivestreamDurations_Var_Pop_Fields = {
    __typename?: "room_LivestreamDurations_var_pop_fields";
    sum?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Room_LivestreamDurations_Var_Samp_Fields = {
    __typename?: "room_LivestreamDurations_var_samp_fields";
    sum?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Room_LivestreamDurations_Variance_Fields = {
    __typename?: "room_LivestreamDurations_variance_fields";
    sum?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "room.ManagementMode" */
export type Room_ManagementMode = {
    __typename?: "room_ManagementMode";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "room.ManagementMode" */
export type Room_ManagementMode_Aggregate = {
    __typename?: "room_ManagementMode_aggregate";
    aggregate?: Maybe<Room_ManagementMode_Aggregate_Fields>;
    nodes: Array<Room_ManagementMode>;
};

/** aggregate fields of "room.ManagementMode" */
export type Room_ManagementMode_Aggregate_Fields = {
    __typename?: "room_ManagementMode_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Room_ManagementMode_Max_Fields>;
    min?: Maybe<Room_ManagementMode_Min_Fields>;
};

/** aggregate fields of "room.ManagementMode" */
export type Room_ManagementMode_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_ManagementMode_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.ManagementMode". All fields are combined with a logical 'AND'. */
export type Room_ManagementMode_Bool_Exp = {
    _and?: InputMaybe<Array<Room_ManagementMode_Bool_Exp>>;
    _not?: InputMaybe<Room_ManagementMode_Bool_Exp>;
    _or?: InputMaybe<Array<Room_ManagementMode_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ManagementMode" */
export enum Room_ManagementMode_Constraint {
    /** unique or primary key constraint */
    ManagementModePkey = "ManagementMode_pkey",
}

export enum Room_ManagementMode_Enum {
    /** Room is a direct message between two attendees. No new attendees can be added. */
    Dm = "DM",
    /** Room access is automatically controlled by the system. */
    Managed = "MANAGED",
    /** Room is only visible to attendees who have been given access. New attendees can be added. */
    Private = "PRIVATE",
    /** Room is visible to all attendees at the conference. */
    Public = "PUBLIC",
}

/** Boolean expression to compare columns of type "room_ManagementMode_enum". All fields are combined with logical 'AND'. */
export type Room_ManagementMode_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Room_ManagementMode_Enum>;
    _in?: InputMaybe<Array<Room_ManagementMode_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Room_ManagementMode_Enum>;
    _nin?: InputMaybe<Array<Room_ManagementMode_Enum>>;
};

/** input type for inserting data into table "room.ManagementMode" */
export type Room_ManagementMode_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Room_ManagementMode_Max_Fields = {
    __typename?: "room_ManagementMode_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Room_ManagementMode_Min_Fields = {
    __typename?: "room_ManagementMode_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "room.ManagementMode" */
export type Room_ManagementMode_Mutation_Response = {
    __typename?: "room_ManagementMode_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_ManagementMode>;
};

/** input type for inserting object relation for remote table "room.ManagementMode" */
export type Room_ManagementMode_Obj_Rel_Insert_Input = {
    data: Room_ManagementMode_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_ManagementMode_On_Conflict>;
};

/** on_conflict condition type for table "room.ManagementMode" */
export type Room_ManagementMode_On_Conflict = {
    constraint: Room_ManagementMode_Constraint;
    update_columns?: Array<Room_ManagementMode_Update_Column>;
    where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ManagementMode". */
export type Room_ManagementMode_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ManagementMode */
export type Room_ManagementMode_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "room.ManagementMode" */
export enum Room_ManagementMode_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "room.ManagementMode" */
export type Room_ManagementMode_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "room.ManagementMode" */
export enum Room_ManagementMode_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "room.PersonRole" */
export type Room_PersonRole = {
    __typename?: "room_PersonRole";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "room.PersonRole" */
export type Room_PersonRole_Aggregate = {
    __typename?: "room_PersonRole_aggregate";
    aggregate?: Maybe<Room_PersonRole_Aggregate_Fields>;
    nodes: Array<Room_PersonRole>;
};

/** aggregate fields of "room.PersonRole" */
export type Room_PersonRole_Aggregate_Fields = {
    __typename?: "room_PersonRole_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Room_PersonRole_Max_Fields>;
    min?: Maybe<Room_PersonRole_Min_Fields>;
};

/** aggregate fields of "room.PersonRole" */
export type Room_PersonRole_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_PersonRole_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.PersonRole". All fields are combined with a logical 'AND'. */
export type Room_PersonRole_Bool_Exp = {
    _and?: InputMaybe<Array<Room_PersonRole_Bool_Exp>>;
    _not?: InputMaybe<Room_PersonRole_Bool_Exp>;
    _or?: InputMaybe<Array<Room_PersonRole_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.PersonRole" */
export enum Room_PersonRole_Constraint {
    /** unique or primary key constraint */
    PersonRolePkey = "PersonRole_pkey",
}

export enum Room_PersonRole_Enum {
    /** User has control over the room. */
    Admin = "ADMIN",
    /** User can participate in the room. */
    Participant = "PARTICIPANT",
}

/** Boolean expression to compare columns of type "room_PersonRole_enum". All fields are combined with logical 'AND'. */
export type Room_PersonRole_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Room_PersonRole_Enum>;
    _in?: InputMaybe<Array<Room_PersonRole_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Room_PersonRole_Enum>;
    _nin?: InputMaybe<Array<Room_PersonRole_Enum>>;
};

/** input type for inserting data into table "room.PersonRole" */
export type Room_PersonRole_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Room_PersonRole_Max_Fields = {
    __typename?: "room_PersonRole_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Room_PersonRole_Min_Fields = {
    __typename?: "room_PersonRole_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "room.PersonRole" */
export type Room_PersonRole_Mutation_Response = {
    __typename?: "room_PersonRole_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_PersonRole>;
};

/** input type for inserting object relation for remote table "room.PersonRole" */
export type Room_PersonRole_Obj_Rel_Insert_Input = {
    data: Room_PersonRole_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_PersonRole_On_Conflict>;
};

/** on_conflict condition type for table "room.PersonRole" */
export type Room_PersonRole_On_Conflict = {
    constraint: Room_PersonRole_Constraint;
    update_columns?: Array<Room_PersonRole_Update_Column>;
    where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

/** Ordering options when selecting data from "room.PersonRole". */
export type Room_PersonRole_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_PersonRole */
export type Room_PersonRole_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "room.PersonRole" */
export enum Room_PersonRole_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "room.PersonRole" */
export type Room_PersonRole_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "room.PersonRole" */
export enum Room_PersonRole_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "room.Room" */
export type Room_Room = {
    __typename?: "room_Room";
    backendName?: Maybe<Room_Backend_Enum>;
    capacity?: Maybe<Scalars["Int"]>;
    /** An object relationship */
    channelStack?: Maybe<Video_ChannelStack>;
    /** An array relationship */
    channelStackCreateJobs: Array<Job_Queues_ChannelStackCreateJob>;
    /** An aggregate relationship */
    channelStackCreateJobs_aggregate: Job_Queues_ChannelStackCreateJob_Aggregate;
    /** An object relationship */
    chat?: Maybe<Chat_Chat>;
    chatId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    chimeMeeting?: Maybe<Room_ChimeMeeting>;
    colour: Scalars["String"];
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    /** An array relationship */
    currentEvents: Array<Schedule_CurrentEvents>;
    /** An aggregate relationship */
    currentEvents_aggregate: Schedule_CurrentEvents_Aggregate;
    /** An array relationship */
    events: Array<Schedule_Event>;
    /** An aggregate relationship */
    events_aggregate: Schedule_Event_Aggregate;
    id: Scalars["uuid"];
    isProgramRoom?: Maybe<Scalars["Boolean"]>;
    /** A computed field, executes function "room.IsStreamingProgramRoom" */
    isStreamingProgramRoom?: Maybe<Scalars["Boolean"]>;
    /** An object relationship */
    item?: Maybe<Content_Item>;
    itemId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    livestreamDuration?: Maybe<Room_LivestreamDurations>;
    /** An object relationship */
    managementMode: Room_ManagementMode;
    managementModeName: Room_ManagementMode_Enum;
    name: Scalars["String"];
    /** An array relationship */
    presenceCounts: Array<Analytics_RoomPresence>;
    /** An aggregate relationship */
    presenceCounts_aggregate: Analytics_RoomPresence_Aggregate;
    priority: Scalars["Int"];
    publicVonageSessionId?: Maybe<Scalars["String"]>;
    /** An array relationship */
    roomMemberships: Array<Room_RoomMembership>;
    /** An aggregate relationship */
    roomMemberships_aggregate: Room_RoomMembership_Aggregate;
    /** An object relationship */
    rtmpInput?: Maybe<Video_RoomRtmpInput>;
    /** An object relationship */
    rtmpOutput?: Maybe<Video_RoomRtmpOutput>;
    /** An array relationship */
    shuffleRooms: Array<Room_ShuffleRoom>;
    /** An aggregate relationship */
    shuffleRooms_aggregate: Room_ShuffleRoom_Aggregate;
    /** An array relationship */
    stats: Array<Analytics_RoomStats>;
    /** An aggregate relationship */
    stats_aggregate: Analytics_RoomStats_Aggregate;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at: Scalars["timestamptz"];
    /** An array relationship */
    vonageParticipantStreams: Array<Video_VonageParticipantStream>;
    /** An aggregate relationship */
    vonageParticipantStreams_aggregate: Video_VonageParticipantStream_Aggregate;
    /** An array relationship */
    vonageRecordings: Array<Video_VonageRoomRecording>;
    /** An aggregate relationship */
    vonageRecordings_aggregate: Video_VonageRoomRecording_Aggregate;
    /** An object relationship */
    vonageSessionLayout?: Maybe<Video_VonageSessionLayout>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomChannelStackCreateJobsArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomChannelStackCreateJobs_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomCurrentEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomCurrentEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomPresenceCountsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomPresenceCounts_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomRoomMembershipsArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomRoomMemberships_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomShuffleRoomsArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomShuffleRooms_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomVonageParticipantStreamsArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomVonageParticipantStreams_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomVonageRecordingsArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomVonageRecordings_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** columns and relationships of "room.RoomGroupMembership" */
export type Room_RoomGroupMembership = {
    __typename?: "room_RoomGroupMembership";
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    group: Registrant_Group;
    groupId: Scalars["uuid"];
    id: Scalars["uuid"];
    /** An object relationship */
    room: Room_Room;
    roomId: Scalars["uuid"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Aggregate = {
    __typename?: "room_RoomGroupMembership_aggregate";
    aggregate?: Maybe<Room_RoomGroupMembership_Aggregate_Fields>;
    nodes: Array<Room_RoomGroupMembership>;
};

/** aggregate fields of "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Aggregate_Fields = {
    __typename?: "room_RoomGroupMembership_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Room_RoomGroupMembership_Max_Fields>;
    min?: Maybe<Room_RoomGroupMembership_Min_Fields>;
};

/** aggregate fields of "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_RoomGroupMembership_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.RoomGroupMembership". All fields are combined with a logical 'AND'. */
export type Room_RoomGroupMembership_Bool_Exp = {
    _and?: InputMaybe<Array<Room_RoomGroupMembership_Bool_Exp>>;
    _not?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
    _or?: InputMaybe<Array<Room_RoomGroupMembership_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    group?: InputMaybe<Registrant_Group_Bool_Exp>;
    groupId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.RoomGroupMembership" */
export enum Room_RoomGroupMembership_Constraint {
    /** unique or primary key constraint */
    RoomGroupMembershipPkey = "RoomGroupMembership_pkey",
    /** unique or primary key constraint */
    RoomGroupMembershipRoomIdGroupIdKey = "RoomGroupMembership_roomId_groupId_key",
}

/** input type for inserting data into table "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    group?: InputMaybe<Registrant_Group_Obj_Rel_Insert_Input>;
    groupId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_RoomGroupMembership_Max_Fields = {
    __typename?: "room_RoomGroupMembership_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    groupId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Room_RoomGroupMembership_Min_Fields = {
    __typename?: "room_RoomGroupMembership_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    groupId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Mutation_Response = {
    __typename?: "room_RoomGroupMembership_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_RoomGroupMembership>;
};

/** on_conflict condition type for table "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_On_Conflict = {
    constraint: Room_RoomGroupMembership_Constraint;
    update_columns?: Array<Room_RoomGroupMembership_Update_Column>;
    where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

/** Ordering options when selecting data from "room.RoomGroupMembership". */
export type Room_RoomGroupMembership_Order_By = {
    created_at?: InputMaybe<Order_By>;
    group?: InputMaybe<Registrant_Group_Order_By>;
    groupId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_RoomGroupMembership */
export type Room_RoomGroupMembership_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "room.RoomGroupMembership" */
export enum Room_RoomGroupMembership_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    GroupId = "groupId",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    groupId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "room.RoomGroupMembership" */
export enum Room_RoomGroupMembership_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    GroupId = "groupId",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "room.RoomMembership" */
export type Room_RoomMembership = {
    __typename?: "room_RoomMembership";
    createdAt: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An object relationship */
    personRole: Room_PersonRole;
    personRoleName: Room_PersonRole_Enum;
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    /** An object relationship */
    room: Room_Room;
    roomId: Scalars["uuid"];
    updatedAt: Scalars["timestamptz"];
};

/** aggregated selection of "room.RoomMembership" */
export type Room_RoomMembership_Aggregate = {
    __typename?: "room_RoomMembership_aggregate";
    aggregate?: Maybe<Room_RoomMembership_Aggregate_Fields>;
    nodes: Array<Room_RoomMembership>;
};

/** aggregate fields of "room.RoomMembership" */
export type Room_RoomMembership_Aggregate_Fields = {
    __typename?: "room_RoomMembership_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Room_RoomMembership_Max_Fields>;
    min?: Maybe<Room_RoomMembership_Min_Fields>;
};

/** aggregate fields of "room.RoomMembership" */
export type Room_RoomMembership_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_RoomMembership_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.RoomMembership" */
export type Room_RoomMembership_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Room_RoomMembership_Max_Order_By>;
    min?: InputMaybe<Room_RoomMembership_Min_Order_By>;
};

/** input type for inserting array relation for remote table "room.RoomMembership" */
export type Room_RoomMembership_Arr_Rel_Insert_Input = {
    data: Array<Room_RoomMembership_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_RoomMembership_On_Conflict>;
};

/** Boolean expression to filter rows from the table "room.RoomMembership". All fields are combined with a logical 'AND'. */
export type Room_RoomMembership_Bool_Exp = {
    _and?: InputMaybe<Array<Room_RoomMembership_Bool_Exp>>;
    _not?: InputMaybe<Room_RoomMembership_Bool_Exp>;
    _or?: InputMaybe<Array<Room_RoomMembership_Bool_Exp>>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    personRole?: InputMaybe<Room_PersonRole_Bool_Exp>;
    personRoleName?: InputMaybe<Room_PersonRole_Enum_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.RoomMembership" */
export enum Room_RoomMembership_Constraint {
    /** unique or primary key constraint */
    RoomPersonPkey = "RoomPerson_pkey",
    /** unique or primary key constraint */
    RoomPersonRegistrantIdRoomIdKey = "RoomPerson_registrantId_roomId_key",
}

/** input type for inserting data into table "room.RoomMembership" */
export type Room_RoomMembership_Insert_Input = {
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    personRole?: InputMaybe<Room_PersonRole_Obj_Rel_Insert_Input>;
    personRoleName?: InputMaybe<Room_PersonRole_Enum>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_RoomMembership_Max_Fields = {
    __typename?: "room_RoomMembership_max_fields";
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "room.RoomMembership" */
export type Room_RoomMembership_Max_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_RoomMembership_Min_Fields = {
    __typename?: "room_RoomMembership_min_fields";
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "room.RoomMembership" */
export type Room_RoomMembership_Min_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.RoomMembership" */
export type Room_RoomMembership_Mutation_Response = {
    __typename?: "room_RoomMembership_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_RoomMembership>;
};

/** on_conflict condition type for table "room.RoomMembership" */
export type Room_RoomMembership_On_Conflict = {
    constraint: Room_RoomMembership_Constraint;
    update_columns?: Array<Room_RoomMembership_Update_Column>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

/** Ordering options when selecting data from "room.RoomMembership". */
export type Room_RoomMembership_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    personRole?: InputMaybe<Room_PersonRole_Order_By>;
    personRoleName?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_RoomMembership */
export type Room_RoomMembership_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "room.RoomMembership" */
export enum Room_RoomMembership_Select_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    PersonRoleName = "personRoleName",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "room.RoomMembership" */
export type Room_RoomMembership_Set_Input = {
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    personRoleName?: InputMaybe<Room_PersonRole_Enum>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "room.RoomMembership" */
export enum Room_RoomMembership_Update_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    PersonRoleName = "personRoleName",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** aggregated selection of "room.Room" */
export type Room_Room_Aggregate = {
    __typename?: "room_Room_aggregate";
    aggregate?: Maybe<Room_Room_Aggregate_Fields>;
    nodes: Array<Room_Room>;
};

/** aggregate fields of "room.Room" */
export type Room_Room_Aggregate_Fields = {
    __typename?: "room_Room_aggregate_fields";
    avg?: Maybe<Room_Room_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Room_Room_Max_Fields>;
    min?: Maybe<Room_Room_Min_Fields>;
    stddev?: Maybe<Room_Room_Stddev_Fields>;
    stddev_pop?: Maybe<Room_Room_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Room_Room_Stddev_Samp_Fields>;
    sum?: Maybe<Room_Room_Sum_Fields>;
    var_pop?: Maybe<Room_Room_Var_Pop_Fields>;
    var_samp?: Maybe<Room_Room_Var_Samp_Fields>;
    variance?: Maybe<Room_Room_Variance_Fields>;
};

/** aggregate fields of "room.Room" */
export type Room_Room_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_Room_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.Room" */
export type Room_Room_Aggregate_Order_By = {
    avg?: InputMaybe<Room_Room_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Room_Room_Max_Order_By>;
    min?: InputMaybe<Room_Room_Min_Order_By>;
    stddev?: InputMaybe<Room_Room_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Room_Room_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Room_Room_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Room_Room_Sum_Order_By>;
    var_pop?: InputMaybe<Room_Room_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Room_Room_Var_Samp_Order_By>;
    variance?: InputMaybe<Room_Room_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.Room" */
export type Room_Room_Arr_Rel_Insert_Input = {
    data: Array<Room_Room_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_Room_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_Room_Avg_Fields = {
    __typename?: "room_Room_avg_fields";
    capacity?: Maybe<Scalars["Float"]>;
    priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "room.Room" */
export type Room_Room_Avg_Order_By = {
    capacity?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.Room". All fields are combined with a logical 'AND'. */
export type Room_Room_Bool_Exp = {
    _and?: InputMaybe<Array<Room_Room_Bool_Exp>>;
    _not?: InputMaybe<Room_Room_Bool_Exp>;
    _or?: InputMaybe<Array<Room_Room_Bool_Exp>>;
    backendName?: InputMaybe<Room_Backend_Enum_Comparison_Exp>;
    capacity?: InputMaybe<Int_Comparison_Exp>;
    channelStack?: InputMaybe<Video_ChannelStack_Bool_Exp>;
    channelStackCreateJobs?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
    chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    chatId?: InputMaybe<Uuid_Comparison_Exp>;
    chimeMeeting?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
    colour?: InputMaybe<String_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    currentEvents?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
    events?: InputMaybe<Schedule_Event_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    isProgramRoom?: InputMaybe<Boolean_Comparison_Exp>;
    isStreamingProgramRoom?: InputMaybe<Boolean_Comparison_Exp>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    livestreamDuration?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
    managementMode?: InputMaybe<Room_ManagementMode_Bool_Exp>;
    managementModeName?: InputMaybe<Room_ManagementMode_Enum_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    presenceCounts?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
    priority?: InputMaybe<Int_Comparison_Exp>;
    publicVonageSessionId?: InputMaybe<String_Comparison_Exp>;
    roomMemberships?: InputMaybe<Room_RoomMembership_Bool_Exp>;
    rtmpInput?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
    rtmpOutput?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
    shuffleRooms?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
    stats?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    vonageParticipantStreams?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
    vonageRecordings?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
    vonageSessionLayout?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

/** unique or primary key constraints on table "room.Room" */
export enum Room_Room_Constraint {
    /** unique or primary key constraint */
    RoomChatIdKey = "Room_chatId_key",
    /** unique or primary key constraint */
    RoomItemIdKey = "Room_itemId_key",
    /** unique or primary key constraint */
    RoomPkey = "Room_pkey",
}

/** input type for incrementing numeric columns in table "room.Room" */
export type Room_Room_Inc_Input = {
    capacity?: InputMaybe<Scalars["Int"]>;
    priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "room.Room" */
export type Room_Room_Insert_Input = {
    backendName?: InputMaybe<Room_Backend_Enum>;
    capacity?: InputMaybe<Scalars["Int"]>;
    channelStack?: InputMaybe<Video_ChannelStack_Obj_Rel_Insert_Input>;
    channelStackCreateJobs?: InputMaybe<Job_Queues_ChannelStackCreateJob_Arr_Rel_Insert_Input>;
    chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    chatId?: InputMaybe<Scalars["uuid"]>;
    chimeMeeting?: InputMaybe<Room_ChimeMeeting_Obj_Rel_Insert_Input>;
    colour?: InputMaybe<Scalars["String"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    currentEvents?: InputMaybe<Schedule_CurrentEvents_Arr_Rel_Insert_Input>;
    events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    livestreamDuration?: InputMaybe<Room_LivestreamDurations_Obj_Rel_Insert_Input>;
    managementMode?: InputMaybe<Room_ManagementMode_Obj_Rel_Insert_Input>;
    managementModeName?: InputMaybe<Room_ManagementMode_Enum>;
    name?: InputMaybe<Scalars["String"]>;
    presenceCounts?: InputMaybe<Analytics_RoomPresence_Arr_Rel_Insert_Input>;
    priority?: InputMaybe<Scalars["Int"]>;
    publicVonageSessionId?: InputMaybe<Scalars["String"]>;
    roomMemberships?: InputMaybe<Room_RoomMembership_Arr_Rel_Insert_Input>;
    rtmpInput?: InputMaybe<Video_RoomRtmpInput_Obj_Rel_Insert_Input>;
    rtmpOutput?: InputMaybe<Video_RoomRtmpOutput_Obj_Rel_Insert_Input>;
    shuffleRooms?: InputMaybe<Room_ShuffleRoom_Arr_Rel_Insert_Input>;
    stats?: InputMaybe<Analytics_RoomStats_Arr_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    vonageParticipantStreams?: InputMaybe<Video_VonageParticipantStream_Arr_Rel_Insert_Input>;
    vonageRecordings?: InputMaybe<Video_VonageRoomRecording_Arr_Rel_Insert_Input>;
    vonageSessionLayout?: InputMaybe<Video_VonageSessionLayout_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Room_Room_Max_Fields = {
    __typename?: "room_Room_max_fields";
    capacity?: Maybe<Scalars["Int"]>;
    chatId?: Maybe<Scalars["uuid"]>;
    colour?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    priority?: Maybe<Scalars["Int"]>;
    publicVonageSessionId?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "room.Room" */
export type Room_Room_Max_Order_By = {
    capacity?: InputMaybe<Order_By>;
    chatId?: InputMaybe<Order_By>;
    colour?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    publicVonageSessionId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_Room_Min_Fields = {
    __typename?: "room_Room_min_fields";
    capacity?: Maybe<Scalars["Int"]>;
    chatId?: Maybe<Scalars["uuid"]>;
    colour?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    priority?: Maybe<Scalars["Int"]>;
    publicVonageSessionId?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "room.Room" */
export type Room_Room_Min_Order_By = {
    capacity?: InputMaybe<Order_By>;
    chatId?: InputMaybe<Order_By>;
    colour?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    publicVonageSessionId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.Room" */
export type Room_Room_Mutation_Response = {
    __typename?: "room_Room_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_Room>;
};

/** input type for inserting object relation for remote table "room.Room" */
export type Room_Room_Obj_Rel_Insert_Input = {
    data: Room_Room_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_Room_On_Conflict>;
};

/** on_conflict condition type for table "room.Room" */
export type Room_Room_On_Conflict = {
    constraint: Room_Room_Constraint;
    update_columns?: Array<Room_Room_Update_Column>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** Ordering options when selecting data from "room.Room". */
export type Room_Room_Order_By = {
    backendName?: InputMaybe<Order_By>;
    capacity?: InputMaybe<Order_By>;
    channelStack?: InputMaybe<Video_ChannelStack_Order_By>;
    channelStackCreateJobs_aggregate?: InputMaybe<Job_Queues_ChannelStackCreateJob_Aggregate_Order_By>;
    chat?: InputMaybe<Chat_Chat_Order_By>;
    chatId?: InputMaybe<Order_By>;
    chimeMeeting?: InputMaybe<Room_ChimeMeeting_Order_By>;
    colour?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    currentEvents_aggregate?: InputMaybe<Schedule_CurrentEvents_Aggregate_Order_By>;
    events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    id?: InputMaybe<Order_By>;
    isProgramRoom?: InputMaybe<Order_By>;
    isStreamingProgramRoom?: InputMaybe<Order_By>;
    item?: InputMaybe<Content_Item_Order_By>;
    itemId?: InputMaybe<Order_By>;
    livestreamDuration?: InputMaybe<Room_LivestreamDurations_Order_By>;
    managementMode?: InputMaybe<Room_ManagementMode_Order_By>;
    managementModeName?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    presenceCounts_aggregate?: InputMaybe<Analytics_RoomPresence_Aggregate_Order_By>;
    priority?: InputMaybe<Order_By>;
    publicVonageSessionId?: InputMaybe<Order_By>;
    roomMemberships_aggregate?: InputMaybe<Room_RoomMembership_Aggregate_Order_By>;
    rtmpInput?: InputMaybe<Video_RoomRtmpInput_Order_By>;
    rtmpOutput?: InputMaybe<Video_RoomRtmpOutput_Order_By>;
    shuffleRooms_aggregate?: InputMaybe<Room_ShuffleRoom_Aggregate_Order_By>;
    stats_aggregate?: InputMaybe<Analytics_RoomStats_Aggregate_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    vonageParticipantStreams_aggregate?: InputMaybe<Video_VonageParticipantStream_Aggregate_Order_By>;
    vonageRecordings_aggregate?: InputMaybe<Video_VonageRoomRecording_Aggregate_Order_By>;
    vonageSessionLayout?: InputMaybe<Video_VonageSessionLayout_Order_By>;
};

/** primary key columns input for table: room_Room */
export type Room_Room_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "room.Room" */
export enum Room_Room_Select_Column {
    /** column name */
    BackendName = "backendName",
    /** column name */
    Capacity = "capacity",
    /** column name */
    ChatId = "chatId",
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ManagementModeName = "managementModeName",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    PublicVonageSessionId = "publicVonageSessionId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "room.Room" */
export type Room_Room_Set_Input = {
    backendName?: InputMaybe<Room_Backend_Enum>;
    capacity?: InputMaybe<Scalars["Int"]>;
    chatId?: InputMaybe<Scalars["uuid"]>;
    colour?: InputMaybe<Scalars["String"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    managementModeName?: InputMaybe<Room_ManagementMode_Enum>;
    name?: InputMaybe<Scalars["String"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    publicVonageSessionId?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Room_Room_Stddev_Fields = {
    __typename?: "room_Room_stddev_fields";
    capacity?: Maybe<Scalars["Float"]>;
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "room.Room" */
export type Room_Room_Stddev_Order_By = {
    capacity?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_Room_Stddev_Pop_Fields = {
    __typename?: "room_Room_stddev_pop_fields";
    capacity?: Maybe<Scalars["Float"]>;
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "room.Room" */
export type Room_Room_Stddev_Pop_Order_By = {
    capacity?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_Room_Stddev_Samp_Fields = {
    __typename?: "room_Room_stddev_samp_fields";
    capacity?: Maybe<Scalars["Float"]>;
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "room.Room" */
export type Room_Room_Stddev_Samp_Order_By = {
    capacity?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_Room_Sum_Fields = {
    __typename?: "room_Room_sum_fields";
    capacity?: Maybe<Scalars["Int"]>;
    priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "room.Room" */
export type Room_Room_Sum_Order_By = {
    capacity?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** update columns of table "room.Room" */
export enum Room_Room_Update_Column {
    /** column name */
    BackendName = "backendName",
    /** column name */
    Capacity = "capacity",
    /** column name */
    ChatId = "chatId",
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ManagementModeName = "managementModeName",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    PublicVonageSessionId = "publicVonageSessionId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Room_Room_Var_Pop_Fields = {
    __typename?: "room_Room_var_pop_fields";
    capacity?: Maybe<Scalars["Float"]>;
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "room.Room" */
export type Room_Room_Var_Pop_Order_By = {
    capacity?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_Room_Var_Samp_Fields = {
    __typename?: "room_Room_var_samp_fields";
    capacity?: Maybe<Scalars["Float"]>;
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "room.Room" */
export type Room_Room_Var_Samp_Order_By = {
    capacity?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_Room_Variance_Fields = {
    __typename?: "room_Room_variance_fields";
    capacity?: Maybe<Scalars["Float"]>;
    priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "room.Room" */
export type Room_Room_Variance_Order_By = {
    capacity?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm = {
    __typename?: "room_ShuffleAlgorithm";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate = {
    __typename?: "room_ShuffleAlgorithm_aggregate";
    aggregate?: Maybe<Room_ShuffleAlgorithm_Aggregate_Fields>;
    nodes: Array<Room_ShuffleAlgorithm>;
};

/** aggregate fields of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate_Fields = {
    __typename?: "room_ShuffleAlgorithm_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Room_ShuffleAlgorithm_Max_Fields>;
    min?: Maybe<Room_ShuffleAlgorithm_Min_Fields>;
};

/** aggregate fields of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.ShuffleAlgorithm". All fields are combined with a logical 'AND'. */
export type Room_ShuffleAlgorithm_Bool_Exp = {
    _and?: InputMaybe<Array<Room_ShuffleAlgorithm_Bool_Exp>>;
    _not?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
    _or?: InputMaybe<Array<Room_ShuffleAlgorithm_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShuffleAlgorithm" */
export enum Room_ShuffleAlgorithm_Constraint {
    /** unique or primary key constraint */
    ShuffleAlgorithmPkey = "ShuffleAlgorithm_pkey",
}

export enum Room_ShuffleAlgorithm_Enum {
    /** First-come, first-served with auto-created rooms. */
    Fcfs = "fcfs",
    /** First-come, first-served with a fixed set of (manually created) rooms. Limits max participants. */
    FcfsFixedRooms = "fcfs_fixed_rooms",
    /** No automation. Rooms and allocations controlled manually. */
    None = "none",
}

/** Boolean expression to compare columns of type "room_ShuffleAlgorithm_enum". All fields are combined with logical 'AND'. */
export type Room_ShuffleAlgorithm_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Room_ShuffleAlgorithm_Enum>;
    _in?: InputMaybe<Array<Room_ShuffleAlgorithm_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Room_ShuffleAlgorithm_Enum>;
    _nin?: InputMaybe<Array<Room_ShuffleAlgorithm_Enum>>;
};

/** input type for inserting data into table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Room_ShuffleAlgorithm_Max_Fields = {
    __typename?: "room_ShuffleAlgorithm_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Room_ShuffleAlgorithm_Min_Fields = {
    __typename?: "room_ShuffleAlgorithm_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Mutation_Response = {
    __typename?: "room_ShuffleAlgorithm_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_ShuffleAlgorithm>;
};

/** on_conflict condition type for table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_On_Conflict = {
    constraint: Room_ShuffleAlgorithm_Constraint;
    update_columns?: Array<Room_ShuffleAlgorithm_Update_Column>;
    where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ShuffleAlgorithm". */
export type Room_ShuffleAlgorithm_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ShuffleAlgorithm */
export type Room_ShuffleAlgorithm_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "room.ShuffleAlgorithm" */
export enum Room_ShuffleAlgorithm_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "room.ShuffleAlgorithm" */
export enum Room_ShuffleAlgorithm_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriod = {
    __typename?: "room_ShufflePeriod";
    algorithm: Room_ShuffleAlgorithm_Enum;
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    endAt: Scalars["timestamptz"];
    /** An array relationship */
    events: Array<Schedule_Event>;
    /** An aggregate relationship */
    events_aggregate: Schedule_Event_Aggregate;
    id: Scalars["uuid"];
    maxRegistrantsPerRoom: Scalars["Int"];
    name: Scalars["String"];
    /** An object relationship */
    organiser: Registrant_Registrant;
    organiserId: Scalars["uuid"];
    /** An array relationship */
    queueEntries: Array<Room_ShuffleQueueEntry>;
    /** An aggregate relationship */
    queueEntries_aggregate: Room_ShuffleQueueEntry_Aggregate;
    roomDurationMinutes: Scalars["Int"];
    /** An array relationship */
    shuffleRooms: Array<Room_ShuffleRoom>;
    /** An aggregate relationship */
    shuffleRooms_aggregate: Room_ShuffleRoom_Aggregate;
    startAt: Scalars["timestamptz"];
    subconferenceId?: Maybe<Scalars["uuid"]>;
    targetRegistrantsPerRoom: Scalars["Int"];
    updated_at: Scalars["timestamptz"];
    waitRoomMaxDurationSeconds: Scalars["Int"];
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodQueueEntriesArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodQueueEntries_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodShuffleRoomsArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodShuffleRooms_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** aggregated selection of "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate = {
    __typename?: "room_ShufflePeriod_aggregate";
    aggregate?: Maybe<Room_ShufflePeriod_Aggregate_Fields>;
    nodes: Array<Room_ShufflePeriod>;
};

/** aggregate fields of "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate_Fields = {
    __typename?: "room_ShufflePeriod_aggregate_fields";
    avg?: Maybe<Room_ShufflePeriod_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Room_ShufflePeriod_Max_Fields>;
    min?: Maybe<Room_ShufflePeriod_Min_Fields>;
    stddev?: Maybe<Room_ShufflePeriod_Stddev_Fields>;
    stddev_pop?: Maybe<Room_ShufflePeriod_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Room_ShufflePeriod_Stddev_Samp_Fields>;
    sum?: Maybe<Room_ShufflePeriod_Sum_Fields>;
    var_pop?: Maybe<Room_ShufflePeriod_Var_Pop_Fields>;
    var_samp?: Maybe<Room_ShufflePeriod_Var_Samp_Fields>;
    variance?: Maybe<Room_ShufflePeriod_Variance_Fields>;
};

/** aggregate fields of "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_ShufflePeriod_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate_Order_By = {
    avg?: InputMaybe<Room_ShufflePeriod_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Room_ShufflePeriod_Max_Order_By>;
    min?: InputMaybe<Room_ShufflePeriod_Min_Order_By>;
    stddev?: InputMaybe<Room_ShufflePeriod_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Room_ShufflePeriod_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Room_ShufflePeriod_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Room_ShufflePeriod_Sum_Order_By>;
    var_pop?: InputMaybe<Room_ShufflePeriod_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Room_ShufflePeriod_Var_Samp_Order_By>;
    variance?: InputMaybe<Room_ShufflePeriod_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Arr_Rel_Insert_Input = {
    data: Array<Room_ShufflePeriod_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_ShufflePeriod_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_ShufflePeriod_Avg_Fields = {
    __typename?: "room_ShufflePeriod_avg_fields";
    maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    roomDurationMinutes?: Maybe<Scalars["Float"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Avg_Order_By = {
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.ShufflePeriod". All fields are combined with a logical 'AND'. */
export type Room_ShufflePeriod_Bool_Exp = {
    _and?: InputMaybe<Array<Room_ShufflePeriod_Bool_Exp>>;
    _not?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    _or?: InputMaybe<Array<Room_ShufflePeriod_Bool_Exp>>;
    algorithm?: InputMaybe<Room_ShuffleAlgorithm_Enum_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    endAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    events?: InputMaybe<Schedule_Event_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    maxRegistrantsPerRoom?: InputMaybe<Int_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    organiser?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    organiserId?: InputMaybe<Uuid_Comparison_Exp>;
    queueEntries?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
    roomDurationMinutes?: InputMaybe<Int_Comparison_Exp>;
    shuffleRooms?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
    startAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    targetRegistrantsPerRoom?: InputMaybe<Int_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    waitRoomMaxDurationSeconds?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShufflePeriod" */
export enum Room_ShufflePeriod_Constraint {
    /** unique or primary key constraint */
    ShufflePeriodPkey = "ShufflePeriod_pkey",
}

/** input type for incrementing numeric columns in table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Inc_Input = {
    maxRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    roomDurationMinutes?: InputMaybe<Scalars["Int"]>;
    targetRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    waitRoomMaxDurationSeconds?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Insert_Input = {
    algorithm?: InputMaybe<Room_ShuffleAlgorithm_Enum>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    endAt?: InputMaybe<Scalars["timestamptz"]>;
    events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    maxRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    name?: InputMaybe<Scalars["String"]>;
    organiser?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    organiserId?: InputMaybe<Scalars["uuid"]>;
    queueEntries?: InputMaybe<Room_ShuffleQueueEntry_Arr_Rel_Insert_Input>;
    roomDurationMinutes?: InputMaybe<Scalars["Int"]>;
    shuffleRooms?: InputMaybe<Room_ShuffleRoom_Arr_Rel_Insert_Input>;
    startAt?: InputMaybe<Scalars["timestamptz"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    targetRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    waitRoomMaxDurationSeconds?: InputMaybe<Scalars["Int"]>;
};

/** aggregate max on columns */
export type Room_ShufflePeriod_Max_Fields = {
    __typename?: "room_ShufflePeriod_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    endAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    maxRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    name?: Maybe<Scalars["String"]>;
    organiserId?: Maybe<Scalars["uuid"]>;
    roomDurationMinutes?: Maybe<Scalars["Int"]>;
    startAt?: Maybe<Scalars["timestamptz"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    endAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    organiserId?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    startAt?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShufflePeriod_Min_Fields = {
    __typename?: "room_ShufflePeriod_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    endAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    maxRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    name?: Maybe<Scalars["String"]>;
    organiserId?: Maybe<Scalars["uuid"]>;
    roomDurationMinutes?: Maybe<Scalars["Int"]>;
    startAt?: Maybe<Scalars["timestamptz"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    endAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    organiserId?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    startAt?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Mutation_Response = {
    __typename?: "room_ShufflePeriod_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_ShufflePeriod>;
};

/** input type for inserting object relation for remote table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Obj_Rel_Insert_Input = {
    data: Room_ShufflePeriod_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_ShufflePeriod_On_Conflict>;
};

/** on_conflict condition type for table "room.ShufflePeriod" */
export type Room_ShufflePeriod_On_Conflict = {
    constraint: Room_ShufflePeriod_Constraint;
    update_columns?: Array<Room_ShufflePeriod_Update_Column>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ShufflePeriod". */
export type Room_ShufflePeriod_Order_By = {
    algorithm?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    endAt?: InputMaybe<Order_By>;
    events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    id?: InputMaybe<Order_By>;
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    organiser?: InputMaybe<Registrant_Registrant_Order_By>;
    organiserId?: InputMaybe<Order_By>;
    queueEntries_aggregate?: InputMaybe<Room_ShuffleQueueEntry_Aggregate_Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    shuffleRooms_aggregate?: InputMaybe<Room_ShuffleRoom_Aggregate_Order_By>;
    startAt?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ShufflePeriod */
export type Room_ShufflePeriod_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "room.ShufflePeriod" */
export enum Room_ShufflePeriod_Select_Column {
    /** column name */
    Algorithm = "algorithm",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EndAt = "endAt",
    /** column name */
    Id = "id",
    /** column name */
    MaxRegistrantsPerRoom = "maxRegistrantsPerRoom",
    /** column name */
    Name = "name",
    /** column name */
    OrganiserId = "organiserId",
    /** column name */
    RoomDurationMinutes = "roomDurationMinutes",
    /** column name */
    StartAt = "startAt",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TargetRegistrantsPerRoom = "targetRegistrantsPerRoom",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    WaitRoomMaxDurationSeconds = "waitRoomMaxDurationSeconds",
}

/** input type for updating data in table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Set_Input = {
    algorithm?: InputMaybe<Room_ShuffleAlgorithm_Enum>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    endAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    maxRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    name?: InputMaybe<Scalars["String"]>;
    organiserId?: InputMaybe<Scalars["uuid"]>;
    roomDurationMinutes?: InputMaybe<Scalars["Int"]>;
    startAt?: InputMaybe<Scalars["timestamptz"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    targetRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    waitRoomMaxDurationSeconds?: InputMaybe<Scalars["Int"]>;
};

/** aggregate stddev on columns */
export type Room_ShufflePeriod_Stddev_Fields = {
    __typename?: "room_ShufflePeriod_stddev_fields";
    maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    roomDurationMinutes?: Maybe<Scalars["Float"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Stddev_Order_By = {
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_ShufflePeriod_Stddev_Pop_Fields = {
    __typename?: "room_ShufflePeriod_stddev_pop_fields";
    maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    roomDurationMinutes?: Maybe<Scalars["Float"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Stddev_Pop_Order_By = {
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_ShufflePeriod_Stddev_Samp_Fields = {
    __typename?: "room_ShufflePeriod_stddev_samp_fields";
    maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    roomDurationMinutes?: Maybe<Scalars["Float"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Stddev_Samp_Order_By = {
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_ShufflePeriod_Sum_Fields = {
    __typename?: "room_ShufflePeriod_sum_fields";
    maxRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    roomDurationMinutes?: Maybe<Scalars["Int"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Sum_Order_By = {
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** update columns of table "room.ShufflePeriod" */
export enum Room_ShufflePeriod_Update_Column {
    /** column name */
    Algorithm = "algorithm",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EndAt = "endAt",
    /** column name */
    Id = "id",
    /** column name */
    MaxRegistrantsPerRoom = "maxRegistrantsPerRoom",
    /** column name */
    Name = "name",
    /** column name */
    OrganiserId = "organiserId",
    /** column name */
    RoomDurationMinutes = "roomDurationMinutes",
    /** column name */
    StartAt = "startAt",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TargetRegistrantsPerRoom = "targetRegistrantsPerRoom",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    WaitRoomMaxDurationSeconds = "waitRoomMaxDurationSeconds",
}

/** aggregate var_pop on columns */
export type Room_ShufflePeriod_Var_Pop_Fields = {
    __typename?: "room_ShufflePeriod_var_pop_fields";
    maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    roomDurationMinutes?: Maybe<Scalars["Float"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Var_Pop_Order_By = {
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_ShufflePeriod_Var_Samp_Fields = {
    __typename?: "room_ShufflePeriod_var_samp_fields";
    maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    roomDurationMinutes?: Maybe<Scalars["Float"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Var_Samp_Order_By = {
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_ShufflePeriod_Variance_Fields = {
    __typename?: "room_ShufflePeriod_variance_fields";
    maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    roomDurationMinutes?: Maybe<Scalars["Float"]>;
    targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Variance_Order_By = {
    maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    roomDurationMinutes?: InputMaybe<Order_By>;
    targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** columns and relationships of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry = {
    __typename?: "room_ShuffleQueueEntry";
    allocatedShuffleRoomId?: Maybe<Scalars["Int"]>;
    created_at: Scalars["timestamptz"];
    id: Scalars["bigint"];
    isExpired: Scalars["Boolean"];
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    /** An object relationship */
    shufflePeriod: Room_ShufflePeriod;
    shufflePeriodId: Scalars["uuid"];
    /** An object relationship */
    shuffleRoom?: Maybe<Room_ShuffleRoom>;
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate = {
    __typename?: "room_ShuffleQueueEntry_aggregate";
    aggregate?: Maybe<Room_ShuffleQueueEntry_Aggregate_Fields>;
    nodes: Array<Room_ShuffleQueueEntry>;
};

/** aggregate fields of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate_Fields = {
    __typename?: "room_ShuffleQueueEntry_aggregate_fields";
    avg?: Maybe<Room_ShuffleQueueEntry_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Room_ShuffleQueueEntry_Max_Fields>;
    min?: Maybe<Room_ShuffleQueueEntry_Min_Fields>;
    stddev?: Maybe<Room_ShuffleQueueEntry_Stddev_Fields>;
    stddev_pop?: Maybe<Room_ShuffleQueueEntry_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Room_ShuffleQueueEntry_Stddev_Samp_Fields>;
    sum?: Maybe<Room_ShuffleQueueEntry_Sum_Fields>;
    var_pop?: Maybe<Room_ShuffleQueueEntry_Var_Pop_Fields>;
    var_samp?: Maybe<Room_ShuffleQueueEntry_Var_Samp_Fields>;
    variance?: Maybe<Room_ShuffleQueueEntry_Variance_Fields>;
};

/** aggregate fields of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate_Order_By = {
    avg?: InputMaybe<Room_ShuffleQueueEntry_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Room_ShuffleQueueEntry_Max_Order_By>;
    min?: InputMaybe<Room_ShuffleQueueEntry_Min_Order_By>;
    stddev?: InputMaybe<Room_ShuffleQueueEntry_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Room_ShuffleQueueEntry_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Room_ShuffleQueueEntry_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Room_ShuffleQueueEntry_Sum_Order_By>;
    var_pop?: InputMaybe<Room_ShuffleQueueEntry_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Room_ShuffleQueueEntry_Var_Samp_Order_By>;
    variance?: InputMaybe<Room_ShuffleQueueEntry_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Arr_Rel_Insert_Input = {
    data: Array<Room_ShuffleQueueEntry_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_ShuffleQueueEntry_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_ShuffleQueueEntry_Avg_Fields = {
    __typename?: "room_ShuffleQueueEntry_avg_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Avg_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.ShuffleQueueEntry". All fields are combined with a logical 'AND'. */
export type Room_ShuffleQueueEntry_Bool_Exp = {
    _and?: InputMaybe<Array<Room_ShuffleQueueEntry_Bool_Exp>>;
    _not?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
    _or?: InputMaybe<Array<Room_ShuffleQueueEntry_Bool_Exp>>;
    allocatedShuffleRoomId?: InputMaybe<Int_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Bigint_Comparison_Exp>;
    isExpired?: InputMaybe<Boolean_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    shufflePeriodId?: InputMaybe<Uuid_Comparison_Exp>;
    shuffleRoom?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShuffleQueueEntry" */
export enum Room_ShuffleQueueEntry_Constraint {
    /** unique or primary key constraint */
    ShuffleQueueEntryPkey = "ShuffleQueueEntry_pkey",
    /** unique or primary key constraint */
    RoomShuffleQueueEntryIsWaiting = "room_ShuffleQueueEntry_isWaiting",
}

/** input type for incrementing numeric columns in table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Inc_Input = {
    allocatedShuffleRoomId?: InputMaybe<Scalars["Int"]>;
    id?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Insert_Input = {
    allocatedShuffleRoomId?: InputMaybe<Scalars["Int"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["bigint"]>;
    isExpired?: InputMaybe<Scalars["Boolean"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
    shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    shuffleRoom?: InputMaybe<Room_ShuffleRoom_Obj_Rel_Insert_Input>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_ShuffleQueueEntry_Max_Fields = {
    __typename?: "room_ShuffleQueueEntry_max_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Int"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["bigint"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Max_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShuffleQueueEntry_Min_Fields = {
    __typename?: "room_ShuffleQueueEntry_min_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Int"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["bigint"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Min_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Mutation_Response = {
    __typename?: "room_ShuffleQueueEntry_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_ShuffleQueueEntry>;
};

/** on_conflict condition type for table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_On_Conflict = {
    constraint: Room_ShuffleQueueEntry_Constraint;
    update_columns?: Array<Room_ShuffleQueueEntry_Update_Column>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ShuffleQueueEntry". */
export type Room_ShuffleQueueEntry_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    isExpired?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    shuffleRoom?: InputMaybe<Room_ShuffleRoom_Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ShuffleQueueEntry */
export type Room_ShuffleQueueEntry_Pk_Columns_Input = {
    id: Scalars["bigint"];
};

/** select columns of table "room.ShuffleQueueEntry" */
export enum Room_ShuffleQueueEntry_Select_Column {
    /** column name */
    AllocatedShuffleRoomId = "allocatedShuffleRoomId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    IsExpired = "isExpired",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Set_Input = {
    allocatedShuffleRoomId?: InputMaybe<Scalars["Int"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["bigint"]>;
    isExpired?: InputMaybe<Scalars["Boolean"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Room_ShuffleQueueEntry_Stddev_Fields = {
    __typename?: "room_ShuffleQueueEntry_stddev_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Stddev_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_ShuffleQueueEntry_Stddev_Pop_Fields = {
    __typename?: "room_ShuffleQueueEntry_stddev_pop_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Stddev_Pop_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_ShuffleQueueEntry_Stddev_Samp_Fields = {
    __typename?: "room_ShuffleQueueEntry_stddev_samp_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Stddev_Samp_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_ShuffleQueueEntry_Sum_Fields = {
    __typename?: "room_ShuffleQueueEntry_sum_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Int"]>;
    id?: Maybe<Scalars["bigint"]>;
};

/** order by sum() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Sum_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** update columns of table "room.ShuffleQueueEntry" */
export enum Room_ShuffleQueueEntry_Update_Column {
    /** column name */
    AllocatedShuffleRoomId = "allocatedShuffleRoomId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    IsExpired = "isExpired",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Room_ShuffleQueueEntry_Var_Pop_Fields = {
    __typename?: "room_ShuffleQueueEntry_var_pop_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Var_Pop_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_ShuffleQueueEntry_Var_Samp_Fields = {
    __typename?: "room_ShuffleQueueEntry_var_samp_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Var_Samp_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_ShuffleQueueEntry_Variance_Fields = {
    __typename?: "room_ShuffleQueueEntry_variance_fields";
    allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Variance_Order_By = {
    allocatedShuffleRoomId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoom = {
    __typename?: "room_ShuffleRoom";
    /** An array relationship */
    continuations: Array<Schedule_Continuation>;
    /** An aggregate relationship */
    continuations_aggregate: Schedule_Continuation_Aggregate;
    created_at: Scalars["timestamptz"];
    durationMinutes: Scalars["Int"];
    id: Scalars["bigint"];
    isEnded: Scalars["Boolean"];
    /** An array relationship */
    queueEntries: Array<Room_ShuffleQueueEntry>;
    /** An aggregate relationship */
    queueEntries_aggregate: Room_ShuffleQueueEntry_Aggregate;
    reshuffleUponEnd: Scalars["Boolean"];
    /** An object relationship */
    room: Room_Room;
    roomId: Scalars["uuid"];
    /** An object relationship */
    shufflePeriod: Room_ShufflePeriod;
    shufflePeriodId: Scalars["uuid"];
    startedAt: Scalars["timestamptz"];
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomContinuationsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomContinuations_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomQueueEntriesArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomQueueEntries_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** aggregated selection of "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate = {
    __typename?: "room_ShuffleRoom_aggregate";
    aggregate?: Maybe<Room_ShuffleRoom_Aggregate_Fields>;
    nodes: Array<Room_ShuffleRoom>;
};

/** aggregate fields of "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate_Fields = {
    __typename?: "room_ShuffleRoom_aggregate_fields";
    avg?: Maybe<Room_ShuffleRoom_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Room_ShuffleRoom_Max_Fields>;
    min?: Maybe<Room_ShuffleRoom_Min_Fields>;
    stddev?: Maybe<Room_ShuffleRoom_Stddev_Fields>;
    stddev_pop?: Maybe<Room_ShuffleRoom_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Room_ShuffleRoom_Stddev_Samp_Fields>;
    sum?: Maybe<Room_ShuffleRoom_Sum_Fields>;
    var_pop?: Maybe<Room_ShuffleRoom_Var_Pop_Fields>;
    var_samp?: Maybe<Room_ShuffleRoom_Var_Samp_Fields>;
    variance?: Maybe<Room_ShuffleRoom_Variance_Fields>;
};

/** aggregate fields of "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Room_ShuffleRoom_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate_Order_By = {
    avg?: InputMaybe<Room_ShuffleRoom_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Room_ShuffleRoom_Max_Order_By>;
    min?: InputMaybe<Room_ShuffleRoom_Min_Order_By>;
    stddev?: InputMaybe<Room_ShuffleRoom_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Room_ShuffleRoom_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Room_ShuffleRoom_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Room_ShuffleRoom_Sum_Order_By>;
    var_pop?: InputMaybe<Room_ShuffleRoom_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Room_ShuffleRoom_Var_Samp_Order_By>;
    variance?: InputMaybe<Room_ShuffleRoom_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Arr_Rel_Insert_Input = {
    data: Array<Room_ShuffleRoom_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_ShuffleRoom_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_ShuffleRoom_Avg_Fields = {
    __typename?: "room_ShuffleRoom_avg_fields";
    durationMinutes?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Avg_Order_By = {
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.ShuffleRoom". All fields are combined with a logical 'AND'. */
export type Room_ShuffleRoom_Bool_Exp = {
    _and?: InputMaybe<Array<Room_ShuffleRoom_Bool_Exp>>;
    _not?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
    _or?: InputMaybe<Array<Room_ShuffleRoom_Bool_Exp>>;
    continuations?: InputMaybe<Schedule_Continuation_Bool_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    durationMinutes?: InputMaybe<Int_Comparison_Exp>;
    id?: InputMaybe<Bigint_Comparison_Exp>;
    isEnded?: InputMaybe<Boolean_Comparison_Exp>;
    queueEntries?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
    reshuffleUponEnd?: InputMaybe<Boolean_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    shufflePeriodId?: InputMaybe<Uuid_Comparison_Exp>;
    startedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShuffleRoom" */
export enum Room_ShuffleRoom_Constraint {
    /** unique or primary key constraint */
    ShuffleRoomPkey = "ShuffleRoom_pkey",
}

/** input type for incrementing numeric columns in table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Inc_Input = {
    durationMinutes?: InputMaybe<Scalars["Int"]>;
    id?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Insert_Input = {
    continuations?: InputMaybe<Schedule_Continuation_Arr_Rel_Insert_Input>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    durationMinutes?: InputMaybe<Scalars["Int"]>;
    id?: InputMaybe<Scalars["bigint"]>;
    isEnded?: InputMaybe<Scalars["Boolean"]>;
    queueEntries?: InputMaybe<Room_ShuffleQueueEntry_Arr_Rel_Insert_Input>;
    reshuffleUponEnd?: InputMaybe<Scalars["Boolean"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
    shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    startedAt?: InputMaybe<Scalars["timestamptz"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_ShuffleRoom_Max_Fields = {
    __typename?: "room_ShuffleRoom_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    durationMinutes?: Maybe<Scalars["Int"]>;
    id?: Maybe<Scalars["bigint"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    startedAt?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    startedAt?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShuffleRoom_Min_Fields = {
    __typename?: "room_ShuffleRoom_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    durationMinutes?: Maybe<Scalars["Int"]>;
    id?: Maybe<Scalars["bigint"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    startedAt?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    startedAt?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Mutation_Response = {
    __typename?: "room_ShuffleRoom_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Room_ShuffleRoom>;
};

/** input type for inserting object relation for remote table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Obj_Rel_Insert_Input = {
    data: Room_ShuffleRoom_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Room_ShuffleRoom_On_Conflict>;
};

/** on_conflict condition type for table "room.ShuffleRoom" */
export type Room_ShuffleRoom_On_Conflict = {
    constraint: Room_ShuffleRoom_Constraint;
    update_columns?: Array<Room_ShuffleRoom_Update_Column>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ShuffleRoom". */
export type Room_ShuffleRoom_Order_By = {
    continuations_aggregate?: InputMaybe<Schedule_Continuation_Aggregate_Order_By>;
    created_at?: InputMaybe<Order_By>;
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    isEnded?: InputMaybe<Order_By>;
    queueEntries_aggregate?: InputMaybe<Room_ShuffleQueueEntry_Aggregate_Order_By>;
    reshuffleUponEnd?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    startedAt?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ShuffleRoom */
export type Room_ShuffleRoom_Pk_Columns_Input = {
    id: Scalars["bigint"];
};

/** select columns of table "room.ShuffleRoom" */
export enum Room_ShuffleRoom_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DurationMinutes = "durationMinutes",
    /** column name */
    Id = "id",
    /** column name */
    IsEnded = "isEnded",
    /** column name */
    ReshuffleUponEnd = "reshuffleUponEnd",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StartedAt = "startedAt",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    durationMinutes?: InputMaybe<Scalars["Int"]>;
    id?: InputMaybe<Scalars["bigint"]>;
    isEnded?: InputMaybe<Scalars["Boolean"]>;
    reshuffleUponEnd?: InputMaybe<Scalars["Boolean"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    startedAt?: InputMaybe<Scalars["timestamptz"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Room_ShuffleRoom_Stddev_Fields = {
    __typename?: "room_ShuffleRoom_stddev_fields";
    durationMinutes?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Stddev_Order_By = {
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_ShuffleRoom_Stddev_Pop_Fields = {
    __typename?: "room_ShuffleRoom_stddev_pop_fields";
    durationMinutes?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Stddev_Pop_Order_By = {
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_ShuffleRoom_Stddev_Samp_Fields = {
    __typename?: "room_ShuffleRoom_stddev_samp_fields";
    durationMinutes?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Stddev_Samp_Order_By = {
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_ShuffleRoom_Sum_Fields = {
    __typename?: "room_ShuffleRoom_sum_fields";
    durationMinutes?: Maybe<Scalars["Int"]>;
    id?: Maybe<Scalars["bigint"]>;
};

/** order by sum() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Sum_Order_By = {
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** update columns of table "room.ShuffleRoom" */
export enum Room_ShuffleRoom_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DurationMinutes = "durationMinutes",
    /** column name */
    Id = "id",
    /** column name */
    IsEnded = "isEnded",
    /** column name */
    ReshuffleUponEnd = "reshuffleUponEnd",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StartedAt = "startedAt",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Room_ShuffleRoom_Var_Pop_Fields = {
    __typename?: "room_ShuffleRoom_var_pop_fields";
    durationMinutes?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Var_Pop_Order_By = {
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_ShuffleRoom_Var_Samp_Fields = {
    __typename?: "room_ShuffleRoom_var_samp_fields";
    durationMinutes?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Var_Samp_Order_By = {
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_ShuffleRoom_Variance_Fields = {
    __typename?: "room_ShuffleRoom_variance_fields";
    durationMinutes?: Maybe<Scalars["Float"]>;
    id?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Variance_Order_By = {
    durationMinutes?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
};

/** A continuation from the end of an event or shuffle room to the next thing. Enables organisers to create a guided flow for attendees. It is possible to specify multiple continuations from the same point, giving attendees a choice of where to go. */
export type Schedule_Continuation = {
    __typename?: "schedule_Continuation";
    colour: Scalars["String"];
    defaultFor: Scalars["String"];
    description: Scalars["String"];
    /** An object relationship */
    event?: Maybe<Schedule_Event>;
    fromEvent?: Maybe<Scalars["uuid"]>;
    fromShuffleQueue?: Maybe<Scalars["uuid"]>;
    id: Scalars["uuid"];
    isActiveChoice: Scalars["Boolean"];
    priority: Scalars["Int"];
    /** An object relationship */
    shufflePeriod?: Maybe<Room_ShufflePeriod>;
    to: Scalars["jsonb"];
};

/** A continuation from the end of an event or shuffle room to the next thing. Enables organisers to create a guided flow for attendees. It is possible to specify multiple continuations from the same point, giving attendees a choice of where to go. */
export type Schedule_ContinuationToArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "schedule.Continuation" */
export type Schedule_Continuation_Aggregate = {
    __typename?: "schedule_Continuation_aggregate";
    aggregate?: Maybe<Schedule_Continuation_Aggregate_Fields>;
    nodes: Array<Schedule_Continuation>;
};

/** aggregate fields of "schedule.Continuation" */
export type Schedule_Continuation_Aggregate_Fields = {
    __typename?: "schedule_Continuation_aggregate_fields";
    avg?: Maybe<Schedule_Continuation_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Schedule_Continuation_Max_Fields>;
    min?: Maybe<Schedule_Continuation_Min_Fields>;
    stddev?: Maybe<Schedule_Continuation_Stddev_Fields>;
    stddev_pop?: Maybe<Schedule_Continuation_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Schedule_Continuation_Stddev_Samp_Fields>;
    sum?: Maybe<Schedule_Continuation_Sum_Fields>;
    var_pop?: Maybe<Schedule_Continuation_Var_Pop_Fields>;
    var_samp?: Maybe<Schedule_Continuation_Var_Samp_Fields>;
    variance?: Maybe<Schedule_Continuation_Variance_Fields>;
};

/** aggregate fields of "schedule.Continuation" */
export type Schedule_Continuation_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Schedule_Continuation_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "schedule.Continuation" */
export type Schedule_Continuation_Aggregate_Order_By = {
    avg?: InputMaybe<Schedule_Continuation_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Schedule_Continuation_Max_Order_By>;
    min?: InputMaybe<Schedule_Continuation_Min_Order_By>;
    stddev?: InputMaybe<Schedule_Continuation_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Schedule_Continuation_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Schedule_Continuation_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Schedule_Continuation_Sum_Order_By>;
    var_pop?: InputMaybe<Schedule_Continuation_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Schedule_Continuation_Var_Samp_Order_By>;
    variance?: InputMaybe<Schedule_Continuation_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Schedule_Continuation_Append_Input = {
    to?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "schedule.Continuation" */
export type Schedule_Continuation_Arr_Rel_Insert_Input = {
    data: Array<Schedule_Continuation_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Schedule_Continuation_On_Conflict>;
};

/** aggregate avg on columns */
export type Schedule_Continuation_Avg_Fields = {
    __typename?: "schedule_Continuation_avg_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Avg_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "schedule.Continuation". All fields are combined with a logical 'AND'. */
export type Schedule_Continuation_Bool_Exp = {
    _and?: InputMaybe<Array<Schedule_Continuation_Bool_Exp>>;
    _not?: InputMaybe<Schedule_Continuation_Bool_Exp>;
    _or?: InputMaybe<Array<Schedule_Continuation_Bool_Exp>>;
    colour?: InputMaybe<String_Comparison_Exp>;
    defaultFor?: InputMaybe<String_Comparison_Exp>;
    description?: InputMaybe<String_Comparison_Exp>;
    event?: InputMaybe<Schedule_Event_Bool_Exp>;
    fromEvent?: InputMaybe<Uuid_Comparison_Exp>;
    fromShuffleQueue?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    isActiveChoice?: InputMaybe<Boolean_Comparison_Exp>;
    priority?: InputMaybe<Int_Comparison_Exp>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    to?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.Continuation" */
export enum Schedule_Continuation_Constraint {
    /** unique or primary key constraint */
    ContinuationPkey = "Continuation_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Schedule_Continuation_Delete_At_Path_Input = {
    to?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Schedule_Continuation_Delete_Elem_Input = {
    to?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Schedule_Continuation_Delete_Key_Input = {
    to?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "schedule.Continuation" */
export type Schedule_Continuation_Inc_Input = {
    priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "schedule.Continuation" */
export type Schedule_Continuation_Insert_Input = {
    colour?: InputMaybe<Scalars["String"]>;
    defaultFor?: InputMaybe<Scalars["String"]>;
    description?: InputMaybe<Scalars["String"]>;
    event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    fromEvent?: InputMaybe<Scalars["uuid"]>;
    fromShuffleQueue?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isActiveChoice?: InputMaybe<Scalars["Boolean"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
    to?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type Schedule_Continuation_Max_Fields = {
    __typename?: "schedule_Continuation_max_fields";
    colour?: Maybe<Scalars["String"]>;
    defaultFor?: Maybe<Scalars["String"]>;
    description?: Maybe<Scalars["String"]>;
    fromEvent?: Maybe<Scalars["uuid"]>;
    fromShuffleQueue?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    priority?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Max_Order_By = {
    colour?: InputMaybe<Order_By>;
    defaultFor?: InputMaybe<Order_By>;
    description?: InputMaybe<Order_By>;
    fromEvent?: InputMaybe<Order_By>;
    fromShuffleQueue?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Schedule_Continuation_Min_Fields = {
    __typename?: "schedule_Continuation_min_fields";
    colour?: Maybe<Scalars["String"]>;
    defaultFor?: Maybe<Scalars["String"]>;
    description?: Maybe<Scalars["String"]>;
    fromEvent?: Maybe<Scalars["uuid"]>;
    fromShuffleQueue?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    priority?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Min_Order_By = {
    colour?: InputMaybe<Order_By>;
    defaultFor?: InputMaybe<Order_By>;
    description?: InputMaybe<Order_By>;
    fromEvent?: InputMaybe<Order_By>;
    fromShuffleQueue?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "schedule.Continuation" */
export type Schedule_Continuation_Mutation_Response = {
    __typename?: "schedule_Continuation_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Schedule_Continuation>;
};

/** on_conflict condition type for table "schedule.Continuation" */
export type Schedule_Continuation_On_Conflict = {
    constraint: Schedule_Continuation_Constraint;
    update_columns?: Array<Schedule_Continuation_Update_Column>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.Continuation". */
export type Schedule_Continuation_Order_By = {
    colour?: InputMaybe<Order_By>;
    defaultFor?: InputMaybe<Order_By>;
    description?: InputMaybe<Order_By>;
    event?: InputMaybe<Schedule_Event_Order_By>;
    fromEvent?: InputMaybe<Order_By>;
    fromShuffleQueue?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    isActiveChoice?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Order_By>;
    to?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_Continuation */
export type Schedule_Continuation_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Schedule_Continuation_Prepend_Input = {
    to?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "schedule.Continuation" */
export enum Schedule_Continuation_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    DefaultFor = "defaultFor",
    /** column name */
    Description = "description",
    /** column name */
    FromEvent = "fromEvent",
    /** column name */
    FromShuffleQueue = "fromShuffleQueue",
    /** column name */
    Id = "id",
    /** column name */
    IsActiveChoice = "isActiveChoice",
    /** column name */
    Priority = "priority",
    /** column name */
    To = "to",
}

/** input type for updating data in table "schedule.Continuation" */
export type Schedule_Continuation_Set_Input = {
    colour?: InputMaybe<Scalars["String"]>;
    defaultFor?: InputMaybe<Scalars["String"]>;
    description?: InputMaybe<Scalars["String"]>;
    fromEvent?: InputMaybe<Scalars["uuid"]>;
    fromShuffleQueue?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    isActiveChoice?: InputMaybe<Scalars["Boolean"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    to?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate stddev on columns */
export type Schedule_Continuation_Stddev_Fields = {
    __typename?: "schedule_Continuation_stddev_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Stddev_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Schedule_Continuation_Stddev_Pop_Fields = {
    __typename?: "schedule_Continuation_stddev_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Stddev_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Schedule_Continuation_Stddev_Samp_Fields = {
    __typename?: "schedule_Continuation_stddev_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Stddev_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Schedule_Continuation_Sum_Fields = {
    __typename?: "schedule_Continuation_sum_fields";
    priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Sum_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** update columns of table "schedule.Continuation" */
export enum Schedule_Continuation_Update_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    DefaultFor = "defaultFor",
    /** column name */
    Description = "description",
    /** column name */
    FromEvent = "fromEvent",
    /** column name */
    FromShuffleQueue = "fromShuffleQueue",
    /** column name */
    Id = "id",
    /** column name */
    IsActiveChoice = "isActiveChoice",
    /** column name */
    Priority = "priority",
    /** column name */
    To = "to",
}

/** aggregate var_pop on columns */
export type Schedule_Continuation_Var_Pop_Fields = {
    __typename?: "schedule_Continuation_var_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Var_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Schedule_Continuation_Var_Samp_Fields = {
    __typename?: "schedule_Continuation_var_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Var_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Schedule_Continuation_Variance_Fields = {
    __typename?: "schedule_Continuation_variance_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Variance_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "schedule.CurrentEvents" */
export type Schedule_CurrentEvents = {
    __typename?: "schedule_CurrentEvents";
    autoPlayElementId?: Maybe<Scalars["uuid"]>;
    automaticParticipationSurvey?: Maybe<Scalars["Boolean"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    enableRecording?: Maybe<Scalars["Boolean"]>;
    /** An array relationship */
    eventPeople: Array<Schedule_EventProgramPerson>;
    /** An aggregate relationship */
    eventPeople_aggregate: Schedule_EventProgramPerson_Aggregate;
    exhibitionId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    modeName?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
    /** An object relationship */
    room?: Maybe<Room_Room>;
    roomId?: Maybe<Scalars["uuid"]>;
    scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    streamTextEventId?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    timings_updated_at?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    visibilityLevel?: Maybe<Scalars["String"]>;
};

/** columns and relationships of "schedule.CurrentEvents" */
export type Schedule_CurrentEventsEventPeopleArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "schedule.CurrentEvents" */
export type Schedule_CurrentEventsEventPeople_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** aggregated selection of "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Aggregate = {
    __typename?: "schedule_CurrentEvents_aggregate";
    aggregate?: Maybe<Schedule_CurrentEvents_Aggregate_Fields>;
    nodes: Array<Schedule_CurrentEvents>;
};

/** aggregate fields of "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Aggregate_Fields = {
    __typename?: "schedule_CurrentEvents_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Schedule_CurrentEvents_Max_Fields>;
    min?: Maybe<Schedule_CurrentEvents_Min_Fields>;
};

/** aggregate fields of "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Schedule_CurrentEvents_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Schedule_CurrentEvents_Max_Order_By>;
    min?: InputMaybe<Schedule_CurrentEvents_Min_Order_By>;
};

/** input type for inserting array relation for remote table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Arr_Rel_Insert_Input = {
    data: Array<Schedule_CurrentEvents_Insert_Input>;
};

/** Boolean expression to filter rows from the table "schedule.CurrentEvents". All fields are combined with a logical 'AND'. */
export type Schedule_CurrentEvents_Bool_Exp = {
    _and?: InputMaybe<Array<Schedule_CurrentEvents_Bool_Exp>>;
    _not?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
    _or?: InputMaybe<Array<Schedule_CurrentEvents_Bool_Exp>>;
    autoPlayElementId?: InputMaybe<Uuid_Comparison_Exp>;
    automaticParticipationSurvey?: InputMaybe<Boolean_Comparison_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    enableRecording?: InputMaybe<Boolean_Comparison_Exp>;
    eventPeople?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    exhibitionId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    modeName?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    scheduledEndTime?: InputMaybe<Timestamptz_Comparison_Exp>;
    scheduledStartTime?: InputMaybe<Timestamptz_Comparison_Exp>;
    shufflePeriodId?: InputMaybe<Uuid_Comparison_Exp>;
    streamTextEventId?: InputMaybe<String_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    timings_updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    visibilityLevel?: InputMaybe<String_Comparison_Exp>;
};

/** input type for inserting data into table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Insert_Input = {
    autoPlayElementId?: InputMaybe<Scalars["uuid"]>;
    automaticParticipationSurvey?: InputMaybe<Scalars["Boolean"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    enableRecording?: InputMaybe<Scalars["Boolean"]>;
    eventPeople?: InputMaybe<Schedule_EventProgramPerson_Arr_Rel_Insert_Input>;
    exhibitionId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    modeName?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    scheduledEndTime?: InputMaybe<Scalars["timestamptz"]>;
    scheduledStartTime?: InputMaybe<Scalars["timestamptz"]>;
    shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    streamTextEventId?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    timings_updated_at?: InputMaybe<Scalars["timestamptz"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Schedule_CurrentEvents_Max_Fields = {
    __typename?: "schedule_CurrentEvents_max_fields";
    autoPlayElementId?: Maybe<Scalars["uuid"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    exhibitionId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    modeName?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    streamTextEventId?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    timings_updated_at?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    visibilityLevel?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Max_Order_By = {
    autoPlayElementId?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    exhibitionId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    modeName?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    scheduledEndTime?: InputMaybe<Order_By>;
    scheduledStartTime?: InputMaybe<Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    streamTextEventId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    timings_updated_at?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    visibilityLevel?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Schedule_CurrentEvents_Min_Fields = {
    __typename?: "schedule_CurrentEvents_min_fields";
    autoPlayElementId?: Maybe<Scalars["uuid"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    exhibitionId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    modeName?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    streamTextEventId?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    timings_updated_at?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    visibilityLevel?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Min_Order_By = {
    autoPlayElementId?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    exhibitionId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    modeName?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    scheduledEndTime?: InputMaybe<Order_By>;
    scheduledStartTime?: InputMaybe<Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    streamTextEventId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    timings_updated_at?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    visibilityLevel?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Mutation_Response = {
    __typename?: "schedule_CurrentEvents_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Schedule_CurrentEvents>;
};

/** Ordering options when selecting data from "schedule.CurrentEvents". */
export type Schedule_CurrentEvents_Order_By = {
    autoPlayElementId?: InputMaybe<Order_By>;
    automaticParticipationSurvey?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    enableRecording?: InputMaybe<Order_By>;
    eventPeople_aggregate?: InputMaybe<Schedule_EventProgramPerson_Aggregate_Order_By>;
    exhibitionId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    modeName?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    scheduledEndTime?: InputMaybe<Order_By>;
    scheduledStartTime?: InputMaybe<Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    streamTextEventId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    timings_updated_at?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    visibilityLevel?: InputMaybe<Order_By>;
};

/** select columns of table "schedule.CurrentEvents" */
export enum Schedule_CurrentEvents_Select_Column {
    /** column name */
    AutoPlayElementId = "autoPlayElementId",
    /** column name */
    AutomaticParticipationSurvey = "automaticParticipationSurvey",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EnableRecording = "enableRecording",
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ModeName = "modeName",
    /** column name */
    Name = "name",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ScheduledEndTime = "scheduledEndTime",
    /** column name */
    ScheduledStartTime = "scheduledStartTime",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StreamTextEventId = "streamTextEventId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TimingsUpdatedAt = "timings_updated_at",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Set_Input = {
    autoPlayElementId?: InputMaybe<Scalars["uuid"]>;
    automaticParticipationSurvey?: InputMaybe<Scalars["Boolean"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    enableRecording?: InputMaybe<Scalars["Boolean"]>;
    exhibitionId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    modeName?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    scheduledEndTime?: InputMaybe<Scalars["timestamptz"]>;
    scheduledStartTime?: InputMaybe<Scalars["timestamptz"]>;
    shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    streamTextEventId?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    timings_updated_at?: InputMaybe<Scalars["timestamptz"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_Event = {
    __typename?: "schedule_Event";
    /** An object relationship */
    autoPlayElement?: Maybe<Content_Element>;
    autoPlayElementId?: Maybe<Scalars["uuid"]>;
    automaticParticipationSurvey: Scalars["Boolean"];
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    /** An array relationship */
    continuations: Array<Schedule_Continuation>;
    /** An aggregate relationship */
    continuations_aggregate: Schedule_Continuation_Aggregate;
    createdAt: Scalars["timestamptz"];
    enableRecording: Scalars["Boolean"];
    /** An array relationship */
    eventPeople: Array<Schedule_EventProgramPerson>;
    /** An aggregate relationship */
    eventPeople_aggregate: Schedule_EventProgramPerson_Aggregate;
    /** An object relationship */
    eventVonageSession?: Maybe<Video_EventVonageSession>;
    /** An object relationship */
    exhibition?: Maybe<Collection_Exhibition>;
    exhibitionId?: Maybe<Scalars["uuid"]>;
    id: Scalars["uuid"];
    /** An object relationship */
    item?: Maybe<Content_Item>;
    itemId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    mode?: Maybe<Schedule_Mode>;
    modeName?: Maybe<Schedule_Mode_Enum>;
    name: Scalars["String"];
    /** An array relationship */
    presentations: Array<Schedule_Event>;
    /** An aggregate relationship */
    presentations_aggregate: Schedule_Event_Aggregate;
    /** An object relationship */
    room: Room_Room;
    roomId: Scalars["uuid"];
    /** A computed field, executes function "schedule.eventRoomName" */
    roomName?: Maybe<Scalars["String"]>;
    scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    /** An object relationship */
    session?: Maybe<Schedule_Event>;
    sessionEventId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    shufflePeriod?: Maybe<Room_ShufflePeriod>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    streamTextEventId?: Maybe<Scalars["String"]>;
    /** An object relationship */
    subconference?: Maybe<Conference_Subconference>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    timingsUpdatedAt: Scalars["timestamptz"];
    updatedAt: Scalars["timestamptz"];
    visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventContinuationsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventContinuations_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventEventPeopleArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventEventPeople_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventPresentationsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventPresentations_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson = {
    __typename?: "schedule_EventProgramPerson";
    createdAt: Scalars["timestamptz"];
    /** An object relationship */
    event: Schedule_Event;
    eventId: Scalars["uuid"];
    /** An object relationship */
    eventPersonRole: Schedule_EventProgramPersonRole;
    id: Scalars["uuid"];
    /** An object relationship */
    person: Collection_ProgramPerson;
    personId: Scalars["uuid"];
    roleName: Schedule_EventProgramPersonRole_Enum;
    updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole = {
    __typename?: "schedule_EventProgramPersonRole";
    description: Scalars["String"];
    /** An array relationship */
    eventPeople: Array<Schedule_EventProgramPerson>;
    /** An aggregate relationship */
    eventPeople_aggregate: Schedule_EventProgramPerson_Aggregate;
    name: Scalars["String"];
};

/** columns and relationships of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRoleEventPeopleArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRoleEventPeople_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** aggregated selection of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Aggregate = {
    __typename?: "schedule_EventProgramPersonRole_aggregate";
    aggregate?: Maybe<Schedule_EventProgramPersonRole_Aggregate_Fields>;
    nodes: Array<Schedule_EventProgramPersonRole>;
};

/** aggregate fields of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Aggregate_Fields = {
    __typename?: "schedule_EventProgramPersonRole_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Schedule_EventProgramPersonRole_Max_Fields>;
    min?: Maybe<Schedule_EventProgramPersonRole_Min_Fields>;
};

/** aggregate fields of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Schedule_EventProgramPersonRole_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "schedule.EventProgramPersonRole". All fields are combined with a logical 'AND'. */
export type Schedule_EventProgramPersonRole_Bool_Exp = {
    _and?: InputMaybe<Array<Schedule_EventProgramPersonRole_Bool_Exp>>;
    _not?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
    _or?: InputMaybe<Array<Schedule_EventProgramPersonRole_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    eventPeople?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.EventProgramPersonRole" */
export enum Schedule_EventProgramPersonRole_Constraint {
    /** unique or primary key constraint */
    EventProgramPersonRolePkey = "EventProgramPersonRole_pkey",
}

export enum Schedule_EventProgramPersonRole_Enum {
    /** Chair/moderator of the event */
    Chair = "CHAIR",
    /** Viewer who has been given access to the event (e.g. to ask a question). */
    Participant = "PARTICIPANT",
    /** A presenter. */
    Presenter = "PRESENTER",
}

/** Boolean expression to compare columns of type "schedule_EventProgramPersonRole_enum". All fields are combined with logical 'AND'. */
export type Schedule_EventProgramPersonRole_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Schedule_EventProgramPersonRole_Enum>;
    _in?: InputMaybe<Array<Schedule_EventProgramPersonRole_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Schedule_EventProgramPersonRole_Enum>;
    _nin?: InputMaybe<Array<Schedule_EventProgramPersonRole_Enum>>;
};

/** input type for inserting data into table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    eventPeople?: InputMaybe<Schedule_EventProgramPerson_Arr_Rel_Insert_Input>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Schedule_EventProgramPersonRole_Max_Fields = {
    __typename?: "schedule_EventProgramPersonRole_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Schedule_EventProgramPersonRole_Min_Fields = {
    __typename?: "schedule_EventProgramPersonRole_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Mutation_Response = {
    __typename?: "schedule_EventProgramPersonRole_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Schedule_EventProgramPersonRole>;
};

/** input type for inserting object relation for remote table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Obj_Rel_Insert_Input = {
    data: Schedule_EventProgramPersonRole_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Schedule_EventProgramPersonRole_On_Conflict>;
};

/** on_conflict condition type for table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_On_Conflict = {
    constraint: Schedule_EventProgramPersonRole_Constraint;
    update_columns?: Array<Schedule_EventProgramPersonRole_Update_Column>;
    where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.EventProgramPersonRole". */
export type Schedule_EventProgramPersonRole_Order_By = {
    description?: InputMaybe<Order_By>;
    eventPeople_aggregate?: InputMaybe<Schedule_EventProgramPerson_Aggregate_Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_EventProgramPersonRole */
export type Schedule_EventProgramPersonRole_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "schedule.EventProgramPersonRole" */
export enum Schedule_EventProgramPersonRole_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "schedule.EventProgramPersonRole" */
export enum Schedule_EventProgramPersonRole_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Aggregate = {
    __typename?: "schedule_EventProgramPerson_aggregate";
    aggregate?: Maybe<Schedule_EventProgramPerson_Aggregate_Fields>;
    nodes: Array<Schedule_EventProgramPerson>;
};

/** aggregate fields of "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Aggregate_Fields = {
    __typename?: "schedule_EventProgramPerson_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Schedule_EventProgramPerson_Max_Fields>;
    min?: Maybe<Schedule_EventProgramPerson_Min_Fields>;
};

/** aggregate fields of "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Schedule_EventProgramPerson_Max_Order_By>;
    min?: InputMaybe<Schedule_EventProgramPerson_Min_Order_By>;
};

/** input type for inserting array relation for remote table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Arr_Rel_Insert_Input = {
    data: Array<Schedule_EventProgramPerson_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Schedule_EventProgramPerson_On_Conflict>;
};

/** Boolean expression to filter rows from the table "schedule.EventProgramPerson". All fields are combined with a logical 'AND'. */
export type Schedule_EventProgramPerson_Bool_Exp = {
    _and?: InputMaybe<Array<Schedule_EventProgramPerson_Bool_Exp>>;
    _not?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    _or?: InputMaybe<Array<Schedule_EventProgramPerson_Bool_Exp>>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    event?: InputMaybe<Schedule_Event_Bool_Exp>;
    eventId?: InputMaybe<Uuid_Comparison_Exp>;
    eventPersonRole?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    person?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    personId?: InputMaybe<Uuid_Comparison_Exp>;
    roleName?: InputMaybe<Schedule_EventProgramPersonRole_Enum_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.EventProgramPerson" */
export enum Schedule_EventProgramPerson_Constraint {
    /** unique or primary key constraint */
    EventProgramPersonEventIdPersonIdRoleNameKey = "EventProgramPerson_eventId_personId_roleName_key",
    /** unique or primary key constraint */
    EventProgramPersonPkey = "EventProgramPerson_pkey",
}

/** input type for inserting data into table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Insert_Input = {
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    eventPersonRole?: InputMaybe<Schedule_EventProgramPersonRole_Obj_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    person?: InputMaybe<Collection_ProgramPerson_Obj_Rel_Insert_Input>;
    personId?: InputMaybe<Scalars["uuid"]>;
    roleName?: InputMaybe<Schedule_EventProgramPersonRole_Enum>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Schedule_EventProgramPerson_Max_Fields = {
    __typename?: "schedule_EventProgramPerson_max_fields";
    createdAt?: Maybe<Scalars["timestamptz"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    personId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Max_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    eventId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    personId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Schedule_EventProgramPerson_Min_Fields = {
    __typename?: "schedule_EventProgramPerson_min_fields";
    createdAt?: Maybe<Scalars["timestamptz"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    personId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Min_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    eventId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    personId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Mutation_Response = {
    __typename?: "schedule_EventProgramPerson_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Schedule_EventProgramPerson>;
};

/** on_conflict condition type for table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_On_Conflict = {
    constraint: Schedule_EventProgramPerson_Constraint;
    update_columns?: Array<Schedule_EventProgramPerson_Update_Column>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.EventProgramPerson". */
export type Schedule_EventProgramPerson_Order_By = {
    createdAt?: InputMaybe<Order_By>;
    event?: InputMaybe<Schedule_Event_Order_By>;
    eventId?: InputMaybe<Order_By>;
    eventPersonRole?: InputMaybe<Schedule_EventProgramPersonRole_Order_By>;
    id?: InputMaybe<Order_By>;
    person?: InputMaybe<Collection_ProgramPerson_Order_By>;
    personId?: InputMaybe<Order_By>;
    roleName?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_EventProgramPerson */
export type Schedule_EventProgramPerson_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "schedule.EventProgramPerson" */
export enum Schedule_EventProgramPerson_Select_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    PersonId = "personId",
    /** column name */
    RoleName = "roleName",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Set_Input = {
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    personId?: InputMaybe<Scalars["uuid"]>;
    roleName?: InputMaybe<Schedule_EventProgramPersonRole_Enum>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "schedule.EventProgramPerson" */
export enum Schedule_EventProgramPerson_Update_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    PersonId = "personId",
    /** column name */
    RoleName = "roleName",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** aggregated selection of "schedule.Event" */
export type Schedule_Event_Aggregate = {
    __typename?: "schedule_Event_aggregate";
    aggregate?: Maybe<Schedule_Event_Aggregate_Fields>;
    nodes: Array<Schedule_Event>;
};

/** aggregate fields of "schedule.Event" */
export type Schedule_Event_Aggregate_Fields = {
    __typename?: "schedule_Event_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Schedule_Event_Max_Fields>;
    min?: Maybe<Schedule_Event_Min_Fields>;
};

/** aggregate fields of "schedule.Event" */
export type Schedule_Event_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "schedule.Event" */
export type Schedule_Event_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Schedule_Event_Max_Order_By>;
    min?: InputMaybe<Schedule_Event_Min_Order_By>;
};

/** input type for inserting array relation for remote table "schedule.Event" */
export type Schedule_Event_Arr_Rel_Insert_Input = {
    data: Array<Schedule_Event_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Schedule_Event_On_Conflict>;
};

/** Boolean expression to filter rows from the table "schedule.Event". All fields are combined with a logical 'AND'. */
export type Schedule_Event_Bool_Exp = {
    _and?: InputMaybe<Array<Schedule_Event_Bool_Exp>>;
    _not?: InputMaybe<Schedule_Event_Bool_Exp>;
    _or?: InputMaybe<Array<Schedule_Event_Bool_Exp>>;
    autoPlayElement?: InputMaybe<Content_Element_Bool_Exp>;
    autoPlayElementId?: InputMaybe<Uuid_Comparison_Exp>;
    automaticParticipationSurvey?: InputMaybe<Boolean_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    continuations?: InputMaybe<Schedule_Continuation_Bool_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    enableRecording?: InputMaybe<Boolean_Comparison_Exp>;
    eventPeople?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    exhibition?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    exhibitionId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    mode?: InputMaybe<Schedule_Mode_Bool_Exp>;
    modeName?: InputMaybe<Schedule_Mode_Enum_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    presentations?: InputMaybe<Schedule_Event_Bool_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    roomName?: InputMaybe<String_Comparison_Exp>;
    scheduledEndTime?: InputMaybe<Timestamptz_Comparison_Exp>;
    scheduledStartTime?: InputMaybe<Timestamptz_Comparison_Exp>;
    session?: InputMaybe<Schedule_Event_Bool_Exp>;
    sessionEventId?: InputMaybe<Uuid_Comparison_Exp>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    shufflePeriodId?: InputMaybe<Uuid_Comparison_Exp>;
    streamTextEventId?: InputMaybe<String_Comparison_Exp>;
    subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    timingsUpdatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.Event" */
export enum Schedule_Event_Constraint {
    /** unique or primary key constraint */
    EventPkey = "Event_pkey",
}

/** input type for inserting data into table "schedule.Event" */
export type Schedule_Event_Insert_Input = {
    autoPlayElement?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    autoPlayElementId?: InputMaybe<Scalars["uuid"]>;
    automaticParticipationSurvey?: InputMaybe<Scalars["Boolean"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    continuations?: InputMaybe<Schedule_Continuation_Arr_Rel_Insert_Input>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    enableRecording?: InputMaybe<Scalars["Boolean"]>;
    eventPeople?: InputMaybe<Schedule_EventProgramPerson_Arr_Rel_Insert_Input>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Obj_Rel_Insert_Input>;
    exhibition?: InputMaybe<Collection_Exhibition_Obj_Rel_Insert_Input>;
    exhibitionId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    mode?: InputMaybe<Schedule_Mode_Obj_Rel_Insert_Input>;
    modeName?: InputMaybe<Schedule_Mode_Enum>;
    name?: InputMaybe<Scalars["String"]>;
    presentations?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    scheduledEndTime?: InputMaybe<Scalars["timestamptz"]>;
    scheduledStartTime?: InputMaybe<Scalars["timestamptz"]>;
    session?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    sessionEventId?: InputMaybe<Scalars["uuid"]>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
    shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    streamTextEventId?: InputMaybe<Scalars["String"]>;
    subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    timingsUpdatedAt?: InputMaybe<Scalars["timestamptz"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Schedule_Event_Max_Fields = {
    __typename?: "schedule_Event_max_fields";
    autoPlayElementId?: Maybe<Scalars["uuid"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    exhibitionId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    sessionEventId?: Maybe<Scalars["uuid"]>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    streamTextEventId?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    timingsUpdatedAt?: Maybe<Scalars["timestamptz"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "schedule.Event" */
export type Schedule_Event_Max_Order_By = {
    autoPlayElementId?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    exhibitionId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    scheduledEndTime?: InputMaybe<Order_By>;
    scheduledStartTime?: InputMaybe<Order_By>;
    sessionEventId?: InputMaybe<Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    streamTextEventId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    timingsUpdatedAt?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Schedule_Event_Min_Fields = {
    __typename?: "schedule_Event_min_fields";
    autoPlayElementId?: Maybe<Scalars["uuid"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    exhibitionId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    sessionEventId?: Maybe<Scalars["uuid"]>;
    shufflePeriodId?: Maybe<Scalars["uuid"]>;
    streamTextEventId?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    timingsUpdatedAt?: Maybe<Scalars["timestamptz"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "schedule.Event" */
export type Schedule_Event_Min_Order_By = {
    autoPlayElementId?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    exhibitionId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    scheduledEndTime?: InputMaybe<Order_By>;
    scheduledStartTime?: InputMaybe<Order_By>;
    sessionEventId?: InputMaybe<Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    streamTextEventId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    timingsUpdatedAt?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "schedule.Event" */
export type Schedule_Event_Mutation_Response = {
    __typename?: "schedule_Event_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Schedule_Event>;
};

/** input type for inserting object relation for remote table "schedule.Event" */
export type Schedule_Event_Obj_Rel_Insert_Input = {
    data: Schedule_Event_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Schedule_Event_On_Conflict>;
};

/** on_conflict condition type for table "schedule.Event" */
export type Schedule_Event_On_Conflict = {
    constraint: Schedule_Event_Constraint;
    update_columns?: Array<Schedule_Event_Update_Column>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.Event". */
export type Schedule_Event_Order_By = {
    autoPlayElement?: InputMaybe<Content_Element_Order_By>;
    autoPlayElementId?: InputMaybe<Order_By>;
    automaticParticipationSurvey?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    continuations_aggregate?: InputMaybe<Schedule_Continuation_Aggregate_Order_By>;
    createdAt?: InputMaybe<Order_By>;
    enableRecording?: InputMaybe<Order_By>;
    eventPeople_aggregate?: InputMaybe<Schedule_EventProgramPerson_Aggregate_Order_By>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Order_By>;
    exhibition?: InputMaybe<Collection_Exhibition_Order_By>;
    exhibitionId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    item?: InputMaybe<Content_Item_Order_By>;
    itemId?: InputMaybe<Order_By>;
    mode?: InputMaybe<Schedule_Mode_Order_By>;
    modeName?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    presentations_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    roomName?: InputMaybe<Order_By>;
    scheduledEndTime?: InputMaybe<Order_By>;
    scheduledStartTime?: InputMaybe<Order_By>;
    session?: InputMaybe<Schedule_Event_Order_By>;
    sessionEventId?: InputMaybe<Order_By>;
    shufflePeriod?: InputMaybe<Room_ShufflePeriod_Order_By>;
    shufflePeriodId?: InputMaybe<Order_By>;
    streamTextEventId?: InputMaybe<Order_By>;
    subconference?: InputMaybe<Conference_Subconference_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    timingsUpdatedAt?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_Event */
export type Schedule_Event_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "schedule.Event" */
export enum Schedule_Event_Select_Column {
    /** column name */
    AutoPlayElementId = "autoPlayElementId",
    /** column name */
    AutomaticParticipationSurvey = "automaticParticipationSurvey",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EnableRecording = "enableRecording",
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ModeName = "modeName",
    /** column name */
    Name = "name",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ScheduledEndTime = "scheduledEndTime",
    /** column name */
    ScheduledStartTime = "scheduledStartTime",
    /** column name */
    SessionEventId = "sessionEventId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StreamTextEventId = "streamTextEventId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TimingsUpdatedAt = "timingsUpdatedAt",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "schedule.Event" */
export type Schedule_Event_Set_Input = {
    autoPlayElementId?: InputMaybe<Scalars["uuid"]>;
    automaticParticipationSurvey?: InputMaybe<Scalars["Boolean"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    enableRecording?: InputMaybe<Scalars["Boolean"]>;
    exhibitionId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    modeName?: InputMaybe<Schedule_Mode_Enum>;
    name?: InputMaybe<Scalars["String"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    scheduledEndTime?: InputMaybe<Scalars["timestamptz"]>;
    scheduledStartTime?: InputMaybe<Scalars["timestamptz"]>;
    sessionEventId?: InputMaybe<Scalars["uuid"]>;
    shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    streamTextEventId?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    timingsUpdatedAt?: InputMaybe<Scalars["timestamptz"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** update columns of table "schedule.Event" */
export enum Schedule_Event_Update_Column {
    /** column name */
    AutoPlayElementId = "autoPlayElementId",
    /** column name */
    AutomaticParticipationSurvey = "automaticParticipationSurvey",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EnableRecording = "enableRecording",
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ModeName = "modeName",
    /** column name */
    Name = "name",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ScheduledEndTime = "scheduledEndTime",
    /** column name */
    ScheduledStartTime = "scheduledStartTime",
    /** column name */
    SessionEventId = "sessionEventId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StreamTextEventId = "streamTextEventId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TimingsUpdatedAt = "timingsUpdatedAt",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** columns and relationships of "schedule.Mode" */
export type Schedule_Mode = {
    __typename?: "schedule_Mode";
    description: Scalars["String"];
    /** An array relationship */
    events: Array<Schedule_Event>;
    /** An aggregate relationship */
    events_aggregate: Schedule_Event_Aggregate;
    name: Scalars["String"];
};

/** columns and relationships of "schedule.Mode" */
export type Schedule_ModeEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "schedule.Mode" */
export type Schedule_ModeEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** aggregated selection of "schedule.Mode" */
export type Schedule_Mode_Aggregate = {
    __typename?: "schedule_Mode_aggregate";
    aggregate?: Maybe<Schedule_Mode_Aggregate_Fields>;
    nodes: Array<Schedule_Mode>;
};

/** aggregate fields of "schedule.Mode" */
export type Schedule_Mode_Aggregate_Fields = {
    __typename?: "schedule_Mode_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Schedule_Mode_Max_Fields>;
    min?: Maybe<Schedule_Mode_Min_Fields>;
};

/** aggregate fields of "schedule.Mode" */
export type Schedule_Mode_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Schedule_Mode_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "schedule.Mode". All fields are combined with a logical 'AND'. */
export type Schedule_Mode_Bool_Exp = {
    _and?: InputMaybe<Array<Schedule_Mode_Bool_Exp>>;
    _not?: InputMaybe<Schedule_Mode_Bool_Exp>;
    _or?: InputMaybe<Array<Schedule_Mode_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    events?: InputMaybe<Schedule_Event_Bool_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.Mode" */
export enum Schedule_Mode_Constraint {
    /** unique or primary key constraint */
    ModePkey = "Mode_pkey",
}

export enum Schedule_Mode_Enum {
    /** An exhibition hall. */
    Exhibition = "EXHIBITION",
    /** Event is taking place in a Zoom room. */
    External = "EXTERNAL",
    /** Users watch a live-stream. */
    Livestream = "LIVESTREAM",
    /** An empty room. */
    None = "NONE",
    /** A shuffle queue. */
    Shuffle = "SHUFFLE",
    /** Users may participate in the general video chat. */
    VideoChat = "VIDEO_CHAT",
    /** An ordinary video from either a VIDEO_URL content element or a video uploaded to Clowdr. */
    VideoPlayer = "VIDEO_PLAYER",
}

/** Boolean expression to compare columns of type "schedule_Mode_enum". All fields are combined with logical 'AND'. */
export type Schedule_Mode_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Schedule_Mode_Enum>;
    _in?: InputMaybe<Array<Schedule_Mode_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Schedule_Mode_Enum>;
    _nin?: InputMaybe<Array<Schedule_Mode_Enum>>;
};

/** input type for inserting data into table "schedule.Mode" */
export type Schedule_Mode_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Schedule_Mode_Max_Fields = {
    __typename?: "schedule_Mode_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Schedule_Mode_Min_Fields = {
    __typename?: "schedule_Mode_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "schedule.Mode" */
export type Schedule_Mode_Mutation_Response = {
    __typename?: "schedule_Mode_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Schedule_Mode>;
};

/** input type for inserting object relation for remote table "schedule.Mode" */
export type Schedule_Mode_Obj_Rel_Insert_Input = {
    data: Schedule_Mode_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Schedule_Mode_On_Conflict>;
};

/** on_conflict condition type for table "schedule.Mode" */
export type Schedule_Mode_On_Conflict = {
    constraint: Schedule_Mode_Constraint;
    update_columns?: Array<Schedule_Mode_Update_Column>;
    where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.Mode". */
export type Schedule_Mode_Order_By = {
    description?: InputMaybe<Order_By>;
    events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_Mode */
export type Schedule_Mode_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "schedule.Mode" */
export enum Schedule_Mode_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "schedule.Mode" */
export type Schedule_Mode_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "schedule.Mode" */
export enum Schedule_Mode_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "schedule.OverlappingEvents" */
export type Schedule_OverlappingEvents = {
    __typename?: "schedule_OverlappingEvents";
    /** An object relationship */
    conference?: Maybe<Conference_Conference>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    eventX?: Maybe<Schedule_Event>;
    /** An object relationship */
    eventY?: Maybe<Schedule_Event>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    xId?: Maybe<Scalars["uuid"]>;
    yId?: Maybe<Scalars["uuid"]>;
};

/** aggregated selection of "schedule.OverlappingEvents" */
export type Schedule_OverlappingEvents_Aggregate = {
    __typename?: "schedule_OverlappingEvents_aggregate";
    aggregate?: Maybe<Schedule_OverlappingEvents_Aggregate_Fields>;
    nodes: Array<Schedule_OverlappingEvents>;
};

/** aggregate fields of "schedule.OverlappingEvents" */
export type Schedule_OverlappingEvents_Aggregate_Fields = {
    __typename?: "schedule_OverlappingEvents_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Schedule_OverlappingEvents_Max_Fields>;
    min?: Maybe<Schedule_OverlappingEvents_Min_Fields>;
};

/** aggregate fields of "schedule.OverlappingEvents" */
export type Schedule_OverlappingEvents_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Schedule_OverlappingEvents_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "schedule.OverlappingEvents". All fields are combined with a logical 'AND'. */
export type Schedule_OverlappingEvents_Bool_Exp = {
    _and?: InputMaybe<Array<Schedule_OverlappingEvents_Bool_Exp>>;
    _not?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
    _or?: InputMaybe<Array<Schedule_OverlappingEvents_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    eventX?: InputMaybe<Schedule_Event_Bool_Exp>;
    eventY?: InputMaybe<Schedule_Event_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    xId?: InputMaybe<Uuid_Comparison_Exp>;
    yId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** aggregate max on columns */
export type Schedule_OverlappingEvents_Max_Fields = {
    __typename?: "schedule_OverlappingEvents_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    xId?: Maybe<Scalars["uuid"]>;
    yId?: Maybe<Scalars["uuid"]>;
};

/** aggregate min on columns */
export type Schedule_OverlappingEvents_Min_Fields = {
    __typename?: "schedule_OverlappingEvents_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    xId?: Maybe<Scalars["uuid"]>;
    yId?: Maybe<Scalars["uuid"]>;
};

/** Ordering options when selecting data from "schedule.OverlappingEvents". */
export type Schedule_OverlappingEvents_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    eventX?: InputMaybe<Schedule_Event_Order_By>;
    eventY?: InputMaybe<Schedule_Event_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    xId?: InputMaybe<Order_By>;
    yId?: InputMaybe<Order_By>;
};

/** select columns of table "schedule.OverlappingEvents" */
export enum Schedule_OverlappingEvents_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    XId = "xId",
    /** column name */
    YId = "yId",
}

/** columns and relationships of "schedule.StarredEvent" */
export type Schedule_StarredEvent = {
    __typename?: "schedule_StarredEvent";
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    event: Schedule_Event;
    eventId: Scalars["uuid"];
    id: Scalars["uuid"];
    /** An object relationship */
    registrant?: Maybe<Registrant_Registrant>;
    registrantId: Scalars["uuid"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "schedule.StarredEvent" */
export type Schedule_StarredEvent_Aggregate = {
    __typename?: "schedule_StarredEvent_aggregate";
    aggregate?: Maybe<Schedule_StarredEvent_Aggregate_Fields>;
    nodes: Array<Schedule_StarredEvent>;
};

/** aggregate fields of "schedule.StarredEvent" */
export type Schedule_StarredEvent_Aggregate_Fields = {
    __typename?: "schedule_StarredEvent_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Schedule_StarredEvent_Max_Fields>;
    min?: Maybe<Schedule_StarredEvent_Min_Fields>;
};

/** aggregate fields of "schedule.StarredEvent" */
export type Schedule_StarredEvent_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Schedule_StarredEvent_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "schedule.StarredEvent". All fields are combined with a logical 'AND'. */
export type Schedule_StarredEvent_Bool_Exp = {
    _and?: InputMaybe<Array<Schedule_StarredEvent_Bool_Exp>>;
    _not?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
    _or?: InputMaybe<Array<Schedule_StarredEvent_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    event?: InputMaybe<Schedule_Event_Bool_Exp>;
    eventId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.StarredEvent" */
export enum Schedule_StarredEvent_Constraint {
    /** unique or primary key constraint */
    StarredEventEventIdRegistrantIdKey = "StarredEvent_eventId_registrantId_key",
    /** unique or primary key constraint */
    StarredEventPkey = "StarredEvent_pkey",
}

/** input type for inserting data into table "schedule.StarredEvent" */
export type Schedule_StarredEvent_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Schedule_StarredEvent_Max_Fields = {
    __typename?: "schedule_StarredEvent_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Schedule_StarredEvent_Min_Fields = {
    __typename?: "schedule_StarredEvent_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "schedule.StarredEvent" */
export type Schedule_StarredEvent_Mutation_Response = {
    __typename?: "schedule_StarredEvent_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Schedule_StarredEvent>;
};

/** on_conflict condition type for table "schedule.StarredEvent" */
export type Schedule_StarredEvent_On_Conflict = {
    constraint: Schedule_StarredEvent_Constraint;
    update_columns?: Array<Schedule_StarredEvent_Update_Column>;
    where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.StarredEvent". */
export type Schedule_StarredEvent_Order_By = {
    created_at?: InputMaybe<Order_By>;
    event?: InputMaybe<Schedule_Event_Order_By>;
    eventId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_StarredEvent */
export type Schedule_StarredEvent_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "schedule.StarredEvent" */
export enum Schedule_StarredEvent_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "schedule.StarredEvent" */
export type Schedule_StarredEvent_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "schedule.StarredEvent" */
export enum Schedule_StarredEvent_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

export type Schedule_SearchEvents_Args = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    search?: InputMaybe<Scalars["String"]>;
};

export type Schedule_ShiftPresentationTimes_Args = {
    minutes?: InputMaybe<Scalars["Int"]>;
    sessionId?: InputMaybe<Scalars["uuid"]>;
};

export type Schedule_ShiftTimes_Args = {
    eventIds?: InputMaybe<Scalars["_uuid"]>;
    minutes?: InputMaybe<Scalars["Int"]>;
};

/** columns and relationships of "sponsor.Tier" */
export type Sponsor_Tier = {
    __typename?: "sponsor_Tier";
    colour?: Maybe<Scalars["String"]>;
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    description: Scalars["String"];
    id: Scalars["uuid"];
    /** An array relationship */
    members: Array<Sponsor_TierMember>;
    /** An aggregate relationship */
    members_aggregate: Sponsor_TierMember_Aggregate;
    name: Scalars["String"];
    priority: Scalars["Int"];
    showLogos: Scalars["Boolean"];
    size: Scalars["numeric"];
    /** An object relationship */
    subconference?: Maybe<Conference_Subconference>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "sponsor.Tier" */
export type Sponsor_TierMembersArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** columns and relationships of "sponsor.Tier" */
export type Sponsor_TierMembers_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** columns and relationships of "sponsor.TierMember" */
export type Sponsor_TierMember = {
    __typename?: "sponsor_TierMember";
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An object relationship */
    item: Content_Item;
    itemId: Scalars["uuid"];
    priority?: Maybe<Scalars["Int"]>;
    /** An object relationship */
    tier: Sponsor_Tier;
    tierId: Scalars["uuid"];
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "sponsor.TierMember" */
export type Sponsor_TierMember_Aggregate = {
    __typename?: "sponsor_TierMember_aggregate";
    aggregate?: Maybe<Sponsor_TierMember_Aggregate_Fields>;
    nodes: Array<Sponsor_TierMember>;
};

/** aggregate fields of "sponsor.TierMember" */
export type Sponsor_TierMember_Aggregate_Fields = {
    __typename?: "sponsor_TierMember_aggregate_fields";
    avg?: Maybe<Sponsor_TierMember_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Sponsor_TierMember_Max_Fields>;
    min?: Maybe<Sponsor_TierMember_Min_Fields>;
    stddev?: Maybe<Sponsor_TierMember_Stddev_Fields>;
    stddev_pop?: Maybe<Sponsor_TierMember_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Sponsor_TierMember_Stddev_Samp_Fields>;
    sum?: Maybe<Sponsor_TierMember_Sum_Fields>;
    var_pop?: Maybe<Sponsor_TierMember_Var_Pop_Fields>;
    var_samp?: Maybe<Sponsor_TierMember_Var_Samp_Fields>;
    variance?: Maybe<Sponsor_TierMember_Variance_Fields>;
};

/** aggregate fields of "sponsor.TierMember" */
export type Sponsor_TierMember_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Sponsor_TierMember_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "sponsor.TierMember" */
export type Sponsor_TierMember_Aggregate_Order_By = {
    avg?: InputMaybe<Sponsor_TierMember_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Sponsor_TierMember_Max_Order_By>;
    min?: InputMaybe<Sponsor_TierMember_Min_Order_By>;
    stddev?: InputMaybe<Sponsor_TierMember_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Sponsor_TierMember_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Sponsor_TierMember_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Sponsor_TierMember_Sum_Order_By>;
    var_pop?: InputMaybe<Sponsor_TierMember_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Sponsor_TierMember_Var_Samp_Order_By>;
    variance?: InputMaybe<Sponsor_TierMember_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sponsor.TierMember" */
export type Sponsor_TierMember_Arr_Rel_Insert_Input = {
    data: Array<Sponsor_TierMember_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Sponsor_TierMember_On_Conflict>;
};

/** aggregate avg on columns */
export type Sponsor_TierMember_Avg_Fields = {
    __typename?: "sponsor_TierMember_avg_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Avg_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sponsor.TierMember". All fields are combined with a logical 'AND'. */
export type Sponsor_TierMember_Bool_Exp = {
    _and?: InputMaybe<Array<Sponsor_TierMember_Bool_Exp>>;
    _not?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
    _or?: InputMaybe<Array<Sponsor_TierMember_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    item?: InputMaybe<Content_Item_Bool_Exp>;
    itemId?: InputMaybe<Uuid_Comparison_Exp>;
    priority?: InputMaybe<Int_Comparison_Exp>;
    tier?: InputMaybe<Sponsor_Tier_Bool_Exp>;
    tierId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sponsor.TierMember" */
export enum Sponsor_TierMember_Constraint {
    /** unique or primary key constraint */
    TierMemberPkey = "TierMember_pkey",
    /** unique or primary key constraint */
    TierMemberTierIdItemIdKey = "TierMember_tierId_itemId_key",
}

/** input type for incrementing numeric columns in table "sponsor.TierMember" */
export type Sponsor_TierMember_Inc_Input = {
    priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "sponsor.TierMember" */
export type Sponsor_TierMember_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    tier?: InputMaybe<Sponsor_Tier_Obj_Rel_Insert_Input>;
    tierId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Sponsor_TierMember_Max_Fields = {
    __typename?: "sponsor_TierMember_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    priority?: Maybe<Scalars["Int"]>;
    tierId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    tierId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Sponsor_TierMember_Min_Fields = {
    __typename?: "sponsor_TierMember_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    itemId?: Maybe<Scalars["uuid"]>;
    priority?: Maybe<Scalars["Int"]>;
    tierId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    itemId?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    tierId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "sponsor.TierMember" */
export type Sponsor_TierMember_Mutation_Response = {
    __typename?: "sponsor_TierMember_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Sponsor_TierMember>;
};

/** on_conflict condition type for table "sponsor.TierMember" */
export type Sponsor_TierMember_On_Conflict = {
    constraint: Sponsor_TierMember_Constraint;
    update_columns?: Array<Sponsor_TierMember_Update_Column>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** Ordering options when selecting data from "sponsor.TierMember". */
export type Sponsor_TierMember_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    item?: InputMaybe<Content_Item_Order_By>;
    itemId?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    tier?: InputMaybe<Sponsor_Tier_Order_By>;
    tierId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: sponsor_TierMember */
export type Sponsor_TierMember_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "sponsor.TierMember" */
export enum Sponsor_TierMember_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    Priority = "priority",
    /** column name */
    TierId = "tierId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "sponsor.TierMember" */
export type Sponsor_TierMember_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    itemId?: InputMaybe<Scalars["uuid"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    tierId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Sponsor_TierMember_Stddev_Fields = {
    __typename?: "sponsor_TierMember_stddev_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Stddev_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sponsor_TierMember_Stddev_Pop_Fields = {
    __typename?: "sponsor_TierMember_stddev_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Stddev_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sponsor_TierMember_Stddev_Samp_Fields = {
    __typename?: "sponsor_TierMember_stddev_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Stddev_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Sponsor_TierMember_Sum_Fields = {
    __typename?: "sponsor_TierMember_sum_fields";
    priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Sum_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** update columns of table "sponsor.TierMember" */
export enum Sponsor_TierMember_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    Priority = "priority",
    /** column name */
    TierId = "tierId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Sponsor_TierMember_Var_Pop_Fields = {
    __typename?: "sponsor_TierMember_var_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Var_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sponsor_TierMember_Var_Samp_Fields = {
    __typename?: "sponsor_TierMember_var_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Var_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Sponsor_TierMember_Variance_Fields = {
    __typename?: "sponsor_TierMember_variance_fields";
    priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Variance_Order_By = {
    priority?: InputMaybe<Order_By>;
};

/** aggregated selection of "sponsor.Tier" */
export type Sponsor_Tier_Aggregate = {
    __typename?: "sponsor_Tier_aggregate";
    aggregate?: Maybe<Sponsor_Tier_Aggregate_Fields>;
    nodes: Array<Sponsor_Tier>;
};

/** aggregate fields of "sponsor.Tier" */
export type Sponsor_Tier_Aggregate_Fields = {
    __typename?: "sponsor_Tier_aggregate_fields";
    avg?: Maybe<Sponsor_Tier_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Sponsor_Tier_Max_Fields>;
    min?: Maybe<Sponsor_Tier_Min_Fields>;
    stddev?: Maybe<Sponsor_Tier_Stddev_Fields>;
    stddev_pop?: Maybe<Sponsor_Tier_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Sponsor_Tier_Stddev_Samp_Fields>;
    sum?: Maybe<Sponsor_Tier_Sum_Fields>;
    var_pop?: Maybe<Sponsor_Tier_Var_Pop_Fields>;
    var_samp?: Maybe<Sponsor_Tier_Var_Samp_Fields>;
    variance?: Maybe<Sponsor_Tier_Variance_Fields>;
};

/** aggregate fields of "sponsor.Tier" */
export type Sponsor_Tier_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Sponsor_Tier_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "sponsor.Tier" */
export type Sponsor_Tier_Aggregate_Order_By = {
    avg?: InputMaybe<Sponsor_Tier_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Sponsor_Tier_Max_Order_By>;
    min?: InputMaybe<Sponsor_Tier_Min_Order_By>;
    stddev?: InputMaybe<Sponsor_Tier_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Sponsor_Tier_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Sponsor_Tier_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Sponsor_Tier_Sum_Order_By>;
    var_pop?: InputMaybe<Sponsor_Tier_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Sponsor_Tier_Var_Samp_Order_By>;
    variance?: InputMaybe<Sponsor_Tier_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sponsor.Tier" */
export type Sponsor_Tier_Arr_Rel_Insert_Input = {
    data: Array<Sponsor_Tier_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Sponsor_Tier_On_Conflict>;
};

/** aggregate avg on columns */
export type Sponsor_Tier_Avg_Fields = {
    __typename?: "sponsor_Tier_avg_fields";
    priority?: Maybe<Scalars["Float"]>;
    size?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Avg_Order_By = {
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sponsor.Tier". All fields are combined with a logical 'AND'. */
export type Sponsor_Tier_Bool_Exp = {
    _and?: InputMaybe<Array<Sponsor_Tier_Bool_Exp>>;
    _not?: InputMaybe<Sponsor_Tier_Bool_Exp>;
    _or?: InputMaybe<Array<Sponsor_Tier_Bool_Exp>>;
    colour?: InputMaybe<String_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    description?: InputMaybe<String_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    members?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    priority?: InputMaybe<Int_Comparison_Exp>;
    showLogos?: InputMaybe<Boolean_Comparison_Exp>;
    size?: InputMaybe<Numeric_Comparison_Exp>;
    subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sponsor.Tier" */
export enum Sponsor_Tier_Constraint {
    /** unique or primary key constraint */
    TierConferenceIdSubconferenceIdNameKey = "Tier_conferenceId_subconferenceId_name_key",
    /** unique or primary key constraint */
    TierPkey = "Tier_pkey",
}

/** input type for incrementing numeric columns in table "sponsor.Tier" */
export type Sponsor_Tier_Inc_Input = {
    priority?: InputMaybe<Scalars["Int"]>;
    size?: InputMaybe<Scalars["numeric"]>;
};

/** input type for inserting data into table "sponsor.Tier" */
export type Sponsor_Tier_Insert_Input = {
    colour?: InputMaybe<Scalars["String"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    description?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    members?: InputMaybe<Sponsor_TierMember_Arr_Rel_Insert_Input>;
    name?: InputMaybe<Scalars["String"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    showLogos?: InputMaybe<Scalars["Boolean"]>;
    size?: InputMaybe<Scalars["numeric"]>;
    subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Sponsor_Tier_Max_Fields = {
    __typename?: "sponsor_Tier_max_fields";
    colour?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    description?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    priority?: Maybe<Scalars["Int"]>;
    size?: Maybe<Scalars["numeric"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Max_Order_By = {
    colour?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    description?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Sponsor_Tier_Min_Fields = {
    __typename?: "sponsor_Tier_min_fields";
    colour?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    description?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    name?: Maybe<Scalars["String"]>;
    priority?: Maybe<Scalars["Int"]>;
    size?: Maybe<Scalars["numeric"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Min_Order_By = {
    colour?: InputMaybe<Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    description?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "sponsor.Tier" */
export type Sponsor_Tier_Mutation_Response = {
    __typename?: "sponsor_Tier_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Sponsor_Tier>;
};

/** input type for inserting object relation for remote table "sponsor.Tier" */
export type Sponsor_Tier_Obj_Rel_Insert_Input = {
    data: Sponsor_Tier_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Sponsor_Tier_On_Conflict>;
};

/** on_conflict condition type for table "sponsor.Tier" */
export type Sponsor_Tier_On_Conflict = {
    constraint: Sponsor_Tier_Constraint;
    update_columns?: Array<Sponsor_Tier_Update_Column>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** Ordering options when selecting data from "sponsor.Tier". */
export type Sponsor_Tier_Order_By = {
    colour?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    description?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    members_aggregate?: InputMaybe<Sponsor_TierMember_Aggregate_Order_By>;
    name?: InputMaybe<Order_By>;
    priority?: InputMaybe<Order_By>;
    showLogos?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
    subconference?: InputMaybe<Conference_Subconference_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: sponsor_Tier */
export type Sponsor_Tier_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "sponsor.Tier" */
export enum Sponsor_Tier_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Description = "description",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    ShowLogos = "showLogos",
    /** column name */
    Size = "size",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "sponsor.Tier" */
export type Sponsor_Tier_Set_Input = {
    colour?: InputMaybe<Scalars["String"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    description?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    name?: InputMaybe<Scalars["String"]>;
    priority?: InputMaybe<Scalars["Int"]>;
    showLogos?: InputMaybe<Scalars["Boolean"]>;
    size?: InputMaybe<Scalars["numeric"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Sponsor_Tier_Stddev_Fields = {
    __typename?: "sponsor_Tier_stddev_fields";
    priority?: Maybe<Scalars["Float"]>;
    size?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Stddev_Order_By = {
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sponsor_Tier_Stddev_Pop_Fields = {
    __typename?: "sponsor_Tier_stddev_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
    size?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Stddev_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sponsor_Tier_Stddev_Samp_Fields = {
    __typename?: "sponsor_Tier_stddev_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
    size?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Stddev_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Sponsor_Tier_Sum_Fields = {
    __typename?: "sponsor_Tier_sum_fields";
    priority?: Maybe<Scalars["Int"]>;
    size?: Maybe<Scalars["numeric"]>;
};

/** order by sum() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Sum_Order_By = {
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
};

/** update columns of table "sponsor.Tier" */
export enum Sponsor_Tier_Update_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Description = "description",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    ShowLogos = "showLogos",
    /** column name */
    Size = "size",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Sponsor_Tier_Var_Pop_Fields = {
    __typename?: "sponsor_Tier_var_pop_fields";
    priority?: Maybe<Scalars["Float"]>;
    size?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Var_Pop_Order_By = {
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sponsor_Tier_Var_Samp_Fields = {
    __typename?: "sponsor_Tier_var_samp_fields";
    priority?: Maybe<Scalars["Float"]>;
    size?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Var_Samp_Order_By = {
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Sponsor_Tier_Variance_Fields = {
    __typename?: "sponsor_Tier_variance_fields";
    priority?: Maybe<Scalars["Float"]>;
    size?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Variance_Order_By = {
    priority?: InputMaybe<Order_By>;
    size?: InputMaybe<Order_By>;
};

export type Subscription_Root = {
    __typename?: "subscription_root";
    /** fetch data from the table: "Email" */
    Email: Array<Email>;
    /** fetch aggregated fields from the table: "Email" */
    Email_aggregate: Email_Aggregate;
    /** fetch data from the table: "Email" using primary key columns */
    Email_by_pk?: Maybe<Email>;
    /** fetch data from the table: "ForeignKeyIntrospection" */
    ForeignKeyIntrospection: Array<ForeignKeyIntrospection>;
    /** fetch aggregated fields from the table: "ForeignKeyIntrospection" */
    ForeignKeyIntrospection_aggregate: ForeignKeyIntrospection_Aggregate;
    /** fetch data from the table: "PushNotificationSubscription" */
    PushNotificationSubscription: Array<PushNotificationSubscription>;
    /** fetch aggregated fields from the table: "PushNotificationSubscription" */
    PushNotificationSubscription_aggregate: PushNotificationSubscription_Aggregate;
    /** fetch data from the table: "PushNotificationSubscription" using primary key columns */
    PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
    /** fetch data from the table: "User" */
    User: Array<User>;
    /** fetch aggregated fields from the table: "User" */
    User_aggregate: User_Aggregate;
    /** fetch data from the table: "User" using primary key columns */
    User_by_pk?: Maybe<User>;
    /** fetch data from the table: "analytics.AppStats" */
    analytics_AppStats: Array<Analytics_AppStats>;
    /** fetch aggregated fields from the table: "analytics.AppStats" */
    analytics_AppStats_aggregate: Analytics_AppStats_Aggregate;
    /** fetch data from the table: "analytics.AppStats" using primary key columns */
    analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
    /** fetch data from the table: "analytics.CompletedRegistrations" */
    analytics_CompletedRegistrations: Array<Analytics_CompletedRegistrations>;
    /** fetch aggregated fields from the table: "analytics.CompletedRegistrations" */
    analytics_CompletedRegistrations_aggregate: Analytics_CompletedRegistrations_Aggregate;
    /** fetch data from the table: "analytics.ContentElementStats" */
    analytics_ContentElementStats: Array<Analytics_ContentElementStats>;
    /** fetch aggregated fields from the table: "analytics.ContentElementStats" */
    analytics_ContentElementStats_aggregate: Analytics_ContentElementStats_Aggregate;
    /** fetch data from the table: "analytics.ContentElementStats" using primary key columns */
    analytics_ContentElementStats_by_pk?: Maybe<Analytics_ContentElementStats>;
    /** fetch data from the table: "analytics.ContentItemStats" */
    analytics_ContentItemStats: Array<Analytics_ContentItemStats>;
    /** fetch aggregated fields from the table: "analytics.ContentItemStats" */
    analytics_ContentItemStats_aggregate: Analytics_ContentItemStats_Aggregate;
    /** fetch data from the table: "analytics.ContentItemStats" using primary key columns */
    analytics_ContentItemStats_by_pk?: Maybe<Analytics_ContentItemStats>;
    /** fetch data from the table: "analytics.ElementTotalViews" */
    analytics_ElementTotalViews: Array<Analytics_ElementTotalViews>;
    /** fetch aggregated fields from the table: "analytics.ElementTotalViews" */
    analytics_ElementTotalViews_aggregate: Analytics_ElementTotalViews_Aggregate;
    /** fetch data from the table: "analytics.ElementTotalViews" using primary key columns */
    analytics_ElementTotalViews_by_pk?: Maybe<Analytics_ElementTotalViews>;
    /** fetch data from the table: "analytics.ItemTotalViews" */
    analytics_ItemTotalViews: Array<Analytics_ItemTotalViews>;
    /** fetch aggregated fields from the table: "analytics.ItemTotalViews" */
    analytics_ItemTotalViews_aggregate: Analytics_ItemTotalViews_Aggregate;
    /** fetch data from the table: "analytics.ItemTotalViews" using primary key columns */
    analytics_ItemTotalViews_by_pk?: Maybe<Analytics_ItemTotalViews>;
    /** fetch data from the table: "analytics.RoomPresence" */
    analytics_RoomPresence: Array<Analytics_RoomPresence>;
    /** fetch aggregated fields from the table: "analytics.RoomPresence" */
    analytics_RoomPresence_aggregate: Analytics_RoomPresence_Aggregate;
    /** fetch data from the table: "analytics.RoomPresence" using primary key columns */
    analytics_RoomPresence_by_pk?: Maybe<Analytics_RoomPresence>;
    /** fetch data from the table: "analytics.RoomStats" */
    analytics_RoomStats: Array<Analytics_RoomStats>;
    /** fetch aggregated fields from the table: "analytics.RoomStats" */
    analytics_RoomStats_aggregate: Analytics_RoomStats_Aggregate;
    /** fetch data from the table: "analytics.RoomStats" using primary key columns */
    analytics_RoomStats_by_pk?: Maybe<Analytics_RoomStats>;
    /** fetch data from the table: "chat.Chat" */
    chat_Chat: Array<Chat_Chat>;
    /** fetch aggregated fields from the table: "chat.Chat" */
    chat_Chat_aggregate: Chat_Chat_Aggregate;
    /** fetch data from the table: "chat.Chat" using primary key columns */
    chat_Chat_by_pk?: Maybe<Chat_Chat>;
    /** fetch data from the table: "chat.Flag" */
    chat_Flag: Array<Chat_Flag>;
    /** fetch data from the table: "chat.FlagType" */
    chat_FlagType: Array<Chat_FlagType>;
    /** fetch aggregated fields from the table: "chat.FlagType" */
    chat_FlagType_aggregate: Chat_FlagType_Aggregate;
    /** fetch data from the table: "chat.FlagType" using primary key columns */
    chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
    /** fetch aggregated fields from the table: "chat.Flag" */
    chat_Flag_aggregate: Chat_Flag_Aggregate;
    /** fetch data from the table: "chat.Flag" using primary key columns */
    chat_Flag_by_pk?: Maybe<Chat_Flag>;
    /** fetch data from the table: "chat.Message" */
    chat_Message: Array<Chat_Message>;
    /** fetch data from the table: "chat.MessageType" */
    chat_MessageType: Array<Chat_MessageType>;
    /** fetch aggregated fields from the table: "chat.MessageType" */
    chat_MessageType_aggregate: Chat_MessageType_Aggregate;
    /** fetch data from the table: "chat.MessageType" using primary key columns */
    chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
    /** fetch aggregated fields from the table: "chat.Message" */
    chat_Message_aggregate: Chat_Message_Aggregate;
    /** fetch data from the table: "chat.Message" using primary key columns */
    chat_Message_by_pk?: Maybe<Chat_Message>;
    /** fetch data from the table: "chat.Pin" */
    chat_Pin: Array<Chat_Pin>;
    /** fetch aggregated fields from the table: "chat.Pin" */
    chat_Pin_aggregate: Chat_Pin_Aggregate;
    /** fetch data from the table: "chat.Pin" using primary key columns */
    chat_Pin_by_pk?: Maybe<Chat_Pin>;
    /** fetch data from the table: "chat.Reaction" */
    chat_Reaction: Array<Chat_Reaction>;
    /** fetch data from the table: "chat.ReactionType" */
    chat_ReactionType: Array<Chat_ReactionType>;
    /** fetch aggregated fields from the table: "chat.ReactionType" */
    chat_ReactionType_aggregate: Chat_ReactionType_Aggregate;
    /** fetch data from the table: "chat.ReactionType" using primary key columns */
    chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
    /** fetch aggregated fields from the table: "chat.Reaction" */
    chat_Reaction_aggregate: Chat_Reaction_Aggregate;
    /** fetch data from the table: "chat.Reaction" using primary key columns */
    chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
    /** fetch data from the table: "chat.ReadUpToIndex" */
    chat_ReadUpToIndex: Array<Chat_ReadUpToIndex>;
    /** fetch aggregated fields from the table: "chat.ReadUpToIndex" */
    chat_ReadUpToIndex_aggregate: Chat_ReadUpToIndex_Aggregate;
    /** fetch data from the table: "chat.ReadUpToIndex" using primary key columns */
    chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
    /** fetch data from the table: "chat.Subscription" */
    chat_Subscription: Array<Chat_Subscription>;
    /** fetch aggregated fields from the table: "chat.Subscription" */
    chat_Subscription_aggregate: Chat_Subscription_Aggregate;
    /** fetch data from the table: "chat.Subscription" using primary key columns */
    chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
    /** fetch data from the table: "collection.Exhibition" */
    collection_Exhibition: Array<Collection_Exhibition>;
    /** fetch aggregated fields from the table: "collection.Exhibition" */
    collection_Exhibition_aggregate: Collection_Exhibition_Aggregate;
    /** fetch data from the table: "collection.Exhibition" using primary key columns */
    collection_Exhibition_by_pk?: Maybe<Collection_Exhibition>;
    /** fetch data from the table: "collection.ProgramPerson" */
    collection_ProgramPerson: Array<Collection_ProgramPerson>;
    /** fetch aggregated fields from the table: "collection.ProgramPerson" */
    collection_ProgramPerson_aggregate: Collection_ProgramPerson_Aggregate;
    /** fetch data from the table: "collection.ProgramPerson" using primary key columns */
    collection_ProgramPerson_by_pk?: Maybe<Collection_ProgramPerson>;
    /** fetch data from the table: "collection.Tag" */
    collection_Tag: Array<Collection_Tag>;
    /** fetch aggregated fields from the table: "collection.Tag" */
    collection_Tag_aggregate: Collection_Tag_Aggregate;
    /** fetch data from the table: "collection.Tag" using primary key columns */
    collection_Tag_by_pk?: Maybe<Collection_Tag>;
    /** execute function "collection.searchProgramPerson" which returns "collection.ProgramPerson" */
    collection_searchProgramPerson: Array<Collection_ProgramPerson>;
    /** execute function "collection.searchProgramPerson" and query aggregates on result of table type "collection.ProgramPerson" */
    collection_searchProgramPerson_aggregate: Collection_ProgramPerson_Aggregate;
    /** fetch data from the table: "conference.Conference" */
    conference_Conference: Array<Conference_Conference>;
    /** fetch aggregated fields from the table: "conference.Conference" */
    conference_Conference_aggregate: Conference_Conference_Aggregate;
    /** fetch data from the table: "conference.Conference" using primary key columns */
    conference_Conference_by_pk?: Maybe<Conference_Conference>;
    /** fetch data from the table: "conference.Configuration" */
    conference_Configuration: Array<Conference_Configuration>;
    /** fetch data from the table: "conference.ConfigurationKey" */
    conference_ConfigurationKey: Array<Conference_ConfigurationKey>;
    /** fetch aggregated fields from the table: "conference.ConfigurationKey" */
    conference_ConfigurationKey_aggregate: Conference_ConfigurationKey_Aggregate;
    /** fetch data from the table: "conference.ConfigurationKey" using primary key columns */
    conference_ConfigurationKey_by_pk?: Maybe<Conference_ConfigurationKey>;
    /** fetch aggregated fields from the table: "conference.Configuration" */
    conference_Configuration_aggregate: Conference_Configuration_Aggregate;
    /** fetch data from the table: "conference.Configuration" using primary key columns */
    conference_Configuration_by_pk?: Maybe<Conference_Configuration>;
    /** fetch data from the table: "conference.DemoCode" */
    conference_DemoCode: Array<Conference_DemoCode>;
    /** fetch aggregated fields from the table: "conference.DemoCode" */
    conference_DemoCode_aggregate: Conference_DemoCode_Aggregate;
    /** fetch data from the table: "conference.DemoCode" using primary key columns */
    conference_DemoCode_by_pk?: Maybe<Conference_DemoCode>;
    /** fetch data from the table: "conference.Quota" */
    conference_Quota: Array<Conference_Quota>;
    /** fetch aggregated fields from the table: "conference.Quota" */
    conference_Quota_aggregate: Conference_Quota_Aggregate;
    /** fetch data from the table: "conference.Quota" using primary key columns */
    conference_Quota_by_pk?: Maybe<Conference_Quota>;
    /** fetch data from the table: "conference.RemainingQuota" */
    conference_RemainingQuota: Array<Conference_RemainingQuota>;
    /** fetch aggregated fields from the table: "conference.RemainingQuota" */
    conference_RemainingQuota_aggregate: Conference_RemainingQuota_Aggregate;
    /** fetch data from the table: "conference.Subconference" */
    conference_Subconference: Array<Conference_Subconference>;
    /** fetch aggregated fields from the table: "conference.Subconference" */
    conference_Subconference_aggregate: Conference_Subconference_Aggregate;
    /** fetch data from the table: "conference.Subconference" using primary key columns */
    conference_Subconference_by_pk?: Maybe<Conference_Subconference>;
    /** fetch data from the table: "conference.Usage" */
    conference_Usage: Array<Conference_Usage>;
    /** fetch aggregated fields from the table: "conference.Usage" */
    conference_Usage_aggregate: Conference_Usage_Aggregate;
    /** fetch data from the table: "conference.Usage" using primary key columns */
    conference_Usage_by_pk?: Maybe<Conference_Usage>;
    /** fetch data from the table: "conference.VisibilityLevel" */
    conference_VisibilityLevel: Array<Conference_VisibilityLevel>;
    /** fetch aggregated fields from the table: "conference.VisibilityLevel" */
    conference_VisibilityLevel_aggregate: Conference_VisibilityLevel_Aggregate;
    /** fetch data from the table: "conference.VisibilityLevel" using primary key columns */
    conference_VisibilityLevel_by_pk?: Maybe<Conference_VisibilityLevel>;
    /** fetch data from the table: "content.Element" */
    content_Element: Array<Content_Element>;
    /** fetch data from the table: "content.ElementType" */
    content_ElementType: Array<Content_ElementType>;
    /** fetch aggregated fields from the table: "content.ElementType" */
    content_ElementType_aggregate: Content_ElementType_Aggregate;
    /** fetch data from the table: "content.ElementType" using primary key columns */
    content_ElementType_by_pk?: Maybe<Content_ElementType>;
    /** fetch aggregated fields from the table: "content.Element" */
    content_Element_aggregate: Content_Element_Aggregate;
    /** fetch data from the table: "content.Element" using primary key columns */
    content_Element_by_pk?: Maybe<Content_Element>;
    /** fetch data from the table: "content.Item" */
    content_Item: Array<Content_Item>;
    /** fetch data from the table: "content.ItemExhibition" */
    content_ItemExhibition: Array<Content_ItemExhibition>;
    /** fetch aggregated fields from the table: "content.ItemExhibition" */
    content_ItemExhibition_aggregate: Content_ItemExhibition_Aggregate;
    /** fetch data from the table: "content.ItemExhibition" using primary key columns */
    content_ItemExhibition_by_pk?: Maybe<Content_ItemExhibition>;
    /** fetch data from the table: "content.ItemProgramPerson" */
    content_ItemProgramPerson: Array<Content_ItemProgramPerson>;
    /** fetch aggregated fields from the table: "content.ItemProgramPerson" */
    content_ItemProgramPerson_aggregate: Content_ItemProgramPerson_Aggregate;
    /** fetch data from the table: "content.ItemProgramPerson" using primary key columns */
    content_ItemProgramPerson_by_pk?: Maybe<Content_ItemProgramPerson>;
    /** fetch data from the table: "content.ItemTag" */
    content_ItemTag: Array<Content_ItemTag>;
    /** fetch aggregated fields from the table: "content.ItemTag" */
    content_ItemTag_aggregate: Content_ItemTag_Aggregate;
    /** fetch data from the table: "content.ItemTag" using primary key columns */
    content_ItemTag_by_pk?: Maybe<Content_ItemTag>;
    /** fetch data from the table: "content.ItemType" */
    content_ItemType: Array<Content_ItemType>;
    /** fetch aggregated fields from the table: "content.ItemType" */
    content_ItemType_aggregate: Content_ItemType_Aggregate;
    /** fetch data from the table: "content.ItemType" using primary key columns */
    content_ItemType_by_pk?: Maybe<Content_ItemType>;
    /** fetch aggregated fields from the table: "content.Item" */
    content_Item_aggregate: Content_Item_Aggregate;
    /** fetch data from the table: "content.Item" using primary key columns */
    content_Item_by_pk?: Maybe<Content_Item>;
    /** execute function "content.searchItems" which returns "content.Item" */
    content_searchItems: Array<Content_Item>;
    /** execute function "content.searchItems" and query aggregates on result of table type "content.Item" */
    content_searchItems_aggregate: Content_Item_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackCreateJob" */
    job_queues_ChannelStackCreateJob: Array<Job_Queues_ChannelStackCreateJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackCreateJob" */
    job_queues_ChannelStackCreateJob_aggregate: Job_Queues_ChannelStackCreateJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackCreateJob" using primary key columns */
    job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** fetch data from the table: "job_queues.ChannelStackDeleteJob" */
    job_queues_ChannelStackDeleteJob: Array<Job_Queues_ChannelStackDeleteJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackDeleteJob" */
    job_queues_ChannelStackDeleteJob_aggregate: Job_Queues_ChannelStackDeleteJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackDeleteJob" using primary key columns */
    job_queues_ChannelStackDeleteJob_by_pk?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** fetch data from the table: "job_queues.ChannelStackUpdateJob" */
    job_queues_ChannelStackUpdateJob: Array<Job_Queues_ChannelStackUpdateJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackUpdateJob" */
    job_queues_ChannelStackUpdateJob_aggregate: Job_Queues_ChannelStackUpdateJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackUpdateJob" using primary key columns */
    job_queues_ChannelStackUpdateJob_by_pk?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** fetch data from the table: "job_queues.CombineVideosJob" */
    job_queues_CombineVideosJob: Array<Job_Queues_CombineVideosJob>;
    /** fetch aggregated fields from the table: "job_queues.CombineVideosJob" */
    job_queues_CombineVideosJob_aggregate: Job_Queues_CombineVideosJob_Aggregate;
    /** fetch data from the table: "job_queues.CombineVideosJob" using primary key columns */
    job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
    /** fetch data from the table: "job_queues.CustomEmailJob" */
    job_queues_CustomEmailJob: Array<Job_Queues_CustomEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.CustomEmailJob" */
    job_queues_CustomEmailJob_aggregate: Job_Queues_CustomEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.CustomEmailJob" using primary key columns */
    job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
    /** fetch data from the table: "job_queues.ImportJob" */
    job_queues_ImportJob: Array<Job_Queues_ImportJob>;
    /** fetch data from the table: "job_queues.ImportJobOutput" */
    job_queues_ImportJobOutput: Array<Job_Queues_ImportJobOutput>;
    /** fetch aggregated fields from the table: "job_queues.ImportJobOutput" */
    job_queues_ImportJobOutput_aggregate: Job_Queues_ImportJobOutput_Aggregate;
    /** fetch data from the table: "job_queues.ImportJobOutput" using primary key columns */
    job_queues_ImportJobOutput_by_pk?: Maybe<Job_Queues_ImportJobOutput>;
    /** fetch aggregated fields from the table: "job_queues.ImportJob" */
    job_queues_ImportJob_aggregate: Job_Queues_ImportJob_Aggregate;
    /** fetch data from the table: "job_queues.ImportJob" using primary key columns */
    job_queues_ImportJob_by_pk?: Maybe<Job_Queues_ImportJob>;
    /** fetch data from the table: "job_queues.InvitationEmailJob" */
    job_queues_InvitationEmailJob: Array<Job_Queues_InvitationEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.InvitationEmailJob" */
    job_queues_InvitationEmailJob_aggregate: Job_Queues_InvitationEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.InvitationEmailJob" using primary key columns */
    job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
    /** fetch data from the table: "job_queues.JobStatus" */
    job_queues_JobStatus: Array<Job_Queues_JobStatus>;
    /** fetch aggregated fields from the table: "job_queues.JobStatus" */
    job_queues_JobStatus_aggregate: Job_Queues_JobStatus_Aggregate;
    /** fetch data from the table: "job_queues.JobStatus" using primary key columns */
    job_queues_JobStatus_by_pk?: Maybe<Job_Queues_JobStatus>;
    /** fetch data from the table: "job_queues.MediaPackageHarvestJob" */
    job_queues_MediaPackageHarvestJob: Array<Job_Queues_MediaPackageHarvestJob>;
    /** fetch aggregated fields from the table: "job_queues.MediaPackageHarvestJob" */
    job_queues_MediaPackageHarvestJob_aggregate: Job_Queues_MediaPackageHarvestJob_Aggregate;
    /** fetch data from the table: "job_queues.MediaPackageHarvestJob" using primary key columns */
    job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** fetch data from the table: "job_queues.PrepareJob" */
    job_queues_PrepareJob: Array<Job_Queues_PrepareJob>;
    /** fetch aggregated fields from the table: "job_queues.PrepareJob" */
    job_queues_PrepareJob_aggregate: Job_Queues_PrepareJob_Aggregate;
    /** fetch data from the table: "job_queues.PrepareJob" using primary key columns */
    job_queues_PrepareJob_by_pk?: Maybe<Job_Queues_PrepareJob>;
    /** fetch data from the table: "job_queues.PublishVideoJob" */
    job_queues_PublishVideoJob: Array<Job_Queues_PublishVideoJob>;
    /** fetch aggregated fields from the table: "job_queues.PublishVideoJob" */
    job_queues_PublishVideoJob_aggregate: Job_Queues_PublishVideoJob_Aggregate;
    /** fetch data from the table: "job_queues.PublishVideoJob" using primary key columns */
    job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
    /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" */
    job_queues_SubmissionRequestEmailJob: Array<Job_Queues_SubmissionRequestEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.SubmissionRequestEmailJob" */
    job_queues_SubmissionRequestEmailJob_aggregate: Job_Queues_SubmissionRequestEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" using primary key columns */
    job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" */
    job_queues_UploadYouTubeVideoJob: Array<Job_Queues_UploadYouTubeVideoJob>;
    /** fetch aggregated fields from the table: "job_queues.UploadYouTubeVideoJob" */
    job_queues_UploadYouTubeVideoJob_aggregate: Job_Queues_UploadYouTubeVideoJob_Aggregate;
    /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" using primary key columns */
    job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    /** fetch data from the table: "registrant.GoogleAccount" */
    registrant_GoogleAccount: Array<Registrant_GoogleAccount>;
    /** fetch aggregated fields from the table: "registrant.GoogleAccount" */
    registrant_GoogleAccount_aggregate: Registrant_GoogleAccount_Aggregate;
    /** fetch data from the table: "registrant.GoogleAccount" using primary key columns */
    registrant_GoogleAccount_by_pk?: Maybe<Registrant_GoogleAccount>;
    /** fetch data from the table: "registrant.Group" */
    registrant_Group: Array<Registrant_Group>;
    /** fetch data from the table: "registrant.GroupRegistrant" */
    registrant_GroupRegistrant: Array<Registrant_GroupRegistrant>;
    /** fetch aggregated fields from the table: "registrant.GroupRegistrant" */
    registrant_GroupRegistrant_aggregate: Registrant_GroupRegistrant_Aggregate;
    /** fetch data from the table: "registrant.GroupRegistrant" using primary key columns */
    registrant_GroupRegistrant_by_pk?: Maybe<Registrant_GroupRegistrant>;
    /** fetch aggregated fields from the table: "registrant.Group" */
    registrant_Group_aggregate: Registrant_Group_Aggregate;
    /** fetch data from the table: "registrant.Group" using primary key columns */
    registrant_Group_by_pk?: Maybe<Registrant_Group>;
    /** fetch data from the table: "registrant.Invitation" */
    registrant_Invitation: Array<Registrant_Invitation>;
    /** fetch aggregated fields from the table: "registrant.Invitation" */
    registrant_Invitation_aggregate: Registrant_Invitation_Aggregate;
    /** fetch data from the table: "registrant.Invitation" using primary key columns */
    registrant_Invitation_by_pk?: Maybe<Registrant_Invitation>;
    /** fetch data from the table: "registrant.Profile" */
    registrant_Profile: Array<Registrant_Profile>;
    /** fetch data from the table: "registrant.ProfileBadges" */
    registrant_ProfileBadges: Array<Registrant_ProfileBadges>;
    /** fetch aggregated fields from the table: "registrant.ProfileBadges" */
    registrant_ProfileBadges_aggregate: Registrant_ProfileBadges_Aggregate;
    /** fetch aggregated fields from the table: "registrant.Profile" */
    registrant_Profile_aggregate: Registrant_Profile_Aggregate;
    /** fetch data from the table: "registrant.Profile" using primary key columns */
    registrant_Profile_by_pk?: Maybe<Registrant_Profile>;
    /** fetch data from the table: "registrant.Registrant" */
    registrant_Registrant: Array<Registrant_Registrant>;
    /** fetch data from the table: "registrant.RegistrantRole" */
    registrant_RegistrantRole: Array<Registrant_RegistrantRole>;
    /** fetch aggregated fields from the table: "registrant.RegistrantRole" */
    registrant_RegistrantRole_aggregate: Registrant_RegistrantRole_Aggregate;
    /** fetch data from the table: "registrant.RegistrantRole" using primary key columns */
    registrant_RegistrantRole_by_pk?: Maybe<Registrant_RegistrantRole>;
    /** fetch aggregated fields from the table: "registrant.Registrant" */
    registrant_Registrant_aggregate: Registrant_Registrant_Aggregate;
    /** fetch data from the table: "registrant.Registrant" using primary key columns */
    registrant_Registrant_by_pk?: Maybe<Registrant_Registrant>;
    /** fetch data from the table: "registrant.SavedVonageRoomRecording" */
    registrant_SavedVonageRoomRecording: Array<Registrant_SavedVonageRoomRecording>;
    /** fetch aggregated fields from the table: "registrant.SavedVonageRoomRecording" */
    registrant_SavedVonageRoomRecording_aggregate: Registrant_SavedVonageRoomRecording_Aggregate;
    /** fetch data from the table: "registrant.SavedVonageRoomRecording" using primary key columns */
    registrant_SavedVonageRoomRecording_by_pk?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** fetch data from the table: "registrant.SubconferenceMembership" */
    registrant_SubconferenceMembership: Array<Registrant_SubconferenceMembership>;
    /** fetch aggregated fields from the table: "registrant.SubconferenceMembership" */
    registrant_SubconferenceMembership_aggregate: Registrant_SubconferenceMembership_Aggregate;
    /** fetch data from the table: "registrant.SubconferenceMembership" using primary key columns */
    registrant_SubconferenceMembership_by_pk?: Maybe<Registrant_SubconferenceMembership>;
    /** execute function "registrant.searchRegistrants" which returns "registrant.Registrant" */
    registrant_searchRegistrants: Array<Registrant_Registrant>;
    /** execute function "registrant.searchRegistrants" and query aggregates on result of table type "registrant.Registrant" */
    registrant_searchRegistrants_aggregate: Registrant_Registrant_Aggregate;
    /** fetch data from the table: "room.Backend" */
    room_Backend: Array<Room_Backend>;
    /** fetch aggregated fields from the table: "room.Backend" */
    room_Backend_aggregate: Room_Backend_Aggregate;
    /** fetch data from the table: "room.Backend" using primary key columns */
    room_Backend_by_pk?: Maybe<Room_Backend>;
    /** fetch data from the table: "room.ChimeMeeting" */
    room_ChimeMeeting: Array<Room_ChimeMeeting>;
    /** fetch aggregated fields from the table: "room.ChimeMeeting" */
    room_ChimeMeeting_aggregate: Room_ChimeMeeting_Aggregate;
    /** fetch data from the table: "room.ChimeMeeting" using primary key columns */
    room_ChimeMeeting_by_pk?: Maybe<Room_ChimeMeeting>;
    /** fetch data from the table: "room.LivestreamDurations" */
    room_LivestreamDurations: Array<Room_LivestreamDurations>;
    /** fetch aggregated fields from the table: "room.LivestreamDurations" */
    room_LivestreamDurations_aggregate: Room_LivestreamDurations_Aggregate;
    /** fetch data from the table: "room.ManagementMode" */
    room_ManagementMode: Array<Room_ManagementMode>;
    /** fetch aggregated fields from the table: "room.ManagementMode" */
    room_ManagementMode_aggregate: Room_ManagementMode_Aggregate;
    /** fetch data from the table: "room.ManagementMode" using primary key columns */
    room_ManagementMode_by_pk?: Maybe<Room_ManagementMode>;
    /** fetch data from the table: "room.PersonRole" */
    room_PersonRole: Array<Room_PersonRole>;
    /** fetch aggregated fields from the table: "room.PersonRole" */
    room_PersonRole_aggregate: Room_PersonRole_Aggregate;
    /** fetch data from the table: "room.PersonRole" using primary key columns */
    room_PersonRole_by_pk?: Maybe<Room_PersonRole>;
    /** fetch data from the table: "room.Room" */
    room_Room: Array<Room_Room>;
    /** fetch data from the table: "room.RoomGroupMembership" */
    room_RoomGroupMembership: Array<Room_RoomGroupMembership>;
    /** fetch aggregated fields from the table: "room.RoomGroupMembership" */
    room_RoomGroupMembership_aggregate: Room_RoomGroupMembership_Aggregate;
    /** fetch data from the table: "room.RoomGroupMembership" using primary key columns */
    room_RoomGroupMembership_by_pk?: Maybe<Room_RoomGroupMembership>;
    /** fetch data from the table: "room.RoomMembership" */
    room_RoomMembership: Array<Room_RoomMembership>;
    /** fetch aggregated fields from the table: "room.RoomMembership" */
    room_RoomMembership_aggregate: Room_RoomMembership_Aggregate;
    /** fetch data from the table: "room.RoomMembership" using primary key columns */
    room_RoomMembership_by_pk?: Maybe<Room_RoomMembership>;
    /** fetch aggregated fields from the table: "room.Room" */
    room_Room_aggregate: Room_Room_Aggregate;
    /** fetch data from the table: "room.Room" using primary key columns */
    room_Room_by_pk?: Maybe<Room_Room>;
    /** fetch data from the table: "room.ShuffleAlgorithm" */
    room_ShuffleAlgorithm: Array<Room_ShuffleAlgorithm>;
    /** fetch aggregated fields from the table: "room.ShuffleAlgorithm" */
    room_ShuffleAlgorithm_aggregate: Room_ShuffleAlgorithm_Aggregate;
    /** fetch data from the table: "room.ShuffleAlgorithm" using primary key columns */
    room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
    /** fetch data from the table: "room.ShufflePeriod" */
    room_ShufflePeriod: Array<Room_ShufflePeriod>;
    /** fetch aggregated fields from the table: "room.ShufflePeriod" */
    room_ShufflePeriod_aggregate: Room_ShufflePeriod_Aggregate;
    /** fetch data from the table: "room.ShufflePeriod" using primary key columns */
    room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
    /** fetch data from the table: "room.ShuffleQueueEntry" */
    room_ShuffleQueueEntry: Array<Room_ShuffleQueueEntry>;
    /** fetch aggregated fields from the table: "room.ShuffleQueueEntry" */
    room_ShuffleQueueEntry_aggregate: Room_ShuffleQueueEntry_Aggregate;
    /** fetch data from the table: "room.ShuffleQueueEntry" using primary key columns */
    room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
    /** fetch data from the table: "room.ShuffleRoom" */
    room_ShuffleRoom: Array<Room_ShuffleRoom>;
    /** fetch aggregated fields from the table: "room.ShuffleRoom" */
    room_ShuffleRoom_aggregate: Room_ShuffleRoom_Aggregate;
    /** fetch data from the table: "room.ShuffleRoom" using primary key columns */
    room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
    /** fetch data from the table: "schedule.Continuation" */
    schedule_Continuation: Array<Schedule_Continuation>;
    /** fetch aggregated fields from the table: "schedule.Continuation" */
    schedule_Continuation_aggregate: Schedule_Continuation_Aggregate;
    /** fetch data from the table: "schedule.Continuation" using primary key columns */
    schedule_Continuation_by_pk?: Maybe<Schedule_Continuation>;
    /** fetch data from the table: "schedule.CurrentEvents" */
    schedule_CurrentEvents: Array<Schedule_CurrentEvents>;
    /** fetch aggregated fields from the table: "schedule.CurrentEvents" */
    schedule_CurrentEvents_aggregate: Schedule_CurrentEvents_Aggregate;
    /** fetch data from the table: "schedule.Event" */
    schedule_Event: Array<Schedule_Event>;
    /** fetch data from the table: "schedule.EventProgramPerson" */
    schedule_EventProgramPerson: Array<Schedule_EventProgramPerson>;
    /** fetch data from the table: "schedule.EventProgramPersonRole" */
    schedule_EventProgramPersonRole: Array<Schedule_EventProgramPersonRole>;
    /** fetch aggregated fields from the table: "schedule.EventProgramPersonRole" */
    schedule_EventProgramPersonRole_aggregate: Schedule_EventProgramPersonRole_Aggregate;
    /** fetch data from the table: "schedule.EventProgramPersonRole" using primary key columns */
    schedule_EventProgramPersonRole_by_pk?: Maybe<Schedule_EventProgramPersonRole>;
    /** fetch aggregated fields from the table: "schedule.EventProgramPerson" */
    schedule_EventProgramPerson_aggregate: Schedule_EventProgramPerson_Aggregate;
    /** fetch data from the table: "schedule.EventProgramPerson" using primary key columns */
    schedule_EventProgramPerson_by_pk?: Maybe<Schedule_EventProgramPerson>;
    /** fetch aggregated fields from the table: "schedule.Event" */
    schedule_Event_aggregate: Schedule_Event_Aggregate;
    /** fetch data from the table: "schedule.Event" using primary key columns */
    schedule_Event_by_pk?: Maybe<Schedule_Event>;
    /** fetch data from the table: "schedule.Mode" */
    schedule_Mode: Array<Schedule_Mode>;
    /** fetch aggregated fields from the table: "schedule.Mode" */
    schedule_Mode_aggregate: Schedule_Mode_Aggregate;
    /** fetch data from the table: "schedule.Mode" using primary key columns */
    schedule_Mode_by_pk?: Maybe<Schedule_Mode>;
    /** fetch data from the table: "schedule.OverlappingEvents" */
    schedule_OverlappingEvents: Array<Schedule_OverlappingEvents>;
    /** fetch aggregated fields from the table: "schedule.OverlappingEvents" */
    schedule_OverlappingEvents_aggregate: Schedule_OverlappingEvents_Aggregate;
    /** fetch data from the table: "schedule.StarredEvent" */
    schedule_StarredEvent: Array<Schedule_StarredEvent>;
    /** fetch aggregated fields from the table: "schedule.StarredEvent" */
    schedule_StarredEvent_aggregate: Schedule_StarredEvent_Aggregate;
    /** fetch data from the table: "schedule.StarredEvent" using primary key columns */
    schedule_StarredEvent_by_pk?: Maybe<Schedule_StarredEvent>;
    /** execute function "schedule.searchEvents" which returns "schedule.Event" */
    schedule_searchEvents: Array<Schedule_Event>;
    /** execute function "schedule.searchEvents" and query aggregates on result of table type "schedule.Event" */
    schedule_searchEvents_aggregate: Schedule_Event_Aggregate;
    /** fetch data from the table: "sponsor.Tier" */
    sponsor_Tier: Array<Sponsor_Tier>;
    /** fetch data from the table: "sponsor.TierMember" */
    sponsor_TierMember: Array<Sponsor_TierMember>;
    /** fetch aggregated fields from the table: "sponsor.TierMember" */
    sponsor_TierMember_aggregate: Sponsor_TierMember_Aggregate;
    /** fetch data from the table: "sponsor.TierMember" using primary key columns */
    sponsor_TierMember_by_pk?: Maybe<Sponsor_TierMember>;
    /** fetch aggregated fields from the table: "sponsor.Tier" */
    sponsor_Tier_aggregate: Sponsor_Tier_Aggregate;
    /** fetch data from the table: "sponsor.Tier" using primary key columns */
    sponsor_Tier_by_pk?: Maybe<Sponsor_Tier>;
    /** fetch data from the table: "system.Configuration" */
    system_Configuration: Array<System_Configuration>;
    /** fetch data from the table: "system.ConfigurationKey" */
    system_ConfigurationKey: Array<System_ConfigurationKey>;
    /** fetch aggregated fields from the table: "system.ConfigurationKey" */
    system_ConfigurationKey_aggregate: System_ConfigurationKey_Aggregate;
    /** fetch data from the table: "system.ConfigurationKey" using primary key columns */
    system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
    /** fetch data from the table: "system.ConfigurationPermissionGrant" */
    system_ConfigurationPermissionGrant: Array<System_ConfigurationPermissionGrant>;
    /** fetch aggregated fields from the table: "system.ConfigurationPermissionGrant" */
    system_ConfigurationPermissionGrant_aggregate: System_ConfigurationPermissionGrant_Aggregate;
    /** fetch data from the table: "system.ConfigurationPermissionGrant" using primary key columns */
    system_ConfigurationPermissionGrant_by_pk?: Maybe<System_ConfigurationPermissionGrant>;
    /** fetch aggregated fields from the table: "system.Configuration" */
    system_Configuration_aggregate: System_Configuration_Aggregate;
    /** fetch data from the table: "system.Configuration" using primary key columns */
    system_Configuration_by_pk?: Maybe<System_Configuration>;
    /** fetch data from the table: "system.SuperUserPermission" */
    system_SuperUserPermission: Array<System_SuperUserPermission>;
    /** fetch data from the table: "system.SuperUserPermissionGrant" */
    system_SuperUserPermissionGrant: Array<System_SuperUserPermissionGrant>;
    /** fetch aggregated fields from the table: "system.SuperUserPermissionGrant" */
    system_SuperUserPermissionGrant_aggregate: System_SuperUserPermissionGrant_Aggregate;
    /** fetch data from the table: "system.SuperUserPermissionGrant" using primary key columns */
    system_SuperUserPermissionGrant_by_pk?: Maybe<System_SuperUserPermissionGrant>;
    /** fetch aggregated fields from the table: "system.SuperUserPermission" */
    system_SuperUserPermission_aggregate: System_SuperUserPermission_Aggregate;
    /** fetch data from the table: "system.SuperUserPermission" using primary key columns */
    system_SuperUserPermission_by_pk?: Maybe<System_SuperUserPermission>;
    /** fetch data from the table: "system.SuperUserState" */
    system_SuperUserState: Array<System_SuperUserState>;
    /** fetch aggregated fields from the table: "system.SuperUserState" */
    system_SuperUserState_aggregate: System_SuperUserState_Aggregate;
    /** fetch data from the table: "video.ChannelStack" */
    video_ChannelStack: Array<Video_ChannelStack>;
    /** fetch aggregated fields from the table: "video.ChannelStack" */
    video_ChannelStack_aggregate: Video_ChannelStack_Aggregate;
    /** fetch data from the table: "video.ChannelStack" using primary key columns */
    video_ChannelStack_by_pk?: Maybe<Video_ChannelStack>;
    /** fetch data from the table: "video.EventVonageSession" */
    video_EventVonageSession: Array<Video_EventVonageSession>;
    /** fetch aggregated fields from the table: "video.EventVonageSession" */
    video_EventVonageSession_aggregate: Video_EventVonageSession_Aggregate;
    /** fetch data from the table: "video.EventVonageSession" using primary key columns */
    video_EventVonageSession_by_pk?: Maybe<Video_EventVonageSession>;
    /** fetch data from the table: "video.ImmediateSwitch" */
    video_ImmediateSwitch: Array<Video_ImmediateSwitch>;
    /** fetch aggregated fields from the table: "video.ImmediateSwitch" */
    video_ImmediateSwitch_aggregate: Video_ImmediateSwitch_Aggregate;
    /** fetch data from the table: "video.ImmediateSwitch" using primary key columns */
    video_ImmediateSwitch_by_pk?: Maybe<Video_ImmediateSwitch>;
    /** fetch data from the table: "video.InputType" */
    video_InputType: Array<Video_InputType>;
    /** fetch aggregated fields from the table: "video.InputType" */
    video_InputType_aggregate: Video_InputType_Aggregate;
    /** fetch data from the table: "video.InputType" using primary key columns */
    video_InputType_by_pk?: Maybe<Video_InputType>;
    /** fetch data from the table: "video.MediaLiveChannelStatus" */
    video_MediaLiveChannelStatus: Array<Video_MediaLiveChannelStatus>;
    /** fetch aggregated fields from the table: "video.MediaLiveChannelStatus" */
    video_MediaLiveChannelStatus_aggregate: Video_MediaLiveChannelStatus_Aggregate;
    /** fetch data from the table: "video.MediaLiveChannelStatus" using primary key columns */
    video_MediaLiveChannelStatus_by_pk?: Maybe<Video_MediaLiveChannelStatus>;
    /** fetch data from the table: "video.RoomRtmpInput" */
    video_RoomRtmpInput: Array<Video_RoomRtmpInput>;
    /** fetch aggregated fields from the table: "video.RoomRtmpInput" */
    video_RoomRtmpInput_aggregate: Video_RoomRtmpInput_Aggregate;
    /** fetch data from the table: "video.RoomRtmpInput" using primary key columns */
    video_RoomRtmpInput_by_pk?: Maybe<Video_RoomRtmpInput>;
    /** fetch data from the table: "video.RoomRtmpOutput" */
    video_RoomRtmpOutput: Array<Video_RoomRtmpOutput>;
    /** fetch aggregated fields from the table: "video.RoomRtmpOutput" */
    video_RoomRtmpOutput_aggregate: Video_RoomRtmpOutput_Aggregate;
    /** fetch data from the table: "video.RoomRtmpOutput" using primary key columns */
    video_RoomRtmpOutput_by_pk?: Maybe<Video_RoomRtmpOutput>;
    /** fetch data from the table: "video.RtmpInput" */
    video_RtmpInput: Array<Video_RtmpInput>;
    /** fetch aggregated fields from the table: "video.RtmpInput" */
    video_RtmpInput_aggregate: Video_RtmpInput_Aggregate;
    /** fetch data from the table: "video.RtmpInput" using primary key columns */
    video_RtmpInput_by_pk?: Maybe<Video_RtmpInput>;
    /** fetch data from the table: "video.TranscriptionJob" */
    video_TranscriptionJob: Array<Video_TranscriptionJob>;
    /** fetch aggregated fields from the table: "video.TranscriptionJob" */
    video_TranscriptionJob_aggregate: Video_TranscriptionJob_Aggregate;
    /** fetch data from the table: "video.TranscriptionJob" using primary key columns */
    video_TranscriptionJob_by_pk?: Maybe<Video_TranscriptionJob>;
    /** fetch data from the table: "video.VideoRenderJob" */
    video_VideoRenderJob: Array<Video_VideoRenderJob>;
    /** fetch aggregated fields from the table: "video.VideoRenderJob" */
    video_VideoRenderJob_aggregate: Video_VideoRenderJob_Aggregate;
    /** fetch data from the table: "video.VideoRenderJob" using primary key columns */
    video_VideoRenderJob_by_pk?: Maybe<Video_VideoRenderJob>;
    /** fetch data from the table: "video.VonageParticipantStream" */
    video_VonageParticipantStream: Array<Video_VonageParticipantStream>;
    /** fetch aggregated fields from the table: "video.VonageParticipantStream" */
    video_VonageParticipantStream_aggregate: Video_VonageParticipantStream_Aggregate;
    /** fetch data from the table: "video.VonageParticipantStream" using primary key columns */
    video_VonageParticipantStream_by_pk?: Maybe<Video_VonageParticipantStream>;
    /** fetch data from the table: "video.VonageRoomRecording" */
    video_VonageRoomRecording: Array<Video_VonageRoomRecording>;
    /** fetch aggregated fields from the table: "video.VonageRoomRecording" */
    video_VonageRoomRecording_aggregate: Video_VonageRoomRecording_Aggregate;
    /** fetch data from the table: "video.VonageRoomRecording" using primary key columns */
    video_VonageRoomRecording_by_pk?: Maybe<Video_VonageRoomRecording>;
    /** fetch data from the table: "video.VonageSessionLayout" */
    video_VonageSessionLayout: Array<Video_VonageSessionLayout>;
    /** fetch aggregated fields from the table: "video.VonageSessionLayout" */
    video_VonageSessionLayout_aggregate: Video_VonageSessionLayout_Aggregate;
    /** fetch data from the table: "video.VonageSessionLayout" using primary key columns */
    video_VonageSessionLayout_by_pk?: Maybe<Video_VonageSessionLayout>;
    /** fetch data from the table: "video.VonageVideoPlaybackCommand" */
    video_VonageVideoPlaybackCommand: Array<Video_VonageVideoPlaybackCommand>;
    /** fetch aggregated fields from the table: "video.VonageVideoPlaybackCommand" */
    video_VonageVideoPlaybackCommand_aggregate: Video_VonageVideoPlaybackCommand_Aggregate;
    /** fetch data from the table: "video.VonageVideoPlaybackCommand" using primary key columns */
    video_VonageVideoPlaybackCommand_by_pk?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** fetch data from the table: "video.YouTubeUpload" */
    video_YouTubeUpload: Array<Video_YouTubeUpload>;
    /** fetch aggregated fields from the table: "video.YouTubeUpload" */
    video_YouTubeUpload_aggregate: Video_YouTubeUpload_Aggregate;
    /** fetch data from the table: "video.YouTubeUpload" using primary key columns */
    video_YouTubeUpload_by_pk?: Maybe<Video_YouTubeUpload>;
};

export type Subscription_RootEmailArgs = {
    distinct_on?: InputMaybe<Array<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

export type Subscription_RootEmail_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

export type Subscription_RootEmail_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootForeignKeyIntrospectionArgs = {
    distinct_on?: InputMaybe<Array<ForeignKeyIntrospection_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<ForeignKeyIntrospection_Order_By>>;
    where?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
};

export type Subscription_RootForeignKeyIntrospection_AggregateArgs = {
    distinct_on?: InputMaybe<Array<ForeignKeyIntrospection_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<ForeignKeyIntrospection_Order_By>>;
    where?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
};

export type Subscription_RootPushNotificationSubscriptionArgs = {
    distinct_on?: InputMaybe<Array<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

export type Subscription_RootPushNotificationSubscription_AggregateArgs = {
    distinct_on?: InputMaybe<Array<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

export type Subscription_RootPushNotificationSubscription_By_PkArgs = {
    endpoint: Scalars["String"];
};

export type Subscription_RootUserArgs = {
    distinct_on?: InputMaybe<Array<User_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<User_Order_By>>;
    where?: InputMaybe<User_Bool_Exp>;
};

export type Subscription_RootUser_AggregateArgs = {
    distinct_on?: InputMaybe<Array<User_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<User_Order_By>>;
    where?: InputMaybe<User_Bool_Exp>;
};

export type Subscription_RootUser_By_PkArgs = {
    id: Scalars["String"];
};

export type Subscription_RootAnalytics_AppStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_AppStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_AppStats_Order_By>>;
    where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_AppStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_AppStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_AppStats_Order_By>>;
    where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_AppStats_By_PkArgs = {
    id: Scalars["Int"];
};

export type Subscription_RootAnalytics_CompletedRegistrationsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_CompletedRegistrations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_CompletedRegistrations_Order_By>>;
    where?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
};

export type Subscription_RootAnalytics_CompletedRegistrations_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_CompletedRegistrations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_CompletedRegistrations_Order_By>>;
    where?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentElementStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentElementStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentElementStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootAnalytics_ContentItemStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentItemStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentItemStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootAnalytics_ElementTotalViewsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ElementTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ElementTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

export type Subscription_RootAnalytics_ElementTotalViews_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ElementTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ElementTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

export type Subscription_RootAnalytics_ElementTotalViews_By_PkArgs = {
    elementId: Scalars["uuid"];
};

export type Subscription_RootAnalytics_ItemTotalViewsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ItemTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ItemTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

export type Subscription_RootAnalytics_ItemTotalViews_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_ItemTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_ItemTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

export type Subscription_RootAnalytics_ItemTotalViews_By_PkArgs = {
    itemId: Scalars["uuid"];
};

export type Subscription_RootAnalytics_RoomPresenceArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

export type Subscription_RootAnalytics_RoomPresence_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

export type Subscription_RootAnalytics_RoomPresence_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootAnalytics_RoomStatsArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_RoomStats_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_RoomStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootChat_ChatArgs = {
    distinct_on?: InputMaybe<Array<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

export type Subscription_RootChat_Chat_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

export type Subscription_RootChat_Chat_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootChat_FlagArgs = {
    distinct_on?: InputMaybe<Array<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

export type Subscription_RootChat_FlagTypeArgs = {
    distinct_on?: InputMaybe<Array<Chat_FlagType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_FlagType_Order_By>>;
    where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

export type Subscription_RootChat_FlagType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_FlagType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_FlagType_Order_By>>;
    where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

export type Subscription_RootChat_FlagType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootChat_Flag_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

export type Subscription_RootChat_Flag_By_PkArgs = {
    id: Scalars["Int"];
};

export type Subscription_RootChat_MessageArgs = {
    distinct_on?: InputMaybe<Array<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

export type Subscription_RootChat_MessageTypeArgs = {
    distinct_on?: InputMaybe<Array<Chat_MessageType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_MessageType_Order_By>>;
    where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

export type Subscription_RootChat_MessageType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_MessageType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_MessageType_Order_By>>;
    where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

export type Subscription_RootChat_MessageType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootChat_Message_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

export type Subscription_RootChat_Message_By_PkArgs = {
    id: Scalars["Int"];
};

export type Subscription_RootChat_PinArgs = {
    distinct_on?: InputMaybe<Array<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

export type Subscription_RootChat_Pin_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

export type Subscription_RootChat_Pin_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Subscription_RootChat_ReactionArgs = {
    distinct_on?: InputMaybe<Array<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

export type Subscription_RootChat_ReactionTypeArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReactionType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReactionType_Order_By>>;
    where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

export type Subscription_RootChat_ReactionType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReactionType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReactionType_Order_By>>;
    where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

export type Subscription_RootChat_ReactionType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootChat_Reaction_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

export type Subscription_RootChat_Reaction_By_PkArgs = {
    sId: Scalars["uuid"];
};

export type Subscription_RootChat_ReadUpToIndexArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

export type Subscription_RootChat_ReadUpToIndex_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

export type Subscription_RootChat_ReadUpToIndex_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Subscription_RootChat_SubscriptionArgs = {
    distinct_on?: InputMaybe<Array<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

export type Subscription_RootChat_Subscription_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

export type Subscription_RootChat_Subscription_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Subscription_RootCollection_ExhibitionArgs = {
    distinct_on?: InputMaybe<Array<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

export type Subscription_RootCollection_Exhibition_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

export type Subscription_RootCollection_Exhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootCollection_ProgramPersonArgs = {
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Subscription_RootCollection_ProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Subscription_RootCollection_ProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootCollection_TagArgs = {
    distinct_on?: InputMaybe<Array<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

export type Subscription_RootCollection_Tag_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

export type Subscription_RootCollection_Tag_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootCollection_SearchProgramPersonArgs = {
    args: Collection_SearchProgramPerson_Args;
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Subscription_RootCollection_SearchProgramPerson_AggregateArgs = {
    args: Collection_SearchProgramPerson_Args;
    distinct_on?: InputMaybe<Array<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Subscription_RootConference_ConferenceArgs = {
    distinct_on?: InputMaybe<Array<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

export type Subscription_RootConference_Conference_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

export type Subscription_RootConference_Conference_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_ConfigurationArgs = {
    distinct_on?: InputMaybe<Array<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

export type Subscription_RootConference_ConfigurationKeyArgs = {
    distinct_on?: InputMaybe<Array<Conference_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_ConfigurationKey_Order_By>>;
    where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

export type Subscription_RootConference_ConfigurationKey_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_ConfigurationKey_Order_By>>;
    where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

export type Subscription_RootConference_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootConference_Configuration_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

export type Subscription_RootConference_Configuration_By_PkArgs = {
    conferenceId: Scalars["uuid"];
    key: Conference_ConfigurationKey_Enum;
};

export type Subscription_RootConference_DemoCodeArgs = {
    distinct_on?: InputMaybe<Array<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

export type Subscription_RootConference_DemoCode_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

export type Subscription_RootConference_DemoCode_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_QuotaArgs = {
    distinct_on?: InputMaybe<Array<Conference_Quota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Quota_Order_By>>;
    where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

export type Subscription_RootConference_Quota_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Quota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Quota_Order_By>>;
    where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

export type Subscription_RootConference_Quota_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_RemainingQuotaArgs = {
    distinct_on?: InputMaybe<Array<Conference_RemainingQuota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_RemainingQuota_Order_By>>;
    where?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
};

export type Subscription_RootConference_RemainingQuota_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_RemainingQuota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_RemainingQuota_Order_By>>;
    where?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
};

export type Subscription_RootConference_SubconferenceArgs = {
    distinct_on?: InputMaybe<Array<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

export type Subscription_RootConference_Subconference_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

export type Subscription_RootConference_Subconference_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_UsageArgs = {
    distinct_on?: InputMaybe<Array<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

export type Subscription_RootConference_Usage_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

export type Subscription_RootConference_Usage_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_VisibilityLevelArgs = {
    distinct_on?: InputMaybe<Array<Conference_VisibilityLevel_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_VisibilityLevel_Order_By>>;
    where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

export type Subscription_RootConference_VisibilityLevel_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Conference_VisibilityLevel_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Conference_VisibilityLevel_Order_By>>;
    where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

export type Subscription_RootConference_VisibilityLevel_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootContent_ElementArgs = {
    distinct_on?: InputMaybe<Array<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

export type Subscription_RootContent_ElementTypeArgs = {
    distinct_on?: InputMaybe<Array<Content_ElementType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ElementType_Order_By>>;
    where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

export type Subscription_RootContent_ElementType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ElementType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ElementType_Order_By>>;
    where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

export type Subscription_RootContent_ElementType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootContent_Element_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

export type Subscription_RootContent_Element_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_ItemArgs = {
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Subscription_RootContent_ItemExhibitionArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

export type Subscription_RootContent_ItemExhibition_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

export type Subscription_RootContent_ItemExhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_ItemProgramPersonArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

export type Subscription_RootContent_ItemProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

export type Subscription_RootContent_ItemProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_ItemTagArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

export type Subscription_RootContent_ItemTag_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

export type Subscription_RootContent_ItemTag_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_ItemTypeArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemType_Order_By>>;
    where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

export type Subscription_RootContent_ItemType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_ItemType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_ItemType_Order_By>>;
    where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

export type Subscription_RootContent_ItemType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootContent_Item_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Subscription_RootContent_Item_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_SearchItemsArgs = {
    args: Content_SearchItems_Args;
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Subscription_RootContent_SearchItems_AggregateArgs = {
    args: Content_SearchItems_Args;
    distinct_on?: InputMaybe<Array<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackCreateJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackCreateJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackCreateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_ChannelStackDeleteJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackDeleteJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackDeleteJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackDeleteJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_ChannelStackUpdateJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackUpdateJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackUpdateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_CombineVideosJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_CombineVideosJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_CombineVideosJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_CombineVideosJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_CombineVideosJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_CustomEmailJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_CustomEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_CustomEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_CustomEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_CustomEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_ImportJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ImportJobOutputArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ImportJobOutput_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ImportJobOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_ImportJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ImportJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ImportJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ImportJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_InvitationEmailJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_InvitationEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_InvitationEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_InvitationEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_JobStatusArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_JobStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_JobStatus_Order_By>>;
    where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

export type Subscription_RootJob_Queues_JobStatus_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_JobStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_JobStatus_Order_By>>;
    where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

export type Subscription_RootJob_Queues_JobStatus_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootJob_Queues_MediaPackageHarvestJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Order_By>>;
    where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_MediaPackageHarvestJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_MediaPackageHarvestJob_Order_By>>;
    where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_MediaPackageHarvestJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_PrepareJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_PrepareJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_PrepareJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_PrepareJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_PrepareJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_PrepareJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_PrepareJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_PublishVideoJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_PublishVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_PublishVideoJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_PublishVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_PublishVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_SubmissionRequestEmailJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_SubmissionRequestEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_SubmissionRequestEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_UploadYouTubeVideoJobArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_UploadYouTubeVideoJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_UploadYouTubeVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_GoogleAccountArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GoogleAccount_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GoogleAccount_Order_By>>;
    where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

export type Subscription_RootRegistrant_GoogleAccount_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GoogleAccount_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GoogleAccount_Order_By>>;
    where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

export type Subscription_RootRegistrant_GoogleAccount_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_GroupArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Group_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Group_Order_By>>;
    where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

export type Subscription_RootRegistrant_GroupRegistrantArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_GroupRegistrant_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_GroupRegistrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_Group_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Group_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Group_Order_By>>;
    where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

export type Subscription_RootRegistrant_Group_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_InvitationArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

export type Subscription_RootRegistrant_Invitation_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

export type Subscription_RootRegistrant_Invitation_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_ProfileArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Profile_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Profile_Order_By>>;
    where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

export type Subscription_RootRegistrant_ProfileBadgesArgs = {
    distinct_on?: InputMaybe<Array<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

export type Subscription_RootRegistrant_ProfileBadges_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

export type Subscription_RootRegistrant_Profile_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Profile_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Profile_Order_By>>;
    where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

export type Subscription_RootRegistrant_Profile_By_PkArgs = {
    registrantId: Scalars["uuid"];
};

export type Subscription_RootRegistrant_RegistrantArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_RegistrantRoleArgs = {
    distinct_on?: InputMaybe<Array<Registrant_RegistrantRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_RegistrantRole_Order_By>>;
    where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

export type Subscription_RootRegistrant_RegistrantRole_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_RegistrantRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_RegistrantRole_Order_By>>;
    where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

export type Subscription_RootRegistrant_RegistrantRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRegistrant_Registrant_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_Registrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_SavedVonageRoomRecordingArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

export type Subscription_RootRegistrant_SavedVonageRoomRecording_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

export type Subscription_RootRegistrant_SavedVonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_SubconferenceMembershipArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

export type Subscription_RootRegistrant_SubconferenceMembership_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

export type Subscription_RootRegistrant_SubconferenceMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_SearchRegistrantsArgs = {
    args: Registrant_SearchRegistrants_Args;
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_SearchRegistrants_AggregateArgs = {
    args: Registrant_SearchRegistrants_Args;
    distinct_on?: InputMaybe<Array<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Subscription_RootRoom_BackendArgs = {
    distinct_on?: InputMaybe<Array<Room_Backend_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Backend_Order_By>>;
    where?: InputMaybe<Room_Backend_Bool_Exp>;
};

export type Subscription_RootRoom_Backend_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_Backend_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Backend_Order_By>>;
    where?: InputMaybe<Room_Backend_Bool_Exp>;
};

export type Subscription_RootRoom_Backend_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRoom_ChimeMeetingArgs = {
    distinct_on?: InputMaybe<Array<Room_ChimeMeeting_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ChimeMeeting_Order_By>>;
    where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

export type Subscription_RootRoom_ChimeMeeting_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ChimeMeeting_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ChimeMeeting_Order_By>>;
    where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

export type Subscription_RootRoom_ChimeMeeting_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_LivestreamDurationsArgs = {
    distinct_on?: InputMaybe<Array<Room_LivestreamDurations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_LivestreamDurations_Order_By>>;
    where?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
};

export type Subscription_RootRoom_LivestreamDurations_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_LivestreamDurations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_LivestreamDurations_Order_By>>;
    where?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
};

export type Subscription_RootRoom_ManagementModeArgs = {
    distinct_on?: InputMaybe<Array<Room_ManagementMode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ManagementMode_Order_By>>;
    where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

export type Subscription_RootRoom_ManagementMode_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ManagementMode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ManagementMode_Order_By>>;
    where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

export type Subscription_RootRoom_ManagementMode_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRoom_PersonRoleArgs = {
    distinct_on?: InputMaybe<Array<Room_PersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_PersonRole_Order_By>>;
    where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

export type Subscription_RootRoom_PersonRole_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_PersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_PersonRole_Order_By>>;
    where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

export type Subscription_RootRoom_PersonRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRoom_RoomArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

export type Subscription_RootRoom_RoomGroupMembershipArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomGroupMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomGroupMembership_Order_By>>;
    where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

export type Subscription_RootRoom_RoomGroupMembership_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomGroupMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomGroupMembership_Order_By>>;
    where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

export type Subscription_RootRoom_RoomGroupMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_RoomMembershipArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

export type Subscription_RootRoom_RoomMembership_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

export type Subscription_RootRoom_RoomMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_Room_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

export type Subscription_RootRoom_Room_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_ShuffleAlgorithmArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleAlgorithm_Order_By>>;
    where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleAlgorithm_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleAlgorithm_Order_By>>;
    where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleAlgorithm_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRoom_ShufflePeriodArgs = {
    distinct_on?: InputMaybe<Array<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

export type Subscription_RootRoom_ShufflePeriod_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

export type Subscription_RootRoom_ShufflePeriod_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_ShuffleQueueEntryArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleQueueEntry_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleQueueEntry_By_PkArgs = {
    id: Scalars["bigint"];
};

export type Subscription_RootRoom_ShuffleRoomArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleRoom_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleRoom_By_PkArgs = {
    id: Scalars["bigint"];
};

export type Subscription_RootSchedule_ContinuationArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

export type Subscription_RootSchedule_Continuation_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

export type Subscription_RootSchedule_Continuation_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSchedule_CurrentEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

export type Subscription_RootSchedule_CurrentEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

export type Subscription_RootSchedule_EventArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPersonArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPersonRoleArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPersonRole_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPersonRole_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPersonRole_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPersonRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootSchedule_EventProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSchedule_Event_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Subscription_RootSchedule_Event_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSchedule_ModeArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Mode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Mode_Order_By>>;
    where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

export type Subscription_RootSchedule_Mode_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_Mode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Mode_Order_By>>;
    where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

export type Subscription_RootSchedule_Mode_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootSchedule_OverlappingEventsArgs = {
    distinct_on?: InputMaybe<Array<Schedule_OverlappingEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_OverlappingEvents_Order_By>>;
    where?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
};

export type Subscription_RootSchedule_OverlappingEvents_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_OverlappingEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_OverlappingEvents_Order_By>>;
    where?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
};

export type Subscription_RootSchedule_StarredEventArgs = {
    distinct_on?: InputMaybe<Array<Schedule_StarredEvent_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_StarredEvent_Order_By>>;
    where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

export type Subscription_RootSchedule_StarredEvent_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Schedule_StarredEvent_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_StarredEvent_Order_By>>;
    where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

export type Subscription_RootSchedule_StarredEvent_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSchedule_SearchEventsArgs = {
    args: Schedule_SearchEvents_Args;
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Subscription_RootSchedule_SearchEvents_AggregateArgs = {
    args: Schedule_SearchEvents_Args;
    distinct_on?: InputMaybe<Array<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Subscription_RootSponsor_TierArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

export type Subscription_RootSponsor_TierMemberArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

export type Subscription_RootSponsor_TierMember_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

export type Subscription_RootSponsor_TierMember_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSponsor_Tier_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

export type Subscription_RootSponsor_Tier_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSystem_ConfigurationArgs = {
    distinct_on?: InputMaybe<Array<System_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_Configuration_Order_By>>;
    where?: InputMaybe<System_Configuration_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationKeyArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationKey_Order_By>>;
    where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationKey_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationKey_Order_By>>;
    where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootSystem_ConfigurationPermissionGrantArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationPermissionGrant_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSystem_Configuration_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_Configuration_Order_By>>;
    where?: InputMaybe<System_Configuration_Bool_Exp>;
};

export type Subscription_RootSystem_Configuration_By_PkArgs = {
    key: System_ConfigurationKey_Enum;
};

export type Subscription_RootSystem_SuperUserPermissionArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermission_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermission_Order_By>>;
    where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserPermissionGrantArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserPermissionGrant_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSystem_SuperUserPermission_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermission_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermission_Order_By>>;
    where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserPermission_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootSystem_SuperUserStateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserState_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserState_Order_By>>;
    where?: InputMaybe<System_SuperUserState_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserState_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserState_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserState_Order_By>>;
    where?: InputMaybe<System_SuperUserState_Bool_Exp>;
};

export type Subscription_RootVideo_ChannelStackArgs = {
    distinct_on?: InputMaybe<Array<Video_ChannelStack_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_ChannelStack_Order_By>>;
    where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

export type Subscription_RootVideo_ChannelStack_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_ChannelStack_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_ChannelStack_Order_By>>;
    where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

export type Subscription_RootVideo_ChannelStack_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_EventVonageSessionArgs = {
    distinct_on?: InputMaybe<Array<Video_EventVonageSession_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_EventVonageSession_Order_By>>;
    where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

export type Subscription_RootVideo_EventVonageSession_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_EventVonageSession_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_EventVonageSession_Order_By>>;
    where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

export type Subscription_RootVideo_EventVonageSession_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_ImmediateSwitchArgs = {
    distinct_on?: InputMaybe<Array<Video_ImmediateSwitch_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_ImmediateSwitch_Order_By>>;
    where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

export type Subscription_RootVideo_ImmediateSwitch_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_ImmediateSwitch_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_ImmediateSwitch_Order_By>>;
    where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

export type Subscription_RootVideo_ImmediateSwitch_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_InputTypeArgs = {
    distinct_on?: InputMaybe<Array<Video_InputType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_InputType_Order_By>>;
    where?: InputMaybe<Video_InputType_Bool_Exp>;
};

export type Subscription_RootVideo_InputType_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_InputType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_InputType_Order_By>>;
    where?: InputMaybe<Video_InputType_Bool_Exp>;
};

export type Subscription_RootVideo_InputType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootVideo_MediaLiveChannelStatusArgs = {
    distinct_on?: InputMaybe<Array<Video_MediaLiveChannelStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_MediaLiveChannelStatus_Order_By>>;
    where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

export type Subscription_RootVideo_MediaLiveChannelStatus_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_MediaLiveChannelStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_MediaLiveChannelStatus_Order_By>>;
    where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

export type Subscription_RootVideo_MediaLiveChannelStatus_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_RoomRtmpInputArgs = {
    distinct_on?: InputMaybe<Array<Video_RoomRtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RoomRtmpInput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

export type Subscription_RootVideo_RoomRtmpInput_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_RoomRtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RoomRtmpInput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

export type Subscription_RootVideo_RoomRtmpInput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_RoomRtmpOutputArgs = {
    distinct_on?: InputMaybe<Array<Video_RoomRtmpOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RoomRtmpOutput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

export type Subscription_RootVideo_RoomRtmpOutput_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_RoomRtmpOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RoomRtmpOutput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

export type Subscription_RootVideo_RoomRtmpOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_RtmpInputArgs = {
    distinct_on?: InputMaybe<Array<Video_RtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RtmpInput_Order_By>>;
    where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

export type Subscription_RootVideo_RtmpInput_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_RtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_RtmpInput_Order_By>>;
    where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

export type Subscription_RootVideo_RtmpInput_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootVideo_TranscriptionJobArgs = {
    distinct_on?: InputMaybe<Array<Video_TranscriptionJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_TranscriptionJob_Order_By>>;
    where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

export type Subscription_RootVideo_TranscriptionJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_TranscriptionJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_TranscriptionJob_Order_By>>;
    where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

export type Subscription_RootVideo_TranscriptionJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VideoRenderJobArgs = {
    distinct_on?: InputMaybe<Array<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

export type Subscription_RootVideo_VideoRenderJob_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

export type Subscription_RootVideo_VideoRenderJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VonageParticipantStreamArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

export type Subscription_RootVideo_VonageParticipantStream_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

export type Subscription_RootVideo_VonageParticipantStream_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VonageRoomRecordingArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

export type Subscription_RootVideo_VonageRoomRecording_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

export type Subscription_RootVideo_VonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VonageSessionLayoutArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

export type Subscription_RootVideo_VonageSessionLayout_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

export type Subscription_RootVideo_VonageSessionLayout_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VonageVideoPlaybackCommandArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Order_By>>;
    where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

export type Subscription_RootVideo_VonageVideoPlaybackCommand_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Order_By>>;
    where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

export type Subscription_RootVideo_VonageVideoPlaybackCommand_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_YouTubeUploadArgs = {
    distinct_on?: InputMaybe<Array<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

export type Subscription_RootVideo_YouTubeUpload_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

export type Subscription_RootVideo_YouTubeUpload_By_PkArgs = {
    id: Scalars["uuid"];
};

/** columns and relationships of "system.Configuration" */
export type System_Configuration = {
    __typename?: "system_Configuration";
    /** An object relationship */
    configurationKey: System_ConfigurationKey;
    created_at: Scalars["timestamptz"];
    key: System_ConfigurationKey_Enum;
    updated_at: Scalars["timestamptz"];
    value: Scalars["jsonb"];
};

/** columns and relationships of "system.Configuration" */
export type System_ConfigurationValueArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "system.ConfigurationKey" */
export type System_ConfigurationKey = {
    __typename?: "system_ConfigurationKey";
    description?: Maybe<Scalars["String"]>;
    /** An array relationship */
    grantedPermissions: Array<System_ConfigurationPermissionGrant>;
    /** An aggregate relationship */
    grantedPermissions_aggregate: System_ConfigurationPermissionGrant_Aggregate;
    name: Scalars["String"];
};

/** columns and relationships of "system.ConfigurationKey" */
export type System_ConfigurationKeyGrantedPermissionsArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.ConfigurationKey" */
export type System_ConfigurationKeyGrantedPermissions_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** aggregated selection of "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate = {
    __typename?: "system_ConfigurationKey_aggregate";
    aggregate?: Maybe<System_ConfigurationKey_Aggregate_Fields>;
    nodes: Array<System_ConfigurationKey>;
};

/** aggregate fields of "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate_Fields = {
    __typename?: "system_ConfigurationKey_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<System_ConfigurationKey_Max_Fields>;
    min?: Maybe<System_ConfigurationKey_Min_Fields>;
};

/** aggregate fields of "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<System_ConfigurationKey_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "system.ConfigurationKey". All fields are combined with a logical 'AND'. */
export type System_ConfigurationKey_Bool_Exp = {
    _and?: InputMaybe<Array<System_ConfigurationKey_Bool_Exp>>;
    _not?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
    _or?: InputMaybe<Array<System_ConfigurationKey_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    grantedPermissions?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.ConfigurationKey" */
export enum System_ConfigurationKey_Constraint {
    /** unique or primary key constraint */
    ConfigurationKeyPkey = "ConfigurationKey_pkey",
}

export enum System_ConfigurationKey_Enum {
    /** Allow-list (JSON array) of wildcard-match domains that the system should allow email to be sent to. See also NPM wildcard-match package. */
    AllowEmailsToDomains = "ALLOW_EMAILS_TO_DOMAINS",
    /** The time of the latest revision of the host cookie policy. The value should be a Number representing the milliseconds elapsed since the UNIX epoch. */
    CookiePolicyLatestRevisionTimestamp = "COOKIE_POLICY_LATEST_REVISION_TIMESTAMP",
    /** The URL to the host cookie policy. Note: If self hosting Clowdr, this must be your organisation's cookie policy - you cannot legally reuse, rely on or copy Clowdr's cookie policy. */
    CookiePolicyUrl = "COOKIE_POLICY_URL",
    /** A string representing the full frontend host URL for the app. */
    DefaultFrontendHost = "DEFAULT_FRONTEND_HOST",
    /** Default backend platform for video rooms */
    DefaultVideoRoomBackend = "DEFAULT_VIDEO_ROOM_BACKEND",
    /** Templates for emails sent by the application. */
    EmailTemplates = "EMAIL_TEMPLATES",
    /** The name of the organisation legally responsible for hosting this instance of the Clowdr software. */
    HostOrganisationName = "HOST_ORGANISATION_NAME",
    /** The time of the latest revision of the host Privacy Policy. The value should be a Number representing the milliseconds elapsed since the UNIX epoch. */
    PrivacyPolicyLatestRevisionTimestamp = "PRIVACY_POLICY_LATEST_REVISION_TIMESTAMP",
    /** URL to the host Privacy Policy. Note: If self hosting Clowdr, this must be your organisation's privacy policy - you cannot legally reuse, rely on or copy Clowdr's privacy policy. */
    PrivacyPolicyUrl = "PRIVACY_POLICY_URL",
    /** SendGrid API Key required for sending emails such as invites and submission requests */
    SendgridApiKey = "SENDGRID_API_KEY",
    /** Default SendGrid Reply-To email address. */
    SendgridReplyto = "SENDGRID_REPLYTO",
    /** Default SendGrid Sender email address. */
    SendgridSender = "SENDGRID_SENDER",
    /** The name emails are from when sent via SendGrid. */
    SendgridSenderName = "SENDGRID_SENDER_NAME",
    SendgridWebhookPublicKey = "SENDGRID_WEBHOOK_PUBLIC_KEY",
    /** Contact address for people to request emails never be sent to them again. */
    StopEmailsContactEmailAddress = "STOP_EMAILS_CONTACT_EMAIL_ADDRESS",
    /** The time of the latest revision of the host T&Cs. The value should be a Number representing the milliseconds elapsed since the UNIX epoch. */
    TermsLatestRevisionTimestamp = "TERMS_LATEST_REVISION_TIMESTAMP",
    /** URL to the host T&Cs. Note: If self hosting Clowdr, this must be your organisation's terms - you cannot legally reuse, rely on or copy Clowdr's terms. */
    TermsUrl = "TERMS_URL",
    /** VAPID keys are used for push notifications and are generated automatically by the realtime service on first use. */
    VapidPrivateKey = "VAPID_PRIVATE_KEY",
    /** VAPID keys are used for push notifications and are generated automatically by the realtime service on first use. */
    VapidPublicKey = "VAPID_PUBLIC_KEY",
}

/** Boolean expression to compare columns of type "system_ConfigurationKey_enum". All fields are combined with logical 'AND'. */
export type System_ConfigurationKey_Enum_Comparison_Exp = {
    _eq?: InputMaybe<System_ConfigurationKey_Enum>;
    _in?: InputMaybe<Array<System_ConfigurationKey_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<System_ConfigurationKey_Enum>;
    _nin?: InputMaybe<Array<System_ConfigurationKey_Enum>>;
};

/** input type for inserting data into table "system.ConfigurationKey" */
export type System_ConfigurationKey_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    grantedPermissions?: InputMaybe<System_ConfigurationPermissionGrant_Arr_Rel_Insert_Input>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type System_ConfigurationKey_Max_Fields = {
    __typename?: "system_ConfigurationKey_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type System_ConfigurationKey_Min_Fields = {
    __typename?: "system_ConfigurationKey_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "system.ConfigurationKey" */
export type System_ConfigurationKey_Mutation_Response = {
    __typename?: "system_ConfigurationKey_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<System_ConfigurationKey>;
};

/** input type for inserting object relation for remote table "system.ConfigurationKey" */
export type System_ConfigurationKey_Obj_Rel_Insert_Input = {
    data: System_ConfigurationKey_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<System_ConfigurationKey_On_Conflict>;
};

/** on_conflict condition type for table "system.ConfigurationKey" */
export type System_ConfigurationKey_On_Conflict = {
    constraint: System_ConfigurationKey_Constraint;
    update_columns?: Array<System_ConfigurationKey_Update_Column>;
    where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

/** Ordering options when selecting data from "system.ConfigurationKey". */
export type System_ConfigurationKey_Order_By = {
    description?: InputMaybe<Order_By>;
    grantedPermissions_aggregate?: InputMaybe<System_ConfigurationPermissionGrant_Aggregate_Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: system_ConfigurationKey */
export type System_ConfigurationKey_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "system.ConfigurationKey" */
export enum System_ConfigurationKey_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "system.ConfigurationKey" */
export type System_ConfigurationKey_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "system.ConfigurationKey" */
export enum System_ConfigurationKey_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant = {
    __typename?: "system_ConfigurationPermissionGrant";
    configurationKey: System_ConfigurationKey_Enum;
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    grantedPermission: System_SuperUserPermission;
    id: Scalars["uuid"];
    permissionName: System_SuperUserPermission_Enum;
    /** An object relationship */
    targetConfigurationKey: System_ConfigurationKey;
    updated_at: Scalars["timestamptz"];
    /** An object relationship */
    user: User;
    userId: Scalars["String"];
};

/** aggregated selection of "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Aggregate = {
    __typename?: "system_ConfigurationPermissionGrant_aggregate";
    aggregate?: Maybe<System_ConfigurationPermissionGrant_Aggregate_Fields>;
    nodes: Array<System_ConfigurationPermissionGrant>;
};

/** aggregate fields of "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Aggregate_Fields = {
    __typename?: "system_ConfigurationPermissionGrant_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<System_ConfigurationPermissionGrant_Max_Fields>;
    min?: Maybe<System_ConfigurationPermissionGrant_Min_Fields>;
};

/** aggregate fields of "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<System_ConfigurationPermissionGrant_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<System_ConfigurationPermissionGrant_Max_Order_By>;
    min?: InputMaybe<System_ConfigurationPermissionGrant_Min_Order_By>;
};

/** input type for inserting array relation for remote table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Arr_Rel_Insert_Input = {
    data: Array<System_ConfigurationPermissionGrant_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<System_ConfigurationPermissionGrant_On_Conflict>;
};

/** Boolean expression to filter rows from the table "system.ConfigurationPermissionGrant". All fields are combined with a logical 'AND'. */
export type System_ConfigurationPermissionGrant_Bool_Exp = {
    _and?: InputMaybe<Array<System_ConfigurationPermissionGrant_Bool_Exp>>;
    _not?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
    _or?: InputMaybe<Array<System_ConfigurationPermissionGrant_Bool_Exp>>;
    configurationKey?: InputMaybe<System_ConfigurationKey_Enum_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    grantedPermission?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    permissionName?: InputMaybe<System_SuperUserPermission_Enum_Comparison_Exp>;
    targetConfigurationKey?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    user?: InputMaybe<User_Bool_Exp>;
    userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.ConfigurationPermissionGrant" */
export enum System_ConfigurationPermissionGrant_Constraint {
    /** unique or primary key constraint */
    ConfigurationPermissionGrantPermissionNameConfigurationKeyUs = "ConfigurationPermissionGrant_permissionName_configurationKey_us",
    /** unique or primary key constraint */
    ConfigurationPermissionGrantPkey = "ConfigurationPermissionGrant_pkey",
}

/** input type for inserting data into table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Insert_Input = {
    configurationKey?: InputMaybe<System_ConfigurationKey_Enum>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    grantedPermission?: InputMaybe<System_SuperUserPermission_Obj_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    permissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    targetConfigurationKey?: InputMaybe<System_ConfigurationKey_Obj_Rel_Insert_Input>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type System_ConfigurationPermissionGrant_Max_Fields = {
    __typename?: "system_ConfigurationPermissionGrant_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type System_ConfigurationPermissionGrant_Min_Fields = {
    __typename?: "system_ConfigurationPermissionGrant_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Mutation_Response = {
    __typename?: "system_ConfigurationPermissionGrant_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<System_ConfigurationPermissionGrant>;
};

/** on_conflict condition type for table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_On_Conflict = {
    constraint: System_ConfigurationPermissionGrant_Constraint;
    update_columns?: Array<System_ConfigurationPermissionGrant_Update_Column>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** Ordering options when selecting data from "system.ConfigurationPermissionGrant". */
export type System_ConfigurationPermissionGrant_Order_By = {
    configurationKey?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    grantedPermission?: InputMaybe<System_SuperUserPermission_Order_By>;
    id?: InputMaybe<Order_By>;
    permissionName?: InputMaybe<Order_By>;
    targetConfigurationKey?: InputMaybe<System_ConfigurationKey_Order_By>;
    updated_at?: InputMaybe<Order_By>;
    user?: InputMaybe<User_Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: system_ConfigurationPermissionGrant */
export type System_ConfigurationPermissionGrant_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "system.ConfigurationPermissionGrant" */
export enum System_ConfigurationPermissionGrant_Select_Column {
    /** column name */
    ConfigurationKey = "configurationKey",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    PermissionName = "permissionName",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Set_Input = {
    configurationKey?: InputMaybe<System_ConfigurationKey_Enum>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    permissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "system.ConfigurationPermissionGrant" */
export enum System_ConfigurationPermissionGrant_Update_Column {
    /** column name */
    ConfigurationKey = "configurationKey",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    PermissionName = "permissionName",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** aggregated selection of "system.Configuration" */
export type System_Configuration_Aggregate = {
    __typename?: "system_Configuration_aggregate";
    aggregate?: Maybe<System_Configuration_Aggregate_Fields>;
    nodes: Array<System_Configuration>;
};

/** aggregate fields of "system.Configuration" */
export type System_Configuration_Aggregate_Fields = {
    __typename?: "system_Configuration_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<System_Configuration_Max_Fields>;
    min?: Maybe<System_Configuration_Min_Fields>;
};

/** aggregate fields of "system.Configuration" */
export type System_Configuration_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<System_Configuration_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type System_Configuration_Append_Input = {
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "system.Configuration". All fields are combined with a logical 'AND'. */
export type System_Configuration_Bool_Exp = {
    _and?: InputMaybe<Array<System_Configuration_Bool_Exp>>;
    _not?: InputMaybe<System_Configuration_Bool_Exp>;
    _or?: InputMaybe<Array<System_Configuration_Bool_Exp>>;
    configurationKey?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    key?: InputMaybe<System_ConfigurationKey_Enum_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    value?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.Configuration" */
export enum System_Configuration_Constraint {
    /** unique or primary key constraint */
    ConfigurationPkey = "Configuration_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type System_Configuration_Delete_At_Path_Input = {
    value?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type System_Configuration_Delete_Elem_Input = {
    value?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type System_Configuration_Delete_Key_Input = {
    value?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "system.Configuration" */
export type System_Configuration_Insert_Input = {
    configurationKey?: InputMaybe<System_ConfigurationKey_Obj_Rel_Insert_Input>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    key?: InputMaybe<System_ConfigurationKey_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type System_Configuration_Max_Fields = {
    __typename?: "system_Configuration_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type System_Configuration_Min_Fields = {
    __typename?: "system_Configuration_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "system.Configuration" */
export type System_Configuration_Mutation_Response = {
    __typename?: "system_Configuration_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<System_Configuration>;
};

/** on_conflict condition type for table "system.Configuration" */
export type System_Configuration_On_Conflict = {
    constraint: System_Configuration_Constraint;
    update_columns?: Array<System_Configuration_Update_Column>;
    where?: InputMaybe<System_Configuration_Bool_Exp>;
};

/** Ordering options when selecting data from "system.Configuration". */
export type System_Configuration_Order_By = {
    configurationKey?: InputMaybe<System_ConfigurationKey_Order_By>;
    created_at?: InputMaybe<Order_By>;
    key?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: system_Configuration */
export type System_Configuration_Pk_Columns_Input = {
    key: System_ConfigurationKey_Enum;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type System_Configuration_Prepend_Input = {
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "system.Configuration" */
export enum System_Configuration_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Key = "key",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Value = "value",
}

/** input type for updating data in table "system.Configuration" */
export type System_Configuration_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    key?: InputMaybe<System_ConfigurationKey_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    value?: InputMaybe<Scalars["jsonb"]>;
};

/** update columns of table "system.Configuration" */
export enum System_Configuration_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Key = "key",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Value = "value",
}

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermission = {
    __typename?: "system_SuperUserPermission";
    description: Scalars["String"];
    name: Scalars["String"];
    /** An array relationship */
    superUserGrantTargets: Array<System_SuperUserPermissionGrant>;
    /** An aggregate relationship */
    superUserGrantTargets_aggregate: System_SuperUserPermissionGrant_Aggregate;
    /** An array relationship */
    superUserGrants: Array<System_SuperUserPermissionGrant>;
    /** An aggregate relationship */
    superUserGrants_aggregate: System_SuperUserPermissionGrant_Aggregate;
    /** An array relationship */
    systemConfigurationGrants: Array<System_ConfigurationPermissionGrant>;
    /** An aggregate relationship */
    systemConfigurationGrants_aggregate: System_ConfigurationPermissionGrant_Aggregate;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSuperUserGrantTargetsArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSuperUserGrantTargets_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSuperUserGrantsArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSuperUserGrants_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSystemConfigurationGrantsArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSystemConfigurationGrants_AggregateArgs = {
    distinct_on?: InputMaybe<Array<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant = {
    __typename?: "system_SuperUserPermissionGrant";
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    grantedPermission: System_SuperUserPermission;
    grantedPermissionName: System_SuperUserPermission_Enum;
    id: Scalars["uuid"];
    /** An object relationship */
    targetPermission?: Maybe<System_SuperUserPermission>;
    targetPermissionName?: Maybe<System_SuperUserPermission_Enum>;
    updated_at: Scalars["timestamptz"];
    /** An object relationship */
    user: User;
    userId: Scalars["String"];
};

/** aggregated selection of "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Aggregate = {
    __typename?: "system_SuperUserPermissionGrant_aggregate";
    aggregate?: Maybe<System_SuperUserPermissionGrant_Aggregate_Fields>;
    nodes: Array<System_SuperUserPermissionGrant>;
};

/** aggregate fields of "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Aggregate_Fields = {
    __typename?: "system_SuperUserPermissionGrant_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<System_SuperUserPermissionGrant_Max_Fields>;
    min?: Maybe<System_SuperUserPermissionGrant_Min_Fields>;
};

/** aggregate fields of "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<System_SuperUserPermissionGrant_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<System_SuperUserPermissionGrant_Max_Order_By>;
    min?: InputMaybe<System_SuperUserPermissionGrant_Min_Order_By>;
};

/** input type for inserting array relation for remote table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Arr_Rel_Insert_Input = {
    data: Array<System_SuperUserPermissionGrant_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<System_SuperUserPermissionGrant_On_Conflict>;
};

/** Boolean expression to filter rows from the table "system.SuperUserPermissionGrant". All fields are combined with a logical 'AND'. */
export type System_SuperUserPermissionGrant_Bool_Exp = {
    _and?: InputMaybe<Array<System_SuperUserPermissionGrant_Bool_Exp>>;
    _not?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
    _or?: InputMaybe<Array<System_SuperUserPermissionGrant_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    grantedPermission?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
    grantedPermissionName?: InputMaybe<System_SuperUserPermission_Enum_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    targetPermission?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
    targetPermissionName?: InputMaybe<System_SuperUserPermission_Enum_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    user?: InputMaybe<User_Bool_Exp>;
    userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.SuperUserPermissionGrant" */
export enum System_SuperUserPermissionGrant_Constraint {
    /** unique or primary key constraint */
    SuperUserPermissionGrantGrantedPermissionNameUserIdTargeKey = "SuperUserPermissionGrant_grantedPermissionName_userId_targe_key",
    /** unique or primary key constraint */
    SuperUserPermissionGrantPkey = "SuperUserPermissionGrant_pkey",
}

/** input type for inserting data into table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    grantedPermission?: InputMaybe<System_SuperUserPermission_Obj_Rel_Insert_Input>;
    grantedPermissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    id?: InputMaybe<Scalars["uuid"]>;
    targetPermission?: InputMaybe<System_SuperUserPermission_Obj_Rel_Insert_Input>;
    targetPermissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type System_SuperUserPermissionGrant_Max_Fields = {
    __typename?: "system_SuperUserPermissionGrant_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type System_SuperUserPermissionGrant_Min_Fields = {
    __typename?: "system_SuperUserPermissionGrant_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Mutation_Response = {
    __typename?: "system_SuperUserPermissionGrant_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<System_SuperUserPermissionGrant>;
};

/** on_conflict condition type for table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_On_Conflict = {
    constraint: System_SuperUserPermissionGrant_Constraint;
    update_columns?: Array<System_SuperUserPermissionGrant_Update_Column>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** Ordering options when selecting data from "system.SuperUserPermissionGrant". */
export type System_SuperUserPermissionGrant_Order_By = {
    created_at?: InputMaybe<Order_By>;
    grantedPermission?: InputMaybe<System_SuperUserPermission_Order_By>;
    grantedPermissionName?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    targetPermission?: InputMaybe<System_SuperUserPermission_Order_By>;
    targetPermissionName?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    user?: InputMaybe<User_Order_By>;
    userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: system_SuperUserPermissionGrant */
export type System_SuperUserPermissionGrant_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "system.SuperUserPermissionGrant" */
export enum System_SuperUserPermissionGrant_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    GrantedPermissionName = "grantedPermissionName",
    /** column name */
    Id = "id",
    /** column name */
    TargetPermissionName = "targetPermissionName",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    grantedPermissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    id?: InputMaybe<Scalars["uuid"]>;
    targetPermissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    userId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "system.SuperUserPermissionGrant" */
export enum System_SuperUserPermissionGrant_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    GrantedPermissionName = "grantedPermissionName",
    /** column name */
    Id = "id",
    /** column name */
    TargetPermissionName = "targetPermissionName",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** aggregated selection of "system.SuperUserPermission" */
export type System_SuperUserPermission_Aggregate = {
    __typename?: "system_SuperUserPermission_aggregate";
    aggregate?: Maybe<System_SuperUserPermission_Aggregate_Fields>;
    nodes: Array<System_SuperUserPermission>;
};

/** aggregate fields of "system.SuperUserPermission" */
export type System_SuperUserPermission_Aggregate_Fields = {
    __typename?: "system_SuperUserPermission_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<System_SuperUserPermission_Max_Fields>;
    min?: Maybe<System_SuperUserPermission_Min_Fields>;
};

/** aggregate fields of "system.SuperUserPermission" */
export type System_SuperUserPermission_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<System_SuperUserPermission_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "system.SuperUserPermission". All fields are combined with a logical 'AND'. */
export type System_SuperUserPermission_Bool_Exp = {
    _and?: InputMaybe<Array<System_SuperUserPermission_Bool_Exp>>;
    _not?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
    _or?: InputMaybe<Array<System_SuperUserPermission_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
    superUserGrantTargets?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
    superUserGrants?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
    systemConfigurationGrants?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** unique or primary key constraints on table "system.SuperUserPermission" */
export enum System_SuperUserPermission_Constraint {
    /** unique or primary key constraint */
    SuperUserPermissionPkey = "SuperUserPermission_pkey",
}

export enum System_SuperUserPermission_Enum {
    /** Ability to create a conference demo code. */
    CreateConferenceDemoCode = "CREATE_CONFERENCE_DEMO_CODE",
    /** Ability to delete a super-user permission. */
    DeleteSuPermission = "DELETE_SU_PERMISSION",
    /** Ability to delete users from the system. */
    DeleteUsers = "DELETE_USERS",
    /** Ability to edit the links between users and registrants. */
    EditUserRegistrants = "EDIT_USER_REGISTRANTS",
    /** Ability to insert a super-user permission. */
    InsertSuPermission = "INSERT_SU_PERMISSION",
    /** Ability to list all conference demo codes. */
    ListConferenceDemoCodes = "LIST_CONFERENCE_DEMO_CODES",
    /** Ability to set a specified system configuration. */
    SetSystemConfiguration = "SET_SYSTEM_CONFIGURATION",
    /** Ability to view a super-user permission grant. */
    ViewSuPermissionGrant = "VIEW_SU_PERMISSION_GRANT",
    /** Ability to view a system configuration. */
    ViewSystemConfiguration = "VIEW_SYSTEM_CONFIGURATION",
    /** Ability to view users in the system. */
    ViewUsers = "VIEW_USERS",
}

/** Boolean expression to compare columns of type "system_SuperUserPermission_enum". All fields are combined with logical 'AND'. */
export type System_SuperUserPermission_Enum_Comparison_Exp = {
    _eq?: InputMaybe<System_SuperUserPermission_Enum>;
    _in?: InputMaybe<Array<System_SuperUserPermission_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<System_SuperUserPermission_Enum>;
    _nin?: InputMaybe<Array<System_SuperUserPermission_Enum>>;
};

/** input type for inserting data into table "system.SuperUserPermission" */
export type System_SuperUserPermission_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
    superUserGrantTargets?: InputMaybe<System_SuperUserPermissionGrant_Arr_Rel_Insert_Input>;
    superUserGrants?: InputMaybe<System_SuperUserPermissionGrant_Arr_Rel_Insert_Input>;
    systemConfigurationGrants?: InputMaybe<System_ConfigurationPermissionGrant_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type System_SuperUserPermission_Max_Fields = {
    __typename?: "system_SuperUserPermission_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type System_SuperUserPermission_Min_Fields = {
    __typename?: "system_SuperUserPermission_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "system.SuperUserPermission" */
export type System_SuperUserPermission_Mutation_Response = {
    __typename?: "system_SuperUserPermission_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<System_SuperUserPermission>;
};

/** input type for inserting object relation for remote table "system.SuperUserPermission" */
export type System_SuperUserPermission_Obj_Rel_Insert_Input = {
    data: System_SuperUserPermission_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<System_SuperUserPermission_On_Conflict>;
};

/** on_conflict condition type for table "system.SuperUserPermission" */
export type System_SuperUserPermission_On_Conflict = {
    constraint: System_SuperUserPermission_Constraint;
    update_columns?: Array<System_SuperUserPermission_Update_Column>;
    where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

/** Ordering options when selecting data from "system.SuperUserPermission". */
export type System_SuperUserPermission_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
    superUserGrantTargets_aggregate?: InputMaybe<System_SuperUserPermissionGrant_Aggregate_Order_By>;
    superUserGrants_aggregate?: InputMaybe<System_SuperUserPermissionGrant_Aggregate_Order_By>;
    systemConfigurationGrants_aggregate?: InputMaybe<System_ConfigurationPermissionGrant_Aggregate_Order_By>;
};

/** primary key columns input for table: system_SuperUserPermission */
export type System_SuperUserPermission_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "system.SuperUserPermission" */
export enum System_SuperUserPermission_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "system.SuperUserPermission" */
export type System_SuperUserPermission_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "system.SuperUserPermission" */
export enum System_SuperUserPermission_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "system.SuperUserState" */
export type System_SuperUserState = {
    __typename?: "system_SuperUserState";
    canBeDirectlyInitialised?: Maybe<Scalars["Boolean"]>;
    isInitialised?: Maybe<Scalars["Boolean"]>;
};

/** aggregated selection of "system.SuperUserState" */
export type System_SuperUserState_Aggregate = {
    __typename?: "system_SuperUserState_aggregate";
    aggregate?: Maybe<System_SuperUserState_Aggregate_Fields>;
    nodes: Array<System_SuperUserState>;
};

/** aggregate fields of "system.SuperUserState" */
export type System_SuperUserState_Aggregate_Fields = {
    __typename?: "system_SuperUserState_aggregate_fields";
    count: Scalars["Int"];
};

/** aggregate fields of "system.SuperUserState" */
export type System_SuperUserState_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<System_SuperUserState_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "system.SuperUserState". All fields are combined with a logical 'AND'. */
export type System_SuperUserState_Bool_Exp = {
    _and?: InputMaybe<Array<System_SuperUserState_Bool_Exp>>;
    _not?: InputMaybe<System_SuperUserState_Bool_Exp>;
    _or?: InputMaybe<Array<System_SuperUserState_Bool_Exp>>;
    canBeDirectlyInitialised?: InputMaybe<Boolean_Comparison_Exp>;
    isInitialised?: InputMaybe<Boolean_Comparison_Exp>;
};

/** Ordering options when selecting data from "system.SuperUserState". */
export type System_SuperUserState_Order_By = {
    canBeDirectlyInitialised?: InputMaybe<Order_By>;
    isInitialised?: InputMaybe<Order_By>;
};

/** select columns of table "system.SuperUserState" */
export enum System_SuperUserState_Select_Column {
    /** column name */
    CanBeDirectlyInitialised = "canBeDirectlyInitialised",
    /** column name */
    IsInitialised = "isInitialised",
}

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["timestamptz"]>;
    _gt?: InputMaybe<Scalars["timestamptz"]>;
    _gte?: InputMaybe<Scalars["timestamptz"]>;
    _in?: InputMaybe<Array<Scalars["timestamptz"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["timestamptz"]>;
    _lte?: InputMaybe<Scalars["timestamptz"]>;
    _neq?: InputMaybe<Scalars["timestamptz"]>;
    _nin?: InputMaybe<Array<Scalars["timestamptz"]>>;
};

/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export type Uuid_Comparison_Exp = {
    _eq?: InputMaybe<Scalars["uuid"]>;
    _gt?: InputMaybe<Scalars["uuid"]>;
    _gte?: InputMaybe<Scalars["uuid"]>;
    _in?: InputMaybe<Array<Scalars["uuid"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _lt?: InputMaybe<Scalars["uuid"]>;
    _lte?: InputMaybe<Scalars["uuid"]>;
    _neq?: InputMaybe<Scalars["uuid"]>;
    _nin?: InputMaybe<Array<Scalars["uuid"]>>;
};

/** columns and relationships of "video.ChannelStack" */
export type Video_ChannelStack = {
    __typename?: "video_ChannelStack";
    /** An object relationship */
    channelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob>;
    channelStackCreateJobId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    channelStackUpdateJobs: Array<Job_Queues_ChannelStackUpdateJob>;
    /** An aggregate relationship */
    channelStackUpdateJobs_aggregate: Job_Queues_ChannelStackUpdateJob_Aggregate;
    cloudFormationStackArn?: Maybe<Scalars["String"]>;
    cloudFrontDistributionId: Scalars["String"];
    cloudFrontDomain: Scalars["String"];
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    endpointUri: Scalars["String"];
    id: Scalars["uuid"];
    loopingMp4InputAttachmentName: Scalars["String"];
    mediaLiveChannelId: Scalars["String"];
    /** An object relationship */
    mediaLiveChannelStatus?: Maybe<Video_MediaLiveChannelStatus>;
    mediaPackageChannelId: Scalars["String"];
    mp4InputAttachmentName: Scalars["String"];
    mp4InputId: Scalars["String"];
    /** An object relationship */
    room?: Maybe<Room_Room>;
    roomId?: Maybe<Scalars["uuid"]>;
    rtmpAInputAttachmentName: Scalars["String"];
    rtmpAInputId: Scalars["String"];
    rtmpAInputUri: Scalars["String"];
    rtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    rtmpBInputId?: Maybe<Scalars["String"]>;
    rtmpBInputUri?: Maybe<Scalars["String"]>;
    rtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    rtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    rtmpOutputUri?: Maybe<Scalars["String"]>;
    rtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    rtmpRoomInputId?: Maybe<Scalars["String"]>;
    updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "video.ChannelStack" */
export type Video_ChannelStackChannelStackUpdateJobsArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

/** columns and relationships of "video.ChannelStack" */
export type Video_ChannelStackChannelStackUpdateJobs_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

/** aggregated selection of "video.ChannelStack" */
export type Video_ChannelStack_Aggregate = {
    __typename?: "video_ChannelStack_aggregate";
    aggregate?: Maybe<Video_ChannelStack_Aggregate_Fields>;
    nodes: Array<Video_ChannelStack>;
};

/** aggregate fields of "video.ChannelStack" */
export type Video_ChannelStack_Aggregate_Fields = {
    __typename?: "video_ChannelStack_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_ChannelStack_Max_Fields>;
    min?: Maybe<Video_ChannelStack_Min_Fields>;
};

/** aggregate fields of "video.ChannelStack" */
export type Video_ChannelStack_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_ChannelStack_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.ChannelStack". All fields are combined with a logical 'AND'. */
export type Video_ChannelStack_Bool_Exp = {
    _and?: InputMaybe<Array<Video_ChannelStack_Bool_Exp>>;
    _not?: InputMaybe<Video_ChannelStack_Bool_Exp>;
    _or?: InputMaybe<Array<Video_ChannelStack_Bool_Exp>>;
    channelStackCreateJob?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
    channelStackCreateJobId?: InputMaybe<Uuid_Comparison_Exp>;
    channelStackUpdateJobs?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
    cloudFormationStackArn?: InputMaybe<String_Comparison_Exp>;
    cloudFrontDistributionId?: InputMaybe<String_Comparison_Exp>;
    cloudFrontDomain?: InputMaybe<String_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    endpointUri?: InputMaybe<String_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    loopingMp4InputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    mediaLiveChannelId?: InputMaybe<String_Comparison_Exp>;
    mediaLiveChannelStatus?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
    mediaPackageChannelId?: InputMaybe<String_Comparison_Exp>;
    mp4InputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    mp4InputId?: InputMaybe<String_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    rtmpAInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    rtmpAInputId?: InputMaybe<String_Comparison_Exp>;
    rtmpAInputUri?: InputMaybe<String_Comparison_Exp>;
    rtmpBInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    rtmpBInputId?: InputMaybe<String_Comparison_Exp>;
    rtmpBInputUri?: InputMaybe<String_Comparison_Exp>;
    rtmpOutputDestinationId?: InputMaybe<String_Comparison_Exp>;
    rtmpOutputStreamKey?: InputMaybe<String_Comparison_Exp>;
    rtmpOutputUri?: InputMaybe<String_Comparison_Exp>;
    rtmpRoomInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    rtmpRoomInputId?: InputMaybe<String_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.ChannelStack" */
export enum Video_ChannelStack_Constraint {
    /** unique or primary key constraint */
    MediaLiveChannelPkey = "MediaLiveChannel_pkey",
    /** unique or primary key constraint */
    MediaLiveChannelRoomIdKey = "MediaLiveChannel_roomId_key",
}

/** input type for inserting data into table "video.ChannelStack" */
export type Video_ChannelStack_Insert_Input = {
    channelStackCreateJob?: InputMaybe<Job_Queues_ChannelStackCreateJob_Obj_Rel_Insert_Input>;
    channelStackCreateJobId?: InputMaybe<Scalars["uuid"]>;
    channelStackUpdateJobs?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Arr_Rel_Insert_Input>;
    cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    cloudFrontDistributionId?: InputMaybe<Scalars["String"]>;
    cloudFrontDomain?: InputMaybe<Scalars["String"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    endpointUri?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    loopingMp4InputAttachmentName?: InputMaybe<Scalars["String"]>;
    mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    mediaLiveChannelStatus?: InputMaybe<Video_MediaLiveChannelStatus_Obj_Rel_Insert_Input>;
    mediaPackageChannelId?: InputMaybe<Scalars["String"]>;
    mp4InputAttachmentName?: InputMaybe<Scalars["String"]>;
    mp4InputId?: InputMaybe<Scalars["String"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    rtmpAInputAttachmentName?: InputMaybe<Scalars["String"]>;
    rtmpAInputId?: InputMaybe<Scalars["String"]>;
    rtmpAInputUri?: InputMaybe<Scalars["String"]>;
    rtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    rtmpBInputId?: InputMaybe<Scalars["String"]>;
    rtmpBInputUri?: InputMaybe<Scalars["String"]>;
    rtmpOutputDestinationId?: InputMaybe<Scalars["String"]>;
    rtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    rtmpOutputUri?: InputMaybe<Scalars["String"]>;
    rtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    rtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_ChannelStack_Max_Fields = {
    __typename?: "video_ChannelStack_max_fields";
    channelStackCreateJobId?: Maybe<Scalars["uuid"]>;
    cloudFormationStackArn?: Maybe<Scalars["String"]>;
    cloudFrontDistributionId?: Maybe<Scalars["String"]>;
    cloudFrontDomain?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    endpointUri?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    loopingMp4InputAttachmentName?: Maybe<Scalars["String"]>;
    mediaLiveChannelId?: Maybe<Scalars["String"]>;
    mediaPackageChannelId?: Maybe<Scalars["String"]>;
    mp4InputAttachmentName?: Maybe<Scalars["String"]>;
    mp4InputId?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    rtmpAInputAttachmentName?: Maybe<Scalars["String"]>;
    rtmpAInputId?: Maybe<Scalars["String"]>;
    rtmpAInputUri?: Maybe<Scalars["String"]>;
    rtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    rtmpBInputId?: Maybe<Scalars["String"]>;
    rtmpBInputUri?: Maybe<Scalars["String"]>;
    rtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    rtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    rtmpOutputUri?: Maybe<Scalars["String"]>;
    rtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    rtmpRoomInputId?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_ChannelStack_Min_Fields = {
    __typename?: "video_ChannelStack_min_fields";
    channelStackCreateJobId?: Maybe<Scalars["uuid"]>;
    cloudFormationStackArn?: Maybe<Scalars["String"]>;
    cloudFrontDistributionId?: Maybe<Scalars["String"]>;
    cloudFrontDomain?: Maybe<Scalars["String"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    endpointUri?: Maybe<Scalars["String"]>;
    id?: Maybe<Scalars["uuid"]>;
    loopingMp4InputAttachmentName?: Maybe<Scalars["String"]>;
    mediaLiveChannelId?: Maybe<Scalars["String"]>;
    mediaPackageChannelId?: Maybe<Scalars["String"]>;
    mp4InputAttachmentName?: Maybe<Scalars["String"]>;
    mp4InputId?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    rtmpAInputAttachmentName?: Maybe<Scalars["String"]>;
    rtmpAInputId?: Maybe<Scalars["String"]>;
    rtmpAInputUri?: Maybe<Scalars["String"]>;
    rtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    rtmpBInputId?: Maybe<Scalars["String"]>;
    rtmpBInputUri?: Maybe<Scalars["String"]>;
    rtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    rtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    rtmpOutputUri?: Maybe<Scalars["String"]>;
    rtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    rtmpRoomInputId?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.ChannelStack" */
export type Video_ChannelStack_Mutation_Response = {
    __typename?: "video_ChannelStack_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_ChannelStack>;
};

/** input type for inserting object relation for remote table "video.ChannelStack" */
export type Video_ChannelStack_Obj_Rel_Insert_Input = {
    data: Video_ChannelStack_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_ChannelStack_On_Conflict>;
};

/** on_conflict condition type for table "video.ChannelStack" */
export type Video_ChannelStack_On_Conflict = {
    constraint: Video_ChannelStack_Constraint;
    update_columns?: Array<Video_ChannelStack_Update_Column>;
    where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

/** Ordering options when selecting data from "video.ChannelStack". */
export type Video_ChannelStack_Order_By = {
    channelStackCreateJob?: InputMaybe<Job_Queues_ChannelStackCreateJob_Order_By>;
    channelStackCreateJobId?: InputMaybe<Order_By>;
    channelStackUpdateJobs_aggregate?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Aggregate_Order_By>;
    cloudFormationStackArn?: InputMaybe<Order_By>;
    cloudFrontDistributionId?: InputMaybe<Order_By>;
    cloudFrontDomain?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    endpointUri?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    loopingMp4InputAttachmentName?: InputMaybe<Order_By>;
    mediaLiveChannelId?: InputMaybe<Order_By>;
    mediaLiveChannelStatus?: InputMaybe<Video_MediaLiveChannelStatus_Order_By>;
    mediaPackageChannelId?: InputMaybe<Order_By>;
    mp4InputAttachmentName?: InputMaybe<Order_By>;
    mp4InputId?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    rtmpAInputAttachmentName?: InputMaybe<Order_By>;
    rtmpAInputId?: InputMaybe<Order_By>;
    rtmpAInputUri?: InputMaybe<Order_By>;
    rtmpBInputAttachmentName?: InputMaybe<Order_By>;
    rtmpBInputId?: InputMaybe<Order_By>;
    rtmpBInputUri?: InputMaybe<Order_By>;
    rtmpOutputDestinationId?: InputMaybe<Order_By>;
    rtmpOutputStreamKey?: InputMaybe<Order_By>;
    rtmpOutputUri?: InputMaybe<Order_By>;
    rtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    rtmpRoomInputId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_ChannelStack */
export type Video_ChannelStack_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "video.ChannelStack" */
export enum Video_ChannelStack_Select_Column {
    /** column name */
    ChannelStackCreateJobId = "channelStackCreateJobId",
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CloudFrontDistributionId = "cloudFrontDistributionId",
    /** column name */
    CloudFrontDomain = "cloudFrontDomain",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EndpointUri = "endpointUri",
    /** column name */
    Id = "id",
    /** column name */
    LoopingMp4InputAttachmentName = "loopingMp4InputAttachmentName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    MediaPackageChannelId = "mediaPackageChannelId",
    /** column name */
    Mp4InputAttachmentName = "mp4InputAttachmentName",
    /** column name */
    Mp4InputId = "mp4InputId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    RtmpAInputAttachmentName = "rtmpAInputAttachmentName",
    /** column name */
    RtmpAInputId = "rtmpAInputId",
    /** column name */
    RtmpAInputUri = "rtmpAInputUri",
    /** column name */
    RtmpBInputAttachmentName = "rtmpBInputAttachmentName",
    /** column name */
    RtmpBInputId = "rtmpBInputId",
    /** column name */
    RtmpBInputUri = "rtmpBInputUri",
    /** column name */
    RtmpOutputDestinationId = "rtmpOutputDestinationId",
    /** column name */
    RtmpOutputStreamKey = "rtmpOutputStreamKey",
    /** column name */
    RtmpOutputUri = "rtmpOutputUri",
    /** column name */
    RtmpRoomInputAttachmentName = "rtmpRoomInputAttachmentName",
    /** column name */
    RtmpRoomInputId = "rtmpRoomInputId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "video.ChannelStack" */
export type Video_ChannelStack_Set_Input = {
    channelStackCreateJobId?: InputMaybe<Scalars["uuid"]>;
    cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    cloudFrontDistributionId?: InputMaybe<Scalars["String"]>;
    cloudFrontDomain?: InputMaybe<Scalars["String"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    endpointUri?: InputMaybe<Scalars["String"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    loopingMp4InputAttachmentName?: InputMaybe<Scalars["String"]>;
    mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    mediaPackageChannelId?: InputMaybe<Scalars["String"]>;
    mp4InputAttachmentName?: InputMaybe<Scalars["String"]>;
    mp4InputId?: InputMaybe<Scalars["String"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    rtmpAInputAttachmentName?: InputMaybe<Scalars["String"]>;
    rtmpAInputId?: InputMaybe<Scalars["String"]>;
    rtmpAInputUri?: InputMaybe<Scalars["String"]>;
    rtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    rtmpBInputId?: InputMaybe<Scalars["String"]>;
    rtmpBInputUri?: InputMaybe<Scalars["String"]>;
    rtmpOutputDestinationId?: InputMaybe<Scalars["String"]>;
    rtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    rtmpOutputUri?: InputMaybe<Scalars["String"]>;
    rtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    rtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "video.ChannelStack" */
export enum Video_ChannelStack_Update_Column {
    /** column name */
    ChannelStackCreateJobId = "channelStackCreateJobId",
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CloudFrontDistributionId = "cloudFrontDistributionId",
    /** column name */
    CloudFrontDomain = "cloudFrontDomain",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EndpointUri = "endpointUri",
    /** column name */
    Id = "id",
    /** column name */
    LoopingMp4InputAttachmentName = "loopingMp4InputAttachmentName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    MediaPackageChannelId = "mediaPackageChannelId",
    /** column name */
    Mp4InputAttachmentName = "mp4InputAttachmentName",
    /** column name */
    Mp4InputId = "mp4InputId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    RtmpAInputAttachmentName = "rtmpAInputAttachmentName",
    /** column name */
    RtmpAInputId = "rtmpAInputId",
    /** column name */
    RtmpAInputUri = "rtmpAInputUri",
    /** column name */
    RtmpBInputAttachmentName = "rtmpBInputAttachmentName",
    /** column name */
    RtmpBInputId = "rtmpBInputId",
    /** column name */
    RtmpBInputUri = "rtmpBInputUri",
    /** column name */
    RtmpOutputDestinationId = "rtmpOutputDestinationId",
    /** column name */
    RtmpOutputStreamKey = "rtmpOutputStreamKey",
    /** column name */
    RtmpOutputUri = "rtmpOutputUri",
    /** column name */
    RtmpRoomInputAttachmentName = "rtmpRoomInputAttachmentName",
    /** column name */
    RtmpRoomInputId = "rtmpRoomInputId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSession = {
    __typename?: "video_EventVonageSession";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    /** An object relationship */
    event: Schedule_Event;
    eventId: Scalars["uuid"];
    id: Scalars["uuid"];
    /** An array relationship */
    layouts: Array<Video_VonageSessionLayout>;
    /** An aggregate relationship */
    layouts_aggregate: Video_VonageSessionLayout_Aggregate;
    /** An array relationship */
    participantStreams: Array<Video_VonageParticipantStream>;
    /** An aggregate relationship */
    participantStreams_aggregate: Video_VonageParticipantStream_Aggregate;
    /** An array relationship */
    recordings: Array<Video_VonageRoomRecording>;
    /** An aggregate relationship */
    recordings_aggregate: Video_VonageRoomRecording_Aggregate;
    rtmpInputName: Video_RtmpInput_Enum;
    sessionId: Scalars["String"];
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionLayoutsArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionLayouts_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionParticipantStreamsArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionParticipantStreams_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionRecordingsArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionRecordings_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** aggregated selection of "video.EventVonageSession" */
export type Video_EventVonageSession_Aggregate = {
    __typename?: "video_EventVonageSession_aggregate";
    aggregate?: Maybe<Video_EventVonageSession_Aggregate_Fields>;
    nodes: Array<Video_EventVonageSession>;
};

/** aggregate fields of "video.EventVonageSession" */
export type Video_EventVonageSession_Aggregate_Fields = {
    __typename?: "video_EventVonageSession_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_EventVonageSession_Max_Fields>;
    min?: Maybe<Video_EventVonageSession_Min_Fields>;
};

/** aggregate fields of "video.EventVonageSession" */
export type Video_EventVonageSession_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_EventVonageSession_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.EventVonageSession". All fields are combined with a logical 'AND'. */
export type Video_EventVonageSession_Bool_Exp = {
    _and?: InputMaybe<Array<Video_EventVonageSession_Bool_Exp>>;
    _not?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    _or?: InputMaybe<Array<Video_EventVonageSession_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    event?: InputMaybe<Schedule_Event_Bool_Exp>;
    eventId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    layouts?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
    participantStreams?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
    recordings?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
    rtmpInputName?: InputMaybe<Video_RtmpInput_Enum_Comparison_Exp>;
    sessionId?: InputMaybe<String_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.EventVonageSession" */
export enum Video_EventVonageSession_Constraint {
    /** unique or primary key constraint */
    EventVonageSessionEventIdKey = "EventVonageSession_eventId_key",
    /** unique or primary key constraint */
    EventVonageSessionPkey = "EventVonageSession_pkey",
    /** unique or primary key constraint */
    EventVonageSessionSessionIdKey = "EventVonageSession_sessionId_key",
}

/** input type for inserting data into table "video.EventVonageSession" */
export type Video_EventVonageSession_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    layouts?: InputMaybe<Video_VonageSessionLayout_Arr_Rel_Insert_Input>;
    participantStreams?: InputMaybe<Video_VonageParticipantStream_Arr_Rel_Insert_Input>;
    recordings?: InputMaybe<Video_VonageRoomRecording_Arr_Rel_Insert_Input>;
    rtmpInputName?: InputMaybe<Video_RtmpInput_Enum>;
    sessionId?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_EventVonageSession_Max_Fields = {
    __typename?: "video_EventVonageSession_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    sessionId?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_EventVonageSession_Min_Fields = {
    __typename?: "video_EventVonageSession_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    sessionId?: Maybe<Scalars["String"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.EventVonageSession" */
export type Video_EventVonageSession_Mutation_Response = {
    __typename?: "video_EventVonageSession_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_EventVonageSession>;
};

/** input type for inserting object relation for remote table "video.EventVonageSession" */
export type Video_EventVonageSession_Obj_Rel_Insert_Input = {
    data: Video_EventVonageSession_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_EventVonageSession_On_Conflict>;
};

/** on_conflict condition type for table "video.EventVonageSession" */
export type Video_EventVonageSession_On_Conflict = {
    constraint: Video_EventVonageSession_Constraint;
    update_columns?: Array<Video_EventVonageSession_Update_Column>;
    where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

/** Ordering options when selecting data from "video.EventVonageSession". */
export type Video_EventVonageSession_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    event?: InputMaybe<Schedule_Event_Order_By>;
    eventId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    layouts_aggregate?: InputMaybe<Video_VonageSessionLayout_Aggregate_Order_By>;
    participantStreams_aggregate?: InputMaybe<Video_VonageParticipantStream_Aggregate_Order_By>;
    recordings_aggregate?: InputMaybe<Video_VonageRoomRecording_Aggregate_Order_By>;
    rtmpInputName?: InputMaybe<Order_By>;
    sessionId?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_EventVonageSession */
export type Video_EventVonageSession_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "video.EventVonageSession" */
export enum Video_EventVonageSession_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    RtmpInputName = "rtmpInputName",
    /** column name */
    SessionId = "sessionId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "video.EventVonageSession" */
export type Video_EventVonageSession_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    rtmpInputName?: InputMaybe<Video_RtmpInput_Enum>;
    sessionId?: InputMaybe<Scalars["String"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "video.EventVonageSession" */
export enum Video_EventVonageSession_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    RtmpInputName = "rtmpInputName",
    /** column name */
    SessionId = "sessionId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "video.ImmediateSwitch" */
export type Video_ImmediateSwitch = {
    __typename?: "video_ImmediateSwitch";
    /** An object relationship */
    conference?: Maybe<Conference_Conference>;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    data: Scalars["jsonb"];
    errorMessage?: Maybe<Scalars["String"]>;
    /** An object relationship */
    event?: Maybe<Schedule_Event>;
    eventId?: Maybe<Scalars["uuid"]>;
    executedAt?: Maybe<Scalars["timestamptz"]>;
    id: Scalars["uuid"];
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "video.ImmediateSwitch" */
export type Video_ImmediateSwitchDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Aggregate = {
    __typename?: "video_ImmediateSwitch_aggregate";
    aggregate?: Maybe<Video_ImmediateSwitch_Aggregate_Fields>;
    nodes: Array<Video_ImmediateSwitch>;
};

/** aggregate fields of "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Aggregate_Fields = {
    __typename?: "video_ImmediateSwitch_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_ImmediateSwitch_Max_Fields>;
    min?: Maybe<Video_ImmediateSwitch_Min_Fields>;
};

/** aggregate fields of "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_ImmediateSwitch_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Video_ImmediateSwitch_Append_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "video.ImmediateSwitch". All fields are combined with a logical 'AND'. */
export type Video_ImmediateSwitch_Bool_Exp = {
    _and?: InputMaybe<Array<Video_ImmediateSwitch_Bool_Exp>>;
    _not?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
    _or?: InputMaybe<Array<Video_ImmediateSwitch_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    data?: InputMaybe<Jsonb_Comparison_Exp>;
    errorMessage?: InputMaybe<String_Comparison_Exp>;
    event?: InputMaybe<Schedule_Event_Bool_Exp>;
    eventId?: InputMaybe<Uuid_Comparison_Exp>;
    executedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.ImmediateSwitch" */
export enum Video_ImmediateSwitch_Constraint {
    /** unique or primary key constraint */
    ImmediateSwitchPkey = "ImmediateSwitch_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Video_ImmediateSwitch_Delete_At_Path_Input = {
    data?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Video_ImmediateSwitch_Delete_Elem_Input = {
    data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Video_ImmediateSwitch_Delete_Key_Input = {
    data?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    errorMessage?: InputMaybe<Scalars["String"]>;
    event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    executedAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_ImmediateSwitch_Max_Fields = {
    __typename?: "video_ImmediateSwitch_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    errorMessage?: Maybe<Scalars["String"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    executedAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_ImmediateSwitch_Min_Fields = {
    __typename?: "video_ImmediateSwitch_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    errorMessage?: Maybe<Scalars["String"]>;
    eventId?: Maybe<Scalars["uuid"]>;
    executedAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Mutation_Response = {
    __typename?: "video_ImmediateSwitch_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_ImmediateSwitch>;
};

/** on_conflict condition type for table "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_On_Conflict = {
    constraint: Video_ImmediateSwitch_Constraint;
    update_columns?: Array<Video_ImmediateSwitch_Update_Column>;
    where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

/** Ordering options when selecting data from "video.ImmediateSwitch". */
export type Video_ImmediateSwitch_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    data?: InputMaybe<Order_By>;
    errorMessage?: InputMaybe<Order_By>;
    event?: InputMaybe<Schedule_Event_Order_By>;
    eventId?: InputMaybe<Order_By>;
    executedAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_ImmediateSwitch */
export type Video_ImmediateSwitch_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Video_ImmediateSwitch_Prepend_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "video.ImmediateSwitch" */
export enum Video_ImmediateSwitch_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Data = "data",
    /** column name */
    ErrorMessage = "errorMessage",
    /** column name */
    EventId = "eventId",
    /** column name */
    ExecutedAt = "executedAt",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    errorMessage?: InputMaybe<Scalars["String"]>;
    eventId?: InputMaybe<Scalars["uuid"]>;
    executedAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "video.ImmediateSwitch" */
export enum Video_ImmediateSwitch_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Data = "data",
    /** column name */
    ErrorMessage = "errorMessage",
    /** column name */
    EventId = "eventId",
    /** column name */
    ExecutedAt = "executedAt",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "video.InputType" */
export type Video_InputType = {
    __typename?: "video_InputType";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "video.InputType" */
export type Video_InputType_Aggregate = {
    __typename?: "video_InputType_aggregate";
    aggregate?: Maybe<Video_InputType_Aggregate_Fields>;
    nodes: Array<Video_InputType>;
};

/** aggregate fields of "video.InputType" */
export type Video_InputType_Aggregate_Fields = {
    __typename?: "video_InputType_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_InputType_Max_Fields>;
    min?: Maybe<Video_InputType_Min_Fields>;
};

/** aggregate fields of "video.InputType" */
export type Video_InputType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_InputType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.InputType". All fields are combined with a logical 'AND'. */
export type Video_InputType_Bool_Exp = {
    _and?: InputMaybe<Array<Video_InputType_Bool_Exp>>;
    _not?: InputMaybe<Video_InputType_Bool_Exp>;
    _or?: InputMaybe<Array<Video_InputType_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.InputType" */
export enum Video_InputType_Constraint {
    /** unique or primary key constraint */
    InputTypeNamePkey = "InputTypeName_pkey",
}

/** input type for inserting data into table "video.InputType" */
export type Video_InputType_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_InputType_Max_Fields = {
    __typename?: "video_InputType_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_InputType_Min_Fields = {
    __typename?: "video_InputType_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.InputType" */
export type Video_InputType_Mutation_Response = {
    __typename?: "video_InputType_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_InputType>;
};

/** on_conflict condition type for table "video.InputType" */
export type Video_InputType_On_Conflict = {
    constraint: Video_InputType_Constraint;
    update_columns?: Array<Video_InputType_Update_Column>;
    where?: InputMaybe<Video_InputType_Bool_Exp>;
};

/** Ordering options when selecting data from "video.InputType". */
export type Video_InputType_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_InputType */
export type Video_InputType_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "video.InputType" */
export enum Video_InputType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "video.InputType" */
export type Video_InputType_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.InputType" */
export enum Video_InputType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus = {
    __typename?: "video_MediaLiveChannelStatus";
    activeInputAttachmentName?: Maybe<Scalars["String"]>;
    activeInputSwitchActionName?: Maybe<Scalars["String"]>;
    /** An object relationship */
    channelStack: Video_ChannelStack;
    channelStackId: Scalars["uuid"];
    /** An object relationship */
    conference?: Maybe<Conference_Conference>;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    id: Scalars["uuid"];
    pipelinesRunningCount?: Maybe<Scalars["numeric"]>;
    state: Scalars["String"];
    updatedAt: Scalars["timestamptz"];
};

/** aggregated selection of "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Aggregate = {
    __typename?: "video_MediaLiveChannelStatus_aggregate";
    aggregate?: Maybe<Video_MediaLiveChannelStatus_Aggregate_Fields>;
    nodes: Array<Video_MediaLiveChannelStatus>;
};

/** aggregate fields of "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Aggregate_Fields = {
    __typename?: "video_MediaLiveChannelStatus_aggregate_fields";
    avg?: Maybe<Video_MediaLiveChannelStatus_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Video_MediaLiveChannelStatus_Max_Fields>;
    min?: Maybe<Video_MediaLiveChannelStatus_Min_Fields>;
    stddev?: Maybe<Video_MediaLiveChannelStatus_Stddev_Fields>;
    stddev_pop?: Maybe<Video_MediaLiveChannelStatus_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Video_MediaLiveChannelStatus_Stddev_Samp_Fields>;
    sum?: Maybe<Video_MediaLiveChannelStatus_Sum_Fields>;
    var_pop?: Maybe<Video_MediaLiveChannelStatus_Var_Pop_Fields>;
    var_samp?: Maybe<Video_MediaLiveChannelStatus_Var_Samp_Fields>;
    variance?: Maybe<Video_MediaLiveChannelStatus_Variance_Fields>;
};

/** aggregate fields of "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_MediaLiveChannelStatus_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Video_MediaLiveChannelStatus_Avg_Fields = {
    __typename?: "video_MediaLiveChannelStatus_avg_fields";
    pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "video.MediaLiveChannelStatus". All fields are combined with a logical 'AND'. */
export type Video_MediaLiveChannelStatus_Bool_Exp = {
    _and?: InputMaybe<Array<Video_MediaLiveChannelStatus_Bool_Exp>>;
    _not?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
    _or?: InputMaybe<Array<Video_MediaLiveChannelStatus_Bool_Exp>>;
    activeInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    activeInputSwitchActionName?: InputMaybe<String_Comparison_Exp>;
    channelStack?: InputMaybe<Video_ChannelStack_Bool_Exp>;
    channelStackId?: InputMaybe<Uuid_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    pipelinesRunningCount?: InputMaybe<Numeric_Comparison_Exp>;
    state?: InputMaybe<String_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.MediaLiveChannelStatus" */
export enum Video_MediaLiveChannelStatus_Constraint {
    /** unique or primary key constraint */
    MediaLiveChannelStatusChannelStackIdKey = "MediaLiveChannelStatus_channelStackId_key",
    /** unique or primary key constraint */
    MediaLiveChannelStatusPkey = "MediaLiveChannelStatus_pkey",
}

/** input type for incrementing numeric columns in table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Inc_Input = {
    pipelinesRunningCount?: InputMaybe<Scalars["numeric"]>;
};

/** input type for inserting data into table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Insert_Input = {
    activeInputAttachmentName?: InputMaybe<Scalars["String"]>;
    activeInputSwitchActionName?: InputMaybe<Scalars["String"]>;
    channelStack?: InputMaybe<Video_ChannelStack_Obj_Rel_Insert_Input>;
    channelStackId?: InputMaybe<Scalars["uuid"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    pipelinesRunningCount?: InputMaybe<Scalars["numeric"]>;
    state?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_MediaLiveChannelStatus_Max_Fields = {
    __typename?: "video_MediaLiveChannelStatus_max_fields";
    activeInputAttachmentName?: Maybe<Scalars["String"]>;
    activeInputSwitchActionName?: Maybe<Scalars["String"]>;
    channelStackId?: Maybe<Scalars["uuid"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    pipelinesRunningCount?: Maybe<Scalars["numeric"]>;
    state?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_MediaLiveChannelStatus_Min_Fields = {
    __typename?: "video_MediaLiveChannelStatus_min_fields";
    activeInputAttachmentName?: Maybe<Scalars["String"]>;
    activeInputSwitchActionName?: Maybe<Scalars["String"]>;
    channelStackId?: Maybe<Scalars["uuid"]>;
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    pipelinesRunningCount?: Maybe<Scalars["numeric"]>;
    state?: Maybe<Scalars["String"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Mutation_Response = {
    __typename?: "video_MediaLiveChannelStatus_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_MediaLiveChannelStatus>;
};

/** input type for inserting object relation for remote table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Obj_Rel_Insert_Input = {
    data: Video_MediaLiveChannelStatus_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_MediaLiveChannelStatus_On_Conflict>;
};

/** on_conflict condition type for table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_On_Conflict = {
    constraint: Video_MediaLiveChannelStatus_Constraint;
    update_columns?: Array<Video_MediaLiveChannelStatus_Update_Column>;
    where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "video.MediaLiveChannelStatus". */
export type Video_MediaLiveChannelStatus_Order_By = {
    activeInputAttachmentName?: InputMaybe<Order_By>;
    activeInputSwitchActionName?: InputMaybe<Order_By>;
    channelStack?: InputMaybe<Video_ChannelStack_Order_By>;
    channelStackId?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    pipelinesRunningCount?: InputMaybe<Order_By>;
    state?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_MediaLiveChannelStatus */
export type Video_MediaLiveChannelStatus_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "video.MediaLiveChannelStatus" */
export enum Video_MediaLiveChannelStatus_Select_Column {
    /** column name */
    ActiveInputAttachmentName = "activeInputAttachmentName",
    /** column name */
    ActiveInputSwitchActionName = "activeInputSwitchActionName",
    /** column name */
    ChannelStackId = "channelStackId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    PipelinesRunningCount = "pipelinesRunningCount",
    /** column name */
    State = "state",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Set_Input = {
    activeInputAttachmentName?: InputMaybe<Scalars["String"]>;
    activeInputSwitchActionName?: InputMaybe<Scalars["String"]>;
    channelStackId?: InputMaybe<Scalars["uuid"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    pipelinesRunningCount?: InputMaybe<Scalars["numeric"]>;
    state?: InputMaybe<Scalars["String"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Video_MediaLiveChannelStatus_Stddev_Fields = {
    __typename?: "video_MediaLiveChannelStatus_stddev_fields";
    pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Video_MediaLiveChannelStatus_Stddev_Pop_Fields = {
    __typename?: "video_MediaLiveChannelStatus_stddev_pop_fields";
    pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Video_MediaLiveChannelStatus_Stddev_Samp_Fields = {
    __typename?: "video_MediaLiveChannelStatus_stddev_samp_fields";
    pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Video_MediaLiveChannelStatus_Sum_Fields = {
    __typename?: "video_MediaLiveChannelStatus_sum_fields";
    pipelinesRunningCount?: Maybe<Scalars["numeric"]>;
};

/** update columns of table "video.MediaLiveChannelStatus" */
export enum Video_MediaLiveChannelStatus_Update_Column {
    /** column name */
    ActiveInputAttachmentName = "activeInputAttachmentName",
    /** column name */
    ActiveInputSwitchActionName = "activeInputSwitchActionName",
    /** column name */
    ChannelStackId = "channelStackId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    PipelinesRunningCount = "pipelinesRunningCount",
    /** column name */
    State = "state",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** aggregate var_pop on columns */
export type Video_MediaLiveChannelStatus_Var_Pop_Fields = {
    __typename?: "video_MediaLiveChannelStatus_var_pop_fields";
    pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Video_MediaLiveChannelStatus_Var_Samp_Fields = {
    __typename?: "video_MediaLiveChannelStatus_var_samp_fields";
    pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Video_MediaLiveChannelStatus_Variance_Fields = {
    __typename?: "video_MediaLiveChannelStatus_variance_fields";
    pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "video.RoomRtmpInput" */
export type Video_RoomRtmpInput = {
    __typename?: "video_RoomRtmpInput";
    address?: Maybe<Scalars["String"]>;
    applicationInstance: Scalars["String"];
    applicationName: Scalars["String"];
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    inputId?: Maybe<Scalars["String"]>;
    inputName: Scalars["String"];
    /** An object relationship */
    room?: Maybe<Room_Room>;
    roomId?: Maybe<Scalars["uuid"]>;
    updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Aggregate = {
    __typename?: "video_RoomRtmpInput_aggregate";
    aggregate?: Maybe<Video_RoomRtmpInput_Aggregate_Fields>;
    nodes: Array<Video_RoomRtmpInput>;
};

/** aggregate fields of "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Aggregate_Fields = {
    __typename?: "video_RoomRtmpInput_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_RoomRtmpInput_Max_Fields>;
    min?: Maybe<Video_RoomRtmpInput_Min_Fields>;
};

/** aggregate fields of "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_RoomRtmpInput_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.RoomRtmpInput". All fields are combined with a logical 'AND'. */
export type Video_RoomRtmpInput_Bool_Exp = {
    _and?: InputMaybe<Array<Video_RoomRtmpInput_Bool_Exp>>;
    _not?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
    _or?: InputMaybe<Array<Video_RoomRtmpInput_Bool_Exp>>;
    address?: InputMaybe<String_Comparison_Exp>;
    applicationInstance?: InputMaybe<String_Comparison_Exp>;
    applicationName?: InputMaybe<String_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    inputId?: InputMaybe<String_Comparison_Exp>;
    inputName?: InputMaybe<String_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.RoomRtmpInput" */
export enum Video_RoomRtmpInput_Constraint {
    /** unique or primary key constraint */
    RoomRtmpInputApplicationInstanceKey = "RoomRtmpInput_applicationInstance_key",
    /** unique or primary key constraint */
    RoomRtmpInputInputIdKey = "RoomRtmpInput_inputId_key",
    /** unique or primary key constraint */
    RoomRtmpInputInputNameKey = "RoomRtmpInput_inputName_key",
    /** unique or primary key constraint */
    RoomRtmpInputPkey = "RoomRtmpInput_pkey",
    /** unique or primary key constraint */
    RoomRtmpInputRoomIdKey = "RoomRtmpInput_roomId_key",
}

/** input type for inserting data into table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Insert_Input = {
    address?: InputMaybe<Scalars["String"]>;
    applicationInstance?: InputMaybe<Scalars["String"]>;
    applicationName?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    inputId?: InputMaybe<Scalars["String"]>;
    inputName?: InputMaybe<Scalars["String"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_RoomRtmpInput_Max_Fields = {
    __typename?: "video_RoomRtmpInput_max_fields";
    address?: Maybe<Scalars["String"]>;
    applicationInstance?: Maybe<Scalars["String"]>;
    applicationName?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    inputId?: Maybe<Scalars["String"]>;
    inputName?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_RoomRtmpInput_Min_Fields = {
    __typename?: "video_RoomRtmpInput_min_fields";
    address?: Maybe<Scalars["String"]>;
    applicationInstance?: Maybe<Scalars["String"]>;
    applicationName?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    inputId?: Maybe<Scalars["String"]>;
    inputName?: Maybe<Scalars["String"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Mutation_Response = {
    __typename?: "video_RoomRtmpInput_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_RoomRtmpInput>;
};

/** input type for inserting object relation for remote table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Obj_Rel_Insert_Input = {
    data: Video_RoomRtmpInput_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_RoomRtmpInput_On_Conflict>;
};

/** on_conflict condition type for table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_On_Conflict = {
    constraint: Video_RoomRtmpInput_Constraint;
    update_columns?: Array<Video_RoomRtmpInput_Update_Column>;
    where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

/** Ordering options when selecting data from "video.RoomRtmpInput". */
export type Video_RoomRtmpInput_Order_By = {
    address?: InputMaybe<Order_By>;
    applicationInstance?: InputMaybe<Order_By>;
    applicationName?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    inputId?: InputMaybe<Order_By>;
    inputName?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_RoomRtmpInput */
export type Video_RoomRtmpInput_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "video.RoomRtmpInput" */
export enum Video_RoomRtmpInput_Select_Column {
    /** column name */
    Address = "address",
    /** column name */
    ApplicationInstance = "applicationInstance",
    /** column name */
    ApplicationName = "applicationName",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    InputId = "inputId",
    /** column name */
    InputName = "inputName",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Set_Input = {
    address?: InputMaybe<Scalars["String"]>;
    applicationInstance?: InputMaybe<Scalars["String"]>;
    applicationName?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    inputId?: InputMaybe<Scalars["String"]>;
    inputName?: InputMaybe<Scalars["String"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "video.RoomRtmpInput" */
export enum Video_RoomRtmpInput_Update_Column {
    /** column name */
    Address = "address",
    /** column name */
    ApplicationInstance = "applicationInstance",
    /** column name */
    ApplicationName = "applicationName",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    InputId = "inputId",
    /** column name */
    InputName = "inputName",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** Enables broadcasting of a live-stream from a room to an RTMP-capable service, such as YouTube. */
export type Video_RoomRtmpOutput = {
    __typename?: "video_RoomRtmpOutput";
    created_at: Scalars["timestamptz"];
    id: Scalars["uuid"];
    /** An object relationship */
    room: Room_Room;
    roomId: Scalars["uuid"];
    streamKey: Scalars["String"];
    updated_at: Scalars["timestamptz"];
    url: Scalars["String"];
};

/** aggregated selection of "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Aggregate = {
    __typename?: "video_RoomRtmpOutput_aggregate";
    aggregate?: Maybe<Video_RoomRtmpOutput_Aggregate_Fields>;
    nodes: Array<Video_RoomRtmpOutput>;
};

/** aggregate fields of "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Aggregate_Fields = {
    __typename?: "video_RoomRtmpOutput_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_RoomRtmpOutput_Max_Fields>;
    min?: Maybe<Video_RoomRtmpOutput_Min_Fields>;
};

/** aggregate fields of "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_RoomRtmpOutput_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.RoomRtmpOutput". All fields are combined with a logical 'AND'. */
export type Video_RoomRtmpOutput_Bool_Exp = {
    _and?: InputMaybe<Array<Video_RoomRtmpOutput_Bool_Exp>>;
    _not?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
    _or?: InputMaybe<Array<Video_RoomRtmpOutput_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    streamKey?: InputMaybe<String_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.RoomRtmpOutput" */
export enum Video_RoomRtmpOutput_Constraint {
    /** unique or primary key constraint */
    EventRtmpOutputPkey = "EventRtmpOutput_pkey",
    /** unique or primary key constraint */
    RoomRtmpOutputRoomIdKey = "RoomRtmpOutput_roomId_key",
}

/** input type for inserting data into table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    streamKey?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    url?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_RoomRtmpOutput_Max_Fields = {
    __typename?: "video_RoomRtmpOutput_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    streamKey?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    url?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_RoomRtmpOutput_Min_Fields = {
    __typename?: "video_RoomRtmpOutput_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    streamKey?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    url?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Mutation_Response = {
    __typename?: "video_RoomRtmpOutput_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_RoomRtmpOutput>;
};

/** input type for inserting object relation for remote table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Obj_Rel_Insert_Input = {
    data: Video_RoomRtmpOutput_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_RoomRtmpOutput_On_Conflict>;
};

/** on_conflict condition type for table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_On_Conflict = {
    constraint: Video_RoomRtmpOutput_Constraint;
    update_columns?: Array<Video_RoomRtmpOutput_Update_Column>;
    where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

/** Ordering options when selecting data from "video.RoomRtmpOutput". */
export type Video_RoomRtmpOutput_Order_By = {
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    streamKey?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_RoomRtmpOutput */
export type Video_RoomRtmpOutput_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "video.RoomRtmpOutput" */
export enum Video_RoomRtmpOutput_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    StreamKey = "streamKey",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Url = "url",
}

/** input type for updating data in table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    streamKey?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    url?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.RoomRtmpOutput" */
export enum Video_RoomRtmpOutput_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    StreamKey = "streamKey",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Url = "url",
}

/** columns and relationships of "video.RtmpInput" */
export type Video_RtmpInput = {
    __typename?: "video_RtmpInput";
    description: Scalars["String"];
    name: Scalars["String"];
};

/** aggregated selection of "video.RtmpInput" */
export type Video_RtmpInput_Aggregate = {
    __typename?: "video_RtmpInput_aggregate";
    aggregate?: Maybe<Video_RtmpInput_Aggregate_Fields>;
    nodes: Array<Video_RtmpInput>;
};

/** aggregate fields of "video.RtmpInput" */
export type Video_RtmpInput_Aggregate_Fields = {
    __typename?: "video_RtmpInput_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_RtmpInput_Max_Fields>;
    min?: Maybe<Video_RtmpInput_Min_Fields>;
};

/** aggregate fields of "video.RtmpInput" */
export type Video_RtmpInput_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_RtmpInput_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.RtmpInput". All fields are combined with a logical 'AND'. */
export type Video_RtmpInput_Bool_Exp = {
    _and?: InputMaybe<Array<Video_RtmpInput_Bool_Exp>>;
    _not?: InputMaybe<Video_RtmpInput_Bool_Exp>;
    _or?: InputMaybe<Array<Video_RtmpInput_Bool_Exp>>;
    description?: InputMaybe<String_Comparison_Exp>;
    name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.RtmpInput" */
export enum Video_RtmpInput_Constraint {
    /** unique or primary key constraint */
    RtmpInputPkey = "RtmpInput_pkey",
}

export enum Video_RtmpInput_Enum {
    /** The A RTMP input. */
    RtmpA = "RTMP_A",
    /** The B RTMP input. */
    RtmpB = "RTMP_B",
    /** Use the room's RTMP input if one is available. */
    RtmpRoom = "RTMP_ROOM",
}

/** Boolean expression to compare columns of type "video_RtmpInput_enum". All fields are combined with logical 'AND'. */
export type Video_RtmpInput_Enum_Comparison_Exp = {
    _eq?: InputMaybe<Video_RtmpInput_Enum>;
    _in?: InputMaybe<Array<Video_RtmpInput_Enum>>;
    _is_null?: InputMaybe<Scalars["Boolean"]>;
    _neq?: InputMaybe<Video_RtmpInput_Enum>;
    _nin?: InputMaybe<Array<Video_RtmpInput_Enum>>;
};

/** input type for inserting data into table "video.RtmpInput" */
export type Video_RtmpInput_Insert_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_RtmpInput_Max_Fields = {
    __typename?: "video_RtmpInput_max_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_RtmpInput_Min_Fields = {
    __typename?: "video_RtmpInput_min_fields";
    description?: Maybe<Scalars["String"]>;
    name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.RtmpInput" */
export type Video_RtmpInput_Mutation_Response = {
    __typename?: "video_RtmpInput_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_RtmpInput>;
};

/** on_conflict condition type for table "video.RtmpInput" */
export type Video_RtmpInput_On_Conflict = {
    constraint: Video_RtmpInput_Constraint;
    update_columns?: Array<Video_RtmpInput_Update_Column>;
    where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

/** Ordering options when selecting data from "video.RtmpInput". */
export type Video_RtmpInput_Order_By = {
    description?: InputMaybe<Order_By>;
    name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_RtmpInput */
export type Video_RtmpInput_Pk_Columns_Input = {
    name: Scalars["String"];
};

/** select columns of table "video.RtmpInput" */
export enum Video_RtmpInput_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "video.RtmpInput" */
export type Video_RtmpInput_Set_Input = {
    description?: InputMaybe<Scalars["String"]>;
    name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.RtmpInput" */
export enum Video_RtmpInput_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "video.TranscriptionJob" */
export type Video_TranscriptionJob = {
    __typename?: "video_TranscriptionJob";
    awsTranscribeJobName: Scalars["String"];
    created_at: Scalars["timestamptz"];
    elementId: Scalars["uuid"];
    id: Scalars["uuid"];
    languageCode: Scalars["String"];
    transcriptionS3Url: Scalars["String"];
    updated_at: Scalars["timestamptz"];
    videoS3Url: Scalars["String"];
};

/** aggregated selection of "video.TranscriptionJob" */
export type Video_TranscriptionJob_Aggregate = {
    __typename?: "video_TranscriptionJob_aggregate";
    aggregate?: Maybe<Video_TranscriptionJob_Aggregate_Fields>;
    nodes: Array<Video_TranscriptionJob>;
};

/** aggregate fields of "video.TranscriptionJob" */
export type Video_TranscriptionJob_Aggregate_Fields = {
    __typename?: "video_TranscriptionJob_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_TranscriptionJob_Max_Fields>;
    min?: Maybe<Video_TranscriptionJob_Min_Fields>;
};

/** aggregate fields of "video.TranscriptionJob" */
export type Video_TranscriptionJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_TranscriptionJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.TranscriptionJob". All fields are combined with a logical 'AND'. */
export type Video_TranscriptionJob_Bool_Exp = {
    _and?: InputMaybe<Array<Video_TranscriptionJob_Bool_Exp>>;
    _not?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
    _or?: InputMaybe<Array<Video_TranscriptionJob_Bool_Exp>>;
    awsTranscribeJobName?: InputMaybe<String_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    elementId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    languageCode?: InputMaybe<String_Comparison_Exp>;
    transcriptionS3Url?: InputMaybe<String_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    videoS3Url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.TranscriptionJob" */
export enum Video_TranscriptionJob_Constraint {
    /** unique or primary key constraint */
    TranscriptionJobAwsTranscribeJobNameKey = "TranscriptionJob_awsTranscribeJobName_key",
    /** unique or primary key constraint */
    TranscriptionJobPkey = "TranscriptionJob_pkey",
}

/** input type for inserting data into table "video.TranscriptionJob" */
export type Video_TranscriptionJob_Insert_Input = {
    awsTranscribeJobName?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    languageCode?: InputMaybe<Scalars["String"]>;
    transcriptionS3Url?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    videoS3Url?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_TranscriptionJob_Max_Fields = {
    __typename?: "video_TranscriptionJob_max_fields";
    awsTranscribeJobName?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    languageCode?: Maybe<Scalars["String"]>;
    transcriptionS3Url?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    videoS3Url?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_TranscriptionJob_Min_Fields = {
    __typename?: "video_TranscriptionJob_min_fields";
    awsTranscribeJobName?: Maybe<Scalars["String"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    languageCode?: Maybe<Scalars["String"]>;
    transcriptionS3Url?: Maybe<Scalars["String"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    videoS3Url?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.TranscriptionJob" */
export type Video_TranscriptionJob_Mutation_Response = {
    __typename?: "video_TranscriptionJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_TranscriptionJob>;
};

/** on_conflict condition type for table "video.TranscriptionJob" */
export type Video_TranscriptionJob_On_Conflict = {
    constraint: Video_TranscriptionJob_Constraint;
    update_columns?: Array<Video_TranscriptionJob_Update_Column>;
    where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

/** Ordering options when selecting data from "video.TranscriptionJob". */
export type Video_TranscriptionJob_Order_By = {
    awsTranscribeJobName?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    languageCode?: InputMaybe<Order_By>;
    transcriptionS3Url?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    videoS3Url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_TranscriptionJob */
export type Video_TranscriptionJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "video.TranscriptionJob" */
export enum Video_TranscriptionJob_Select_Column {
    /** column name */
    AwsTranscribeJobName = "awsTranscribeJobName",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    LanguageCode = "languageCode",
    /** column name */
    TranscriptionS3Url = "transcriptionS3Url",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VideoS3Url = "videoS3Url",
}

/** input type for updating data in table "video.TranscriptionJob" */
export type Video_TranscriptionJob_Set_Input = {
    awsTranscribeJobName?: InputMaybe<Scalars["String"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    languageCode?: InputMaybe<Scalars["String"]>;
    transcriptionS3Url?: InputMaybe<Scalars["String"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    videoS3Url?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.TranscriptionJob" */
export enum Video_TranscriptionJob_Update_Column {
    /** column name */
    AwsTranscribeJobName = "awsTranscribeJobName",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    LanguageCode = "languageCode",
    /** column name */
    TranscriptionS3Url = "transcriptionS3Url",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VideoS3Url = "videoS3Url",
}

/** columns and relationships of "video.VideoRenderJob" */
export type Video_VideoRenderJob = {
    __typename?: "video_VideoRenderJob";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    /** An object relationship */
    conferencePrepareJob: Job_Queues_PrepareJob;
    conferencePrepareJobId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    data: Scalars["jsonb"];
    /** An object relationship */
    element?: Maybe<Content_Element>;
    elementId: Scalars["uuid"];
    id: Scalars["uuid"];
    /** An object relationship */
    jobStatus: Job_Queues_JobStatus;
    jobStatusName: Job_Queues_JobStatus_Enum;
    message?: Maybe<Scalars["String"]>;
    retriesCount: Scalars["Int"];
    updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "video.VideoRenderJob" */
export type Video_VideoRenderJobDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "video.VideoRenderJob" */
export type Video_VideoRenderJob_Aggregate = {
    __typename?: "video_VideoRenderJob_aggregate";
    aggregate?: Maybe<Video_VideoRenderJob_Aggregate_Fields>;
    nodes: Array<Video_VideoRenderJob>;
};

/** aggregate fields of "video.VideoRenderJob" */
export type Video_VideoRenderJob_Aggregate_Fields = {
    __typename?: "video_VideoRenderJob_aggregate_fields";
    avg?: Maybe<Video_VideoRenderJob_Avg_Fields>;
    count: Scalars["Int"];
    max?: Maybe<Video_VideoRenderJob_Max_Fields>;
    min?: Maybe<Video_VideoRenderJob_Min_Fields>;
    stddev?: Maybe<Video_VideoRenderJob_Stddev_Fields>;
    stddev_pop?: Maybe<Video_VideoRenderJob_Stddev_Pop_Fields>;
    stddev_samp?: Maybe<Video_VideoRenderJob_Stddev_Samp_Fields>;
    sum?: Maybe<Video_VideoRenderJob_Sum_Fields>;
    var_pop?: Maybe<Video_VideoRenderJob_Var_Pop_Fields>;
    var_samp?: Maybe<Video_VideoRenderJob_Var_Samp_Fields>;
    variance?: Maybe<Video_VideoRenderJob_Variance_Fields>;
};

/** aggregate fields of "video.VideoRenderJob" */
export type Video_VideoRenderJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_VideoRenderJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Aggregate_Order_By = {
    avg?: InputMaybe<Video_VideoRenderJob_Avg_Order_By>;
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Video_VideoRenderJob_Max_Order_By>;
    min?: InputMaybe<Video_VideoRenderJob_Min_Order_By>;
    stddev?: InputMaybe<Video_VideoRenderJob_Stddev_Order_By>;
    stddev_pop?: InputMaybe<Video_VideoRenderJob_Stddev_Pop_Order_By>;
    stddev_samp?: InputMaybe<Video_VideoRenderJob_Stddev_Samp_Order_By>;
    sum?: InputMaybe<Video_VideoRenderJob_Sum_Order_By>;
    var_pop?: InputMaybe<Video_VideoRenderJob_Var_Pop_Order_By>;
    var_samp?: InputMaybe<Video_VideoRenderJob_Var_Samp_Order_By>;
    variance?: InputMaybe<Video_VideoRenderJob_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Video_VideoRenderJob_Append_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Arr_Rel_Insert_Input = {
    data: Array<Video_VideoRenderJob_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_VideoRenderJob_On_Conflict>;
};

/** aggregate avg on columns */
export type Video_VideoRenderJob_Avg_Fields = {
    __typename?: "video_VideoRenderJob_avg_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Avg_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "video.VideoRenderJob". All fields are combined with a logical 'AND'. */
export type Video_VideoRenderJob_Bool_Exp = {
    _and?: InputMaybe<Array<Video_VideoRenderJob_Bool_Exp>>;
    _not?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
    _or?: InputMaybe<Array<Video_VideoRenderJob_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    conferencePrepareJob?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
    conferencePrepareJobId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    data?: InputMaybe<Jsonb_Comparison_Exp>;
    element?: InputMaybe<Content_Element_Bool_Exp>;
    elementId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    message?: InputMaybe<String_Comparison_Exp>;
    retriesCount?: InputMaybe<Int_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VideoRenderJob" */
export enum Video_VideoRenderJob_Constraint {
    /** unique or primary key constraint */
    VideoRenderJobPkey = "VideoRenderJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Video_VideoRenderJob_Delete_At_Path_Input = {
    data?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Video_VideoRenderJob_Delete_Elem_Input = {
    data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Video_VideoRenderJob_Delete_Key_Input = {
    data?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Inc_Input = {
    retriesCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    conferencePrepareJob?: InputMaybe<Job_Queues_PrepareJob_Obj_Rel_Insert_Input>;
    conferencePrepareJobId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    message?: InputMaybe<Scalars["String"]>;
    retriesCount?: InputMaybe<Scalars["Int"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_VideoRenderJob_Max_Fields = {
    __typename?: "video_VideoRenderJob_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    conferencePrepareJobId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    message?: Maybe<Scalars["String"]>;
    retriesCount?: Maybe<Scalars["Int"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    conferencePrepareJobId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    retriesCount?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_VideoRenderJob_Min_Fields = {
    __typename?: "video_VideoRenderJob_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    conferencePrepareJobId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    message?: Maybe<Scalars["String"]>;
    retriesCount?: Maybe<Scalars["Int"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    conferencePrepareJobId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    retriesCount?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Mutation_Response = {
    __typename?: "video_VideoRenderJob_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_VideoRenderJob>;
};

/** on_conflict condition type for table "video.VideoRenderJob" */
export type Video_VideoRenderJob_On_Conflict = {
    constraint: Video_VideoRenderJob_Constraint;
    update_columns?: Array<Video_VideoRenderJob_Update_Column>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VideoRenderJob". */
export type Video_VideoRenderJob_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    conferencePrepareJob?: InputMaybe<Job_Queues_PrepareJob_Order_By>;
    conferencePrepareJobId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    data?: InputMaybe<Order_By>;
    element?: InputMaybe<Content_Element_Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    jobStatusName?: InputMaybe<Order_By>;
    message?: InputMaybe<Order_By>;
    retriesCount?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VideoRenderJob */
export type Video_VideoRenderJob_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Video_VideoRenderJob_Prepend_Input = {
    data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "video.VideoRenderJob" */
export enum Video_VideoRenderJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferencePrepareJobId = "conferencePrepareJobId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    conferencePrepareJobId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    data?: InputMaybe<Scalars["jsonb"]>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    message?: InputMaybe<Scalars["String"]>;
    retriesCount?: InputMaybe<Scalars["Int"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Video_VideoRenderJob_Stddev_Fields = {
    __typename?: "video_VideoRenderJob_stddev_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Stddev_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Video_VideoRenderJob_Stddev_Pop_Fields = {
    __typename?: "video_VideoRenderJob_stddev_pop_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Stddev_Pop_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Video_VideoRenderJob_Stddev_Samp_Fields = {
    __typename?: "video_VideoRenderJob_stddev_samp_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Stddev_Samp_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Video_VideoRenderJob_Sum_Fields = {
    __typename?: "video_VideoRenderJob_sum_fields";
    retriesCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Sum_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** update columns of table "video.VideoRenderJob" */
export enum Video_VideoRenderJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferencePrepareJobId = "conferencePrepareJobId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Video_VideoRenderJob_Var_Pop_Fields = {
    __typename?: "video_VideoRenderJob_var_pop_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Var_Pop_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Video_VideoRenderJob_Var_Samp_Fields = {
    __typename?: "video_VideoRenderJob_var_samp_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Var_Samp_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Video_VideoRenderJob_Variance_Fields = {
    __typename?: "video_VideoRenderJob_variance_fields";
    retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Variance_Order_By = {
    retriesCount?: InputMaybe<Order_By>;
};

/** Current streams in Vonage sessions. */
export type Video_VonageParticipantStream = {
    __typename?: "video_VonageParticipantStream";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    /** A computed field, executes function "video.VonageParticipantStream_durationSeconds" */
    durationSeconds?: Maybe<Scalars["bigint"]>;
    /** An object relationship */
    eventVonageSession?: Maybe<Video_EventVonageSession>;
    id: Scalars["uuid"];
    /** An object relationship */
    registrant: Registrant_Registrant;
    registrantId: Scalars["uuid"];
    stopped_at?: Maybe<Scalars["timestamptz"]>;
    updatedAt: Scalars["timestamptz"];
    vonageConnectionId: Scalars["String"];
    vonageSessionId: Scalars["String"];
    vonageStreamId: Scalars["String"];
    vonageStreamType: Scalars["String"];
};

/** aggregated selection of "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Aggregate = {
    __typename?: "video_VonageParticipantStream_aggregate";
    aggregate?: Maybe<Video_VonageParticipantStream_Aggregate_Fields>;
    nodes: Array<Video_VonageParticipantStream>;
};

/** aggregate fields of "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Aggregate_Fields = {
    __typename?: "video_VonageParticipantStream_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_VonageParticipantStream_Max_Fields>;
    min?: Maybe<Video_VonageParticipantStream_Min_Fields>;
};

/** aggregate fields of "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_VonageParticipantStream_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Video_VonageParticipantStream_Max_Order_By>;
    min?: InputMaybe<Video_VonageParticipantStream_Min_Order_By>;
};

/** input type for inserting array relation for remote table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Arr_Rel_Insert_Input = {
    data: Array<Video_VonageParticipantStream_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_VonageParticipantStream_On_Conflict>;
};

/** Boolean expression to filter rows from the table "video.VonageParticipantStream". All fields are combined with a logical 'AND'. */
export type Video_VonageParticipantStream_Bool_Exp = {
    _and?: InputMaybe<Array<Video_VonageParticipantStream_Bool_Exp>>;
    _not?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
    _or?: InputMaybe<Array<Video_VonageParticipantStream_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    durationSeconds?: InputMaybe<Bigint_Comparison_Exp>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    stopped_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    vonageConnectionId?: InputMaybe<String_Comparison_Exp>;
    vonageSessionId?: InputMaybe<String_Comparison_Exp>;
    vonageStreamId?: InputMaybe<String_Comparison_Exp>;
    vonageStreamType?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VonageParticipantStream" */
export enum Video_VonageParticipantStream_Constraint {
    /** unique or primary key constraint */
    EventParticipantStreamPkey = "EventParticipantStream_pkey",
}

/** input type for inserting data into table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Obj_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    stopped_at?: InputMaybe<Scalars["timestamptz"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    vonageConnectionId?: InputMaybe<Scalars["String"]>;
    vonageSessionId?: InputMaybe<Scalars["String"]>;
    vonageStreamId?: InputMaybe<Scalars["String"]>;
    vonageStreamType?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_VonageParticipantStream_Max_Fields = {
    __typename?: "video_VonageParticipantStream_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    stopped_at?: Maybe<Scalars["timestamptz"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    vonageConnectionId?: Maybe<Scalars["String"]>;
    vonageSessionId?: Maybe<Scalars["String"]>;
    vonageStreamId?: Maybe<Scalars["String"]>;
    vonageStreamType?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    stopped_at?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    vonageConnectionId?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
    vonageStreamId?: InputMaybe<Order_By>;
    vonageStreamType?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_VonageParticipantStream_Min_Fields = {
    __typename?: "video_VonageParticipantStream_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    registrantId?: Maybe<Scalars["uuid"]>;
    stopped_at?: Maybe<Scalars["timestamptz"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    vonageConnectionId?: Maybe<Scalars["String"]>;
    vonageSessionId?: Maybe<Scalars["String"]>;
    vonageStreamId?: Maybe<Scalars["String"]>;
    vonageStreamType?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    registrantId?: InputMaybe<Order_By>;
    stopped_at?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    vonageConnectionId?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
    vonageStreamId?: InputMaybe<Order_By>;
    vonageStreamType?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Mutation_Response = {
    __typename?: "video_VonageParticipantStream_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_VonageParticipantStream>;
};

/** on_conflict condition type for table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_On_Conflict = {
    constraint: Video_VonageParticipantStream_Constraint;
    update_columns?: Array<Video_VonageParticipantStream_Update_Column>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VonageParticipantStream". */
export type Video_VonageParticipantStream_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    durationSeconds?: InputMaybe<Order_By>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Order_By>;
    id?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    registrantId?: InputMaybe<Order_By>;
    stopped_at?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    vonageConnectionId?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
    vonageStreamId?: InputMaybe<Order_By>;
    vonageStreamType?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VonageParticipantStream */
export type Video_VonageParticipantStream_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "video.VonageParticipantStream" */
export enum Video_VonageParticipantStream_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    StoppedAt = "stopped_at",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VonageConnectionId = "vonageConnectionId",
    /** column name */
    VonageSessionId = "vonageSessionId",
    /** column name */
    VonageStreamId = "vonageStreamId",
    /** column name */
    VonageStreamType = "vonageStreamType",
}

/** input type for updating data in table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    stopped_at?: InputMaybe<Scalars["timestamptz"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    vonageConnectionId?: InputMaybe<Scalars["String"]>;
    vonageSessionId?: InputMaybe<Scalars["String"]>;
    vonageStreamId?: InputMaybe<Scalars["String"]>;
    vonageStreamType?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.VonageParticipantStream" */
export enum Video_VonageParticipantStream_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    StoppedAt = "stopped_at",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VonageConnectionId = "vonageConnectionId",
    /** column name */
    VonageSessionId = "vonageSessionId",
    /** column name */
    VonageStreamId = "vonageStreamId",
    /** column name */
    VonageStreamType = "vonageStreamType",
}

/** columns and relationships of "video.VonageRoomRecording" */
export type Video_VonageRoomRecording = {
    __typename?: "video_VonageRoomRecording";
    created_at: Scalars["timestamptz"];
    endedAt?: Maybe<Scalars["timestamptz"]>;
    id: Scalars["uuid"];
    initiatedBy?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    initiator?: Maybe<Registrant_Registrant>;
    /** An object relationship */
    room?: Maybe<Room_Room>;
    roomId?: Maybe<Scalars["uuid"]>;
    s3Url?: Maybe<Scalars["String"]>;
    /** An array relationship */
    saves: Array<Registrant_SavedVonageRoomRecording>;
    /** An aggregate relationship */
    saves_aggregate: Registrant_SavedVonageRoomRecording_Aggregate;
    startedAt: Scalars["timestamptz"];
    updated_at: Scalars["timestamptz"];
    uploaded_at?: Maybe<Scalars["timestamptz"]>;
    vonageSessionId: Scalars["String"];
};

/** columns and relationships of "video.VonageRoomRecording" */
export type Video_VonageRoomRecordingSavesArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

/** columns and relationships of "video.VonageRoomRecording" */
export type Video_VonageRoomRecordingSaves_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

/** aggregated selection of "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Aggregate = {
    __typename?: "video_VonageRoomRecording_aggregate";
    aggregate?: Maybe<Video_VonageRoomRecording_Aggregate_Fields>;
    nodes: Array<Video_VonageRoomRecording>;
};

/** aggregate fields of "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Aggregate_Fields = {
    __typename?: "video_VonageRoomRecording_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_VonageRoomRecording_Max_Fields>;
    min?: Maybe<Video_VonageRoomRecording_Min_Fields>;
};

/** aggregate fields of "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_VonageRoomRecording_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Video_VonageRoomRecording_Max_Order_By>;
    min?: InputMaybe<Video_VonageRoomRecording_Min_Order_By>;
};

/** input type for inserting array relation for remote table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Arr_Rel_Insert_Input = {
    data: Array<Video_VonageRoomRecording_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_VonageRoomRecording_On_Conflict>;
};

/** Boolean expression to filter rows from the table "video.VonageRoomRecording". All fields are combined with a logical 'AND'. */
export type Video_VonageRoomRecording_Bool_Exp = {
    _and?: InputMaybe<Array<Video_VonageRoomRecording_Bool_Exp>>;
    _not?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
    _or?: InputMaybe<Array<Video_VonageRoomRecording_Bool_Exp>>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    endedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    initiatedBy?: InputMaybe<Uuid_Comparison_Exp>;
    initiator?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    room?: InputMaybe<Room_Room_Bool_Exp>;
    roomId?: InputMaybe<Uuid_Comparison_Exp>;
    s3Url?: InputMaybe<String_Comparison_Exp>;
    saves?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
    startedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    uploaded_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    vonageSessionId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VonageRoomRecording" */
export enum Video_VonageRoomRecording_Constraint {
    /** unique or primary key constraint */
    VonageRoomRecordingPkey = "VonageRoomRecording_pkey",
}

/** input type for inserting data into table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Insert_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    endedAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    initiatedBy?: InputMaybe<Scalars["uuid"]>;
    initiator?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    s3Url?: InputMaybe<Scalars["String"]>;
    saves?: InputMaybe<Registrant_SavedVonageRoomRecording_Arr_Rel_Insert_Input>;
    startedAt?: InputMaybe<Scalars["timestamptz"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    uploaded_at?: InputMaybe<Scalars["timestamptz"]>;
    vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_VonageRoomRecording_Max_Fields = {
    __typename?: "video_VonageRoomRecording_max_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    endedAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    initiatedBy?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    s3Url?: Maybe<Scalars["String"]>;
    startedAt?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    uploaded_at?: Maybe<Scalars["timestamptz"]>;
    vonageSessionId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Max_Order_By = {
    created_at?: InputMaybe<Order_By>;
    endedAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    initiatedBy?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    s3Url?: InputMaybe<Order_By>;
    startedAt?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    uploaded_at?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_VonageRoomRecording_Min_Fields = {
    __typename?: "video_VonageRoomRecording_min_fields";
    created_at?: Maybe<Scalars["timestamptz"]>;
    endedAt?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    initiatedBy?: Maybe<Scalars["uuid"]>;
    roomId?: Maybe<Scalars["uuid"]>;
    s3Url?: Maybe<Scalars["String"]>;
    startedAt?: Maybe<Scalars["timestamptz"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    uploaded_at?: Maybe<Scalars["timestamptz"]>;
    vonageSessionId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Min_Order_By = {
    created_at?: InputMaybe<Order_By>;
    endedAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    initiatedBy?: InputMaybe<Order_By>;
    roomId?: InputMaybe<Order_By>;
    s3Url?: InputMaybe<Order_By>;
    startedAt?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    uploaded_at?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Mutation_Response = {
    __typename?: "video_VonageRoomRecording_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_VonageRoomRecording>;
};

/** input type for inserting object relation for remote table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Obj_Rel_Insert_Input = {
    data: Video_VonageRoomRecording_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_VonageRoomRecording_On_Conflict>;
};

/** on_conflict condition type for table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_On_Conflict = {
    constraint: Video_VonageRoomRecording_Constraint;
    update_columns?: Array<Video_VonageRoomRecording_Update_Column>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VonageRoomRecording". */
export type Video_VonageRoomRecording_Order_By = {
    created_at?: InputMaybe<Order_By>;
    endedAt?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    initiatedBy?: InputMaybe<Order_By>;
    initiator?: InputMaybe<Registrant_Registrant_Order_By>;
    room?: InputMaybe<Room_Room_Order_By>;
    roomId?: InputMaybe<Order_By>;
    s3Url?: InputMaybe<Order_By>;
    saves_aggregate?: InputMaybe<Registrant_SavedVonageRoomRecording_Aggregate_Order_By>;
    startedAt?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    uploaded_at?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VonageRoomRecording */
export type Video_VonageRoomRecording_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "video.VonageRoomRecording" */
export enum Video_VonageRoomRecording_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EndedAt = "endedAt",
    /** column name */
    Id = "id",
    /** column name */
    InitiatedBy = "initiatedBy",
    /** column name */
    RoomId = "roomId",
    /** column name */
    S3Url = "s3Url",
    /** column name */
    StartedAt = "startedAt",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UploadedAt = "uploaded_at",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** input type for updating data in table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Set_Input = {
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    endedAt?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    initiatedBy?: InputMaybe<Scalars["uuid"]>;
    roomId?: InputMaybe<Scalars["uuid"]>;
    s3Url?: InputMaybe<Scalars["String"]>;
    startedAt?: InputMaybe<Scalars["timestamptz"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    uploaded_at?: InputMaybe<Scalars["timestamptz"]>;
    vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.VonageRoomRecording" */
export enum Video_VonageRoomRecording_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EndedAt = "endedAt",
    /** column name */
    Id = "id",
    /** column name */
    InitiatedBy = "initiatedBy",
    /** column name */
    RoomId = "roomId",
    /** column name */
    S3Url = "s3Url",
    /** column name */
    StartedAt = "startedAt",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UploadedAt = "uploaded_at",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** columns and relationships of "video.VonageSessionLayout" */
export type Video_VonageSessionLayout = {
    __typename?: "video_VonageSessionLayout";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    created_at: Scalars["timestamptz"];
    /** An object relationship */
    eventVonageSession?: Maybe<Video_EventVonageSession>;
    id: Scalars["uuid"];
    layoutData?: Maybe<Scalars["jsonb"]>;
    /** An array relationship */
    rooms: Array<Room_Room>;
    /** An aggregate relationship */
    rooms_aggregate: Room_Room_Aggregate;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at: Scalars["timestamptz"];
    vonageSessionId: Scalars["String"];
};

/** columns and relationships of "video.VonageSessionLayout" */
export type Video_VonageSessionLayoutLayoutDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "video.VonageSessionLayout" */
export type Video_VonageSessionLayoutRoomsArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** columns and relationships of "video.VonageSessionLayout" */
export type Video_VonageSessionLayoutRooms_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** aggregated selection of "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Aggregate = {
    __typename?: "video_VonageSessionLayout_aggregate";
    aggregate?: Maybe<Video_VonageSessionLayout_Aggregate_Fields>;
    nodes: Array<Video_VonageSessionLayout>;
};

/** aggregate fields of "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Aggregate_Fields = {
    __typename?: "video_VonageSessionLayout_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_VonageSessionLayout_Max_Fields>;
    min?: Maybe<Video_VonageSessionLayout_Min_Fields>;
};

/** aggregate fields of "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_VonageSessionLayout_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Video_VonageSessionLayout_Max_Order_By>;
    min?: InputMaybe<Video_VonageSessionLayout_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Video_VonageSessionLayout_Append_Input = {
    layoutData?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Arr_Rel_Insert_Input = {
    data: Array<Video_VonageSessionLayout_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_VonageSessionLayout_On_Conflict>;
};

/** Boolean expression to filter rows from the table "video.VonageSessionLayout". All fields are combined with a logical 'AND'. */
export type Video_VonageSessionLayout_Bool_Exp = {
    _and?: InputMaybe<Array<Video_VonageSessionLayout_Bool_Exp>>;
    _not?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
    _or?: InputMaybe<Array<Video_VonageSessionLayout_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    layoutData?: InputMaybe<Jsonb_Comparison_Exp>;
    rooms?: InputMaybe<Room_Room_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    vonageSessionId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VonageSessionLayout" */
export enum Video_VonageSessionLayout_Constraint {
    /** unique or primary key constraint */
    VonageSessionLayoutPkey = "VonageSessionLayout_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Video_VonageSessionLayout_Delete_At_Path_Input = {
    layoutData?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Video_VonageSessionLayout_Delete_Elem_Input = {
    layoutData?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Video_VonageSessionLayout_Delete_Key_Input = {
    layoutData?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Obj_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    layoutData?: InputMaybe<Scalars["jsonb"]>;
    rooms?: InputMaybe<Room_Room_Arr_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_VonageSessionLayout_Max_Fields = {
    __typename?: "video_VonageSessionLayout_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    vonageSessionId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_VonageSessionLayout_Min_Fields = {
    __typename?: "video_VonageSessionLayout_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    created_at?: Maybe<Scalars["timestamptz"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updated_at?: Maybe<Scalars["timestamptz"]>;
    vonageSessionId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Mutation_Response = {
    __typename?: "video_VonageSessionLayout_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_VonageSessionLayout>;
};

/** input type for inserting object relation for remote table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Obj_Rel_Insert_Input = {
    data: Video_VonageSessionLayout_Insert_Input;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_VonageSessionLayout_On_Conflict>;
};

/** on_conflict condition type for table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_On_Conflict = {
    constraint: Video_VonageSessionLayout_Constraint;
    update_columns?: Array<Video_VonageSessionLayout_Update_Column>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VonageSessionLayout". */
export type Video_VonageSessionLayout_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    created_at?: InputMaybe<Order_By>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Order_By>;
    id?: InputMaybe<Order_By>;
    layoutData?: InputMaybe<Order_By>;
    rooms_aggregate?: InputMaybe<Room_Room_Aggregate_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updated_at?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VonageSessionLayout */
export type Video_VonageSessionLayout_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Video_VonageSessionLayout_Prepend_Input = {
    layoutData?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "video.VonageSessionLayout" */
export enum Video_VonageSessionLayout_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    LayoutData = "layoutData",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** input type for updating data in table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    created_at?: InputMaybe<Scalars["timestamptz"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    layoutData?: InputMaybe<Scalars["jsonb"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updated_at?: InputMaybe<Scalars["timestamptz"]>;
    vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.VonageSessionLayout" */
export enum Video_VonageSessionLayout_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    LayoutData = "layoutData",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** columns and relationships of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand = {
    __typename?: "video_VonageVideoPlaybackCommand";
    command: Scalars["jsonb"];
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    eventVonageSession?: Maybe<Video_EventVonageSession>;
    id: Scalars["uuid"];
    /** An object relationship */
    registrant?: Maybe<Registrant_Registrant>;
    /** An array relationship */
    rooms: Array<Room_Room>;
    /** An aggregate relationship */
    rooms_aggregate: Room_Room_Aggregate;
    /** An object relationship */
    subconference?: Maybe<Conference_Subconference>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt: Scalars["timestamptz"];
    vonageSessionId: Scalars["String"];
};

/** columns and relationships of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommandCommandArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommandRoomsArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** columns and relationships of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommandRooms_AggregateArgs = {
    distinct_on?: InputMaybe<Array<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<Array<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** aggregated selection of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Aggregate = {
    __typename?: "video_VonageVideoPlaybackCommand_aggregate";
    aggregate?: Maybe<Video_VonageVideoPlaybackCommand_Aggregate_Fields>;
    nodes: Array<Video_VonageVideoPlaybackCommand>;
};

/** aggregate fields of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Aggregate_Fields = {
    __typename?: "video_VonageVideoPlaybackCommand_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_VonageVideoPlaybackCommand_Max_Fields>;
    min?: Maybe<Video_VonageVideoPlaybackCommand_Min_Fields>;
};

/** aggregate fields of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Video_VonageVideoPlaybackCommand_Append_Input = {
    command?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "video.VonageVideoPlaybackCommand". All fields are combined with a logical 'AND'. */
export type Video_VonageVideoPlaybackCommand_Bool_Exp = {
    _and?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Bool_Exp>>;
    _not?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
    _or?: InputMaybe<Array<Video_VonageVideoPlaybackCommand_Bool_Exp>>;
    command?: InputMaybe<Jsonb_Comparison_Exp>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    createdByRegistrantId?: InputMaybe<Uuid_Comparison_Exp>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    rooms?: InputMaybe<Room_Room_Bool_Exp>;
    subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    vonageSessionId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VonageVideoPlaybackCommand" */
export enum Video_VonageVideoPlaybackCommand_Constraint {
    /** unique or primary key constraint */
    VonageVideoPlaybackCommandPkey = "VonageVideoPlaybackCommand_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Video_VonageVideoPlaybackCommand_Delete_At_Path_Input = {
    command?: InputMaybe<Array<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Video_VonageVideoPlaybackCommand_Delete_Elem_Input = {
    command?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Video_VonageVideoPlaybackCommand_Delete_Key_Input = {
    command?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Insert_Input = {
    command?: InputMaybe<Scalars["jsonb"]>;
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    createdByRegistrantId?: InputMaybe<Scalars["uuid"]>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Obj_Rel_Insert_Input>;
    id?: InputMaybe<Scalars["uuid"]>;
    registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    rooms?: InputMaybe<Room_Room_Arr_Rel_Insert_Input>;
    subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_VonageVideoPlaybackCommand_Max_Fields = {
    __typename?: "video_VonageVideoPlaybackCommand_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    vonageSessionId?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_VonageVideoPlaybackCommand_Min_Fields = {
    __typename?: "video_VonageVideoPlaybackCommand_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    vonageSessionId?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Mutation_Response = {
    __typename?: "video_VonageVideoPlaybackCommand_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_VonageVideoPlaybackCommand>;
};

/** on_conflict condition type for table "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_On_Conflict = {
    constraint: Video_VonageVideoPlaybackCommand_Constraint;
    update_columns?: Array<Video_VonageVideoPlaybackCommand_Update_Column>;
    where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VonageVideoPlaybackCommand". */
export type Video_VonageVideoPlaybackCommand_Order_By = {
    command?: InputMaybe<Order_By>;
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    createdByRegistrantId?: InputMaybe<Order_By>;
    eventVonageSession?: InputMaybe<Video_EventVonageSession_Order_By>;
    id?: InputMaybe<Order_By>;
    registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    rooms_aggregate?: InputMaybe<Room_Room_Aggregate_Order_By>;
    subconference?: InputMaybe<Conference_Subconference_Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    vonageSessionId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VonageVideoPlaybackCommand */
export type Video_VonageVideoPlaybackCommand_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Video_VonageVideoPlaybackCommand_Prepend_Input = {
    command?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "video.VonageVideoPlaybackCommand" */
export enum Video_VonageVideoPlaybackCommand_Select_Column {
    /** column name */
    Command = "command",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    CreatedByRegistrantId = "createdByRegistrantId",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** input type for updating data in table "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Set_Input = {
    command?: InputMaybe<Scalars["jsonb"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    createdByRegistrantId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.VonageVideoPlaybackCommand" */
export enum Video_VonageVideoPlaybackCommand_Update_Column {
    /** column name */
    Command = "command",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    CreatedByRegistrantId = "createdByRegistrantId",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** columns and relationships of "video.YouTubeUpload" */
export type Video_YouTubeUpload = {
    __typename?: "video_YouTubeUpload";
    /** An object relationship */
    conference: Conference_Conference;
    conferenceId: Scalars["uuid"];
    createdAt: Scalars["timestamptz"];
    /** An object relationship */
    element?: Maybe<Content_Element>;
    elementId?: Maybe<Scalars["uuid"]>;
    id: Scalars["uuid"];
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt: Scalars["timestamptz"];
    uploadYouTubeVideoJobId?: Maybe<Scalars["uuid"]>;
    videoId: Scalars["String"];
    videoPrivacyStatus: Scalars["String"];
    videoStatus: Scalars["String"];
    videoTitle: Scalars["String"];
};

/** aggregated selection of "video.YouTubeUpload" */
export type Video_YouTubeUpload_Aggregate = {
    __typename?: "video_YouTubeUpload_aggregate";
    aggregate?: Maybe<Video_YouTubeUpload_Aggregate_Fields>;
    nodes: Array<Video_YouTubeUpload>;
};

/** aggregate fields of "video.YouTubeUpload" */
export type Video_YouTubeUpload_Aggregate_Fields = {
    __typename?: "video_YouTubeUpload_aggregate_fields";
    count: Scalars["Int"];
    max?: Maybe<Video_YouTubeUpload_Max_Fields>;
    min?: Maybe<Video_YouTubeUpload_Min_Fields>;
};

/** aggregate fields of "video.YouTubeUpload" */
export type Video_YouTubeUpload_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<Array<Video_YouTubeUpload_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Aggregate_Order_By = {
    count?: InputMaybe<Order_By>;
    max?: InputMaybe<Video_YouTubeUpload_Max_Order_By>;
    min?: InputMaybe<Video_YouTubeUpload_Min_Order_By>;
};

/** input type for inserting array relation for remote table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Arr_Rel_Insert_Input = {
    data: Array<Video_YouTubeUpload_Insert_Input>;
    /** upsert condition */
    on_conflict?: InputMaybe<Video_YouTubeUpload_On_Conflict>;
};

/** Boolean expression to filter rows from the table "video.YouTubeUpload". All fields are combined with a logical 'AND'. */
export type Video_YouTubeUpload_Bool_Exp = {
    _and?: InputMaybe<Array<Video_YouTubeUpload_Bool_Exp>>;
    _not?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
    _or?: InputMaybe<Array<Video_YouTubeUpload_Bool_Exp>>;
    conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    element?: InputMaybe<Content_Element_Bool_Exp>;
    elementId?: InputMaybe<Uuid_Comparison_Exp>;
    id?: InputMaybe<Uuid_Comparison_Exp>;
    subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    uploadYouTubeVideoJobId?: InputMaybe<Uuid_Comparison_Exp>;
    videoId?: InputMaybe<String_Comparison_Exp>;
    videoPrivacyStatus?: InputMaybe<String_Comparison_Exp>;
    videoStatus?: InputMaybe<String_Comparison_Exp>;
    videoTitle?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.YouTubeUpload" */
export enum Video_YouTubeUpload_Constraint {
    /** unique or primary key constraint */
    YouTubeUploadPkey = "YouTubeUpload_pkey",
    /** unique or primary key constraint */
    YouTubeUploadVideoIdKey = "YouTubeUpload_videoId_key",
}

/** input type for inserting data into table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Insert_Input = {
    conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    uploadYouTubeVideoJobId?: InputMaybe<Scalars["uuid"]>;
    videoId?: InputMaybe<Scalars["String"]>;
    videoPrivacyStatus?: InputMaybe<Scalars["String"]>;
    videoStatus?: InputMaybe<Scalars["String"]>;
    videoTitle?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_YouTubeUpload_Max_Fields = {
    __typename?: "video_YouTubeUpload_max_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    uploadYouTubeVideoJobId?: Maybe<Scalars["uuid"]>;
    videoId?: Maybe<Scalars["String"]>;
    videoPrivacyStatus?: Maybe<Scalars["String"]>;
    videoStatus?: Maybe<Scalars["String"]>;
    videoTitle?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Max_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    uploadYouTubeVideoJobId?: InputMaybe<Order_By>;
    videoId?: InputMaybe<Order_By>;
    videoPrivacyStatus?: InputMaybe<Order_By>;
    videoStatus?: InputMaybe<Order_By>;
    videoTitle?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_YouTubeUpload_Min_Fields = {
    __typename?: "video_YouTubeUpload_min_fields";
    conferenceId?: Maybe<Scalars["uuid"]>;
    createdAt?: Maybe<Scalars["timestamptz"]>;
    elementId?: Maybe<Scalars["uuid"]>;
    id?: Maybe<Scalars["uuid"]>;
    subconferenceId?: Maybe<Scalars["uuid"]>;
    updatedAt?: Maybe<Scalars["timestamptz"]>;
    uploadYouTubeVideoJobId?: Maybe<Scalars["uuid"]>;
    videoId?: Maybe<Scalars["String"]>;
    videoPrivacyStatus?: Maybe<Scalars["String"]>;
    videoStatus?: Maybe<Scalars["String"]>;
    videoTitle?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Min_Order_By = {
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    uploadYouTubeVideoJobId?: InputMaybe<Order_By>;
    videoId?: InputMaybe<Order_By>;
    videoPrivacyStatus?: InputMaybe<Order_By>;
    videoStatus?: InputMaybe<Order_By>;
    videoTitle?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Mutation_Response = {
    __typename?: "video_YouTubeUpload_mutation_response";
    /** number of rows affected by the mutation */
    affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    returning: Array<Video_YouTubeUpload>;
};

/** on_conflict condition type for table "video.YouTubeUpload" */
export type Video_YouTubeUpload_On_Conflict = {
    constraint: Video_YouTubeUpload_Constraint;
    update_columns?: Array<Video_YouTubeUpload_Update_Column>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** Ordering options when selecting data from "video.YouTubeUpload". */
export type Video_YouTubeUpload_Order_By = {
    conference?: InputMaybe<Conference_Conference_Order_By>;
    conferenceId?: InputMaybe<Order_By>;
    createdAt?: InputMaybe<Order_By>;
    element?: InputMaybe<Content_Element_Order_By>;
    elementId?: InputMaybe<Order_By>;
    id?: InputMaybe<Order_By>;
    subconferenceId?: InputMaybe<Order_By>;
    updatedAt?: InputMaybe<Order_By>;
    uploadYouTubeVideoJobId?: InputMaybe<Order_By>;
    videoId?: InputMaybe<Order_By>;
    videoPrivacyStatus?: InputMaybe<Order_By>;
    videoStatus?: InputMaybe<Order_By>;
    videoTitle?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_YouTubeUpload */
export type Video_YouTubeUpload_Pk_Columns_Input = {
    id: Scalars["uuid"];
};

/** select columns of table "video.YouTubeUpload" */
export enum Video_YouTubeUpload_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UploadYouTubeVideoJobId = "uploadYouTubeVideoJobId",
    /** column name */
    VideoId = "videoId",
    /** column name */
    VideoPrivacyStatus = "videoPrivacyStatus",
    /** column name */
    VideoStatus = "videoStatus",
    /** column name */
    VideoTitle = "videoTitle",
}

/** input type for updating data in table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Set_Input = {
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    createdAt?: InputMaybe<Scalars["timestamptz"]>;
    elementId?: InputMaybe<Scalars["uuid"]>;
    id?: InputMaybe<Scalars["uuid"]>;
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    uploadYouTubeVideoJobId?: InputMaybe<Scalars["uuid"]>;
    videoId?: InputMaybe<Scalars["String"]>;
    videoPrivacyStatus?: InputMaybe<Scalars["String"]>;
    videoStatus?: InputMaybe<Scalars["String"]>;
    videoTitle?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.YouTubeUpload" */
export enum Video_YouTubeUpload_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UploadYouTubeVideoJobId = "uploadYouTubeVideoJobId",
    /** column name */
    VideoId = "videoId",
    /** column name */
    VideoPrivacyStatus = "videoPrivacyStatus",
    /** column name */
    VideoStatus = "videoStatus",
    /** column name */
    VideoTitle = "videoTitle",
}

export type FlagInserted_GetSupportAddressQueryVariables = Exact<{
    messageSId: Scalars["uuid"];
}>;

export type FlagInserted_GetSupportAddressQuery = {
    __typename?: "query_root";
    chat_Message: Array<{
        __typename?: "chat_Message";
        chat: {
            __typename?: "chat_Chat";
            subconferenceId?: any | null;
            conference: {
                __typename?: "conference_Conference";
                id: any;
                name: string;
                shortName: string;
                slug: string;
                supportAddress: Array<{
                    __typename?: "conference_Configuration";
                    conferenceId: any;
                    key: Conference_ConfigurationKey_Enum;
                    value: any;
                }>;
            };
        };
    }>;
};

export type CombineVideosJob_GetJobsQueryVariables = Exact<{ [key: string]: never }>;

export type CombineVideosJob_GetJobsQuery = {
    __typename?: "query_root";
    job_queues_CombineVideosJob: Array<{
        __typename?: "job_queues_CombineVideosJob";
        id: any;
        created_at: any;
        conferenceId: any;
        subconferenceId?: any | null;
        data: any;
        jobStatusName: Job_Queues_JobStatus_Enum;
    }>;
};

export type CombineVideosJob_GetElementsQueryVariables = Exact<{
    elementIds: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type CombineVideosJob_GetElementsQuery = {
    __typename?: "query_root";
    content_Element: Array<{ __typename?: "content_Element"; id: any; data: any; itemId: any }>;
};

export type CombineVideosJob_FailJobMutationVariables = Exact<{
    combineVideosJobId: Scalars["uuid"];
    message: Scalars["String"];
}>;

export type CombineVideosJob_FailJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_CombineVideosJob?: {
        __typename?: "job_queues_CombineVideosJob_mutation_response";
        affected_rows: number;
    } | null;
};

export type CombineVideosJob_StartJobMutationVariables = Exact<{
    combineVideosJobId: Scalars["uuid"];
    mediaConvertJobId: Scalars["String"];
}>;

export type CombineVideosJob_StartJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_CombineVideosJob?: {
        __typename?: "job_queues_CombineVideosJob_mutation_response";
        affected_rows: number;
    } | null;
};

export type CombineVideosJob_CompleteJobMutationVariables = Exact<{
    combineVideosJobId: Scalars["uuid"];
}>;

export type CombineVideosJob_CompleteJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_CombineVideosJob?: {
        __typename?: "job_queues_CombineVideosJob_mutation_response";
        affected_rows: number;
    } | null;
};

export type MediaConvert_GetCombineVideosJobQueryVariables = Exact<{
    combineVideosJobId: Scalars["uuid"];
    itemId: Scalars["uuid"];
}>;

export type MediaConvert_GetCombineVideosJobQuery = {
    __typename?: "query_root";
    job_queues_CombineVideosJob_by_pk?: {
        __typename?: "job_queues_CombineVideosJob";
        id: any;
        conferenceId: any;
        outputName: string;
    } | null;
    content_Item_by_pk?: { __typename?: "content_Item"; id: any; subconferenceId?: any | null } | null;
};

export type CombineVideosJob_CreateElementMutationVariables = Exact<{
    data: Scalars["jsonb"];
    name: Scalars["String"];
    itemId: Scalars["uuid"];
    conferenceId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    source: Scalars["jsonb"];
}>;

export type CombineVideosJob_CreateElementMutation = {
    __typename?: "mutation_root";
    insert_content_Element_one?: { __typename?: "content_Element"; id: any } | null;
};

export type CheckForFrontendHostsQueryVariables = Exact<{
    host: Scalars["jsonb"];
}>;

export type CheckForFrontendHostsQuery = {
    __typename?: "query_root";
    system_Configuration: Array<{ __typename?: "system_Configuration"; key: System_ConfigurationKey_Enum; value: any }>;
    conference_Configuration: Array<{
        __typename?: "conference_Configuration";
        key: Conference_ConfigurationKey_Enum;
        value: any;
        conference: { __typename?: "conference_Conference"; id: any; slug: string };
    }>;
};

export type ElementAddNewVersionMutationVariables = Exact<{
    id: Scalars["uuid"];
    newVersion: Scalars["jsonb"];
}>;

export type ElementAddNewVersionMutation = {
    __typename?: "mutation_root";
    update_content_Element_by_pk?: { __typename?: "content_Element"; id: any } | null;
};

export type ElementUpdateNotification_ElementDetailsFragment = {
    __typename?: "content_Element";
    id: any;
    name: string;
    source?: any | null;
    subconference?: { __typename?: "conference_Subconference"; id: any; name: string; shortName: string } | null;
    conference: {
        __typename?: "conference_Conference";
        id: any;
        name: string;
        shortName: string;
        recordingNotificationsEnabled: Array<{ __typename?: "conference_Configuration"; value: any }>;
        submissionNotificationRoles: Array<{ __typename?: "conference_Configuration"; value: any }>;
        emailTemplateSubtitlesGenerated: Array<{ __typename?: "conference_Configuration"; value: any }>;
    };
    item: {
        __typename?: "content_Item";
        id: any;
        title: string;
        itemPeople: Array<{
            __typename?: "content_ItemProgramPerson";
            id: any;
            roleName: string;
            person: {
                __typename?: "collection_ProgramPerson";
                id: any;
                name: string;
                email?: string | null;
                accessToken: string;
            };
        }>;
    };
};

export type GetElementDetailsQueryVariables = Exact<{
    elementId: Scalars["uuid"];
}>;

export type GetElementDetailsQuery = {
    __typename?: "query_root";
    content_Element_by_pk?: {
        __typename?: "content_Element";
        id: any;
        name: string;
        source?: any | null;
        subconference?: { __typename?: "conference_Subconference"; id: any; name: string; shortName: string } | null;
        conference: {
            __typename?: "conference_Conference";
            id: any;
            name: string;
            shortName: string;
            recordingNotificationsEnabled: Array<{ __typename?: "conference_Configuration"; value: any }>;
            submissionNotificationRoles: Array<{ __typename?: "conference_Configuration"; value: any }>;
            emailTemplateSubtitlesGenerated: Array<{ __typename?: "conference_Configuration"; value: any }>;
        };
        item: {
            __typename?: "content_Item";
            id: any;
            title: string;
            itemPeople: Array<{
                __typename?: "content_ItemProgramPerson";
                id: any;
                roleName: string;
                person: {
                    __typename?: "collection_ProgramPerson";
                    id: any;
                    name: string;
                    email?: string | null;
                    accessToken: string;
                };
            }>;
        };
    } | null;
};

export type GetUploadAgreementQueryVariables = Exact<{
    accessToken: Scalars["String"];
}>;

export type GetUploadAgreementQuery = {
    __typename?: "query_root";
    collection_ProgramPerson: Array<{
        __typename?: "collection_ProgramPerson";
        conference: {
            __typename?: "conference_Conference";
            configurations: Array<{
                __typename?: "conference_Configuration";
                conferenceId: any;
                key: Conference_ConfigurationKey_Enum;
                value: any;
            }>;
        };
    }>;
};

export type MigrateElement_GetInfoQueryVariables = Exact<{
    elementId: Scalars["uuid"];
}>;

export type MigrateElement_GetInfoQuery = {
    __typename?: "query_root";
    content_Element_by_pk?: {
        __typename?: "content_Element";
        id: any;
        typeName: Content_ElementType_Enum;
        data: any;
    } | null;
};

export type MigrateElementMutationVariables = Exact<{
    elementId: Scalars["uuid"];
    data: Scalars["jsonb"];
}>;

export type MigrateElementMutation = {
    __typename?: "mutation_root";
    update_content_Element_by_pk?: { __typename?: "content_Element"; id: any } | null;
};

export type CustomEmail_SelectRegistrantsQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
    subconferenceId: Scalars["uuid"];
    withSubconference: Scalars["Boolean"];
    conferenceCond: Registrant_Registrant_Bool_Exp;
    registrantIds: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type CustomEmail_SelectRegistrantsQuery = {
    __typename?: "query_root";
    registrant_Registrant: Array<{
        __typename?: "registrant_Registrant";
        displayName: string;
        id: any;
        invitation?: { __typename?: "registrant_Invitation"; invitedEmailAddress: string; id: any } | null;
        user?: { __typename?: "User"; id: string; email?: string | null } | null;
    }>;
    conference_Subconference_by_pk?: { __typename?: "conference_Subconference"; shortName: string } | null;
    conference_Conference_by_pk?: {
        __typename?: "conference_Conference";
        shortName: string;
        techSupportAddress: Array<{ __typename?: "conference_Configuration"; value: any }>;
    } | null;
    platformAddress?: { __typename?: "system_Configuration"; value: any } | null;
};

export type SelectUnprocessedCustomEmailJobsQueryVariables = Exact<{ [key: string]: never }>;

export type SelectUnprocessedCustomEmailJobsQuery = {
    __typename?: "query_root";
    job_queues_CustomEmailJob: Array<{
        __typename?: "job_queues_CustomEmailJob";
        id: any;
        registrantIds: any;
        conferenceId: any;
        subconferenceId?: any | null;
        subject: string;
        markdownBody: string;
    }>;
};

export type CompleteCustomEmailJobsMutationVariables = Exact<{
    ids: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type CompleteCustomEmailJobsMutation = {
    __typename?: "mutation_root";
    update_job_queues_CustomEmailJob?: {
        __typename?: "job_queues_CustomEmailJob_mutation_response";
        affected_rows: number;
        returning: Array<{ __typename?: "job_queues_CustomEmailJob"; id: any }>;
    } | null;
};

export type ConferenceEmailConfigurationQueryVariables = Exact<{
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    includeConferenceFields: Scalars["Boolean"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    includeSubconferenceFields: Scalars["Boolean"];
}>;

export type ConferenceEmailConfigurationQuery = {
    __typename?: "query_root";
    support: Array<{ __typename?: "conference_Configuration"; key: Conference_ConfigurationKey_Enum; value: any }>;
    techSupport: Array<{ __typename?: "conference_Configuration"; key: Conference_ConfigurationKey_Enum; value: any }>;
    hostOrganisationName?: {
        __typename?: "system_Configuration";
        key: System_ConfigurationKey_Enum;
        value: any;
    } | null;
    stopEmails?: { __typename?: "system_Configuration"; key: System_ConfigurationKey_Enum; value: any } | null;
    frontendHost: Array<{ __typename?: "conference_Configuration"; key: Conference_ConfigurationKey_Enum; value: any }>;
    defaultFrontendHost?: { __typename?: "system_Configuration"; key: System_ConfigurationKey_Enum; value: any } | null;
    allowEmailsToDomains?: {
        __typename?: "system_Configuration";
        key: System_ConfigurationKey_Enum;
        value: any;
    } | null;
    conference_Conference?: Array<{ __typename?: "conference_Conference"; shortName: string }>;
    conference_Subconference?: Array<{ __typename?: "conference_Subconference"; shortName: string }>;
};

export type InsertEmailsMutationVariables = Exact<{
    objects: Array<Email_Insert_Input> | Email_Insert_Input;
}>;

export type InsertEmailsMutation = {
    __typename?: "mutation_root";
    insert_Email?: { __typename?: "Email_mutation_response"; affected_rows: number } | null;
};

export type SelectUnsentEmailIdsQueryVariables = Exact<{ [key: string]: never }>;

export type SelectUnsentEmailIdsQuery = { __typename?: "query_root"; Email: Array<{ __typename?: "Email"; id: any }> };

export type MarkAndSelectUnsentEmailsMutationVariables = Exact<{
    ids: Array<Scalars["uuid"]> | Scalars["uuid"];
    sentAt: Scalars["timestamptz"];
}>;

export type MarkAndSelectUnsentEmailsMutation = {
    __typename?: "mutation_root";
    update_Email?: {
        __typename?: "Email_mutation_response";
        returning: Array<{
            __typename?: "Email";
            recipientName?: string | null;
            emailAddress: string;
            htmlContents: string;
            plainTextContents: string;
            id: any;
            subject: string;
            retriesCount: number;
        }>;
    } | null;
};

export type UnmarkUnsentEmailsMutationVariables = Exact<{
    ids: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type UnmarkUnsentEmailsMutation = {
    __typename?: "mutation_root";
    update_Email?: { __typename?: "Email_mutation_response"; affected_rows: number } | null;
};

export type GetSendGridConfigQueryVariables = Exact<{ [key: string]: never }>;

export type GetSendGridConfigQuery = {
    __typename?: "query_root";
    apiKey?: { __typename?: "system_Configuration"; value: any } | null;
    senderEmail?: { __typename?: "system_Configuration"; value: any } | null;
    senderName?: { __typename?: "system_Configuration"; value: any } | null;
    replyTo?: { __typename?: "system_Configuration"; value: any } | null;
    webhookPublicKey?: { __typename?: "system_Configuration"; value: any } | null;
};

export type UpdateEmailStatusMutationVariables = Exact<{
    id: Scalars["uuid"];
    status: Scalars["String"];
    errorMessage?: InputMaybe<Scalars["String"]>;
}>;

export type UpdateEmailStatusMutation = {
    __typename?: "mutation_root";
    update_Email_by_pk?: { __typename?: "Email"; id: any } | null;
};

export type GetEventChatInfoQueryVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type GetEventChatInfoQuery = {
    __typename?: "query_root";
    schedule_Event_by_pk?: {
        __typename?: "schedule_Event";
        id: any;
        scheduledStartTime?: any | null;
        scheduledEndTime?: any | null;
        room: { __typename?: "room_Room"; id: any; name: string; chatId?: any | null };
        item?: { __typename?: "content_Item"; id: any; title: string; chatId?: any | null } | null;
    } | null;
};

export type StartChatDuplicationMutationVariables = Exact<{
    chatId1: Scalars["uuid"];
    chatId2: Scalars["uuid"];
}>;

export type StartChatDuplicationMutation = {
    __typename?: "mutation_root";
    update_chat1?: { __typename?: "chat_Chat"; id: any } | null;
    update_chat2?: { __typename?: "chat_Chat"; id: any } | null;
};

export type EndChatDuplicationMutationVariables = Exact<{
    chatId1: Scalars["uuid"];
    chatId2: Scalars["uuid"];
}>;

export type EndChatDuplicationMutation = {
    __typename?: "mutation_root";
    update_chat1?: { __typename?: "chat_Chat"; id: any } | null;
    update_chat2?: { __typename?: "chat_Chat"; id: any } | null;
};

export type NotifyRealtimeEventStartedMutationVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type NotifyRealtimeEventStartedMutation = {
    __typename?: "mutation_root";
    notifyEventStarted: { __typename?: "NotifyEventStarted"; ok: boolean };
};

export type NotifyRealtimeEventEndedMutationVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type NotifyRealtimeEventEndedMutation = {
    __typename?: "mutation_root";
    notifyEventEnded: { __typename?: "NotifyEventEnded"; ok: boolean };
};

export type GetEventTimingsQueryVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type GetEventTimingsQuery = {
    __typename?: "query_root";
    schedule_Event_by_pk?: {
        __typename?: "schedule_Event";
        id: any;
        name: string;
        timingsUpdatedAt: any;
        scheduledStartTime?: any | null;
        scheduledEndTime?: any | null;
        conferenceId: any;
        subconferenceId?: any | null;
        modeName?: Schedule_Mode_Enum | null;
        roomId: any;
        enableRecording: boolean;
        eventVonageSession?: { __typename?: "video_EventVonageSession"; id: any; sessionId: string } | null;
        item?: { __typename?: "content_Item"; id: any; title: string; chatId?: any | null } | null;
        continuations: Array<{ __typename?: "schedule_Continuation"; id: any; to: any }>;
        room: {
            __typename?: "room_Room";
            id: any;
            rtmpInput?: { __typename?: "video_RoomRtmpInput"; id: any; inputId?: string | null } | null;
        };
    } | null;
};

export type Event_GetEventVonageSessionQueryVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type Event_GetEventVonageSessionQuery = {
    __typename?: "query_root";
    schedule_Event_by_pk?: {
        __typename?: "schedule_Event";
        id: any;
        eventVonageSession?: { __typename?: "video_EventVonageSession"; id: any; sessionId: string } | null;
    } | null;
};

export type GoogleOAuth_ConferenceConfig_FrontendHostQueryVariables = Exact<{
    registrantId: Scalars["uuid"];
}>;

export type GoogleOAuth_ConferenceConfig_FrontendHostQuery = {
    __typename?: "query_root";
    registrant?: {
        __typename?: "registrant_Registrant";
        conference: {
            __typename?: "conference_Conference";
            frontendHost: Array<{ __typename?: "conference_Configuration"; value: any }>;
        };
    } | null;
    defaultFrontendHost?: { __typename?: "system_Configuration"; key: System_ConfigurationKey_Enum; value: any } | null;
};

export type Google_CreateRegistrantGoogleAccountMutationVariables = Exact<{
    registrantId: Scalars["uuid"];
    conferenceId: Scalars["uuid"];
    googleAccountEmail: Scalars["String"];
    tokenData: Scalars["jsonb"];
}>;

export type Google_CreateRegistrantGoogleAccountMutation = {
    __typename?: "mutation_root";
    insert_registrant_GoogleAccount_one?: { __typename?: "registrant_GoogleAccount"; id: any } | null;
};

export type CreateYouTubeUploadMutationVariables = Exact<{
    elementId: Scalars["uuid"];
    videoId: Scalars["String"];
    videoTitle: Scalars["String"];
    videoStatus: Scalars["String"];
    uploadYouTubeVideoJobId: Scalars["uuid"];
    conferenceId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    videoPrivacyStatus: Scalars["String"];
}>;

export type CreateYouTubeUploadMutation = {
    __typename?: "mutation_root";
    insert_video_YouTubeUpload_one?: { __typename?: "video_YouTubeUpload"; id: any } | null;
};

export type SelectNewUploadYouTubeVideoJobsQueryVariables = Exact<{ [key: string]: never }>;

export type SelectNewUploadYouTubeVideoJobsQuery = {
    __typename?: "query_root";
    job_queues_UploadYouTubeVideoJob: Array<{ __typename?: "job_queues_UploadYouTubeVideoJob"; id: any }>;
};

export type MarkAndSelectNewUploadYouTubeVideoJobsMutationVariables = Exact<{
    ids: Array<Scalars["uuid"]> | Scalars["uuid"];
    initialResult: Scalars["jsonb"];
}>;

export type MarkAndSelectNewUploadYouTubeVideoJobsMutation = {
    __typename?: "mutation_root";
    nextJobs?: {
        __typename?: "job_queues_UploadYouTubeVideoJob_mutation_response";
        returning: Array<{
            __typename?: "job_queues_UploadYouTubeVideoJob";
            id: any;
            conferenceId: any;
            subconferenceId?: any | null;
            jobStatusName: Job_Queues_JobStatus_Enum;
            retriesCount: number;
            videoTitle: string;
            videoDescription: string;
            videoPrivacyStatus: string;
            playlistId?: string | null;
            registrantGoogleAccount: {
                __typename?: "registrant_GoogleAccount";
                id: any;
                tokenData: any;
                googleAccountEmail: string;
            };
            element: {
                __typename?: "content_Element";
                data: any;
                id: any;
                item: { __typename?: "content_Item"; id: any; title: string };
            };
        }>;
    } | null;
    expiredJobs?: {
        __typename?: "job_queues_UploadYouTubeVideoJob_mutation_response";
        returning: Array<{
            __typename?: "job_queues_UploadYouTubeVideoJob";
            id: any;
            conferenceId: any;
            subconferenceId?: any | null;
            jobStatusName: Job_Queues_JobStatus_Enum;
            retriesCount: number;
            videoTitle: string;
            videoDescription: string;
            videoPrivacyStatus: string;
            playlistId?: string | null;
            registrantGoogleAccount: {
                __typename?: "registrant_GoogleAccount";
                id: any;
                tokenData: any;
                googleAccountEmail: string;
            };
            element: {
                __typename?: "content_Element";
                data: any;
                id: any;
                item: { __typename?: "content_Item"; id: any; title: string };
            };
        }>;
    } | null;
};

export type UploadYouTubeVideoJobDataFragment = {
    __typename?: "job_queues_UploadYouTubeVideoJob";
    id: any;
    conferenceId: any;
    subconferenceId?: any | null;
    jobStatusName: Job_Queues_JobStatus_Enum;
    retriesCount: number;
    videoTitle: string;
    videoDescription: string;
    videoPrivacyStatus: string;
    playlistId?: string | null;
    registrantGoogleAccount: {
        __typename?: "registrant_GoogleAccount";
        id: any;
        tokenData: any;
        googleAccountEmail: string;
    };
    element: {
        __typename?: "content_Element";
        data: any;
        id: any;
        item: { __typename?: "content_Item"; id: any; title: string };
    };
};

export type UnmarkUploadYouTubeVideoJobsMutationVariables = Exact<{
    ids: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type UnmarkUploadYouTubeVideoJobsMutation = {
    __typename?: "mutation_root";
    update_job_queues_UploadYouTubeVideoJob?: {
        __typename?: "job_queues_UploadYouTubeVideoJob_mutation_response";
        affected_rows: number;
        returning: Array<{ __typename?: "job_queues_UploadYouTubeVideoJob"; id: any }>;
    } | null;
};

export type FailUploadYouTubeVideoJobMutationVariables = Exact<{
    id: Scalars["uuid"];
    message: Scalars["String"];
    result?: InputMaybe<Scalars["jsonb"]>;
}>;

export type FailUploadYouTubeVideoJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_UploadYouTubeVideoJob_by_pk?: { __typename?: "job_queues_UploadYouTubeVideoJob"; id: any } | null;
};

export type CompleteUploadYouTubeVideoJobMutationVariables = Exact<{
    id: Scalars["uuid"];
}>;

export type CompleteUploadYouTubeVideoJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_UploadYouTubeVideoJob_by_pk?: { __typename?: "job_queues_UploadYouTubeVideoJob"; id: any } | null;
};

export type InvitationPartsFragment = {
    __typename?: "registrant_Invitation";
    registrantId: any;
    confirmationCode?: any | null;
    id: any;
    inviteCode: any;
    invitedEmailAddress: string;
    linkToUserId?: string | null;
    updatedAt: any;
    createdAt: any;
    registrant?: {
        __typename?: "registrant_Registrant";
        displayName: string;
        userId?: string | null;
        conference: { __typename?: "conference_Conference"; name: string; slug: string };
    } | null;
    user?: { __typename?: "User"; email?: string | null } | null;
};

export type InvitedUserPartsFragment = { __typename?: "User"; id: string; email?: string | null };

export type SelectInvitationAndUserQueryVariables = Exact<{
    inviteCode: Scalars["uuid"];
    userId: Scalars["String"];
}>;

export type SelectInvitationAndUserQuery = {
    __typename?: "query_root";
    registrant_Invitation: Array<{
        __typename?: "registrant_Invitation";
        registrantId: any;
        confirmationCode?: any | null;
        id: any;
        inviteCode: any;
        invitedEmailAddress: string;
        linkToUserId?: string | null;
        updatedAt: any;
        createdAt: any;
        registrant?: {
            __typename?: "registrant_Registrant";
            displayName: string;
            userId?: string | null;
            conference: { __typename?: "conference_Conference"; name: string; slug: string };
        } | null;
        user?: { __typename?: "User"; email?: string | null } | null;
    }>;
    conference_Conference: Array<{
        __typename?: "conference_Conference";
        id: any;
        slug: string;
        registrants: Array<{ __typename?: "registrant_Registrant"; id: any }>;
    }>;
    User_by_pk?: { __typename?: "User"; id: string; email?: string | null } | null;
};

export type InsertRegistrantFromGlobalInviteMutationVariables = Exact<{
    registrant: Registrant_Registrant_Insert_Input;
}>;

export type InsertRegistrantFromGlobalInviteMutation = {
    __typename?: "mutation_root";
    insert_registrant_Registrant_one?: { __typename?: "registrant_Registrant"; id: any } | null;
};

export type UpdateInvitationMutationVariables = Exact<{
    confirmationCode: Scalars["uuid"];
    invitationId: Scalars["uuid"];
    userId: Scalars["String"];
    updatedAt: Scalars["timestamptz"];
}>;

export type UpdateInvitationMutation = {
    __typename?: "mutation_root";
    update_registrant_Invitation?: {
        __typename?: "registrant_Invitation_mutation_response";
        affected_rows: number;
    } | null;
};

export type SetRegistrantUserIdMutationVariables = Exact<{
    registrantId: Scalars["uuid"];
    userId: Scalars["String"];
}>;

export type SetRegistrantUserIdMutation = {
    __typename?: "mutation_root";
    update_registrant_Registrant?: {
        __typename?: "registrant_Registrant_mutation_response";
        affected_rows: number;
    } | null;
};

export type RegistrantWithInvitePartsFragment = {
    __typename?: "registrant_Registrant";
    id: any;
    displayName: string;
    userId?: string | null;
    conference: { __typename?: "conference_Conference"; id: any; name: string; shortName: string; slug: string };
    invitation?: {
        __typename?: "registrant_Invitation";
        id: any;
        inviteCode: any;
        invitedEmailAddress: string;
        emails: Array<{ __typename?: "Email"; reason: string }>;
    } | null;
};

export type SelectRegistrantsWithInvitationQueryVariables = Exact<{
    registrantIds: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type SelectRegistrantsWithInvitationQuery = {
    __typename?: "query_root";
    registrant_Registrant: Array<{
        __typename?: "registrant_Registrant";
        id: any;
        displayName: string;
        userId?: string | null;
        conference: { __typename?: "conference_Conference"; id: any; name: string; shortName: string; slug: string };
        invitation?: {
            __typename?: "registrant_Invitation";
            id: any;
            inviteCode: any;
            invitedEmailAddress: string;
            emails: Array<{ __typename?: "Email"; reason: string }>;
        } | null;
    }>;
};

export type SelectUnprocessedInvitationEmailJobsQueryVariables = Exact<{ [key: string]: never }>;

export type SelectUnprocessedInvitationEmailJobsQuery = {
    __typename?: "query_root";
    job_queues_InvitationEmailJob: Array<{
        __typename?: "job_queues_InvitationEmailJob";
        id: any;
        registrantIds: any;
        sendRepeat: boolean;
    }>;
};

export type CompleteInvitationEmailJobsMutationVariables = Exact<{
    ids: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type CompleteInvitationEmailJobsMutation = {
    __typename?: "mutation_root";
    update_job_queues_InvitationEmailJob?: {
        __typename?: "job_queues_InvitationEmailJob_mutation_response";
        affected_rows: number;
    } | null;
};

export type GetAutomaticInvitationsConfigurationQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
}>;

export type GetAutomaticInvitationsConfigurationQuery = {
    __typename?: "query_root";
    initialStart?: { __typename?: "conference_Configuration"; value: any } | null;
    initialEnd?: { __typename?: "conference_Configuration"; value: any } | null;
};

export type GetAutomaticInvitationsRepeatConfigurationsQueryVariables = Exact<{ [key: string]: never }>;

export type GetAutomaticInvitationsRepeatConfigurationsQuery = {
    __typename?: "query_root";
    conference_Conference: Array<{
        __typename?: "conference_Conference";
        id: any;
        initialStart: Array<{ __typename?: "conference_Configuration"; value: any }>;
        initialEnd: Array<{ __typename?: "conference_Configuration"; value: any }>;
        repeatStart: Array<{ __typename?: "conference_Configuration"; value: any }>;
        repeatEnd: Array<{ __typename?: "conference_Configuration"; value: any }>;
        repeatFrequency: Array<{ __typename?: "conference_Configuration"; value: any }>;
    }>;
};

export type InsertInvitationEmailJobMutationVariables = Exact<{
    registrantIds: Scalars["jsonb"];
    conferenceId: Scalars["uuid"];
    sendRepeat: Scalars["Boolean"];
}>;

export type InsertInvitationEmailJobMutation = {
    __typename?: "mutation_root";
    insert_job_queues_InvitationEmailJob_one?: { __typename?: "job_queues_InvitationEmailJob"; id: any } | null;
};

export type GetAutomaticInvitations_ToBeRepeatedQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
}>;

export type GetAutomaticInvitations_ToBeRepeatedQuery = {
    __typename?: "query_root";
    registrant_Registrant: Array<{ __typename?: "registrant_Registrant"; id: any; invitationStatus?: any | null }>;
};

export type OtherConferencePrepareJobsQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
    conferencePrepareJobId: Scalars["uuid"];
}>;

export type OtherConferencePrepareJobsQuery = {
    __typename?: "query_root";
    job_queues_PrepareJob: Array<{ __typename?: "job_queues_PrepareJob"; id: any; updatedAt: any }>;
};

export type GetVideoBroadcastElementsQueryVariables = Exact<{
    conferenceId?: InputMaybe<Scalars["uuid"]>;
}>;

export type GetVideoBroadcastElementsQuery = {
    __typename?: "query_root";
    content_Element: Array<{ __typename?: "content_Element"; id: any; data: any }>;
};

export type CreateVideoRenderJobMutationVariables = Exact<{
    conferenceId: Scalars["uuid"];
    conferencePrepareJobId: Scalars["uuid"];
    elementId: Scalars["uuid"];
    data: Scalars["jsonb"];
}>;

export type CreateVideoRenderJobMutation = {
    __typename?: "mutation_root";
    insert_video_VideoRenderJob_one?: { __typename?: "video_VideoRenderJob"; id: any } | null;
};

export type GetEventsWithoutVonageSessionQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
}>;

export type GetEventsWithoutVonageSessionQuery = {
    __typename?: "query_root";
    schedule_Event: Array<{ __typename?: "schedule_Event"; id: any; subconferenceId?: any | null }>;
};

export type Recording_GetEventQueryVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type Recording_GetEventQuery = {
    __typename?: "query_root";
    schedule_Event_by_pk?: {
        __typename?: "schedule_Event";
        id: any;
        scheduledStartTime?: any | null;
        scheduledEndTime?: any | null;
        room: {
            __typename?: "room_Room";
            id: any;
            channelStack?: { __typename?: "video_ChannelStack"; id: any; mediaPackageChannelId: string } | null;
        };
    } | null;
};

export type StartMediaPackageHarvestJobMutationVariables = Exact<{
    awsJobId: Scalars["String"];
    id: Scalars["uuid"];
}>;

export type StartMediaPackageHarvestJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_MediaPackageHarvestJob_by_pk?: {
        __typename?: "job_queues_MediaPackageHarvestJob";
        id: any;
    } | null;
};

export type CreateMediaPackageHarvestJobMutationVariables = Exact<{
    conferenceId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    eventId: Scalars["uuid"];
}>;

export type CreateMediaPackageHarvestJobMutation = {
    __typename?: "mutation_root";
    insert_job_queues_MediaPackageHarvestJob_one?: { __typename?: "job_queues_MediaPackageHarvestJob"; id: any } | null;
};

export type Recording_GetMediaPackageHarvestJobQueryVariables = Exact<{
    mediaPackageHarvestJobId: Scalars["String"];
}>;

export type Recording_GetMediaPackageHarvestJobQuery = {
    __typename?: "query_root";
    job_queues_MediaPackageHarvestJob: Array<{
        __typename?: "job_queues_MediaPackageHarvestJob";
        conferenceId: any;
        id: any;
        event: {
            __typename?: "schedule_Event";
            id: any;
            name: string;
            scheduledStartTime?: any | null;
            scheduledEndTime?: any | null;
            item?: { __typename?: "content_Item"; id: any; title: string; subconferenceId?: any | null } | null;
        };
    }>;
};

export type Recording_CompleteMediaPackageHarvestJobMutationVariables = Exact<{
    id: Scalars["uuid"];
    message: Scalars["String"];
    data: Scalars["jsonb"];
    source?: InputMaybe<Scalars["jsonb"]>;
    itemId: Scalars["uuid"];
    conferenceId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    name: Scalars["String"];
}>;

export type Recording_CompleteMediaPackageHarvestJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_MediaPackageHarvestJob_by_pk?: {
        __typename?: "job_queues_MediaPackageHarvestJob";
        id: any;
    } | null;
    insert_content_Element_one?: { __typename?: "content_Element"; id: any } | null;
};

export type Recording_IgnoreMediaPackageHarvestJobMutationVariables = Exact<{
    id: Scalars["uuid"];
    message: Scalars["String"];
}>;

export type Recording_IgnoreMediaPackageHarvestJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_MediaPackageHarvestJob_by_pk?: {
        __typename?: "job_queues_MediaPackageHarvestJob";
        id: any;
    } | null;
};

export type FailMediaPackageHarvestJobMutationVariables = Exact<{
    awsJobId: Scalars["String"];
    message: Scalars["String"];
}>;

export type FailMediaPackageHarvestJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_MediaPackageHarvestJob?: {
        __typename?: "job_queues_MediaPackageHarvestJob_mutation_response";
        affected_rows: number;
    } | null;
};

export type RegistrantGoogleAccount_GetRegistrantGoogleAccountQueryVariables = Exact<{
    id: Scalars["uuid"];
}>;

export type RegistrantGoogleAccount_GetRegistrantGoogleAccountQuery = {
    __typename?: "query_root";
    registrant_GoogleAccount_by_pk?: {
        __typename?: "registrant_GoogleAccount";
        registrantId: any;
        id: any;
        tokenData: any;
        youTubeData?: any | null;
    } | null;
};

export type RegistrantGoogleAccount_UpdateRegistrantGoogleAccountMutationVariables = Exact<{
    registrantGoogleAccountId: Scalars["uuid"];
    youTubeData: Scalars["jsonb"];
}>;

export type RegistrantGoogleAccount_UpdateRegistrantGoogleAccountMutation = {
    __typename?: "mutation_root";
    update_registrant_GoogleAccount_by_pk?: { __typename?: "registrant_GoogleAccount"; id: any } | null;
};

export type SetRoomVonageSessionIdMutationVariables = Exact<{
    roomId: Scalars["uuid"];
    sessionId: Scalars["String"];
}>;

export type SetRoomVonageSessionIdMutation = {
    __typename?: "mutation_root";
    update_room_Room_by_pk?: { __typename?: "room_Room"; id: any } | null;
};

export type GetRegistrantsForRoomAndUserQueryVariables = Exact<{
    roomId: Scalars["uuid"];
    userId: Scalars["String"];
}>;

export type GetRegistrantsForRoomAndUserQuery = {
    __typename?: "query_root";
    registrant_Registrant: Array<{ __typename?: "registrant_Registrant"; id: any }>;
};

export type AddRegistrantToRoomMembershipsMutationVariables = Exact<{
    registrantId: Scalars["uuid"];
    roomId: Scalars["uuid"];
    roomPersonRoleName: Room_PersonRole_Enum;
}>;

export type AddRegistrantToRoomMembershipsMutation = {
    __typename?: "mutation_root";
    insert_room_RoomMembership_one?: { __typename?: "room_RoomMembership"; id: any } | null;
};

export type CreateDmRoom_GetRegistrantsQueryVariables = Exact<{
    registrantIds?: InputMaybe<Array<Scalars["uuid"]> | Scalars["uuid"]>;
    conferenceId: Scalars["uuid"];
}>;

export type CreateDmRoom_GetRegistrantsQuery = {
    __typename?: "query_root";
    registrant_Registrant: Array<{ __typename?: "registrant_Registrant"; id: any; displayName: string }>;
};

export type CreateDmRoom_GetExistingRoomsQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
    registrantIds?: InputMaybe<Array<Scalars["uuid"]> | Scalars["uuid"]>;
}>;

export type CreateDmRoom_GetExistingRoomsQuery = {
    __typename?: "query_root";
    room_Room: Array<{
        __typename?: "room_Room";
        id: any;
        chatId?: any | null;
        roomMemberships: Array<{ __typename?: "room_RoomMembership"; registrantId: any; id: any }>;
    }>;
};

export type CreateDmRoomMutationVariables = Exact<{
    capacity: Scalars["Int"];
    conferenceId: Scalars["uuid"];
    name: Scalars["String"];
    data: Array<Room_RoomMembership_Insert_Input> | Room_RoomMembership_Insert_Input;
}>;

export type CreateDmRoomMutation = {
    __typename?: "mutation_root";
    insert_room_Room_one?: { __typename?: "room_Room"; id: any; chatId?: any | null } | null;
};

export type UnallocatedShuffleQueueEntryFragment = {
    __typename?: "room_ShuffleQueueEntry";
    registrantId: any;
    id: any;
    created_at: any;
};

export type ActiveShuffleRoomFragment = {
    __typename?: "room_ShuffleRoom";
    id: any;
    startedAt: any;
    durationMinutes: number;
    room: {
        __typename?: "room_Room";
        id: any;
        publicVonageSessionId?: string | null;
        people: Array<{ __typename?: "room_RoomMembership"; id: any; registrantId: any }>;
    };
};

export type ActiveShufflePeriodFragment = {
    __typename?: "room_ShufflePeriod";
    conferenceId: any;
    subconferenceId?: any | null;
    endAt: any;
    id: any;
    maxRegistrantsPerRoom: number;
    name: string;
    organiserId: any;
    roomDurationMinutes: number;
    startAt: any;
    targetRegistrantsPerRoom: number;
    waitRoomMaxDurationSeconds: number;
    algorithm: Room_ShuffleAlgorithm_Enum;
    unallocatedQueueEntries: Array<{
        __typename?: "room_ShuffleQueueEntry";
        registrantId: any;
        id: any;
        created_at: any;
    }>;
    activeRooms: Array<{
        __typename?: "room_ShuffleRoom";
        id: any;
        startedAt: any;
        durationMinutes: number;
        room: {
            __typename?: "room_Room";
            id: any;
            publicVonageSessionId?: string | null;
            people: Array<{ __typename?: "room_RoomMembership"; id: any; registrantId: any }>;
        };
    }>;
    events: Array<{ __typename?: "schedule_Event"; id: any; scheduledEndTime?: any | null }>;
};

export type SelectShufflePeriodQueryVariables = Exact<{
    id: Scalars["uuid"];
    now: Scalars["timestamptz"];
}>;

export type SelectShufflePeriodQuery = {
    __typename?: "query_root";
    room_ShufflePeriod_by_pk?: {
        __typename?: "room_ShufflePeriod";
        conferenceId: any;
        subconferenceId?: any | null;
        endAt: any;
        id: any;
        maxRegistrantsPerRoom: number;
        name: string;
        organiserId: any;
        roomDurationMinutes: number;
        startAt: any;
        targetRegistrantsPerRoom: number;
        waitRoomMaxDurationSeconds: number;
        algorithm: Room_ShuffleAlgorithm_Enum;
        unallocatedQueueEntries: Array<{
            __typename?: "room_ShuffleQueueEntry";
            registrantId: any;
            id: any;
            created_at: any;
        }>;
        activeRooms: Array<{
            __typename?: "room_ShuffleRoom";
            id: any;
            startedAt: any;
            durationMinutes: number;
            room: {
                __typename?: "room_Room";
                id: any;
                publicVonageSessionId?: string | null;
                people: Array<{ __typename?: "room_RoomMembership"; id: any; registrantId: any }>;
            };
        }>;
        events: Array<{ __typename?: "schedule_Event"; id: any; scheduledEndTime?: any | null }>;
    } | null;
};

export type SelectActiveShufflePeriodsQueryVariables = Exact<{
    from: Scalars["timestamptz"];
    until: Scalars["timestamptz"];
    now: Scalars["timestamptz"];
}>;

export type SelectActiveShufflePeriodsQuery = {
    __typename?: "query_root";
    room_ShufflePeriod: Array<{
        __typename?: "room_ShufflePeriod";
        conferenceId: any;
        subconferenceId?: any | null;
        endAt: any;
        id: any;
        maxRegistrantsPerRoom: number;
        name: string;
        organiserId: any;
        roomDurationMinutes: number;
        startAt: any;
        targetRegistrantsPerRoom: number;
        waitRoomMaxDurationSeconds: number;
        algorithm: Room_ShuffleAlgorithm_Enum;
        unallocatedQueueEntries: Array<{
            __typename?: "room_ShuffleQueueEntry";
            registrantId: any;
            id: any;
            created_at: any;
        }>;
        activeRooms: Array<{
            __typename?: "room_ShuffleRoom";
            id: any;
            startedAt: any;
            durationMinutes: number;
            room: {
                __typename?: "room_Room";
                id: any;
                publicVonageSessionId?: string | null;
                people: Array<{ __typename?: "room_RoomMembership"; id: any; registrantId: any }>;
            };
        }>;
        events: Array<{ __typename?: "schedule_Event"; id: any; scheduledEndTime?: any | null }>;
    }>;
};

export type AddPeopleToExistingShuffleRoomMutationVariables = Exact<{
    shuffleRoomId: Scalars["Int"];
    roomMemberships: Array<Room_RoomMembership_Insert_Input> | Room_RoomMembership_Insert_Input;
    queueEntryIds: Array<Scalars["bigint"]> | Scalars["bigint"];
}>;

export type AddPeopleToExistingShuffleRoomMutation = {
    __typename?: "mutation_root";
    insert_room_RoomMembership?: { __typename?: "room_RoomMembership_mutation_response"; affected_rows: number } | null;
    update_room_ShuffleQueueEntry?: {
        __typename?: "room_ShuffleQueueEntry_mutation_response";
        affected_rows: number;
        returning: Array<{ __typename?: "room_ShuffleQueueEntry"; id: any }>;
    } | null;
};

export type ExpireShuffleQueueEntriesMutationVariables = Exact<{
    queueEntryIds: Array<Scalars["bigint"]> | Scalars["bigint"];
}>;

export type ExpireShuffleQueueEntriesMutation = {
    __typename?: "mutation_root";
    update_room_ShuffleQueueEntry?: {
        __typename?: "room_ShuffleQueueEntry_mutation_response";
        affected_rows: number;
        returning: Array<{ __typename?: "room_ShuffleQueueEntry"; id: any }>;
    } | null;
};

export type InsertShuffleRoomMutationVariables = Exact<{
    durationMinutes: Scalars["Int"];
    reshuffleUponEnd: Scalars["Boolean"];
    roomId: Scalars["uuid"];
    shufflePeriodId: Scalars["uuid"];
    startedAt: Scalars["timestamptz"];
}>;

export type InsertShuffleRoomMutation = {
    __typename?: "mutation_root";
    insert_room_ShuffleRoom_one?: { __typename?: "room_ShuffleRoom"; id: any } | null;
};

export type InsertManagedRoomMutationVariables = Exact<{
    conferenceId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    capacity: Scalars["Int"];
    name: Scalars["String"];
}>;

export type InsertManagedRoomMutation = {
    __typename?: "mutation_root";
    insert_room_Room_one?: { __typename?: "room_Room"; id: any } | null;
};

export type SetAutoPinOnManagedRoomMutationVariables = Exact<{
    roomId: Scalars["uuid"];
}>;

export type SetAutoPinOnManagedRoomMutation = {
    __typename?: "mutation_root";
    update_chat_Chat?: { __typename?: "chat_Chat_mutation_response"; affected_rows: number } | null;
};

export type SetShuffleRoomsEndedMutationVariables = Exact<{
    ids: Array<Scalars["bigint"]> | Scalars["bigint"];
}>;

export type SetShuffleRoomsEndedMutation = {
    __typename?: "mutation_root";
    update_room_ShuffleRoom?: {
        __typename?: "room_ShuffleRoom_mutation_response";
        affected_rows: number;
        returning: Array<{ __typename?: "room_ShuffleRoom"; id: any }>;
    } | null;
};

export type SuperUserStateQueryVariables = Exact<{ [key: string]: never }>;

export type SuperUserStateQuery = {
    __typename?: "query_root";
    system_SuperUserState: Array<{
        __typename?: "system_SuperUserState";
        isInitialised?: boolean | null;
        canBeDirectlyInitialised?: boolean | null;
    }>;
    User: Array<{ __typename?: "User"; id: string }>;
};

export type InitialiseSuperUserStateMutationVariables = Exact<{
    userId: Scalars["String"];
}>;

export type InitialiseSuperUserStateMutation = {
    __typename?: "mutation_root";
    insert_system_SuperUserPermissionGrant?: {
        __typename?: "system_SuperUserPermissionGrant_mutation_response";
        affected_rows: number;
    } | null;
};

export type UploadableElementQueryVariables = Exact<{
    accessToken: Scalars["String"];
}>;

export type UploadableElementQuery = {
    __typename?: "query_root";
    content_Element: Array<{
        __typename?: "content_Element";
        id: any;
        typeName: Content_ElementType_Enum;
        name: string;
        uploadsRemaining?: number | null;
        isHidden: boolean;
        data: any;
        item: { __typename?: "content_Item"; id: any; title: string };
    }>;
    conference_Conference: Array<{
        __typename?: "conference_Conference";
        id: any;
        name: string;
        configurations: Array<{
            __typename?: "conference_Configuration";
            conferenceId: any;
            key: Conference_ConfigurationKey_Enum;
            value: any;
        }>;
    }>;
};

export type UploadableElementFieldsFragment = {
    __typename?: "content_Element";
    id: any;
    typeName: Content_ElementType_Enum;
    name: string;
    uploadsRemaining?: number | null;
    isHidden: boolean;
    data: any;
    item: { __typename?: "content_Item"; id: any; title: string };
};

export type GetUploadersQueryVariables = Exact<{
    elementId: Scalars["uuid"];
}>;

export type GetUploadersQuery = {
    __typename?: "query_root";
    content_Element_by_pk?: {
        __typename?: "content_Element";
        id: any;
        conferenceId: any;
        subconferenceId?: any | null;
        typeName: Content_ElementType_Enum;
        conference: {
            __typename?: "conference_Conference";
            submissionNotificationRoles: Array<{ __typename?: "conference_Configuration"; value: any }>;
        };
        item: {
            __typename?: "content_Item";
            id: any;
            itemPeople: Array<{
                __typename?: "content_ItemProgramPerson";
                id: any;
                roleName: string;
                person: { __typename?: "collection_ProgramPerson"; id: any; name: string; email?: string | null };
            }>;
        };
    } | null;
};

export type SetUploadableElementUploadsRemainingMutationVariables = Exact<{
    id: Scalars["uuid"];
    uploadsRemaining: Scalars["Int"];
}>;

export type SetUploadableElementUploadsRemainingMutation = {
    __typename?: "mutation_root";
    update_content_Element_by_pk?: { __typename?: "content_Element"; id: any } | null;
};

export type InsertSubmissionRequestEmailsMutationVariables = Exact<{
    personIds: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type InsertSubmissionRequestEmailsMutation = {
    __typename?: "mutation_root";
    update_collection_ProgramPerson?: {
        __typename?: "collection_ProgramPerson_mutation_response";
        affected_rows: number;
    } | null;
};

export type SelectUnprocessedSubmissionRequestEmailJobsQueryVariables = Exact<{ [key: string]: never }>;

export type SelectUnprocessedSubmissionRequestEmailJobsQuery = {
    __typename?: "query_root";
    job_queues_SubmissionRequestEmailJob: Array<{
        __typename?: "job_queues_SubmissionRequestEmailJob";
        id: any;
        emailTemplate?: any | null;
        person: {
            __typename?: "collection_ProgramPerson";
            id: any;
            name: string;
            email?: string | null;
            accessToken: string;
            subconference?: {
                __typename?: "conference_Subconference";
                id: any;
                name: string;
                shortName: string;
            } | null;
            conference: { __typename?: "conference_Conference"; id: any; name: string; shortName: string };
        };
    }>;
};

export type CompleteSubmissionRequestEmailJobsMutationVariables = Exact<{
    ids: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type CompleteSubmissionRequestEmailJobsMutation = {
    __typename?: "mutation_root";
    update_job_queues_SubmissionRequestEmailJob?: {
        __typename?: "job_queues_SubmissionRequestEmailJob_mutation_response";
        affected_rows: number;
    } | null;
};

export type UpdateEventUsageMutationVariables = Exact<{ [key: string]: never }>;

export type UpdateEventUsageMutation = {
    __typename?: "mutation_root";
    conference_updateEventUsage: Array<{ __typename?: "conference_Usage"; id: any }>;
};

export type GetConferenceVideoChatNonEventRemainingQuotaQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
}>;

export type GetConferenceVideoChatNonEventRemainingQuotaQuery = {
    __typename?: "query_root";
    conference_RemainingQuota: Array<{
        __typename?: "conference_RemainingQuota";
        remainingVideoChatNonEventTotalMinutes?: number | null;
    }>;
};

export type IncreaseConferenceVideoChatNonEventUsageMutationVariables = Exact<{
    conferenceId: Scalars["uuid"];
    increase: Scalars["Int"];
    now: Scalars["timestamptz"];
}>;

export type IncreaseConferenceVideoChatNonEventUsageMutation = {
    __typename?: "mutation_root";
    update_conference_Usage?: { __typename?: "conference_Usage_mutation_response"; affected_rows: number } | null;
};

export type GetRoomForUsageCalculationQueryVariables = Exact<{
    id: Scalars["uuid"];
    now: Scalars["timestamptz"];
}>;

export type GetRoomForUsageCalculationQuery = {
    __typename?: "query_root";
    room_Room_by_pk?: {
        __typename?: "room_Room";
        id: any;
        conferenceId: any;
        events: Array<{ __typename?: "schedule_Event"; id: any }>;
    } | null;
};

export type GetElementIdForVideoRenderJobQueryVariables = Exact<{
    videoRenderJobId: Scalars["uuid"];
}>;

export type GetElementIdForVideoRenderJobQuery = {
    __typename?: "query_root";
    video_VideoRenderJob_by_pk?: { __typename?: "video_VideoRenderJob"; elementId: any; id: any } | null;
};

export type SelectNewVideoRenderJobsQueryVariables = Exact<{ [key: string]: never }>;

export type SelectNewVideoRenderJobsQuery = {
    __typename?: "query_root";
    video_VideoRenderJob: Array<{ __typename?: "video_VideoRenderJob"; id: any }>;
};

export type MarkAndSelectNewVideoRenderJobsMutationVariables = Exact<{
    ids: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type MarkAndSelectNewVideoRenderJobsMutation = {
    __typename?: "mutation_root";
    update_video_VideoRenderJob?: {
        __typename?: "video_VideoRenderJob_mutation_response";
        returning: Array<{
            __typename?: "video_VideoRenderJob";
            id: any;
            jobStatusName: Job_Queues_JobStatus_Enum;
            data: any;
            retriesCount: number;
        }>;
    } | null;
};

export type VideoRenderJobDataFragment = {
    __typename?: "video_VideoRenderJob";
    id: any;
    jobStatusName: Job_Queues_JobStatus_Enum;
    data: any;
    retriesCount: number;
};

export type UnmarkVideoRenderJobsMutationVariables = Exact<{
    ids: Array<Scalars["uuid"]> | Scalars["uuid"];
}>;

export type UnmarkVideoRenderJobsMutation = {
    __typename?: "mutation_root";
    update_video_VideoRenderJob?: {
        __typename?: "video_VideoRenderJob_mutation_response";
        affected_rows: number;
        returning: Array<{ __typename?: "video_VideoRenderJob"; id: any }>;
    } | null;
};

export type OngoingBroadcastableVideoRoomEventsQueryVariables = Exact<{
    time: Scalars["timestamptz"];
    sessionId: Scalars["String"];
}>;

export type OngoingBroadcastableVideoRoomEventsQuery = {
    __typename?: "query_root";
    schedule_Event: Array<{ __typename?: "schedule_Event"; id: any }>;
};

export type OngoingArchivableVideoRoomEventsQueryVariables = Exact<{
    time: Scalars["timestamptz"];
    sessionId: Scalars["String"];
}>;

export type OngoingArchivableVideoRoomEventsQuery = {
    __typename?: "query_root";
    schedule_Event: Array<{ __typename?: "schedule_Event"; id: any; roomId: any; enableRecording: boolean }>;
};

export type GetEventForArchiveQueryVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type GetEventForArchiveQuery = {
    __typename?: "query_root";
    schedule_Event_by_pk?: {
        __typename?: "schedule_Event";
        id: any;
        name: string;
        scheduledStartTime?: any | null;
        scheduledEndTime?: any | null;
        conferenceId: any;
        subconferenceId?: any | null;
        item?: {
            __typename?: "content_Item";
            id: any;
            elements_aggregate: {
                __typename?: "content_Element_aggregate";
                aggregate?: { __typename?: "content_Element_aggregate_fields"; count: number } | null;
            };
        } | null;
    } | null;
};

export type InsertVonageArchiveElementMutationVariables = Exact<{
    object: Content_Element_Insert_Input;
}>;

export type InsertVonageArchiveElementMutation = {
    __typename?: "mutation_root";
    insert_content_Element_one?: { __typename?: "content_Element"; id: any } | null;
};

export type CheckForVonageRoomRecordingQueryVariables = Exact<{
    roomId: Scalars["uuid"];
    vonageSessionId: Scalars["String"];
}>;

export type CheckForVonageRoomRecordingQuery = {
    __typename?: "query_root";
    video_VonageRoomRecording: Array<{ __typename?: "video_VonageRoomRecording"; id: any }>;
};

export type CheckForVonageRoomRecordingNotUploadedQueryVariables = Exact<{
    roomId: Scalars["uuid"];
    vonageSessionId: Scalars["String"];
}>;

export type CheckForVonageRoomRecordingNotUploadedQuery = {
    __typename?: "query_root";
    video_VonageRoomRecording: Array<{ __typename?: "video_VonageRoomRecording"; id: any }>;
};

export type SaveVonageRoomRecordingMutationVariables = Exact<{
    id: Scalars["uuid"];
    endedAt: Scalars["timestamptz"];
    uploadedAt?: InputMaybe<Scalars["timestamptz"]>;
    s3Url?: InputMaybe<Scalars["String"]>;
}>;

export type SaveVonageRoomRecordingMutation = {
    __typename?: "mutation_root";
    update_video_VonageRoomRecording_by_pk?: { __typename?: "video_VonageRoomRecording"; id: any } | null;
};

export type Vonage_GetEventDetailsQueryVariables = Exact<{
    eventId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
}>;

export type Vonage_GetEventDetailsQuery = {
    __typename?: "query_root";
    schedule_Event_by_pk?: {
        __typename?: "schedule_Event";
        conferenceId: any;
        subconferenceId?: any | null;
        id: any;
        modeName?: Schedule_Mode_Enum | null;
        enableRecording: boolean;
        scheduledStartTime?: any | null;
        scheduledEndTime?: any | null;
        eventVonageSession?: { __typename?: "video_EventVonageSession"; id: any; sessionId: string } | null;
        room: { __typename?: "room_Room"; id: any; capacity?: number | null; publicVonageSessionId?: string | null };
        eventPeople: Array<{
            __typename?: "schedule_EventProgramPerson";
            id: any;
            roleName: Schedule_EventProgramPersonRole_Enum;
        }>;
    } | null;
    registrant_Registrant_by_pk?: {
        __typename?: "registrant_Registrant";
        id: any;
        displayName: string;
        conferenceId: any;
        conferenceRole: Registrant_RegistrantRole_Enum;
        subconferenceMemberships: Array<{
            __typename?: "registrant_SubconferenceMembership";
            id: any;
            subconferenceId: any;
            role: Registrant_RegistrantRole_Enum;
        }>;
    } | null;
};

export type VonageJoinRoom_GetInfoQueryVariables = Exact<{
    roomId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
}>;

export type VonageJoinRoom_GetInfoQuery = {
    __typename?: "query_root";
    room_Room_by_pk?: {
        __typename?: "room_Room";
        id: any;
        capacity?: number | null;
        subconferenceId?: any | null;
        item?: {
            __typename?: "content_Item";
            id: any;
            itemPeople: Array<{ __typename?: "content_ItemProgramPerson"; id: any; roleName: string; personId: any }>;
        } | null;
    } | null;
};

export type AddVonageRoomRecordingToUserListMutationVariables = Exact<{
    recordingId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
}>;

export type AddVonageRoomRecordingToUserListMutation = {
    __typename?: "mutation_root";
    insert_registrant_SavedVonageRoomRecording_one?: {
        __typename?: "registrant_SavedVonageRoomRecording";
        id: any;
    } | null;
};

export type FindRoomByVonageSessionIdQueryVariables = Exact<{
    vonageSessionId: Scalars["String"];
    now: Scalars["timestamptz"];
    userId: Scalars["String"];
}>;

export type FindRoomByVonageSessionIdQuery = {
    __typename?: "query_root";
    room_Room: Array<{
        __typename?: "room_Room";
        id: any;
        subconferenceId?: any | null;
        events: Array<{
            __typename?: "schedule_Event";
            id: any;
            eventPeople: Array<{ __typename?: "schedule_EventProgramPerson"; id: any }>;
        }>;
        conference: {
            __typename?: "conference_Conference";
            registrants: Array<{
                __typename?: "registrant_Registrant";
                id: any;
                conferenceRole: Registrant_RegistrantRole_Enum;
                subconferenceMemberships: Array<{
                    __typename?: "registrant_SubconferenceMembership";
                    id: any;
                    subconferenceId: any;
                    role: Registrant_RegistrantRole_Enum;
                }>;
            }>;
        };
    }>;
};

export type VonageSession_RemoveInvalidStreamsMutationVariables = Exact<{
    validStreamIds: Array<Scalars["String"]> | Scalars["String"];
    vonageSessionId: Scalars["String"];
    now: Scalars["timestamptz"];
}>;

export type VonageSession_RemoveInvalidStreamsMutation = {
    __typename?: "mutation_root";
    update_video_VonageParticipantStream?: {
        __typename?: "video_VonageParticipantStream_mutation_response";
        affected_rows: number;
    } | null;
};

export type FetchPresenceSummaryQueryVariables = Exact<{ [key: string]: never }>;

export type FetchPresenceSummaryQuery = {
    __typename?: "query_root";
    presence_Summary?: {
        __typename?: "PresenceSummaryOutput";
        total_unique_tabs: number;
        total_unique_user_ids: number;
        pages?: any | null;
    } | null;
};

export type InsertAppStatsMutationVariables = Exact<{
    object: Analytics_AppStats_Insert_Input;
}>;

export type InsertAppStatsMutation = {
    __typename?: "mutation_root";
    insert_analytics_AppStats_one?: { __typename?: "analytics_AppStats"; id: number } | null;
};

export type GetRegistrantQueryVariables = Exact<{
    userId: Scalars["String"];
    conferenceId: Scalars["uuid"];
}>;

export type GetRegistrantQuery = {
    __typename?: "query_root";
    registrant_Registrant: Array<{
        __typename?: "registrant_Registrant";
        id: any;
        displayName: string;
        conferenceId: any;
        conferenceRole: Registrant_RegistrantRole_Enum;
        subconferenceMemberships: Array<{
            __typename?: "registrant_SubconferenceMembership";
            id: any;
            subconferenceId: any;
            role: Registrant_RegistrantRole_Enum;
        }>;
    }>;
};

export type GetRegistrant_RegistrantFragment = {
    __typename?: "registrant_Registrant";
    id: any;
    displayName: string;
    conferenceId: any;
    conferenceRole: Registrant_RegistrantRole_Enum;
    subconferenceMemberships: Array<{
        __typename?: "registrant_SubconferenceMembership";
        id: any;
        subconferenceId: any;
        role: Registrant_RegistrantRole_Enum;
    }>;
};

export type GetRegistrantByConferenceSlugQueryVariables = Exact<{
    userId: Scalars["String"];
    conferenceSlug: Scalars["String"];
}>;

export type GetRegistrantByConferenceSlugQuery = {
    __typename?: "query_root";
    registrant_Registrant: Array<{
        __typename?: "registrant_Registrant";
        id: any;
        displayName: string;
        conferenceId: any;
        conferenceRole: Registrant_RegistrantRole_Enum;
        subconferenceMemberships: Array<{
            __typename?: "registrant_SubconferenceMembership";
            id: any;
            subconferenceId: any;
            role: Registrant_RegistrantRole_Enum;
        }>;
    }>;
};

export type Authorisation_FindRegistrantQueryVariables = Exact<{
    registrantId: Scalars["uuid"];
    userId: Scalars["String"];
}>;

export type Authorisation_FindRegistrantQuery = {
    __typename?: "query_root";
    registrant_Registrant: Array<{
        __typename?: "registrant_Registrant";
        id: any;
        displayName: string;
        conferenceId: any;
        conferenceRole: Registrant_RegistrantRole_Enum;
        subconferenceMemberships: Array<{
            __typename?: "registrant_SubconferenceMembership";
            id: any;
            subconferenceId: any;
            role: Registrant_RegistrantRole_Enum;
        }>;
    }>;
};

export type Authorisation_GetRegistrantQueryVariables = Exact<{
    registrantId: Scalars["uuid"];
}>;

export type Authorisation_GetRegistrantQuery = {
    __typename?: "query_root";
    registrant_Registrant_by_pk?: {
        __typename?: "registrant_Registrant";
        id: any;
        displayName: string;
        conferenceId: any;
        conferenceRole: Registrant_RegistrantRole_Enum;
        subconferenceMemberships: Array<{
            __typename?: "registrant_SubconferenceMembership";
            id: any;
            subconferenceId: any;
            role: Registrant_RegistrantRole_Enum;
        }>;
    } | null;
};

export type GetConfigurationValueQueryVariables = Exact<{
    key: Conference_ConfigurationKey_Enum;
    conferenceId: Scalars["uuid"];
}>;

export type GetConfigurationValueQuery = {
    __typename?: "query_root";
    conference_Configuration_by_pk?: {
        __typename?: "conference_Configuration";
        key: Conference_ConfigurationKey_Enum;
        value: any;
    } | null;
};

export type Configuration_RecordingEmailNotificationsEnabledFragment = {
    __typename?: "conference_Conference";
    recordingNotificationsEnabled: Array<{ __typename?: "conference_Configuration"; value: any }>;
};

export type Configuration_SubmissionNotificationRolesFragment = {
    __typename?: "conference_Conference";
    submissionNotificationRoles: Array<{ __typename?: "conference_Configuration"; value: any }>;
};

export type Configuration_EmailTemplateSubtitlesGeneratedFragment = {
    __typename?: "conference_Conference";
    emailTemplateSubtitlesGenerated: Array<{ __typename?: "conference_Configuration"; value: any }>;
};

export type FailConferencePrepareJobMutationVariables = Exact<{
    id: Scalars["uuid"];
    message: Scalars["String"];
}>;

export type FailConferencePrepareJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_PrepareJob_by_pk?: { __typename?: "job_queues_PrepareJob"; id: any } | null;
};

export type CompleteConferencePrepareJobMutationVariables = Exact<{
    id: Scalars["uuid"];
}>;

export type CompleteConferencePrepareJobMutation = {
    __typename?: "mutation_root";
    update_job_queues_PrepareJob_by_pk?: { __typename?: "job_queues_PrepareJob"; id: any } | null;
};

export type GetElementByIdQueryVariables = Exact<{
    elementId: Scalars["uuid"];
}>;

export type GetElementByIdQuery = {
    __typename?: "query_root";
    content_Element_by_pk?: {
        __typename?: "content_Element";
        id: any;
        data: any;
        typeName: Content_ElementType_Enum;
    } | null;
};

export type GetEmailTemplatesQueryVariables = Exact<{ [key: string]: never }>;

export type GetEmailTemplatesQuery = {
    __typename?: "query_root";
    emailTemplates?: { __typename?: "system_Configuration"; key: System_ConfigurationKey_Enum; value: any } | null;
};

export type GetEventVonageSessionQueryVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type GetEventVonageSessionQuery = {
    __typename?: "query_root";
    video_EventVonageSession: Array<{ __typename?: "video_EventVonageSession"; id: any }>;
};

export type SetEventVonageSessionIdMutationVariables = Exact<{
    eventId: Scalars["uuid"];
    conferenceId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    sessionId: Scalars["String"];
}>;

export type SetEventVonageSessionIdMutation = {
    __typename?: "mutation_root";
    insert_video_EventVonageSession_one?: { __typename?: "video_EventVonageSession"; id: any } | null;
};

export type CreateItemRoom_GetItemQueryVariables = Exact<{
    id: Scalars["uuid"];
}>;

export type CreateItemRoom_GetItemQuery = {
    __typename?: "query_root";
    content_Item_by_pk?: {
        __typename?: "content_Item";
        id: any;
        chatId?: any | null;
        conferenceId: any;
        subconferenceId?: any | null;
        title: string;
        room?: { __typename?: "room_Room"; id: any } | null;
    } | null;
};

export type Item_CreateRoomMutationVariables = Exact<{
    chatId?: InputMaybe<Scalars["uuid"]>;
    conferenceId: Scalars["uuid"];
    name: Scalars["String"];
    itemId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
}>;

export type Item_CreateRoomMutation = {
    __typename?: "mutation_root";
    insert_room_Room_one?: { __typename?: "room_Room"; id: any } | null;
};

export type GetRoomConferenceIdQueryVariables = Exact<{
    roomId: Scalars["uuid"];
}>;

export type GetRoomConferenceIdQuery = {
    __typename?: "query_root";
    room_Room_by_pk?: { __typename?: "room_Room"; id: any; conferenceId: any; subconferenceId?: any | null } | null;
};

export type GetRoomThatRegistrantCanJoinQueryVariables = Exact<{
    roomId?: InputMaybe<Scalars["uuid"]>;
    registrantId?: InputMaybe<Scalars["uuid"]>;
    conferenceId?: InputMaybe<Scalars["uuid"]>;
    subconferenceCond: Uuid_Comparison_Exp;
    registrantCond: Registrant_Registrant_Bool_Exp;
}>;

export type GetRoomThatRegistrantCanJoinQuery = {
    __typename?: "query_root";
    room_Room: Array<{
        __typename?: "room_Room";
        id: any;
        publicVonageSessionId?: string | null;
        conference: {
            __typename?: "conference_Conference";
            registrants: Array<{ __typename?: "registrant_Registrant"; id: any }>;
        };
    }>;
};

export type CreateRoomChimeMeetingMutationVariables = Exact<{
    conferenceId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
    chimeMeetingData: Scalars["jsonb"];
    chimeMeetingId: Scalars["String"];
    roomId: Scalars["uuid"];
}>;

export type CreateRoomChimeMeetingMutation = {
    __typename?: "mutation_root";
    insert_room_ChimeMeeting_one?: { __typename?: "room_ChimeMeeting"; id: any } | null;
};

export type GetRoomChimeMeetingQueryVariables = Exact<{
    roomId: Scalars["uuid"];
}>;

export type GetRoomChimeMeetingQuery = {
    __typename?: "query_root";
    room_ChimeMeeting: Array<{ __typename?: "room_ChimeMeeting"; id: any; chimeMeetingData: any; conferenceId: any }>;
};

export type GetRoomVonageMeetingQueryVariables = Exact<{
    roomId: Scalars["uuid"];
}>;

export type GetRoomVonageMeetingQuery = {
    __typename?: "query_root";
    room_Room_by_pk?: { __typename?: "room_Room"; id: any; publicVonageSessionId?: string | null } | null;
};

export type GetRoomBySessionIdQueryVariables = Exact<{
    sessionId: Scalars["String"];
}>;

export type GetRoomBySessionIdQuery = {
    __typename?: "query_root";
    room_Room: Array<{ __typename?: "room_Room"; id: any; conferenceId: any; subconferenceId?: any | null }>;
};

export type GetRoomByChimeMeetingIdQueryVariables = Exact<{
    meetingId: Scalars["String"];
}>;

export type GetRoomByChimeMeetingIdQuery = {
    __typename?: "query_root";
    room_Room: Array<{ __typename?: "room_Room"; id: any; conferenceId: any; subconferenceId?: any | null }>;
};

export type DeleteRoomChimeMeetingMutationVariables = Exact<{
    chimeMeetingId: Scalars["uuid"];
}>;

export type DeleteRoomChimeMeetingMutation = {
    __typename?: "mutation_root";
    delete_room_ChimeMeeting_by_pk?: { __typename?: "room_ChimeMeeting"; id: any } | null;
};

export type DeleteRoomChimeMeetingForRoomMutationVariables = Exact<{
    roomId: Scalars["uuid"];
    chimeMeetingId: Scalars["String"];
}>;

export type DeleteRoomChimeMeetingForRoomMutation = {
    __typename?: "mutation_root";
    delete_room_ChimeMeeting?: { __typename?: "room_ChimeMeeting_mutation_response"; affected_rows: number } | null;
};

export type InsertVonageSessionLayoutMutationVariables = Exact<{
    object: Video_VonageSessionLayout_Insert_Input;
}>;

export type InsertVonageSessionLayoutMutation = {
    __typename?: "mutation_root";
    insert_video_VonageSessionLayout_one?: { __typename?: "video_VonageSessionLayout"; id: any } | null;
};

export type CreateTranscriptionJobMutationVariables = Exact<{
    awsTranscribeJobName: Scalars["String"];
    elementId: Scalars["uuid"];
    videoS3Url: Scalars["String"];
    transcriptionS3Url: Scalars["String"];
    languageCode: Scalars["String"];
}>;

export type CreateTranscriptionJobMutation = {
    __typename?: "mutation_root";
    insert_video_TranscriptionJob_one?: { __typename?: "video_TranscriptionJob"; id: any } | null;
};

export type GetTranscriptionJobQueryVariables = Exact<{
    awsTranscribeJobName: Scalars["String"];
}>;

export type GetTranscriptionJobQuery = {
    __typename?: "query_root";
    video_TranscriptionJob: Array<{
        __typename?: "video_TranscriptionJob";
        videoS3Url: string;
        elementId: any;
        transcriptionS3Url: string;
        languageCode: string;
        id: any;
    }>;
};

export type CompleteVideoRenderJobMutationVariables = Exact<{
    videoRenderJobId: Scalars["uuid"];
    data: Scalars["jsonb"];
}>;

export type CompleteVideoRenderJobMutation = {
    __typename?: "mutation_root";
    update_video_VideoRenderJob_by_pk?: { __typename?: "video_VideoRenderJob"; id: any; elementId: any } | null;
};

export type FailVideoRenderJobMutationVariables = Exact<{
    videoRenderJobId: Scalars["uuid"];
    message: Scalars["String"];
}>;

export type FailVideoRenderJobMutation = {
    __typename?: "mutation_root";
    update_video_VideoRenderJob_by_pk?: {
        __typename?: "video_VideoRenderJob";
        id: any;
        conferencePrepareJobId: any;
    } | null;
};

export type ExpireVideoRenderJobMutationVariables = Exact<{
    videoRenderJobId: Scalars["uuid"];
    message: Scalars["String"];
}>;

export type ExpireVideoRenderJobMutation = {
    __typename?: "mutation_root";
    update_video_VideoRenderJob_by_pk?: { __typename?: "video_VideoRenderJob"; id: any } | null;
};

export type UpdateVideoRenderJobMutationVariables = Exact<{
    videoRenderJobId: Scalars["uuid"];
    data: Scalars["jsonb"];
}>;

export type UpdateVideoRenderJobMutation = {
    __typename?: "mutation_root";
    update_video_VideoRenderJob_by_pk?: { __typename?: "video_VideoRenderJob"; id: any } | null;
};

export type CountUnfinishedVideoRenderJobsQueryVariables = Exact<{
    conferencePrepareJobId: Scalars["uuid"];
}>;

export type CountUnfinishedVideoRenderJobsQuery = {
    __typename?: "query_root";
    video_VideoRenderJob_aggregate: {
        __typename?: "video_VideoRenderJob_aggregate";
        aggregate?: { __typename?: "video_VideoRenderJob_aggregate_fields"; count: number } | null;
    };
};

export type GetBroadcastVideoRenderJobDetailsQueryVariables = Exact<{
    videoRenderJobId: Scalars["uuid"];
}>;

export type GetBroadcastVideoRenderJobDetailsQuery = {
    __typename?: "query_root";
    video_VideoRenderJob_by_pk?: {
        __typename?: "video_VideoRenderJob";
        id: any;
        elementId: any;
        jobStatusName: Job_Queues_JobStatus_Enum;
        conferencePrepareJob: {
            __typename?: "job_queues_PrepareJob";
            id: any;
            jobStatusName: Job_Queues_JobStatus_Enum;
        };
    } | null;
};

export type OngoingArchivableVideoRoomEventsWithRoomInfoQueryVariables = Exact<{
    time: Scalars["timestamptz"];
    sessionId: Scalars["String"];
}>;

export type OngoingArchivableVideoRoomEventsWithRoomInfoQuery = {
    __typename?: "query_root";
    schedule_Event: Array<{ __typename?: "schedule_Event"; id: any; roomId: any }>;
    room_Room: Array<{ __typename?: "room_Room"; id: any }>;
};

export type GetEventBroadcastDetailsQueryVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type GetEventBroadcastDetailsQuery = {
    __typename?: "query_root";
    schedule_Event_by_pk?: {
        __typename?: "schedule_Event";
        id: any;
        room: {
            __typename?: "room_Room";
            id: any;
            channelStack?: {
                __typename?: "video_ChannelStack";
                rtmpAInputUri: string;
                rtmpBInputUri?: string | null;
                id: any;
            } | null;
        };
        eventVonageSession?: {
            __typename?: "video_EventVonageSession";
            sessionId: string;
            id: any;
            rtmpInputName: Video_RtmpInput_Enum;
        } | null;
    } | null;
};

export type GetRoomArchiveDetailsQueryVariables = Exact<{
    roomId: Scalars["uuid"];
}>;

export type GetRoomArchiveDetailsQuery = {
    __typename?: "query_root";
    room_Room_by_pk?: { __typename?: "room_Room"; publicVonageSessionId?: string | null; id: any } | null;
};

export type CreateVonageRoomRecordingMutationVariables = Exact<{
    object: Video_VonageRoomRecording_Insert_Input;
}>;

export type CreateVonageRoomRecordingMutation = {
    __typename?: "mutation_root";
    insert_video_VonageRoomRecording_one?: { __typename?: "video_VonageRoomRecording"; id: any } | null;
};

export type DisableEventRecordingFlagMutationVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type DisableEventRecordingFlagMutation = {
    __typename?: "mutation_root";
    update_schedule_Event_by_pk?: { __typename?: "schedule_Event"; id: any } | null;
};

export type CreateVonageParticipantStreamMutationVariables = Exact<{
    registrantId: Scalars["uuid"];
    conferenceId: Scalars["uuid"];
    vonageSessionId: Scalars["String"];
    vonageConnectionId: Scalars["String"];
    vonageStreamId: Scalars["String"];
    vonageStreamType: Scalars["String"];
}>;

export type CreateVonageParticipantStreamMutation = {
    __typename?: "mutation_root";
    insert_video_VonageParticipantStream_one?: { __typename?: "video_VonageParticipantStream"; id: any } | null;
};

export type RemoveVonageParticipantStreamMutationVariables = Exact<{
    registrantId: Scalars["uuid"];
    conferenceId: Scalars["uuid"];
    vonageSessionId: Scalars["String"];
    vonageConnectionId: Scalars["String"];
    vonageStreamId: Scalars["String"];
    now: Scalars["timestamptz"];
}>;

export type RemoveVonageParticipantStreamMutation = {
    __typename?: "mutation_root";
    update_video_VonageParticipantStream?: {
        __typename?: "video_VonageParticipantStream_mutation_response";
        affected_rows: number;
    } | null;
};

export type GetVonageSessionLayoutQueryVariables = Exact<{
    vonageSessionId: Scalars["String"];
}>;

export type GetVonageSessionLayoutQuery = {
    __typename?: "query_root";
    video_VonageSessionLayout: Array<{ __typename?: "video_VonageSessionLayout"; id: any; layoutData?: any | null }>;
};

export type UpdateProfilePhotoMutationVariables = Exact<{
    registrantId: Scalars["uuid"];
    userId: Scalars["String"];
    objectName?: InputMaybe<Scalars["String"]>;
    bucket?: InputMaybe<Scalars["String"]>;
    region?: InputMaybe<Scalars["String"]>;
    photoURL_50x50?: InputMaybe<Scalars["String"]>;
    photoURL_350x350?: InputMaybe<Scalars["String"]>;
}>;

export type UpdateProfilePhotoMutation = {
    __typename?: "mutation_root";
    update_registrant_Profile?: { __typename?: "registrant_Profile_mutation_response"; affected_rows: number } | null;
};

export type MigrateProfilePhoto_GetRegistrantQueryVariables = Exact<{
    registrantId: Scalars["uuid"];
}>;

export type MigrateProfilePhoto_GetRegistrantQuery = {
    __typename?: "query_root";
    registrant_Profile_by_pk?: {
        __typename?: "registrant_Profile";
        photoS3BucketName?: string | null;
        photoS3BucketRegion?: string | null;
        photoS3ObjectName?: string | null;
        registrant: { __typename?: "registrant_Registrant"; userId?: string | null };
    } | null;
};

export const Configuration_RecordingEmailNotificationsEnabledFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "Configuration_RecordingEmailNotificationsEnabled" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "conference_Conference" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "recordingNotificationsEnabled" },
                        name: { kind: "Name", value: "configurations" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "key" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "EnumValue",
                                                            value: "ENABLE_RECORDING_SUBTITLE_EMAIL_NOTIFICATIONS",
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<Configuration_RecordingEmailNotificationsEnabledFragment, unknown>;
export const Configuration_SubmissionNotificationRolesFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "Configuration_SubmissionNotificationRoles" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "conference_Conference" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "submissionNotificationRoles" },
                        name: { kind: "Name", value: "configurations" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "key" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "EnumValue",
                                                            value: "SUBMISSION_NOTIFICATION_ROLES",
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<Configuration_SubmissionNotificationRolesFragment, unknown>;
export const Configuration_EmailTemplateSubtitlesGeneratedFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "Configuration_EmailTemplateSubtitlesGenerated" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "conference_Conference" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "emailTemplateSubtitlesGenerated" },
                        name: { kind: "Name", value: "configurations" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "key" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "EnumValue",
                                                            value: "EMAIL_TEMPLATE_SUBTITLES_GENERATED",
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<Configuration_EmailTemplateSubtitlesGeneratedFragment, unknown>;
export const ElementUpdateNotification_ElementDetailsFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "ElementUpdateNotification_ElementDetails" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "content_Element" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "name" } },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "subconference" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "name" } },
                                { kind: "Field", name: { kind: "Name", value: "shortName" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "name" } },
                                { kind: "Field", name: { kind: "Name", value: "shortName" } },
                                {
                                    kind: "FragmentSpread",
                                    name: { kind: "Name", value: "Configuration_RecordingEmailNotificationsEnabled" },
                                },
                                {
                                    kind: "FragmentSpread",
                                    name: { kind: "Name", value: "Configuration_SubmissionNotificationRoles" },
                                },
                                {
                                    kind: "FragmentSpread",
                                    name: { kind: "Name", value: "Configuration_EmailTemplateSubtitlesGenerated" },
                                },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "item" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "title" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "itemPeople" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "person" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_and" },
                                                                    value: {
                                                                        kind: "ListValue",
                                                                        values: [
                                                                            {
                                                                                kind: "ObjectValue",
                                                                                fields: [
                                                                                    {
                                                                                        kind: "ObjectField",
                                                                                        name: {
                                                                                            kind: "Name",
                                                                                            value: "email",
                                                                                        },
                                                                                        value: {
                                                                                            kind: "ObjectValue",
                                                                                            fields: [
                                                                                                {
                                                                                                    kind: "ObjectField",
                                                                                                    name: {
                                                                                                        kind: "Name",
                                                                                                        value: "_is_null",
                                                                                                    },
                                                                                                    value: {
                                                                                                        kind: "BooleanValue",
                                                                                                        value: false,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                            {
                                                                                kind: "ObjectValue",
                                                                                fields: [
                                                                                    {
                                                                                        kind: "ObjectField",
                                                                                        name: {
                                                                                            kind: "Name",
                                                                                            value: "email",
                                                                                        },
                                                                                        value: {
                                                                                            kind: "ObjectValue",
                                                                                            fields: [
                                                                                                {
                                                                                                    kind: "ObjectField",
                                                                                                    name: {
                                                                                                        kind: "Name",
                                                                                                        value: "_neq",
                                                                                                    },
                                                                                                    value: {
                                                                                                        kind: "StringValue",
                                                                                                        value: "",
                                                                                                        block: false,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "person" },
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        { kind: "Field", name: { kind: "Name", value: "name" } },
                                                        { kind: "Field", name: { kind: "Name", value: "email" } },
                                                        { kind: "Field", name: { kind: "Name", value: "accessToken" } },
                                                    ],
                                                },
                                            },
                                            { kind: "Field", name: { kind: "Name", value: "roleName" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                    { kind: "Field", name: { kind: "Name", value: "source" } },
                ],
            },
        },
        ...Configuration_RecordingEmailNotificationsEnabledFragmentDoc.definitions,
        ...Configuration_SubmissionNotificationRolesFragmentDoc.definitions,
        ...Configuration_EmailTemplateSubtitlesGeneratedFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<ElementUpdateNotification_ElementDetailsFragment, unknown>;
export const UploadYouTubeVideoJobDataFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "UploadYouTubeVideoJobData" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "job_queues_UploadYouTubeVideoJob" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                    { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                    { kind: "Field", name: { kind: "Name", value: "jobStatusName" } },
                    { kind: "Field", name: { kind: "Name", value: "retriesCount" } },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrantGoogleAccount" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "tokenData" } },
                                { kind: "Field", name: { kind: "Name", value: "googleAccountEmail" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "element" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "data" } },
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "item" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "title" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                    { kind: "Field", name: { kind: "Name", value: "videoTitle" } },
                    { kind: "Field", name: { kind: "Name", value: "videoDescription" } },
                    { kind: "Field", name: { kind: "Name", value: "videoPrivacyStatus" } },
                    { kind: "Field", name: { kind: "Name", value: "playlistId" } },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UploadYouTubeVideoJobDataFragment, unknown>;
export const InvitationPartsFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "InvitationParts" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "registrant_Invitation" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "registrantId" } },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "displayName" } },
                                { kind: "Field", name: { kind: "Name", value: "userId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "conference" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "name" } },
                                            { kind: "Field", name: { kind: "Name", value: "slug" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                    { kind: "Field", name: { kind: "Name", value: "confirmationCode" } },
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "inviteCode" } },
                    { kind: "Field", name: { kind: "Name", value: "invitedEmailAddress" } },
                    { kind: "Field", name: { kind: "Name", value: "linkToUserId" } },
                    { kind: "Field", name: { kind: "Name", value: "updatedAt" } },
                    { kind: "Field", name: { kind: "Name", value: "createdAt" } },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "user" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "email" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InvitationPartsFragment, unknown>;
export const InvitedUserPartsFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "InvitedUserParts" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "User" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "email" } },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InvitedUserPartsFragment, unknown>;
export const RegistrantWithInvitePartsFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "RegistrantWithInviteParts" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "registrant_Registrant" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "name" } },
                                { kind: "Field", name: { kind: "Name", value: "shortName" } },
                                { kind: "Field", name: { kind: "Name", value: "slug" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "invitation" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "emails" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "reason" } }],
                                    },
                                },
                                { kind: "Field", name: { kind: "Name", value: "inviteCode" } },
                                { kind: "Field", name: { kind: "Name", value: "invitedEmailAddress" } },
                            ],
                        },
                    },
                    { kind: "Field", name: { kind: "Name", value: "displayName" } },
                    { kind: "Field", name: { kind: "Name", value: "userId" } },
                ],
            },
        },
    ],
} as unknown as DocumentNode<RegistrantWithInvitePartsFragment, unknown>;
export const UnallocatedShuffleQueueEntryFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "UnallocatedShuffleQueueEntry" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "room_ShuffleQueueEntry" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "registrantId" } },
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "created_at" } },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UnallocatedShuffleQueueEntryFragment, unknown>;
export const ActiveShuffleRoomFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "ActiveShuffleRoom" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "room_ShuffleRoom" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "startedAt" } },
                    { kind: "Field", name: { kind: "Name", value: "durationMinutes" } },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                {
                                    kind: "Field",
                                    alias: { kind: "Name", value: "people" },
                                    name: { kind: "Name", value: "roomMemberships" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "registrantId" } },
                                        ],
                                    },
                                },
                                { kind: "Field", name: { kind: "Name", value: "publicVonageSessionId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<ActiveShuffleRoomFragment, unknown>;
export const ActiveShufflePeriodFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "ActiveShufflePeriod" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "room_ShufflePeriod" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                    { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                    { kind: "Field", name: { kind: "Name", value: "endAt" } },
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "maxRegistrantsPerRoom" } },
                    { kind: "Field", name: { kind: "Name", value: "name" } },
                    { kind: "Field", name: { kind: "Name", value: "organiserId" } },
                    { kind: "Field", name: { kind: "Name", value: "roomDurationMinutes" } },
                    { kind: "Field", name: { kind: "Name", value: "startAt" } },
                    { kind: "Field", name: { kind: "Name", value: "targetRegistrantsPerRoom" } },
                    { kind: "Field", name: { kind: "Name", value: "waitRoomMaxDurationSeconds" } },
                    { kind: "Field", name: { kind: "Name", value: "algorithm" } },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "unallocatedQueueEntries" },
                        name: { kind: "Name", value: "queueEntries" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "allocatedShuffleRoomId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "isExpired" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "BooleanValue", value: false },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "order_by" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "EnumValue", value: "asc" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "FragmentSpread",
                                    name: { kind: "Name", value: "UnallocatedShuffleQueueEntry" },
                                },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "activeRooms" },
                        name: { kind: "Name", value: "shuffleRooms" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "isEnded" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "BooleanValue", value: false },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "ActiveShuffleRoom" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "events" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "scheduledStartTime" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_lte" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "now" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "scheduledEndTime" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_gte" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "now" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledEndTime" } },
                            ],
                        },
                    },
                ],
            },
        },
        ...UnallocatedShuffleQueueEntryFragmentDoc.definitions,
        ...ActiveShuffleRoomFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<ActiveShufflePeriodFragment, unknown>;
export const UploadableElementFieldsFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "UploadableElementFields" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "content_Element" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "typeName" } },
                    { kind: "Field", name: { kind: "Name", value: "name" } },
                    { kind: "Field", name: { kind: "Name", value: "uploadsRemaining" } },
                    { kind: "Field", name: { kind: "Name", value: "isHidden" } },
                    { kind: "Field", name: { kind: "Name", value: "data" } },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "item" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "title" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UploadableElementFieldsFragment, unknown>;
export const VideoRenderJobDataFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "VideoRenderJobData" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "video_VideoRenderJob" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "jobStatusName" } },
                    { kind: "Field", name: { kind: "Name", value: "data" } },
                    { kind: "Field", name: { kind: "Name", value: "retriesCount" } },
                ],
            },
        },
    ],
} as unknown as DocumentNode<VideoRenderJobDataFragment, unknown>;
export const GetRegistrant_RegistrantFragmentDoc = {
    kind: "Document",
    definitions: [
        {
            kind: "FragmentDefinition",
            name: { kind: "Name", value: "GetRegistrant_Registrant" },
            typeCondition: { kind: "NamedType", name: { kind: "Name", value: "registrant_Registrant" } },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    { kind: "Field", name: { kind: "Name", value: "id" } },
                    { kind: "Field", name: { kind: "Name", value: "displayName" } },
                    { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                    { kind: "Field", name: { kind: "Name", value: "conferenceRole" } },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "subconferenceMemberships" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "role" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRegistrant_RegistrantFragment, unknown>;
export const FlagInserted_GetSupportAddressDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "FlagInserted_GetSupportAddress" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "messageSId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "chat_Message" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "sId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "messageSId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "chat" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "conference" },
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        { kind: "Field", name: { kind: "Name", value: "name" } },
                                                        { kind: "Field", name: { kind: "Name", value: "shortName" } },
                                                        { kind: "Field", name: { kind: "Name", value: "slug" } },
                                                        {
                                                            kind: "Field",
                                                            alias: { kind: "Name", value: "supportAddress" },
                                                            name: { kind: "Name", value: "configurations" },
                                                            arguments: [
                                                                {
                                                                    kind: "Argument",
                                                                    name: { kind: "Name", value: "where" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "key" },
                                                                                value: {
                                                                                    kind: "ObjectValue",
                                                                                    fields: [
                                                                                        {
                                                                                            kind: "ObjectField",
                                                                                            name: {
                                                                                                kind: "Name",
                                                                                                value: "_eq",
                                                                                            },
                                                                                            value: {
                                                                                                kind: "EnumValue",
                                                                                                value: "SUPPORT_ADDRESS",
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [
                                                                    {
                                                                        kind: "Field",
                                                                        name: { kind: "Name", value: "conferenceId" },
                                                                    },
                                                                    {
                                                                        kind: "Field",
                                                                        name: { kind: "Name", value: "key" },
                                                                    },
                                                                    {
                                                                        kind: "Field",
                                                                        name: { kind: "Name", value: "value" },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<FlagInserted_GetSupportAddressQuery, FlagInserted_GetSupportAddressQueryVariables>;
export const CombineVideosJob_GetJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CombineVideosJob_GetJobs" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "job_queues_CombineVideosJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "ListValue",
                                                            values: [
                                                                { kind: "EnumValue", value: "NEW" },
                                                                { kind: "EnumValue", value: "IN_PROGRESS" },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "order_by" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "created_at" },
                                            value: { kind: "EnumValue", value: "asc" },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "limit" },
                                value: { kind: "IntValue", value: "10" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "created_at" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "data" } },
                                { kind: "Field", name: { kind: "Name", value: "jobStatusName" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CombineVideosJob_GetJobsQuery, CombineVideosJob_GetJobsQueryVariables>;
export const CombineVideosJob_GetElementsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CombineVideosJob_GetElements" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "elementIds" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "content_Element" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "elementIds" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "data" } },
                                { kind: "Field", name: { kind: "Name", value: "itemId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CombineVideosJob_GetElementsQuery, CombineVideosJob_GetElementsQueryVariables>;
export const CombineVideosJob_FailJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CombineVideosJob_FailJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "combineVideosJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "message" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_CombineVideosJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "combineVideosJobId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "FAILED" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "message" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "message" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CombineVideosJob_FailJobMutation, CombineVideosJob_FailJobMutationVariables>;
export const CombineVideosJob_StartJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CombineVideosJob_StartJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "combineVideosJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "mediaConvertJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_CombineVideosJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "combineVideosJobId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "IN_PROGRESS" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "mediaConvertJobId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "mediaConvertJobId" },
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CombineVideosJob_StartJobMutation, CombineVideosJob_StartJobMutationVariables>;
export const CombineVideosJob_CompleteJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CombineVideosJob_CompleteJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "combineVideosJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_CombineVideosJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "combineVideosJobId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "COMPLETED" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CombineVideosJob_CompleteJobMutation, CombineVideosJob_CompleteJobMutationVariables>;
export const MediaConvert_GetCombineVideosJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "MediaConvert_GetCombineVideosJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "combineVideosJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "itemId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "job_queues_CombineVideosJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "combineVideosJobId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "outputName" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "content_Item_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "itemId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<MediaConvert_GetCombineVideosJobQuery, MediaConvert_GetCombineVideosJobQueryVariables>;
export const CombineVideosJob_CreateElementDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CombineVideosJob_CreateElement" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "data" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "itemId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "source" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_content_Element_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "data" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "data" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "isHidden" },
                                            value: { kind: "BooleanValue", value: true },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "name" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "name" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "typeName" },
                                            value: { kind: "EnumValue", value: "VIDEO_FILE" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "itemId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "itemId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "subconferenceId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "source" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "source" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CombineVideosJob_CreateElementMutation, CombineVideosJob_CreateElementMutationVariables>;
export const CheckForFrontendHostsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CheckForFrontendHosts" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "host" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "system_Configuration" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "key" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "DEFAULT_FRONTEND_HOST" },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "value" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "host" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_Configuration" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "key" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "FRONTEND_HOST" },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "value" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "host" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "conference" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "slug" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CheckForFrontendHostsQuery, CheckForFrontendHostsQueryVariables>;
export const ElementAddNewVersionDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "ElementAddNewVersion" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "newVersion" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_content_Element_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_append" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "data" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "newVersion" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<ElementAddNewVersionMutation, ElementAddNewVersionMutationVariables>;
export const GetElementDetailsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetElementDetails" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "content_Element_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "FragmentSpread",
                                    name: { kind: "Name", value: "ElementUpdateNotification_ElementDetails" },
                                },
                            ],
                        },
                    },
                ],
            },
        },
        ...ElementUpdateNotification_ElementDetailsFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<GetElementDetailsQuery, GetElementDetailsQueryVariables>;
export const GetUploadAgreementDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetUploadAgreement" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "accessToken" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "collection_ProgramPerson" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "accessToken" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "accessToken" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "conference" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "configurations" },
                                                arguments: [
                                                    {
                                                        kind: "Argument",
                                                        name: { kind: "Name", value: "where" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "key" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "_eq" },
                                                                                value: {
                                                                                    kind: "EnumValue",
                                                                                    value: "UPLOAD_AGREEMENT",
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        {
                                                            kind: "Field",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                        { kind: "Field", name: { kind: "Name", value: "key" } },
                                                        { kind: "Field", name: { kind: "Name", value: "value" } },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetUploadAgreementQuery, GetUploadAgreementQueryVariables>;
export const MigrateElement_GetInfoDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "MigrateElement_GetInfo" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "content_Element_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "typeName" } },
                                { kind: "Field", name: { kind: "Name", value: "data" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<MigrateElement_GetInfoQuery, MigrateElement_GetInfoQueryVariables>;
export const MigrateElementDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "MigrateElement" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "data" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_content_Element_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "data" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "data" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<MigrateElementMutation, MigrateElementMutationVariables>;
export const CustomEmail_SelectRegistrantsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CustomEmail_SelectRegistrants" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "withSubconference" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceCond" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "registrant_Registrant_bool_exp" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantIds" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "_and" },
                                            value: {
                                                kind: "ListValue",
                                                values: [
                                                    {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "conferenceCond" },
                                                    },
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "id" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "_in" },
                                                                            value: {
                                                                                kind: "Variable",
                                                                                name: {
                                                                                    kind: "Name",
                                                                                    value: "registrantIds",
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "displayName" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "invitation" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "invitedEmailAddress" } },
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                        ],
                                    },
                                },
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "user" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "email" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_Subconference_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                            },
                        ],
                        directives: [
                            {
                                kind: "Directive",
                                name: { kind: "Name", value: "include" },
                                arguments: [
                                    {
                                        kind: "Argument",
                                        name: { kind: "Name", value: "if" },
                                        value: { kind: "Variable", name: { kind: "Name", value: "withSubconference" } },
                                    },
                                ],
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "shortName" } }],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_Conference_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "shortName" } },
                                {
                                    kind: "Field",
                                    alias: { kind: "Name", value: "techSupportAddress" },
                                    name: { kind: "Name", value: "configurations" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "key" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "EnumValue",
                                                                        value: "TECH_SUPPORT_ADDRESS",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                                    },
                                },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "platformAddress" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "SENDGRID_REPLYTO" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CustomEmail_SelectRegistrantsQuery, CustomEmail_SelectRegistrantsQueryVariables>;
export const SelectUnprocessedCustomEmailJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectUnprocessedCustomEmailJobs" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "job_queues_CustomEmailJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "processed" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "BooleanValue", value: false },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "registrantIds" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subject" } },
                                { kind: "Field", name: { kind: "Name", value: "markdownBody" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SelectUnprocessedCustomEmailJobsQuery, SelectUnprocessedCustomEmailJobsQueryVariables>;
export const CompleteCustomEmailJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CompleteCustomEmailJobs" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_CustomEmailJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "processed" },
                                            value: { kind: "BooleanValue", value: true },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                                    },
                                },
                                { kind: "Field", name: { kind: "Name", value: "affected_rows" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CompleteCustomEmailJobsMutation, CompleteCustomEmailJobsMutationVariables>;
export const ConferenceEmailConfigurationDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "ConferenceEmailConfiguration" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "includeConferenceFields" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "includeSubconferenceFields" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "support" },
                        name: { kind: "Name", value: "conference_Configuration" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "key" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "SUPPORT_ADDRESS" },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        directives: [
                            {
                                kind: "Directive",
                                name: { kind: "Name", value: "include" },
                                arguments: [
                                    {
                                        kind: "Argument",
                                        name: { kind: "Name", value: "if" },
                                        value: {
                                            kind: "Variable",
                                            name: { kind: "Name", value: "includeConferenceFields" },
                                        },
                                    },
                                ],
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "techSupport" },
                        name: { kind: "Name", value: "conference_Configuration" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "key" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "TECH_SUPPORT_ADDRESS" },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        directives: [
                            {
                                kind: "Directive",
                                name: { kind: "Name", value: "include" },
                                arguments: [
                                    {
                                        kind: "Argument",
                                        name: { kind: "Name", value: "if" },
                                        value: {
                                            kind: "Variable",
                                            name: { kind: "Name", value: "includeConferenceFields" },
                                        },
                                    },
                                ],
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "hostOrganisationName" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "HOST_ORGANISATION_NAME" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "stopEmails" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "STOP_EMAILS_CONTACT_EMAIL_ADDRESS" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "frontendHost" },
                        name: { kind: "Name", value: "conference_Configuration" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "key" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "FRONTEND_HOST" },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        directives: [
                            {
                                kind: "Directive",
                                name: { kind: "Name", value: "include" },
                                arguments: [
                                    {
                                        kind: "Argument",
                                        name: { kind: "Name", value: "if" },
                                        value: {
                                            kind: "Variable",
                                            name: { kind: "Name", value: "includeConferenceFields" },
                                        },
                                    },
                                ],
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "defaultFrontendHost" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "DEFAULT_FRONTEND_HOST" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "allowEmailsToDomains" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "ALLOW_EMAILS_TO_DOMAINS" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_Conference" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        directives: [
                            {
                                kind: "Directive",
                                name: { kind: "Name", value: "include" },
                                arguments: [
                                    {
                                        kind: "Argument",
                                        name: { kind: "Name", value: "if" },
                                        value: {
                                            kind: "Variable",
                                            name: { kind: "Name", value: "includeConferenceFields" },
                                        },
                                    },
                                ],
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "shortName" } }],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_Subconference" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "subconferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        directives: [
                            {
                                kind: "Directive",
                                name: { kind: "Name", value: "include" },
                                arguments: [
                                    {
                                        kind: "Argument",
                                        name: { kind: "Name", value: "if" },
                                        value: {
                                            kind: "Variable",
                                            name: { kind: "Name", value: "includeSubconferenceFields" },
                                        },
                                    },
                                ],
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "shortName" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<ConferenceEmailConfigurationQuery, ConferenceEmailConfigurationQueryVariables>;
export const InsertEmailsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InsertEmails" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "objects" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "Email_insert_input" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_Email" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "objects" },
                                value: { kind: "Variable", name: { kind: "Name", value: "objects" } },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "on_conflict" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "constraint" },
                                            value: { kind: "EnumValue", value: "Email_idempotencyKey_key" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "update_columns" },
                                            value: { kind: "ListValue", values: [] },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InsertEmailsMutation, InsertEmailsMutationVariables>;
export const SelectUnsentEmailIdsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectUnsentEmailIds" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "Email" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "sentAt" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "limit" },
                                value: { kind: "IntValue", value: "300" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SelectUnsentEmailIdsQuery, SelectUnsentEmailIdsQueryVariables>;
export const MarkAndSelectUnsentEmailsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "MarkAndSelectUnsentEmails" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "sentAt" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_Email" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "sentAt" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "sentAt" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "sentAt" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_inc" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "retriesCount" },
                                            value: { kind: "IntValue", value: "1" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "recipientName" } },
                                            { kind: "Field", name: { kind: "Name", value: "emailAddress" } },
                                            { kind: "Field", name: { kind: "Name", value: "htmlContents" } },
                                            { kind: "Field", name: { kind: "Name", value: "plainTextContents" } },
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "subject" } },
                                            { kind: "Field", name: { kind: "Name", value: "retriesCount" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<MarkAndSelectUnsentEmailsMutation, MarkAndSelectUnsentEmailsMutationVariables>;
export const UnmarkUnsentEmailsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "UnmarkUnsentEmails" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_Email" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "sentAt" },
                                            value: { kind: "NullValue" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UnmarkUnsentEmailsMutation, UnmarkUnsentEmailsMutationVariables>;
export const GetSendGridConfigDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetSendGridConfig" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "apiKey" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "SENDGRID_API_KEY" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "senderEmail" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "SENDGRID_SENDER" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "senderName" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "SENDGRID_SENDER_NAME" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "replyTo" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "SENDGRID_REPLYTO" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "webhookPublicKey" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "SENDGRID_WEBHOOK_PUBLIC_KEY" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetSendGridConfigQuery, GetSendGridConfigQueryVariables>;
export const UpdateEmailStatusDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "UpdateEmailStatus" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "status" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "errorMessage" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_Email_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "status" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "status" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "errorMessage" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "errorMessage" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UpdateEmailStatusMutation, UpdateEmailStatusMutationVariables>;
export const GetEventChatInfoDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetEventChatInfo" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledStartTime" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledEndTime" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "room" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "name" } },
                                            { kind: "Field", name: { kind: "Name", value: "chatId" } },
                                        ],
                                    },
                                },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "item" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "title" } },
                                            { kind: "Field", name: { kind: "Name", value: "chatId" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetEventChatInfoQuery, GetEventChatInfoQueryVariables>;
export const StartChatDuplicationDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "StartChatDuplication" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "chatId1" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "chatId2" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "update_chat1" },
                        name: { kind: "Name", value: "update_chat_Chat_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "chatId1" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "duplicateToId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "chatId2" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "update_chat2" },
                        name: { kind: "Name", value: "update_chat_Chat_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "chatId2" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "duplicateToId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "chatId1" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<StartChatDuplicationMutation, StartChatDuplicationMutationVariables>;
export const EndChatDuplicationDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "EndChatDuplication" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "chatId1" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "chatId2" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "update_chat1" },
                        name: { kind: "Name", value: "update_chat_Chat_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "chatId1" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "duplicateToId" },
                                            value: { kind: "NullValue" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "update_chat2" },
                        name: { kind: "Name", value: "update_chat_Chat_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "chatId2" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "duplicateToId" },
                                            value: { kind: "NullValue" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<EndChatDuplicationMutation, EndChatDuplicationMutationVariables>;
export const NotifyRealtimeEventStartedDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "NotifyRealtimeEventStarted" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "notifyEventStarted" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "eventId" },
                                value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "ok" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<NotifyRealtimeEventStartedMutation, NotifyRealtimeEventStartedMutationVariables>;
export const NotifyRealtimeEventEndedDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "NotifyRealtimeEventEnded" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "notifyEventEnded" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "eventId" },
                                value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "ok" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<NotifyRealtimeEventEndedMutation, NotifyRealtimeEventEndedMutationVariables>;
export const GetEventTimingsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetEventTimings" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "name" } },
                                { kind: "Field", name: { kind: "Name", value: "timingsUpdatedAt" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledStartTime" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledEndTime" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "modeName" } },
                                { kind: "Field", name: { kind: "Name", value: "roomId" } },
                                { kind: "Field", name: { kind: "Name", value: "enableRecording" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "eventVonageSession" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "sessionId" } },
                                        ],
                                    },
                                },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "item" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "title" } },
                                            { kind: "Field", name: { kind: "Name", value: "chatId" } },
                                        ],
                                    },
                                },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "continuations" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "to" } },
                                        ],
                                    },
                                },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "room" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "rtmpInput" },
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        { kind: "Field", name: { kind: "Name", value: "inputId" } },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetEventTimingsQuery, GetEventTimingsQueryVariables>;
export const Event_GetEventVonageSessionDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "Event_GetEventVonageSession" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "eventVonageSession" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "sessionId" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<Event_GetEventVonageSessionQuery, Event_GetEventVonageSessionQueryVariables>;
export const GoogleOAuth_ConferenceConfig_FrontendHostDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GoogleOAuth_ConferenceConfig_FrontendHost" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "registrant" },
                        name: { kind: "Name", value: "registrant_Registrant_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "conference" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            {
                                                kind: "Field",
                                                alias: { kind: "Name", value: "frontendHost" },
                                                name: { kind: "Name", value: "configurations" },
                                                arguments: [
                                                    {
                                                        kind: "Argument",
                                                        name: { kind: "Name", value: "where" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "key" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "_eq" },
                                                                                value: {
                                                                                    kind: "EnumValue",
                                                                                    value: "FRONTEND_HOST",
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "value" } },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "defaultFrontendHost" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "DEFAULT_FRONTEND_HOST" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    GoogleOAuth_ConferenceConfig_FrontendHostQuery,
    GoogleOAuth_ConferenceConfig_FrontendHostQueryVariables
>;
export const Google_CreateRegistrantGoogleAccountDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "Google_CreateRegistrantGoogleAccount" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "googleAccountEmail" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "tokenData" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_registrant_GoogleAccount_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "registrantId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "googleAccountEmail" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "googleAccountEmail" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "tokenData" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "tokenData" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "isDeleted" },
                                            value: { kind: "BooleanValue", value: false },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "on_conflict" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "constraint" },
                                            value: {
                                                kind: "EnumValue",
                                                value: "GoogleAccount_registrantId_googleAccountEmail_key",
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "update_columns" },
                                            value: {
                                                kind: "ListValue",
                                                values: [
                                                    { kind: "EnumValue", value: "tokenData" },
                                                    { kind: "EnumValue", value: "isDeleted" },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    Google_CreateRegistrantGoogleAccountMutation,
    Google_CreateRegistrantGoogleAccountMutationVariables
>;
export const CreateYouTubeUploadDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CreateYouTubeUpload" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoTitle" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoStatus" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "uploadYouTubeVideoJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoPrivacyStatus" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_video_YouTubeUpload_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "elementId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "videoId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "videoId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "videoStatus" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "videoStatus" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "videoTitle" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "videoTitle" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "videoPrivacyStatus" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "videoPrivacyStatus" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "uploadYouTubeVideoJobId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "uploadYouTubeVideoJobId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "subconferenceId" },
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateYouTubeUploadMutation, CreateYouTubeUploadMutationVariables>;
export const SelectNewUploadYouTubeVideoJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectNewUploadYouTubeVideoJobs" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "job_queues_UploadYouTubeVideoJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "limit" },
                                value: { kind: "IntValue", value: "2" },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "NEW" },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "order_by" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "createdAt" },
                                            value: { kind: "EnumValue", value: "asc" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SelectNewUploadYouTubeVideoJobsQuery, SelectNewUploadYouTubeVideoJobsQueryVariables>;
export const MarkAndSelectNewUploadYouTubeVideoJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "MarkAndSelectNewUploadYouTubeVideoJobs" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "initialResult" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "nextJobs" },
                        name: { kind: "Name", value: "update_job_queues_UploadYouTubeVideoJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "NEW" },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "retriesCount" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_lt" },
                                                        value: { kind: "IntValue", value: "3" },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "IN_PROGRESS" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "result" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "initialResult" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_inc" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "retriesCount" },
                                            value: { kind: "IntValue", value: "1" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            {
                                                kind: "FragmentSpread",
                                                name: { kind: "Name", value: "UploadYouTubeVideoJobData" },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "expiredJobs" },
                        name: { kind: "Name", value: "update_job_queues_UploadYouTubeVideoJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_nin" },
                                                        value: {
                                                            kind: "ListValue",
                                                            values: [
                                                                { kind: "EnumValue", value: "FAILED" },
                                                                { kind: "EnumValue", value: "EXPIRED" },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "_or" },
                                            value: {
                                                kind: "ListValue",
                                                values: [
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: {
                                                                    kind: "Name",
                                                                    value: "registrantGoogleAccount",
                                                                },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "isDeleted" },
                                                                            value: {
                                                                                kind: "ObjectValue",
                                                                                fields: [
                                                                                    {
                                                                                        kind: "ObjectField",
                                                                                        name: {
                                                                                            kind: "Name",
                                                                                            value: "_eq",
                                                                                        },
                                                                                        value: {
                                                                                            kind: "BooleanValue",
                                                                                            value: true,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "retriesCount" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "_gte" },
                                                                            value: { kind: "IntValue", value: "3" },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "EXPIRED" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            {
                                                kind: "FragmentSpread",
                                                name: { kind: "Name", value: "UploadYouTubeVideoJobData" },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
        ...UploadYouTubeVideoJobDataFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<
    MarkAndSelectNewUploadYouTubeVideoJobsMutation,
    MarkAndSelectNewUploadYouTubeVideoJobsMutationVariables
>;
export const UnmarkUploadYouTubeVideoJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "UnmarkUploadYouTubeVideoJobs" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_UploadYouTubeVideoJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "FAILED" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "affected_rows" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UnmarkUploadYouTubeVideoJobsMutation, UnmarkUploadYouTubeVideoJobsMutationVariables>;
export const FailUploadYouTubeVideoJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "FailUploadYouTubeVideoJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "message" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "result" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_UploadYouTubeVideoJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "message" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "message" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "FAILED" },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_append" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "result" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "result" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<FailUploadYouTubeVideoJobMutation, FailUploadYouTubeVideoJobMutationVariables>;
export const CompleteUploadYouTubeVideoJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CompleteUploadYouTubeVideoJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_UploadYouTubeVideoJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "COMPLETED" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CompleteUploadYouTubeVideoJobMutation, CompleteUploadYouTubeVideoJobMutationVariables>;
export const SelectInvitationAndUserDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectInvitationAndUser" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "inviteCode" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Invitation" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "inviteCode" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "inviteCode" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "InvitationParts" } }],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_Conference" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "globalInviteCode" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "inviteCode" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "slug" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "registrants" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "userId" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "userId" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                                    },
                                },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "User_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "FragmentSpread", name: { kind: "Name", value: "InvitedUserParts" } }],
                        },
                    },
                ],
            },
        },
        ...InvitationPartsFragmentDoc.definitions,
        ...InvitedUserPartsFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<SelectInvitationAndUserQuery, SelectInvitationAndUserQueryVariables>;
export const InsertRegistrantFromGlobalInviteDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InsertRegistrantFromGlobalInvite" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrant" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: { kind: "Name", value: "registrant_Registrant_insert_input" },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_registrant_Registrant_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: { kind: "Variable", name: { kind: "Name", value: "registrant" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    InsertRegistrantFromGlobalInviteMutation,
    InsertRegistrantFromGlobalInviteMutationVariables
>;
export const UpdateInvitationDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "UpdateInvitation" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "confirmationCode" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "invitationId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "updatedAt" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_registrant_Invitation" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "invitationId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "updatedAt" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "updatedAt" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "confirmationCode" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "confirmationCode" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "linkToUserId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UpdateInvitationMutation, UpdateInvitationMutationVariables>;
export const SetRegistrantUserIdDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "SetRegistrantUserId" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_registrant_Registrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "registrantId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "userId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SetRegistrantUserIdMutation, SetRegistrantUserIdMutationVariables>;
export const SelectRegistrantsWithInvitationDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectRegistrantsWithInvitation" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantIds" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "_and" },
                                            value: {
                                                kind: "ListValue",
                                                values: [
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "id" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "_in" },
                                                                            value: {
                                                                                kind: "Variable",
                                                                                name: {
                                                                                    kind: "Name",
                                                                                    value: "registrantIds",
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "userId" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "_is_null" },
                                                                            value: {
                                                                                kind: "BooleanValue",
                                                                                value: true,
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "RegistrantWithInviteParts" } },
                            ],
                        },
                    },
                ],
            },
        },
        ...RegistrantWithInvitePartsFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<SelectRegistrantsWithInvitationQuery, SelectRegistrantsWithInvitationQueryVariables>;
export const SelectUnprocessedInvitationEmailJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectUnprocessedInvitationEmailJobs" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "job_queues_InvitationEmailJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "processed" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "BooleanValue", value: false },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "registrantIds" } },
                                { kind: "Field", name: { kind: "Name", value: "sendRepeat" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    SelectUnprocessedInvitationEmailJobsQuery,
    SelectUnprocessedInvitationEmailJobsQueryVariables
>;
export const CompleteInvitationEmailJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CompleteInvitationEmailJobs" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_InvitationEmailJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "processed" },
                                            value: { kind: "BooleanValue", value: true },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CompleteInvitationEmailJobsMutation, CompleteInvitationEmailJobsMutationVariables>;
export const GetAutomaticInvitationsConfigurationDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetAutomaticInvitationsConfiguration" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "initialStart" },
                        name: { kind: "Name", value: "conference_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "conferenceId" },
                                value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "AUTOMATIC_INVITATIONS_START" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "initialEnd" },
                        name: { kind: "Name", value: "conference_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "conferenceId" },
                                value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "AUTOMATIC_INVITATIONS_END" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    GetAutomaticInvitationsConfigurationQuery,
    GetAutomaticInvitationsConfigurationQueryVariables
>;
export const GetAutomaticInvitationsRepeatConfigurationsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetAutomaticInvitationsRepeatConfigurations" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_Conference" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "_and" },
                                            value: {
                                                kind: "ListValue",
                                                values: [
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "configurations" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "key" },
                                                                            value: {
                                                                                kind: "ObjectValue",
                                                                                fields: [
                                                                                    {
                                                                                        kind: "ObjectField",
                                                                                        name: {
                                                                                            kind: "Name",
                                                                                            value: "_eq",
                                                                                        },
                                                                                        value: {
                                                                                            kind: "EnumValue",
                                                                                            value: "AUTOMATIC_INVITATIONS_REPEAT_START",
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "configurations" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "key" },
                                                                            value: {
                                                                                kind: "ObjectValue",
                                                                                fields: [
                                                                                    {
                                                                                        kind: "ObjectField",
                                                                                        name: {
                                                                                            kind: "Name",
                                                                                            value: "_eq",
                                                                                        },
                                                                                        value: {
                                                                                            kind: "EnumValue",
                                                                                            value: "AUTOMATIC_INVITATIONS_REPEAT_END",
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                {
                                    kind: "Field",
                                    alias: { kind: "Name", value: "initialStart" },
                                    name: { kind: "Name", value: "configurations" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "key" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "EnumValue",
                                                                        value: "AUTOMATIC_INVITATIONS_START",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                                    },
                                },
                                {
                                    kind: "Field",
                                    alias: { kind: "Name", value: "initialEnd" },
                                    name: { kind: "Name", value: "configurations" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "key" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "EnumValue",
                                                                        value: "AUTOMATIC_INVITATIONS_END",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                                    },
                                },
                                {
                                    kind: "Field",
                                    alias: { kind: "Name", value: "repeatStart" },
                                    name: { kind: "Name", value: "configurations" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "key" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "EnumValue",
                                                                        value: "AUTOMATIC_INVITATIONS_REPEAT_START",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                                    },
                                },
                                {
                                    kind: "Field",
                                    alias: { kind: "Name", value: "repeatEnd" },
                                    name: { kind: "Name", value: "configurations" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "key" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "EnumValue",
                                                                        value: "AUTOMATIC_INVITATIONS_REPEAT_END",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                                    },
                                },
                                {
                                    kind: "Field",
                                    alias: { kind: "Name", value: "repeatFrequency" },
                                    name: { kind: "Name", value: "configurations" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "key" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "EnumValue",
                                                                        value: "AUTOMATIC_INVITATIONS_REPEAT_FREQUENCY",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "value" } }],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    GetAutomaticInvitationsRepeatConfigurationsQuery,
    GetAutomaticInvitationsRepeatConfigurationsQueryVariables
>;
export const InsertInvitationEmailJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InsertInvitationEmailJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantIds" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "sendRepeat" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_job_queues_InvitationEmailJob_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "registrantIds" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "registrantIds" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "sendRepeat" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "sendRepeat" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InsertInvitationEmailJobMutation, InsertInvitationEmailJobMutationVariables>;
export const GetAutomaticInvitations_ToBeRepeatedDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetAutomaticInvitations_ToBeRepeated" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "userId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "invitationStatus" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    GetAutomaticInvitations_ToBeRepeatedQuery,
    GetAutomaticInvitations_ToBeRepeatedQueryVariables
>;
export const OtherConferencePrepareJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "OtherConferencePrepareJobs" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferencePrepareJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "job_queues_PrepareJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "IN_PROGRESS" },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_neq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferencePrepareJobId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "updatedAt" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<OtherConferencePrepareJobsQuery, OtherConferencePrepareJobsQueryVariables>;
export const GetVideoBroadcastElementsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetVideoBroadcastElements" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "content_Element" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "typeName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "VIDEO_BROADCAST" },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "data" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetVideoBroadcastElementsQuery, GetVideoBroadcastElementsQueryVariables>;
export const CreateVideoRenderJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CreateVideoRenderJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferencePrepareJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "data" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_video_VideoRenderJob_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferencePrepareJobId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "conferencePrepareJobId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "elementId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "data" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "data" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "NEW" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateVideoRenderJobMutation, CreateVideoRenderJobMutationVariables>;
export const GetEventsWithoutVonageSessionDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetEventsWithoutVonageSession" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "modeName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "LIVESTREAM" },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "_not" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "eventVonageSession" },
                                                        value: { kind: "ObjectValue", fields: [] },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetEventsWithoutVonageSessionQuery, GetEventsWithoutVonageSessionQueryVariables>;
export const Recording_GetEventDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "Recording_GetEvent" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledStartTime" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledEndTime" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "room" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "channelStack" },
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        {
                                                            kind: "Field",
                                                            name: { kind: "Name", value: "mediaPackageChannelId" },
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<Recording_GetEventQuery, Recording_GetEventQueryVariables>;
export const StartMediaPackageHarvestJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "StartMediaPackageHarvestJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "awsJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_MediaPackageHarvestJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "mediaPackageHarvestJobId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "awsJobId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "IN_PROGRESS" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<StartMediaPackageHarvestJobMutation, StartMediaPackageHarvestJobMutationVariables>;
export const CreateMediaPackageHarvestJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CreateMediaPackageHarvestJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_job_queues_MediaPackageHarvestJob_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "subconferenceId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eventId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "NEW" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateMediaPackageHarvestJobMutation, CreateMediaPackageHarvestJobMutationVariables>;
export const Recording_GetMediaPackageHarvestJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "Recording_GetMediaPackageHarvestJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "mediaPackageHarvestJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "job_queues_MediaPackageHarvestJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "mediaPackageHarvestJobId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "mediaPackageHarvestJobId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "event" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "item" },
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        { kind: "Field", name: { kind: "Name", value: "title" } },
                                                        {
                                                            kind: "Field",
                                                            name: { kind: "Name", value: "subconferenceId" },
                                                        },
                                                    ],
                                                },
                                            },
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "name" } },
                                            { kind: "Field", name: { kind: "Name", value: "scheduledStartTime" } },
                                            { kind: "Field", name: { kind: "Name", value: "scheduledEndTime" } },
                                        ],
                                    },
                                },
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    Recording_GetMediaPackageHarvestJobQuery,
    Recording_GetMediaPackageHarvestJobQueryVariables
>;
export const Recording_CompleteMediaPackageHarvestJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "Recording_CompleteMediaPackageHarvestJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "message" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "data" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "source" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } },
                    defaultValue: { kind: "NullValue" },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "itemId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                    defaultValue: { kind: "NullValue" },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_MediaPackageHarvestJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "COMPLETED" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "message" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "message" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_content_Element_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "data" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "data" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "itemId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "itemId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "subconferenceId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "typeName" },
                                            value: { kind: "EnumValue", value: "VIDEO_FILE" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "name" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "name" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "source" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "source" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    Recording_CompleteMediaPackageHarvestJobMutation,
    Recording_CompleteMediaPackageHarvestJobMutationVariables
>;
export const Recording_IgnoreMediaPackageHarvestJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "Recording_IgnoreMediaPackageHarvestJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "message" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_MediaPackageHarvestJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "COMPLETED" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "message" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "message" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    Recording_IgnoreMediaPackageHarvestJobMutation,
    Recording_IgnoreMediaPackageHarvestJobMutationVariables
>;
export const FailMediaPackageHarvestJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "FailMediaPackageHarvestJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "awsJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "message" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_MediaPackageHarvestJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "message" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "message" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "FAILED" },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "mediaPackageHarvestJobId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "awsJobId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<FailMediaPackageHarvestJobMutation, FailMediaPackageHarvestJobMutationVariables>;
export const RegistrantGoogleAccount_GetRegistrantGoogleAccountDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "RegistrantGoogleAccount_GetRegistrantGoogleAccount" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_GoogleAccount_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "registrantId" } },
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "tokenData" } },
                                { kind: "Field", name: { kind: "Name", value: "youTubeData" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    RegistrantGoogleAccount_GetRegistrantGoogleAccountQuery,
    RegistrantGoogleAccount_GetRegistrantGoogleAccountQueryVariables
>;
export const RegistrantGoogleAccount_UpdateRegistrantGoogleAccountDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "RegistrantGoogleAccount_UpdateRegistrantGoogleAccount" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantGoogleAccountId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "youTubeData" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_registrant_GoogleAccount_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "registrantGoogleAccountId" },
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "youTubeData" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "youTubeData" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    RegistrantGoogleAccount_UpdateRegistrantGoogleAccountMutation,
    RegistrantGoogleAccount_UpdateRegistrantGoogleAccountMutationVariables
>;
export const SetRoomVonageSessionIdDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "SetRoomVonageSessionId" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "sessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_room_Room_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "publicVonageSessionId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "sessionId" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SetRoomVonageSessionIdMutation, SetRoomVonageSessionIdMutationVariables>;
export const GetRegistrantsForRoomAndUserDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRegistrantsForRoomAndUser" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conference" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "rooms" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "id" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "_eq" },
                                                                                value: {
                                                                                    kind: "Variable",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "roomId",
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "userId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "userId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRegistrantsForRoomAndUserQuery, GetRegistrantsForRoomAndUserQueryVariables>;
export const AddRegistrantToRoomMembershipsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "AddRegistrantToRoomMemberships" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomPersonRoleName" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "room_PersonRole_enum" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_room_RoomMembership_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "registrantId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "roomId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "personRoleName" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "roomPersonRoleName" },
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<AddRegistrantToRoomMembershipsMutation, AddRegistrantToRoomMembershipsMutationVariables>;
export const CreateDmRoom_GetRegistrantsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CreateDmRoom_GetRegistrants" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantIds" } },
                    type: {
                        kind: "ListType",
                        type: {
                            kind: "NonNullType",
                            type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                        },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "registrantIds" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "displayName" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateDmRoom_GetRegistrantsQuery, CreateDmRoom_GetRegistrantsQueryVariables>;
export const CreateDmRoom_GetExistingRoomsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CreateDmRoom_GetExistingRooms" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantIds" } },
                    type: {
                        kind: "ListType",
                        type: {
                            kind: "NonNullType",
                            type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "roomMemberships" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "registrantId" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_in" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "registrantIds" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_not" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "registrantId" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "_nin" },
                                                                                value: {
                                                                                    kind: "Variable",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "registrantIds",
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "managementModeName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "DM" },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "chatId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "roomMemberships" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "registrantId" } },
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateDmRoom_GetExistingRoomsQuery, CreateDmRoom_GetExistingRoomsQueryVariables>;
export const CreateDmRoomDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CreateDmRoom" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "capacity" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "Int" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "data" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: {
                                    kind: "NamedType",
                                    name: { kind: "Name", value: "room_RoomMembership_insert_input" },
                                },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_room_Room_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "capacity" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "capacity" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: { kind: "NullValue" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "name" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "name" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "managementModeName" },
                                            value: { kind: "EnumValue", value: "DM" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "roomMemberships" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "data" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "data" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "chatId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateDmRoomMutation, CreateDmRoomMutationVariables>;
export const SelectShufflePeriodDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectShufflePeriod" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "now" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_ShufflePeriod_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "ActiveShufflePeriod" } },
                            ],
                        },
                    },
                ],
            },
        },
        ...ActiveShufflePeriodFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<SelectShufflePeriodQuery, SelectShufflePeriodQueryVariables>;
export const SelectActiveShufflePeriodsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectActiveShufflePeriods" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "from" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "until" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "now" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_ShufflePeriod" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "startAt" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_lte" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "until" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "endAt" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_gte" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "from" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "ActiveShufflePeriod" } },
                            ],
                        },
                    },
                ],
            },
        },
        ...ActiveShufflePeriodFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<SelectActiveShufflePeriodsQuery, SelectActiveShufflePeriodsQueryVariables>;
export const AddPeopleToExistingShuffleRoomDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "AddPeopleToExistingShuffleRoom" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "shuffleRoomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "Int" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomMemberships" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: {
                                    kind: "NamedType",
                                    name: { kind: "Name", value: "room_RoomMembership_insert_input" },
                                },
                            },
                        },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "queueEntryIds" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "bigint" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_room_RoomMembership" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "objects" },
                                value: { kind: "Variable", name: { kind: "Name", value: "roomMemberships" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_room_ShuffleQueueEntry" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "queueEntryIds" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "allocatedShuffleRoomId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "allocatedShuffleRoomId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "shuffleRoomId" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "affected_rows" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<AddPeopleToExistingShuffleRoomMutation, AddPeopleToExistingShuffleRoomMutationVariables>;
export const ExpireShuffleQueueEntriesDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "ExpireShuffleQueueEntries" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "queueEntryIds" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "bigint" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_room_ShuffleQueueEntry" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "queueEntryIds" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "allocatedShuffleRoomId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "isExpired" },
                                            value: { kind: "BooleanValue", value: true },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "affected_rows" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<ExpireShuffleQueueEntriesMutation, ExpireShuffleQueueEntriesMutationVariables>;
export const InsertShuffleRoomDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InsertShuffleRoom" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "durationMinutes" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "Int" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "reshuffleUponEnd" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "Boolean" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "shufflePeriodId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "startedAt" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_room_ShuffleRoom_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "durationMinutes" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "durationMinutes" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "isEnded" },
                                            value: { kind: "BooleanValue", value: false },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "reshuffleUponEnd" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "reshuffleUponEnd" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "roomId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "shufflePeriodId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "shufflePeriodId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "startedAt" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "startedAt" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InsertShuffleRoomMutation, InsertShuffleRoomMutationVariables>;
export const InsertManagedRoomDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InsertManagedRoom" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "capacity" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "Int" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_room_Room_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "capacity" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "capacity" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "subconferenceId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "name" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "name" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "managementModeName" },
                                            value: { kind: "EnumValue", value: "MANAGED" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InsertManagedRoomMutation, InsertManagedRoomMutationVariables>;
export const SetAutoPinOnManagedRoomDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "SetAutoPinOnManagedRoom" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_chat_Chat" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "room" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "id" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "roomId" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "enableAutoPin" },
                                            value: { kind: "BooleanValue", value: true },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SetAutoPinOnManagedRoomMutation, SetAutoPinOnManagedRoomMutationVariables>;
export const SetShuffleRoomsEndedDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "SetShuffleRoomsEnded" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "bigint" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_room_ShuffleRoom" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "isEnded" },
                                            value: { kind: "BooleanValue", value: true },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "affected_rows" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SetShuffleRoomsEndedMutation, SetShuffleRoomsEndedMutationVariables>;
export const SuperUserStateDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SuperUserState" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "system_SuperUserState" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "isInitialised" } },
                                { kind: "Field", name: { kind: "Name", value: "canBeDirectlyInitialised" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "User" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "limit" },
                                value: { kind: "IntValue", value: "1" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SuperUserStateQuery, SuperUserStateQueryVariables>;
export const InitialiseSuperUserStateDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InitialiseSuperUserState" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_system_SuperUserPermissionGrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "objects" },
                                value: {
                                    kind: "ListValue",
                                    values: [
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "CREATE_CONFERENCE_DEMO_CODE" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_SU_PERMISSION" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_USERS" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "EDIT_USER_REGISTRANTS" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "LIST_CONFERENCE_DEMO_CODES" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "SET_SYSTEM_CONFIGURATION" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SYSTEM_CONFIGURATION" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_USERS" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SYSTEM_CONFIGURATION" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "SET_SYSTEM_CONFIGURATION" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "LIST_CONFERENCE_DEMO_CODES" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "CREATE_CONFERENCE_DEMO_CODE" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_USERS" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_USERS" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "INSERT_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "EDIT_USER_REGISTRANTS" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SU_PERMISSION_GRANT" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_SYSTEM_CONFIGURATION" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "SET_SYSTEM_CONFIGURATION" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "LIST_CONFERENCE_DEMO_CODES" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "CREATE_CONFERENCE_DEMO_CODE" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "VIEW_USERS" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_USERS" },
                                                },
                                            ],
                                        },
                                        {
                                            kind: "ObjectValue",
                                            fields: [
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "grantedPermissionName" },
                                                    value: { kind: "EnumValue", value: "DELETE_SU_PERMISSION" },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "userId" },
                                                    value: {
                                                        kind: "Variable",
                                                        name: { kind: "Name", value: "userId" },
                                                    },
                                                },
                                                {
                                                    kind: "ObjectField",
                                                    name: { kind: "Name", value: "targetPermissionName" },
                                                    value: { kind: "EnumValue", value: "EDIT_USER_REGISTRANTS" },
                                                },
                                            ],
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InitialiseSuperUserStateMutation, InitialiseSuperUserStateMutationVariables>;
export const UploadableElementDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "UploadableElement" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "accessToken" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "content_Element" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "item" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "itemPeople" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "person" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: {
                                                                                    kind: "Name",
                                                                                    value: "accessToken",
                                                                                },
                                                                                value: {
                                                                                    kind: "ObjectValue",
                                                                                    fields: [
                                                                                        {
                                                                                            kind: "ObjectField",
                                                                                            name: {
                                                                                                kind: "Name",
                                                                                                value: "_eq",
                                                                                            },
                                                                                            value: {
                                                                                                kind: "Variable",
                                                                                                name: {
                                                                                                    kind: "Name",
                                                                                                    value: "accessToken",
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "UploadableElementFields" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_Conference" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "programPeople" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "accessToken" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "accessToken" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "name" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "configurations" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "key" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "EnumValue",
                                                                        value: "UPLOAD_CUTOFF_TIMESTAMP",
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                            { kind: "Field", name: { kind: "Name", value: "key" } },
                                            { kind: "Field", name: { kind: "Name", value: "value" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
        ...UploadableElementFieldsFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<UploadableElementQuery, UploadableElementQueryVariables>;
export const GetUploadersDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetUploaders" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "content_Element_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "conference" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            {
                                                kind: "FragmentSpread",
                                                name: {
                                                    kind: "Name",
                                                    value: "Configuration_SubmissionNotificationRoles",
                                                },
                                            },
                                        ],
                                    },
                                },
                                { kind: "Field", name: { kind: "Name", value: "typeName" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "item" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "itemPeople" },
                                                arguments: [
                                                    {
                                                        kind: "Argument",
                                                        name: { kind: "Name", value: "where" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "person" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "_and" },
                                                                                value: {
                                                                                    kind: "ListValue",
                                                                                    values: [
                                                                                        {
                                                                                            kind: "ObjectValue",
                                                                                            fields: [
                                                                                                {
                                                                                                    kind: "ObjectField",
                                                                                                    name: {
                                                                                                        kind: "Name",
                                                                                                        value: "email",
                                                                                                    },
                                                                                                    value: {
                                                                                                        kind: "ObjectValue",
                                                                                                        fields: [
                                                                                                            {
                                                                                                                kind: "ObjectField",
                                                                                                                name: {
                                                                                                                    kind: "Name",
                                                                                                                    value: "_is_null",
                                                                                                                },
                                                                                                                value: {
                                                                                                                    kind: "BooleanValue",
                                                                                                                    value: false,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                        {
                                                                                            kind: "ObjectValue",
                                                                                            fields: [
                                                                                                {
                                                                                                    kind: "ObjectField",
                                                                                                    name: {
                                                                                                        kind: "Name",
                                                                                                        value: "email",
                                                                                                    },
                                                                                                    value: {
                                                                                                        kind: "ObjectValue",
                                                                                                        fields: [
                                                                                                            {
                                                                                                                kind: "ObjectField",
                                                                                                                name: {
                                                                                                                    kind: "Name",
                                                                                                                    value: "_neq",
                                                                                                                },
                                                                                                                value: {
                                                                                                                    kind: "StringValue",
                                                                                                                    value: "",
                                                                                                                    block: false,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        {
                                                            kind: "Field",
                                                            name: { kind: "Name", value: "person" },
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [
                                                                    {
                                                                        kind: "Field",
                                                                        name: { kind: "Name", value: "id" },
                                                                    },
                                                                    {
                                                                        kind: "Field",
                                                                        name: { kind: "Name", value: "name" },
                                                                    },
                                                                    {
                                                                        kind: "Field",
                                                                        name: { kind: "Name", value: "email" },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                        { kind: "Field", name: { kind: "Name", value: "roleName" } },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
        ...Configuration_SubmissionNotificationRolesFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<GetUploadersQuery, GetUploadersQueryVariables>;
export const SetUploadableElementUploadsRemainingDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "SetUploadableElementUploadsRemaining" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "uploadsRemaining" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "Int" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_content_Element_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "uploadsRemaining" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "uploadsRemaining" },
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    SetUploadableElementUploadsRemainingMutation,
    SetUploadableElementUploadsRemainingMutationVariables
>;
export const InsertSubmissionRequestEmailsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InsertSubmissionRequestEmails" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "personIds" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_collection_ProgramPerson" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "personIds" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_inc" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "submissionRequestsSentCount" },
                                            value: { kind: "IntValue", value: "1" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InsertSubmissionRequestEmailsMutation, InsertSubmissionRequestEmailsMutationVariables>;
export const SelectUnprocessedSubmissionRequestEmailJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectUnprocessedSubmissionRequestEmailJobs" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "job_queues_SubmissionRequestEmailJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "processed" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "BooleanValue", value: false },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "emailTemplate" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "person" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "name" } },
                                            { kind: "Field", name: { kind: "Name", value: "email" } },
                                            { kind: "Field", name: { kind: "Name", value: "accessToken" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "subconference" },
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        { kind: "Field", name: { kind: "Name", value: "name" } },
                                                        { kind: "Field", name: { kind: "Name", value: "shortName" } },
                                                    ],
                                                },
                                            },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "conference" },
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        { kind: "Field", name: { kind: "Name", value: "name" } },
                                                        { kind: "Field", name: { kind: "Name", value: "shortName" } },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    SelectUnprocessedSubmissionRequestEmailJobsQuery,
    SelectUnprocessedSubmissionRequestEmailJobsQueryVariables
>;
export const CompleteSubmissionRequestEmailJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CompleteSubmissionRequestEmailJobs" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_SubmissionRequestEmailJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "processed" },
                                            value: { kind: "BooleanValue", value: true },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    CompleteSubmissionRequestEmailJobsMutation,
    CompleteSubmissionRequestEmailJobsMutationVariables
>;
export const UpdateEventUsageDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "UpdateEventUsage" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_updateEventUsage" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UpdateEventUsageMutation, UpdateEventUsageMutationVariables>;
export const GetConferenceVideoChatNonEventRemainingQuotaDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetConferenceVideoChatNonEventRemainingQuota" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_RemainingQuota" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "remainingVideoChatNonEventTotalMinutes" },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    GetConferenceVideoChatNonEventRemainingQuotaQuery,
    GetConferenceVideoChatNonEventRemainingQuotaQueryVariables
>;
export const IncreaseConferenceVideoChatNonEventUsageDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "IncreaseConferenceVideoChatNonEventUsage" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "increase" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "Int" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "now" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_conference_Usage" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_inc" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "consumedVideoChatNonEventTotalMinutes" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "increase" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: {
                                                kind: "Name",
                                                value: "lastUpdatedConsumedVideoChatNonEventTotalMinutes",
                                            },
                                            value: { kind: "Variable", name: { kind: "Name", value: "now" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    IncreaseConferenceVideoChatNonEventUsageMutation,
    IncreaseConferenceVideoChatNonEventUsageMutationVariables
>;
export const GetRoomForUsageCalculationDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRoomForUsageCalculation" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "now" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "events" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "scheduledStartTime" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_lte" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "now" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "scheduledEndTime" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_gt" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "now" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRoomForUsageCalculationQuery, GetRoomForUsageCalculationQueryVariables>;
export const GetElementIdForVideoRenderJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetElementIdForVideoRenderJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoRenderJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "video_VideoRenderJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "videoRenderJobId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "elementId" } },
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetElementIdForVideoRenderJobQuery, GetElementIdForVideoRenderJobQueryVariables>;
export const SelectNewVideoRenderJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "SelectNewVideoRenderJobs" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "video_VideoRenderJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "limit" },
                                value: { kind: "IntValue", value: "10" },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "NEW" },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "order_by" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "created_at" },
                                            value: { kind: "EnumValue", value: "asc" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SelectNewVideoRenderJobsQuery, SelectNewVideoRenderJobsQueryVariables>;
export const MarkAndSelectNewVideoRenderJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "MarkAndSelectNewVideoRenderJobs" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_video_VideoRenderJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "NEW" },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "IN_PROGRESS" },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_inc" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "retriesCount" },
                                            value: { kind: "IntValue", value: "1" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            {
                                                kind: "FragmentSpread",
                                                name: { kind: "Name", value: "VideoRenderJobData" },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
        ...VideoRenderJobDataFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<MarkAndSelectNewVideoRenderJobsMutation, MarkAndSelectNewVideoRenderJobsMutationVariables>;
export const UnmarkVideoRenderJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "UnmarkVideoRenderJobs" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "ids" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                            },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_video_VideoRenderJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_in" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "ids" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "FAILED" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "affected_rows" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "returning" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UnmarkVideoRenderJobsMutation, UnmarkVideoRenderJobsMutationVariables>;
export const OngoingBroadcastableVideoRoomEventsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "OngoingBroadcastableVideoRoomEvents" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "time" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "sessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eventVonageSession" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "sessionId" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "sessionId" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "modeName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "LIVESTREAM" },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "scheduledEndTime" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_gt" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "time" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "scheduledStartTime" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_lte" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "time" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    OngoingBroadcastableVideoRoomEventsQuery,
    OngoingBroadcastableVideoRoomEventsQueryVariables
>;
export const OngoingArchivableVideoRoomEventsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "OngoingArchivableVideoRoomEvents" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "time" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "sessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "room" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "publicVonageSessionId" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "sessionId" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "modeName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "VIDEO_CHAT" },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "scheduledEndTime" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_gt" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "time" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "scheduledStartTime" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_lte" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "time" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "roomId" } },
                                { kind: "Field", name: { kind: "Name", value: "enableRecording" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<OngoingArchivableVideoRoomEventsQuery, OngoingArchivableVideoRoomEventsQueryVariables>;
export const GetEventForArchiveDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetEventForArchive" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "name" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledStartTime" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledEndTime" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "item" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "elements_aggregate" },
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        {
                                                            kind: "Field",
                                                            name: { kind: "Name", value: "aggregate" },
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [
                                                                    {
                                                                        kind: "Field",
                                                                        name: { kind: "Name", value: "count" },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetEventForArchiveQuery, GetEventForArchiveQueryVariables>;
export const InsertVonageArchiveElementDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InsertVonageArchiveElement" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "object" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "content_Element_insert_input" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_content_Element_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: { kind: "Variable", name: { kind: "Name", value: "object" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InsertVonageArchiveElementMutation, InsertVonageArchiveElementMutationVariables>;
export const CheckForVonageRoomRecordingDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CheckForVonageRoomRecording" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageSessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "video_VonageRoomRecording" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "roomId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "roomId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageSessionId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "vonageSessionId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "endedAt" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "s3Url" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CheckForVonageRoomRecordingQuery, CheckForVonageRoomRecordingQueryVariables>;
export const CheckForVonageRoomRecordingNotUploadedDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CheckForVonageRoomRecordingNotUploaded" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageSessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "video_VonageRoomRecording" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "roomId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "roomId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageSessionId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "vonageSessionId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "uploaded_at" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "s3Url" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "order_by" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "startedAt" },
                                            value: { kind: "EnumValue", value: "desc" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    CheckForVonageRoomRecordingNotUploadedQuery,
    CheckForVonageRoomRecordingNotUploadedQueryVariables
>;
export const SaveVonageRoomRecordingDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "SaveVonageRoomRecording" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "endedAt" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "uploadedAt" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "s3Url" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_video_VonageRoomRecording_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "endedAt" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "endedAt" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "uploaded_at" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "uploadedAt" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "s3Url" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "s3Url" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SaveVonageRoomRecordingMutation, SaveVonageRoomRecordingMutationVariables>;
export const Vonage_GetEventDetailsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "Vonage_GetEventDetails" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "modeName" } },
                                { kind: "Field", name: { kind: "Name", value: "enableRecording" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledStartTime" } },
                                { kind: "Field", name: { kind: "Name", value: "scheduledEndTime" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "eventVonageSession" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "sessionId" } },
                                        ],
                                    },
                                },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "room" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "capacity" } },
                                            { kind: "Field", name: { kind: "Name", value: "publicVonageSessionId" } },
                                        ],
                                    },
                                },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "eventPeople" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "person" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "registrantId" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "_eq" },
                                                                                value: {
                                                                                    kind: "Variable",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "registrantId",
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "roleName" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "GetRegistrant_Registrant" } },
                            ],
                        },
                    },
                ],
            },
        },
        ...GetRegistrant_RegistrantFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<Vonage_GetEventDetailsQuery, Vonage_GetEventDetailsQueryVariables>;
export const VonageJoinRoom_GetInfoDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "VonageJoinRoom_GetInfo" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "capacity" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "item" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "itemPeople" },
                                                arguments: [
                                                    {
                                                        kind: "Argument",
                                                        name: { kind: "Name", value: "where" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "person" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: {
                                                                                    kind: "Name",
                                                                                    value: "registrantId",
                                                                                },
                                                                                value: {
                                                                                    kind: "ObjectValue",
                                                                                    fields: [
                                                                                        {
                                                                                            kind: "ObjectField",
                                                                                            name: {
                                                                                                kind: "Name",
                                                                                                value: "_eq",
                                                                                            },
                                                                                            value: {
                                                                                                kind: "Variable",
                                                                                                name: {
                                                                                                    kind: "Name",
                                                                                                    value: "registrantId",
                                                                                                },
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        { kind: "Field", name: { kind: "Name", value: "roleName" } },
                                                        { kind: "Field", name: { kind: "Name", value: "personId" } },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<VonageJoinRoom_GetInfoQuery, VonageJoinRoom_GetInfoQueryVariables>;
export const AddVonageRoomRecordingToUserListDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "AddVonageRoomRecordingToUserList" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "recordingId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_registrant_SavedVonageRoomRecording_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "isHidden" },
                                            value: { kind: "BooleanValue", value: false },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "recordingId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "recordingId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "registrantId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "on_conflict" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "constraint" },
                                            value: {
                                                kind: "EnumValue",
                                                value: "SavedVonageRoomRecording_recordingId_registrantId_key",
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "update_columns" },
                                            value: { kind: "ListValue", values: [] },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    AddVonageRoomRecordingToUserListMutation,
    AddVonageRoomRecordingToUserListMutationVariables
>;
export const FindRoomByVonageSessionIdDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "FindRoomByVonageSessionId" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageSessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "now" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "publicVonageSessionId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "vonageSessionId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "events" },
                                    arguments: [
                                        {
                                            kind: "Argument",
                                            name: { kind: "Name", value: "where" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "scheduledStartTime" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_lte" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "now" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "scheduledEndTime" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_gte" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "now" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "eventPeople" },
                                                arguments: [
                                                    {
                                                        kind: "Argument",
                                                        name: { kind: "Name", value: "where" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "roleName" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "_in" },
                                                                                value: {
                                                                                    kind: "ListValue",
                                                                                    values: [
                                                                                        {
                                                                                            kind: "EnumValue",
                                                                                            value: "CHAIR",
                                                                                        },
                                                                                        {
                                                                                            kind: "EnumValue",
                                                                                            value: "PRESENTER",
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "person" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: {
                                                                                    kind: "Name",
                                                                                    value: "registrant",
                                                                                },
                                                                                value: {
                                                                                    kind: "ObjectValue",
                                                                                    fields: [
                                                                                        {
                                                                                            kind: "ObjectField",
                                                                                            name: {
                                                                                                kind: "Name",
                                                                                                value: "userId",
                                                                                            },
                                                                                            value: {
                                                                                                kind: "ObjectValue",
                                                                                                fields: [
                                                                                                    {
                                                                                                        kind: "ObjectField",
                                                                                                        name: {
                                                                                                            kind: "Name",
                                                                                                            value: "_eq",
                                                                                                        },
                                                                                                        value: {
                                                                                                            kind: "Variable",
                                                                                                            name: {
                                                                                                                kind: "Name",
                                                                                                                value: "userId",
                                                                                                            },
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "conference" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "registrants" },
                                                arguments: [
                                                    {
                                                        kind: "Argument",
                                                        name: { kind: "Name", value: "where" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "userId" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "_eq" },
                                                                                value: {
                                                                                    kind: "Variable",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "userId",
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                        {
                                                            kind: "Field",
                                                            name: { kind: "Name", value: "conferenceRole" },
                                                        },
                                                        {
                                                            kind: "Field",
                                                            name: { kind: "Name", value: "subconferenceMemberships" },
                                                            selectionSet: {
                                                                kind: "SelectionSet",
                                                                selections: [
                                                                    {
                                                                        kind: "Field",
                                                                        name: { kind: "Name", value: "id" },
                                                                    },
                                                                    {
                                                                        kind: "Field",
                                                                        name: {
                                                                            kind: "Name",
                                                                            value: "subconferenceId",
                                                                        },
                                                                    },
                                                                    {
                                                                        kind: "Field",
                                                                        name: { kind: "Name", value: "role" },
                                                                    },
                                                                ],
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<FindRoomByVonageSessionIdQuery, FindRoomByVonageSessionIdQueryVariables>;
export const VonageSession_RemoveInvalidStreamsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "VonageSession_RemoveInvalidStreams" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "validStreamIds" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "ListType",
                            type: {
                                kind: "NonNullType",
                                type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
                            },
                        },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageSessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "now" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_video_VonageParticipantStream" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageStreamId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_nin" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "validStreamIds" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageSessionId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "vonageSessionId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "stopped_at" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "stopped_at" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "now" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    VonageSession_RemoveInvalidStreamsMutation,
    VonageSession_RemoveInvalidStreamsMutationVariables
>;
export const FetchPresenceSummaryDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "FetchPresenceSummary" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "presence_Summary" },
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "total_unique_tabs" } },
                                { kind: "Field", name: { kind: "Name", value: "total_unique_user_ids" } },
                                { kind: "Field", name: { kind: "Name", value: "pages" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<FetchPresenceSummaryQuery, FetchPresenceSummaryQueryVariables>;
export const InsertAppStatsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InsertAppStats" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "object" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "analytics_AppStats_insert_input" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_analytics_AppStats_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: { kind: "Variable", name: { kind: "Name", value: "object" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InsertAppStatsMutation, InsertAppStatsMutationVariables>;
export const GetRegistrantDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRegistrant" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "userId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "userId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "GetRegistrant_Registrant" } },
                            ],
                        },
                    },
                ],
            },
        },
        ...GetRegistrant_RegistrantFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<GetRegistrantQuery, GetRegistrantQueryVariables>;
export const GetRegistrantByConferenceSlugDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRegistrantByConferenceSlug" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceSlug" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "userId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "userId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conference" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "slug" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "conferenceSlug" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "GetRegistrant_Registrant" } },
                            ],
                        },
                    },
                ],
            },
        },
        ...GetRegistrant_RegistrantFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<GetRegistrantByConferenceSlugQuery, GetRegistrantByConferenceSlugQueryVariables>;
export const Authorisation_FindRegistrantDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "Authorisation_FindRegistrant" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "registrantId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "userId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "userId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "GetRegistrant_Registrant" } },
                            ],
                        },
                    },
                ],
            },
        },
        ...GetRegistrant_RegistrantFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<Authorisation_FindRegistrantQuery, Authorisation_FindRegistrantQueryVariables>;
export const Authorisation_GetRegistrantDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "Authorisation_GetRegistrant" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Registrant_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "FragmentSpread", name: { kind: "Name", value: "GetRegistrant_Registrant" } },
                            ],
                        },
                    },
                ],
            },
        },
        ...GetRegistrant_RegistrantFragmentDoc.definitions,
    ],
} as unknown as DocumentNode<Authorisation_GetRegistrantQuery, Authorisation_GetRegistrantQueryVariables>;
export const GetConfigurationValueDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetConfigurationValue" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "key" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "conference_ConfigurationKey_enum" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "conference_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "conferenceId" },
                                value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "Variable", name: { kind: "Name", value: "key" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetConfigurationValueQuery, GetConfigurationValueQueryVariables>;
export const FailConferencePrepareJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "FailConferencePrepareJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "message" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_PrepareJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "FAILED" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "message" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "message" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<FailConferencePrepareJobMutation, FailConferencePrepareJobMutationVariables>;
export const CompleteConferencePrepareJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CompleteConferencePrepareJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_job_queues_PrepareJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "COMPLETED" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CompleteConferencePrepareJobMutation, CompleteConferencePrepareJobMutationVariables>;
export const GetElementByIdDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetElementById" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "content_Element_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "data" } },
                                { kind: "Field", name: { kind: "Name", value: "typeName" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetElementByIdQuery, GetElementByIdQueryVariables>;
export const GetEmailTemplatesDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetEmailTemplates" },
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        alias: { kind: "Name", value: "emailTemplates" },
                        name: { kind: "Name", value: "system_Configuration_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "key" },
                                value: { kind: "EnumValue", value: "EMAIL_TEMPLATES" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "key" } },
                                { kind: "Field", name: { kind: "Name", value: "value" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetEmailTemplatesQuery, GetEmailTemplatesQueryVariables>;
export const GetEventVonageSessionDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetEventVonageSession" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "video_EventVonageSession" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eventId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "eventId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetEventVonageSessionQuery, GetEventVonageSessionQueryVariables>;
export const SetEventVonageSessionIdDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "SetEventVonageSessionId" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "sessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_video_EventVonageSession_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "eventId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "subconferenceId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "sessionId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "sessionId" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "on_conflict" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "constraint" },
                                            value: { kind: "EnumValue", value: "EventVonageSession_eventId_key" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "update_columns" },
                                            value: { kind: "EnumValue", value: "sessionId" },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<SetEventVonageSessionIdMutation, SetEventVonageSessionIdMutationVariables>;
export const CreateItemRoom_GetItemDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CreateItemRoom_GetItem" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "id" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "content_Item_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "id" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "chatId" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "room" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                                    },
                                },
                                { kind: "Field", name: { kind: "Name", value: "title" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateItemRoom_GetItemQuery, CreateItemRoom_GetItemQueryVariables>;
export const Item_CreateRoomDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "Item_CreateRoom" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "chatId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                    defaultValue: { kind: "NullValue" },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "name" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "itemId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                    defaultValue: { kind: "NullValue" },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_room_Room_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "capacity" },
                                            value: { kind: "IntValue", value: "50" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "chatId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "chatId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "name" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "name" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "itemId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "itemId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "managementModeName" },
                                            value: { kind: "EnumValue", value: "PUBLIC" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "subconferenceId" },
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<Item_CreateRoomMutation, Item_CreateRoomMutationVariables>;
export const GetRoomConferenceIdDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRoomConferenceId" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRoomConferenceIdQuery, GetRoomConferenceIdQueryVariables>;
export const GetRoomThatRegistrantCanJoinDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRoomThatRegistrantCanJoin" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceCond" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "uuid_comparison_exp" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantCond" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "registrant_Registrant_bool_exp" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "roomId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conference" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "id" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "conferenceId" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "registrants" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "registrantCond" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "subconferenceCond" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "_or" },
                                            value: {
                                                kind: "ListValue",
                                                values: [
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "roomMemberships" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "registrant" },
                                                                            value: {
                                                                                kind: "ObjectValue",
                                                                                fields: [
                                                                                    {
                                                                                        kind: "ObjectField",
                                                                                        name: {
                                                                                            kind: "Name",
                                                                                            value: "id",
                                                                                        },
                                                                                        value: {
                                                                                            kind: "ObjectValue",
                                                                                            fields: [
                                                                                                {
                                                                                                    kind: "ObjectField",
                                                                                                    name: {
                                                                                                        kind: "Name",
                                                                                                        value: "_eq",
                                                                                                    },
                                                                                                    value: {
                                                                                                        kind: "Variable",
                                                                                                        name: {
                                                                                                            kind: "Name",
                                                                                                            value: "registrantId",
                                                                                                        },
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "managementModeName" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "_eq" },
                                                                            value: {
                                                                                kind: "EnumValue",
                                                                                value: "PUBLIC",
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "publicVonageSessionId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "conference" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "registrants" },
                                                arguments: [
                                                    {
                                                        kind: "Argument",
                                                        name: { kind: "Name", value: "where" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "id" },
                                                                    value: {
                                                                        kind: "ObjectValue",
                                                                        fields: [
                                                                            {
                                                                                kind: "ObjectField",
                                                                                name: { kind: "Name", value: "_eq" },
                                                                                value: {
                                                                                    kind: "Variable",
                                                                                    name: {
                                                                                        kind: "Name",
                                                                                        value: "registrantId",
                                                                                    },
                                                                                },
                                                                            },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRoomThatRegistrantCanJoinQuery, GetRoomThatRegistrantCanJoinQueryVariables>;
export const CreateRoomChimeMeetingDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CreateRoomChimeMeeting" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "subconferenceId" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "chimeMeetingData" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "chimeMeetingId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_room_ChimeMeeting_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "subconferenceId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "subconferenceId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "chimeMeetingData" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "chimeMeetingData" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "chimeMeetingId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "chimeMeetingId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "roomId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateRoomChimeMeetingMutation, CreateRoomChimeMeetingMutationVariables>;
export const GetRoomChimeMeetingDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRoomChimeMeeting" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_ChimeMeeting" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "roomId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "roomId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "chimeMeetingData" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRoomChimeMeetingQuery, GetRoomChimeMeetingQueryVariables>;
export const GetRoomVonageMeetingDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRoomVonageMeeting" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "publicVonageSessionId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRoomVonageMeetingQuery, GetRoomVonageMeetingQueryVariables>;
export const GetRoomBySessionIdDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRoomBySessionId" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "sessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "publicVonageSessionId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "sessionId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRoomBySessionIdQuery, GetRoomBySessionIdQueryVariables>;
export const GetRoomByChimeMeetingIdDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRoomByChimeMeetingId" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "meetingId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "chimeMeeting" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "chimeMeetingId" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "meetingId" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "conferenceId" } },
                                { kind: "Field", name: { kind: "Name", value: "subconferenceId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRoomByChimeMeetingIdQuery, GetRoomByChimeMeetingIdQueryVariables>;
export const DeleteRoomChimeMeetingDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "DeleteRoomChimeMeeting" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "chimeMeetingId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "delete_room_ChimeMeeting_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "chimeMeetingId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<DeleteRoomChimeMeetingMutation, DeleteRoomChimeMeetingMutationVariables>;
export const DeleteRoomChimeMeetingForRoomDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "DeleteRoomChimeMeetingForRoom" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "chimeMeetingId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "delete_room_ChimeMeeting" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "roomId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "roomId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "chimeMeetingId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "chimeMeetingId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<DeleteRoomChimeMeetingForRoomMutation, DeleteRoomChimeMeetingForRoomMutationVariables>;
export const InsertVonageSessionLayoutDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "InsertVonageSessionLayout" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "object" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: { kind: "Name", value: "video_VonageSessionLayout_insert_input" },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_video_VonageSessionLayout_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: { kind: "Variable", name: { kind: "Name", value: "object" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<InsertVonageSessionLayoutMutation, InsertVonageSessionLayoutMutationVariables>;
export const CreateTranscriptionJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CreateTranscriptionJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "awsTranscribeJobName" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoS3Url" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "transcriptionS3Url" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "languageCode" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_video_TranscriptionJob_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "awsTranscribeJobName" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "awsTranscribeJobName" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "elementId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "elementId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "videoS3Url" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "videoS3Url" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "transcriptionS3Url" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "transcriptionS3Url" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "languageCode" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "languageCode" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateTranscriptionJobMutation, CreateTranscriptionJobMutationVariables>;
export const GetTranscriptionJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetTranscriptionJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "awsTranscribeJobName" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "video_TranscriptionJob" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "awsTranscribeJobName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "awsTranscribeJobName" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "videoS3Url" } },
                                { kind: "Field", name: { kind: "Name", value: "elementId" } },
                                { kind: "Field", name: { kind: "Name", value: "transcriptionS3Url" } },
                                { kind: "Field", name: { kind: "Name", value: "languageCode" } },
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetTranscriptionJobQuery, GetTranscriptionJobQueryVariables>;
export const CompleteVideoRenderJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CompleteVideoRenderJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoRenderJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "data" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_video_VideoRenderJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "videoRenderJobId" },
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "COMPLETED" },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_append" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "data" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "data" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "elementId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CompleteVideoRenderJobMutation, CompleteVideoRenderJobMutationVariables>;
export const FailVideoRenderJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "FailVideoRenderJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoRenderJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "message" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_video_VideoRenderJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "videoRenderJobId" },
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "FAILED" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "message" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "message" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "conferencePrepareJobId" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<FailVideoRenderJobMutation, FailVideoRenderJobMutationVariables>;
export const ExpireVideoRenderJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "ExpireVideoRenderJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoRenderJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "message" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_video_VideoRenderJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "videoRenderJobId" },
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "jobStatusName" },
                                            value: { kind: "EnumValue", value: "EXPIRED" },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "message" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "message" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<ExpireVideoRenderJobMutation, ExpireVideoRenderJobMutationVariables>;
export const UpdateVideoRenderJobDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "UpdateVideoRenderJob" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoRenderJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "data" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "jsonb" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_video_VideoRenderJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "videoRenderJobId" },
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_append" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "data" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "data" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UpdateVideoRenderJobMutation, UpdateVideoRenderJobMutationVariables>;
export const CountUnfinishedVideoRenderJobsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "CountUnfinishedVideoRenderJobs" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferencePrepareJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "video_VideoRenderJob_aggregate" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferencePrepareJobId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferencePrepareJobId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "_and" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "jobStatusName" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_nin" },
                                                                    value: {
                                                                        kind: "ListValue",
                                                                        values: [
                                                                            { kind: "EnumValue", value: "COMPLETED" },
                                                                        ],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "aggregate" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "count" } }],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CountUnfinishedVideoRenderJobsQuery, CountUnfinishedVideoRenderJobsQueryVariables>;
export const GetBroadcastVideoRenderJobDetailsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetBroadcastVideoRenderJobDetails" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "videoRenderJobId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "video_VideoRenderJob_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "videoRenderJobId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "elementId" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "conferencePrepareJob" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "jobStatusName" } },
                                        ],
                                    },
                                },
                                { kind: "Field", name: { kind: "Name", value: "jobStatusName" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetBroadcastVideoRenderJobDetailsQuery, GetBroadcastVideoRenderJobDetailsQueryVariables>;
export const OngoingArchivableVideoRoomEventsWithRoomInfoDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "OngoingArchivableVideoRoomEventsWithRoomInfo" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "time" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "sessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "room" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "publicVonageSessionId" },
                                                        value: {
                                                            kind: "ObjectValue",
                                                            fields: [
                                                                {
                                                                    kind: "ObjectField",
                                                                    name: { kind: "Name", value: "_eq" },
                                                                    value: {
                                                                        kind: "Variable",
                                                                        name: { kind: "Name", value: "sessionId" },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "modeName" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: { kind: "EnumValue", value: "VIDEO_CHAT" },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "scheduledEndTime" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_gt" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "time" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "scheduledStartTime" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_lte" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "time" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "roomId" } },
                            ],
                        },
                    },
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "publicVonageSessionId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "sessionId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<
    OngoingArchivableVideoRoomEventsWithRoomInfoQuery,
    OngoingArchivableVideoRoomEventsWithRoomInfoQueryVariables
>;
export const GetEventBroadcastDetailsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetEventBroadcastDetails" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "schedule_Event_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "room" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            {
                                                kind: "Field",
                                                name: { kind: "Name", value: "channelStack" },
                                                selectionSet: {
                                                    kind: "SelectionSet",
                                                    selections: [
                                                        {
                                                            kind: "Field",
                                                            name: { kind: "Name", value: "rtmpAInputUri" },
                                                        },
                                                        {
                                                            kind: "Field",
                                                            name: { kind: "Name", value: "rtmpBInputUri" },
                                                        },
                                                        { kind: "Field", name: { kind: "Name", value: "id" } },
                                                    ],
                                                },
                                            },
                                        ],
                                    },
                                },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "eventVonageSession" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [
                                            { kind: "Field", name: { kind: "Name", value: "sessionId" } },
                                            { kind: "Field", name: { kind: "Name", value: "id" } },
                                            { kind: "Field", name: { kind: "Name", value: "rtmpInputName" } },
                                        ],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetEventBroadcastDetailsQuery, GetEventBroadcastDetailsQueryVariables>;
export const GetRoomArchiveDetailsDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetRoomArchiveDetails" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "room_Room_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "id" },
                                value: { kind: "Variable", name: { kind: "Name", value: "roomId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "publicVonageSessionId" } },
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetRoomArchiveDetailsQuery, GetRoomArchiveDetailsQueryVariables>;
export const CreateVonageRoomRecordingDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CreateVonageRoomRecording" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "object" } },
                    type: {
                        kind: "NonNullType",
                        type: {
                            kind: "NamedType",
                            name: { kind: "Name", value: "video_VonageRoomRecording_insert_input" },
                        },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_video_VonageRoomRecording_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: { kind: "Variable", name: { kind: "Name", value: "object" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateVonageRoomRecordingMutation, CreateVonageRoomRecordingMutationVariables>;
export const DisableEventRecordingFlagDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "DisableEventRecordingFlag" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_schedule_Event_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "pk_columns" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "id" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "eventId" } },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "enableRecording" },
                                            value: { kind: "BooleanValue", value: false },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<DisableEventRecordingFlagMutation, DisableEventRecordingFlagMutationVariables>;
export const CreateVonageParticipantStreamDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "CreateVonageParticipantStream" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageSessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageConnectionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageStreamId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageStreamType" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "insert_video_VonageParticipantStream_one" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "object" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "registrantId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageSessionId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "vonageSessionId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageConnectionId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "vonageConnectionId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageStreamId" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "vonageStreamId" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageStreamType" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "vonageStreamType" },
                                            },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "id" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<CreateVonageParticipantStreamMutation, CreateVonageParticipantStreamMutationVariables>;
export const RemoveVonageParticipantStreamDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "RemoveVonageParticipantStream" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "conferenceId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageSessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageConnectionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageStreamId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "now" } },
                    type: {
                        kind: "NonNullType",
                        type: { kind: "NamedType", name: { kind: "Name", value: "timestamptz" } },
                    },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_video_VonageParticipantStream" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "registrantId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "registrantId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "conferenceId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "conferenceId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageSessionId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "vonageSessionId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageConnectionId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "vonageConnectionId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageStreamId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "vonageStreamId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "stopped_at" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_is_null" },
                                                        value: { kind: "BooleanValue", value: true },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "stopped_at" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "now" } },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<RemoveVonageParticipantStreamMutation, RemoveVonageParticipantStreamMutationVariables>;
export const GetVonageSessionLayoutDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "GetVonageSessionLayout" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "vonageSessionId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "video_VonageSessionLayout" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "vonageSessionId" },
                                            value: {
                                                kind: "ObjectValue",
                                                fields: [
                                                    {
                                                        kind: "ObjectField",
                                                        name: { kind: "Name", value: "_eq" },
                                                        value: {
                                                            kind: "Variable",
                                                            name: { kind: "Name", value: "vonageSessionId" },
                                                        },
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "order_by" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "created_at" },
                                            value: { kind: "EnumValue", value: "desc" },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "limit" },
                                value: { kind: "IntValue", value: "1" },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "id" } },
                                { kind: "Field", name: { kind: "Name", value: "layoutData" } },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<GetVonageSessionLayoutQuery, GetVonageSessionLayoutQueryVariables>;
export const UpdateProfilePhotoDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "mutation",
            name: { kind: "Name", value: "UpdateProfilePhoto" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "userId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "String" } } },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "objectName" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
                    defaultValue: { kind: "NullValue" },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "bucket" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
                    defaultValue: { kind: "NullValue" },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "region" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
                    defaultValue: { kind: "NullValue" },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "photoURL_50x50" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
                    defaultValue: { kind: "NullValue" },
                },
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "photoURL_350x350" } },
                    type: { kind: "NamedType", name: { kind: "Name", value: "String" } },
                    defaultValue: { kind: "NullValue" },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "update_registrant_Profile" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "where" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "_and" },
                                            value: {
                                                kind: "ListValue",
                                                values: [
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "registrantId" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "_eq" },
                                                                            value: {
                                                                                kind: "Variable",
                                                                                name: {
                                                                                    kind: "Name",
                                                                                    value: "registrantId",
                                                                                },
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                    {
                                                        kind: "ObjectValue",
                                                        fields: [
                                                            {
                                                                kind: "ObjectField",
                                                                name: { kind: "Name", value: "registrant" },
                                                                value: {
                                                                    kind: "ObjectValue",
                                                                    fields: [
                                                                        {
                                                                            kind: "ObjectField",
                                                                            name: { kind: "Name", value: "_or" },
                                                                            value: {
                                                                                kind: "ListValue",
                                                                                values: [
                                                                                    {
                                                                                        kind: "ObjectValue",
                                                                                        fields: [
                                                                                            {
                                                                                                kind: "ObjectField",
                                                                                                name: {
                                                                                                    kind: "Name",
                                                                                                    value: "userId",
                                                                                                },
                                                                                                value: {
                                                                                                    kind: "ObjectValue",
                                                                                                    fields: [
                                                                                                        {
                                                                                                            kind: "ObjectField",
                                                                                                            name: {
                                                                                                                kind: "Name",
                                                                                                                value: "_eq",
                                                                                                            },
                                                                                                            value: {
                                                                                                                kind: "Variable",
                                                                                                                name: {
                                                                                                                    kind: "Name",
                                                                                                                    value: "userId",
                                                                                                                },
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                    {
                                                                                        kind: "ObjectValue",
                                                                                        fields: [
                                                                                            {
                                                                                                kind: "ObjectField",
                                                                                                name: {
                                                                                                    kind: "Name",
                                                                                                    value: "conference",
                                                                                                },
                                                                                                value: {
                                                                                                    kind: "ObjectValue",
                                                                                                    fields: [
                                                                                                        {
                                                                                                            kind: "ObjectField",
                                                                                                            name: {
                                                                                                                kind: "Name",
                                                                                                                value: "createdBy",
                                                                                                            },
                                                                                                            value: {
                                                                                                                kind: "ObjectValue",
                                                                                                                fields: [
                                                                                                                    {
                                                                                                                        kind: "ObjectField",
                                                                                                                        name: {
                                                                                                                            kind: "Name",
                                                                                                                            value: "_eq",
                                                                                                                        },
                                                                                                                        value: {
                                                                                                                            kind: "Variable",
                                                                                                                            name: {
                                                                                                                                kind: "Name",
                                                                                                                                value: "userId",
                                                                                                                            },
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ],
                                                                            },
                                                                        },
                                                                    ],
                                                                },
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        },
                                    ],
                                },
                            },
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "_set" },
                                value: {
                                    kind: "ObjectValue",
                                    fields: [
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "photoS3BucketName" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "bucket" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "photoS3BucketRegion" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "region" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "photoS3ObjectName" },
                                            value: { kind: "Variable", name: { kind: "Name", value: "objectName" } },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "photoURL_50x50" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "photoURL_50x50" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "photoURL_350x350" },
                                            value: {
                                                kind: "Variable",
                                                name: { kind: "Name", value: "photoURL_350x350" },
                                            },
                                        },
                                        {
                                            kind: "ObjectField",
                                            name: { kind: "Name", value: "hasBeenEdited" },
                                            value: { kind: "BooleanValue", value: true },
                                        },
                                    ],
                                },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{ kind: "Field", name: { kind: "Name", value: "affected_rows" } }],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<UpdateProfilePhotoMutation, UpdateProfilePhotoMutationVariables>;
export const MigrateProfilePhoto_GetRegistrantDocument = {
    kind: "Document",
    definitions: [
        {
            kind: "OperationDefinition",
            operation: "query",
            name: { kind: "Name", value: "MigrateProfilePhoto_GetRegistrant" },
            variableDefinitions: [
                {
                    kind: "VariableDefinition",
                    variable: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                    type: { kind: "NonNullType", type: { kind: "NamedType", name: { kind: "Name", value: "uuid" } } },
                },
            ],
            selectionSet: {
                kind: "SelectionSet",
                selections: [
                    {
                        kind: "Field",
                        name: { kind: "Name", value: "registrant_Profile_by_pk" },
                        arguments: [
                            {
                                kind: "Argument",
                                name: { kind: "Name", value: "registrantId" },
                                value: { kind: "Variable", name: { kind: "Name", value: "registrantId" } },
                            },
                        ],
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [
                                { kind: "Field", name: { kind: "Name", value: "photoS3BucketName" } },
                                { kind: "Field", name: { kind: "Name", value: "photoS3BucketRegion" } },
                                { kind: "Field", name: { kind: "Name", value: "photoS3ObjectName" } },
                                {
                                    kind: "Field",
                                    name: { kind: "Name", value: "registrant" },
                                    selectionSet: {
                                        kind: "SelectionSet",
                                        selections: [{ kind: "Field", name: { kind: "Name", value: "userId" } }],
                                    },
                                },
                            ],
                        },
                    },
                ],
            },
        },
    ],
} as unknown as DocumentNode<MigrateProfilePhoto_GetRegistrantQuery, MigrateProfilePhoto_GetRegistrantQueryVariables>;
