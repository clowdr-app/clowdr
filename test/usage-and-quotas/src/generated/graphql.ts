import gql from "graphql-tag";
import * as Urql from "urql";
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
    ID: string;
    String: string;
    Boolean: boolean;
    Int: number;
    Float: number;
    _uuid: any;
    bigint: any;
    float8: any;
    jsonb: any;
    name: any;
    numeric: any;
    timestamptz: any;
    uuid: any;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["Boolean"]>;
    readonly _gt?: InputMaybe<Scalars["Boolean"]>;
    readonly _gte?: InputMaybe<Scalars["Boolean"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["Boolean"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["Boolean"]>;
    readonly _lte?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Scalars["Boolean"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["Boolean"]>>;
};

export type ConfirmInvitationOutput = {
    readonly __typename?: "ConfirmInvitationOutput";
    readonly confSlug?: Maybe<Scalars["String"]>;
    readonly ok: Scalars["String"];
};

export type CreateItemRoomOutput = {
    readonly __typename?: "CreateItemRoomOutput";
    readonly message?: Maybe<Scalars["String"]>;
    readonly room?: Maybe<Room_Room>;
    readonly roomId?: Maybe<Scalars["String"]>;
};

export type CreateRoomDmOutput = {
    readonly __typename?: "CreateRoomDmOutput";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly room?: Maybe<Room_Room>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
};

/** columns and relationships of "Email" */
export type Email = {
    readonly __typename?: "Email";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt: Scalars["timestamptz"];
    readonly emailAddress: Scalars["String"];
    readonly errorMessage?: Maybe<Scalars["String"]>;
    readonly htmlContents: Scalars["String"];
    readonly id: Scalars["uuid"];
    readonly idempotencyKey: Scalars["uuid"];
    /** An object relationship */
    readonly invitation?: Maybe<Registrant_Invitation>;
    readonly invitationId?: Maybe<Scalars["uuid"]>;
    readonly plainTextContents: Scalars["String"];
    readonly reason: Scalars["String"];
    readonly recipientName?: Maybe<Scalars["String"]>;
    readonly retriesCount: Scalars["Int"];
    readonly sentAt?: Maybe<Scalars["timestamptz"]>;
    readonly status?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly subject: Scalars["String"];
    readonly updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly user?: Maybe<User>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** aggregated selection of "Email" */
export type Email_Aggregate = {
    readonly __typename?: "Email_aggregate";
    readonly aggregate?: Maybe<Email_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Email>;
};

/** aggregate fields of "Email" */
export type Email_Aggregate_Fields = {
    readonly __typename?: "Email_aggregate_fields";
    readonly avg?: Maybe<Email_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Email_Max_Fields>;
    readonly min?: Maybe<Email_Min_Fields>;
    readonly stddev?: Maybe<Email_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Email_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Email_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Email_Sum_Fields>;
    readonly var_pop?: Maybe<Email_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Email_Var_Samp_Fields>;
    readonly variance?: Maybe<Email_Variance_Fields>;
};

/** aggregate fields of "Email" */
export type Email_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Email_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "Email" */
export type Email_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Email_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Email_Max_Order_By>;
    readonly min?: InputMaybe<Email_Min_Order_By>;
    readonly stddev?: InputMaybe<Email_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Email_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Email_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Email_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Email_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Email_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Email_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Email" */
export type Email_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Email_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Email_On_Conflict>;
};

/** aggregate avg on columns */
export type Email_Avg_Fields = {
    readonly __typename?: "Email_avg_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "Email" */
export type Email_Avg_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Email". All fields are combined with a logical 'AND'. */
export type Email_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Email_Bool_Exp>>;
    readonly _not?: InputMaybe<Email_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Email_Bool_Exp>>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly emailAddress?: InputMaybe<String_Comparison_Exp>;
    readonly errorMessage?: InputMaybe<String_Comparison_Exp>;
    readonly htmlContents?: InputMaybe<String_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly idempotencyKey?: InputMaybe<Uuid_Comparison_Exp>;
    readonly invitation?: InputMaybe<Registrant_Invitation_Bool_Exp>;
    readonly invitationId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly plainTextContents?: InputMaybe<String_Comparison_Exp>;
    readonly reason?: InputMaybe<String_Comparison_Exp>;
    readonly recipientName?: InputMaybe<String_Comparison_Exp>;
    readonly retriesCount?: InputMaybe<Int_Comparison_Exp>;
    readonly sentAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly status?: InputMaybe<String_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly subject?: InputMaybe<String_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly user?: InputMaybe<User_Bool_Exp>;
    readonly userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "Email" */
export enum Email_Constraint {
    /** unique or primary key constraint */
    EmailIdempotencyKeyKey = "Email_idempotencyKey_key",
    /** unique or primary key constraint */
    EmailPkey = "Email_pkey",
}

/** input type for incrementing numeric columns in table "Email" */
export type Email_Inc_Input = {
    readonly retriesCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "Email" */
export type Email_Insert_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly emailAddress?: InputMaybe<Scalars["String"]>;
    readonly errorMessage?: InputMaybe<Scalars["String"]>;
    readonly htmlContents?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly idempotencyKey?: InputMaybe<Scalars["uuid"]>;
    readonly invitation?: InputMaybe<Registrant_Invitation_Obj_Rel_Insert_Input>;
    readonly invitationId?: InputMaybe<Scalars["uuid"]>;
    readonly plainTextContents?: InputMaybe<Scalars["String"]>;
    readonly reason?: InputMaybe<Scalars["String"]>;
    readonly recipientName?: InputMaybe<Scalars["String"]>;
    readonly retriesCount?: InputMaybe<Scalars["Int"]>;
    readonly sentAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly status?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly subject?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Email_Max_Fields = {
    readonly __typename?: "Email_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly emailAddress?: Maybe<Scalars["String"]>;
    readonly errorMessage?: Maybe<Scalars["String"]>;
    readonly htmlContents?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly idempotencyKey?: Maybe<Scalars["uuid"]>;
    readonly invitationId?: Maybe<Scalars["uuid"]>;
    readonly plainTextContents?: Maybe<Scalars["String"]>;
    readonly reason?: Maybe<Scalars["String"]>;
    readonly recipientName?: Maybe<Scalars["String"]>;
    readonly retriesCount?: Maybe<Scalars["Int"]>;
    readonly sentAt?: Maybe<Scalars["timestamptz"]>;
    readonly status?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly subject?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "Email" */
export type Email_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly emailAddress?: InputMaybe<Order_By>;
    readonly errorMessage?: InputMaybe<Order_By>;
    readonly htmlContents?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly idempotencyKey?: InputMaybe<Order_By>;
    readonly invitationId?: InputMaybe<Order_By>;
    readonly plainTextContents?: InputMaybe<Order_By>;
    readonly reason?: InputMaybe<Order_By>;
    readonly recipientName?: InputMaybe<Order_By>;
    readonly retriesCount?: InputMaybe<Order_By>;
    readonly sentAt?: InputMaybe<Order_By>;
    readonly status?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly subject?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Email_Min_Fields = {
    readonly __typename?: "Email_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly emailAddress?: Maybe<Scalars["String"]>;
    readonly errorMessage?: Maybe<Scalars["String"]>;
    readonly htmlContents?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly idempotencyKey?: Maybe<Scalars["uuid"]>;
    readonly invitationId?: Maybe<Scalars["uuid"]>;
    readonly plainTextContents?: Maybe<Scalars["String"]>;
    readonly reason?: Maybe<Scalars["String"]>;
    readonly recipientName?: Maybe<Scalars["String"]>;
    readonly retriesCount?: Maybe<Scalars["Int"]>;
    readonly sentAt?: Maybe<Scalars["timestamptz"]>;
    readonly status?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly subject?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "Email" */
export type Email_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly emailAddress?: InputMaybe<Order_By>;
    readonly errorMessage?: InputMaybe<Order_By>;
    readonly htmlContents?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly idempotencyKey?: InputMaybe<Order_By>;
    readonly invitationId?: InputMaybe<Order_By>;
    readonly plainTextContents?: InputMaybe<Order_By>;
    readonly reason?: InputMaybe<Order_By>;
    readonly recipientName?: InputMaybe<Order_By>;
    readonly retriesCount?: InputMaybe<Order_By>;
    readonly sentAt?: InputMaybe<Order_By>;
    readonly status?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly subject?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "Email" */
export type Email_Mutation_Response = {
    readonly __typename?: "Email_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Email>;
};

/** on_conflict condition type for table "Email" */
export type Email_On_Conflict = {
    readonly constraint: Email_Constraint;
    readonly update_columns?: ReadonlyArray<Email_Update_Column>;
    readonly where?: InputMaybe<Email_Bool_Exp>;
};

/** Ordering options when selecting data from "Email". */
export type Email_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly emailAddress?: InputMaybe<Order_By>;
    readonly errorMessage?: InputMaybe<Order_By>;
    readonly htmlContents?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly idempotencyKey?: InputMaybe<Order_By>;
    readonly invitation?: InputMaybe<Registrant_Invitation_Order_By>;
    readonly invitationId?: InputMaybe<Order_By>;
    readonly plainTextContents?: InputMaybe<Order_By>;
    readonly reason?: InputMaybe<Order_By>;
    readonly recipientName?: InputMaybe<Order_By>;
    readonly retriesCount?: InputMaybe<Order_By>;
    readonly sentAt?: InputMaybe<Order_By>;
    readonly status?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly subject?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly user?: InputMaybe<User_Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: Email */
export type Email_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "Email" */
export enum Email_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EmailAddress = "emailAddress",
    /** column name */
    ErrorMessage = "errorMessage",
    /** column name */
    HtmlContents = "htmlContents",
    /** column name */
    Id = "id",
    /** column name */
    IdempotencyKey = "idempotencyKey",
    /** column name */
    InvitationId = "invitationId",
    /** column name */
    PlainTextContents = "plainTextContents",
    /** column name */
    Reason = "reason",
    /** column name */
    RecipientName = "recipientName",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    SentAt = "sentAt",
    /** column name */
    Status = "status",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Subject = "subject",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "Email" */
export type Email_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly emailAddress?: InputMaybe<Scalars["String"]>;
    readonly errorMessage?: InputMaybe<Scalars["String"]>;
    readonly htmlContents?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly idempotencyKey?: InputMaybe<Scalars["uuid"]>;
    readonly invitationId?: InputMaybe<Scalars["uuid"]>;
    readonly plainTextContents?: InputMaybe<Scalars["String"]>;
    readonly reason?: InputMaybe<Scalars["String"]>;
    readonly recipientName?: InputMaybe<Scalars["String"]>;
    readonly retriesCount?: InputMaybe<Scalars["Int"]>;
    readonly sentAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly status?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly subject?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate stddev on columns */
export type Email_Stddev_Fields = {
    readonly __typename?: "Email_stddev_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "Email" */
export type Email_Stddev_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Email_Stddev_Pop_Fields = {
    readonly __typename?: "Email_stddev_pop_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "Email" */
export type Email_Stddev_Pop_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Email_Stddev_Samp_Fields = {
    readonly __typename?: "Email_stddev_samp_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "Email" */
export type Email_Stddev_Samp_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Email_Sum_Fields = {
    readonly __typename?: "Email_sum_fields";
    readonly retriesCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "Email" */
export type Email_Sum_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** update columns of table "Email" */
export enum Email_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EmailAddress = "emailAddress",
    /** column name */
    ErrorMessage = "errorMessage",
    /** column name */
    HtmlContents = "htmlContents",
    /** column name */
    Id = "id",
    /** column name */
    IdempotencyKey = "idempotencyKey",
    /** column name */
    InvitationId = "invitationId",
    /** column name */
    PlainTextContents = "plainTextContents",
    /** column name */
    Reason = "reason",
    /** column name */
    RecipientName = "recipientName",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    SentAt = "sentAt",
    /** column name */
    Status = "status",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Subject = "subject",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UserId = "userId",
}

/** aggregate var_pop on columns */
export type Email_Var_Pop_Fields = {
    readonly __typename?: "Email_var_pop_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "Email" */
export type Email_Var_Pop_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Email_Var_Samp_Fields = {
    readonly __typename?: "Email_var_samp_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "Email" */
export type Email_Var_Samp_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Email_Variance_Fields = {
    readonly __typename?: "Email_variance_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "Email" */
export type Email_Variance_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "Float". All fields are combined with logical 'AND'. */
export type Float_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["Float"]>;
    readonly _gt?: InputMaybe<Scalars["Float"]>;
    readonly _gte?: InputMaybe<Scalars["Float"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["Float"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["Float"]>;
    readonly _lte?: InputMaybe<Scalars["Float"]>;
    readonly _neq?: InputMaybe<Scalars["Float"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["Float"]>>;
};

/** columns and relationships of "ForeignKeyIntrospection" */
export type ForeignKeyIntrospection = {
    readonly __typename?: "ForeignKeyIntrospection";
    readonly child_column?: Maybe<Scalars["name"]>;
    readonly child_schema?: Maybe<Scalars["name"]>;
    readonly child_table?: Maybe<Scalars["name"]>;
    readonly constraint_name?: Maybe<Scalars["name"]>;
    readonly parent_column?: Maybe<Scalars["name"]>;
    readonly parent_schema?: Maybe<Scalars["name"]>;
    readonly parent_table?: Maybe<Scalars["name"]>;
};

/** aggregated selection of "ForeignKeyIntrospection" */
export type ForeignKeyIntrospection_Aggregate = {
    readonly __typename?: "ForeignKeyIntrospection_aggregate";
    readonly aggregate?: Maybe<ForeignKeyIntrospection_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<ForeignKeyIntrospection>;
};

/** aggregate fields of "ForeignKeyIntrospection" */
export type ForeignKeyIntrospection_Aggregate_Fields = {
    readonly __typename?: "ForeignKeyIntrospection_aggregate_fields";
    readonly count: Scalars["Int"];
};

/** aggregate fields of "ForeignKeyIntrospection" */
export type ForeignKeyIntrospection_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "ForeignKeyIntrospection". All fields are combined with a logical 'AND'. */
export type ForeignKeyIntrospection_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Bool_Exp>>;
    readonly _not?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Bool_Exp>>;
    readonly child_column?: InputMaybe<Name_Comparison_Exp>;
    readonly child_schema?: InputMaybe<Name_Comparison_Exp>;
    readonly child_table?: InputMaybe<Name_Comparison_Exp>;
    readonly constraint_name?: InputMaybe<Name_Comparison_Exp>;
    readonly parent_column?: InputMaybe<Name_Comparison_Exp>;
    readonly parent_schema?: InputMaybe<Name_Comparison_Exp>;
    readonly parent_table?: InputMaybe<Name_Comparison_Exp>;
};

/** Ordering options when selecting data from "ForeignKeyIntrospection". */
export type ForeignKeyIntrospection_Order_By = {
    readonly child_column?: InputMaybe<Order_By>;
    readonly child_schema?: InputMaybe<Order_By>;
    readonly child_table?: InputMaybe<Order_By>;
    readonly constraint_name?: InputMaybe<Order_By>;
    readonly parent_column?: InputMaybe<Order_By>;
    readonly parent_schema?: InputMaybe<Order_By>;
    readonly parent_table?: InputMaybe<Order_By>;
};

/** select columns of table "ForeignKeyIntrospection" */
export enum ForeignKeyIntrospection_Select_Column {
    /** column name */
    ChildColumn = "child_column",
    /** column name */
    ChildSchema = "child_schema",
    /** column name */
    ChildTable = "child_table",
    /** column name */
    ConstraintName = "constraint_name",
    /** column name */
    ParentColumn = "parent_column",
    /** column name */
    ParentSchema = "parent_schema",
    /** column name */
    ParentTable = "parent_table",
}

export type GetGoogleOAuthUrlOutput = {
    readonly __typename?: "GetGoogleOAuthUrlOutput";
    readonly url: Scalars["String"];
};

export type GetSlugOutput = {
    readonly __typename?: "GetSlugOutput";
    readonly slug?: Maybe<Scalars["String"]>;
    readonly url?: Maybe<Scalars["String"]>;
};

export type GetUploadAgreementOutput = {
    readonly __typename?: "GetUploadAgreementOutput";
    readonly agreementText?: Maybe<Scalars["String"]>;
    readonly agreementUrl?: Maybe<Scalars["String"]>;
};

export type InitialiseSuperUserOutput = {
    readonly __typename?: "InitialiseSuperUserOutput";
    readonly error?: Maybe<Scalars["String"]>;
    readonly success: Scalars["Boolean"];
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["Int"]>;
    readonly _gt?: InputMaybe<Scalars["Int"]>;
    readonly _gte?: InputMaybe<Scalars["Int"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["Int"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["Int"]>;
    readonly _lte?: InputMaybe<Scalars["Int"]>;
    readonly _neq?: InputMaybe<Scalars["Int"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["Int"]>>;
};

export type JoinEventVonageSessionOutput = {
    readonly __typename?: "JoinEventVonageSessionOutput";
    readonly accessToken?: Maybe<Scalars["String"]>;
    readonly isRecorded?: Maybe<Scalars["Boolean"]>;
};

export type JoinRoomChimeSessionOutput = {
    readonly __typename?: "JoinRoomChimeSessionOutput";
    readonly meeting?: Maybe<Scalars["jsonb"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly registrant?: Maybe<Scalars["jsonb"]>;
};

export type JoinRoomVonageSessionOutput = {
    readonly __typename?: "JoinRoomVonageSessionOutput";
    readonly accessToken?: Maybe<Scalars["String"]>;
    readonly isRecorded?: Maybe<Scalars["Boolean"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly sessionId?: Maybe<Scalars["String"]>;
};

export type MigrateElementOutput = {
    readonly __typename?: "MigrateElementOutput";
    readonly success: Scalars["Boolean"];
};

export type MigrateProfilePhotoResponse = {
    readonly __typename?: "MigrateProfilePhotoResponse";
    readonly ok: Scalars["Boolean"];
};

export type NotifyEventEnded = {
    readonly __typename?: "NotifyEventEnded";
    readonly ok: Scalars["Boolean"];
};

export type NotifyEventStarted = {
    readonly __typename?: "NotifyEventStarted";
    readonly ok: Scalars["Boolean"];
};

export type PresenceFlushOutput = {
    readonly __typename?: "PresenceFlushOutput";
    readonly ok?: Maybe<Scalars["String"]>;
};

export type PresenceSummaryOutput = {
    readonly __typename?: "PresenceSummaryOutput";
    readonly pages?: Maybe<Scalars["jsonb"]>;
    readonly total_unique_tabs: Scalars["Int"];
    readonly total_unique_user_ids: Scalars["Int"];
};

/** columns and relationships of "PushNotificationSubscription" */
export type PushNotificationSubscription = {
    readonly __typename?: "PushNotificationSubscription";
    readonly auth: Scalars["String"];
    readonly created_at: Scalars["timestamptz"];
    readonly endpoint: Scalars["String"];
    readonly p256dh: Scalars["String"];
    readonly updated_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly user: User;
    readonly userId: Scalars["String"];
};

/** aggregated selection of "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate = {
    readonly __typename?: "PushNotificationSubscription_aggregate";
    readonly aggregate?: Maybe<PushNotificationSubscription_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<PushNotificationSubscription>;
};

/** aggregate fields of "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate_Fields = {
    readonly __typename?: "PushNotificationSubscription_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<PushNotificationSubscription_Max_Fields>;
    readonly min?: Maybe<PushNotificationSubscription_Min_Fields>;
};

/** aggregate fields of "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<PushNotificationSubscription_Max_Order_By>;
    readonly min?: InputMaybe<PushNotificationSubscription_Min_Order_By>;
};

/** input type for inserting array relation for remote table "PushNotificationSubscription" */
export type PushNotificationSubscription_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<PushNotificationSubscription_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<PushNotificationSubscription_On_Conflict>;
};

/** Boolean expression to filter rows from the table "PushNotificationSubscription". All fields are combined with a logical 'AND'. */
export type PushNotificationSubscription_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Bool_Exp>>;
    readonly _not?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Bool_Exp>>;
    readonly auth?: InputMaybe<String_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly endpoint?: InputMaybe<String_Comparison_Exp>;
    readonly p256dh?: InputMaybe<String_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly user?: InputMaybe<User_Bool_Exp>;
    readonly userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "PushNotificationSubscription" */
export enum PushNotificationSubscription_Constraint {
    /** unique or primary key constraint */
    PushNotificationSubscriptionPkey = "PushNotificationSubscription_pkey",
}

/** input type for inserting data into table "PushNotificationSubscription" */
export type PushNotificationSubscription_Insert_Input = {
    readonly auth?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly endpoint?: InputMaybe<Scalars["String"]>;
    readonly p256dh?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type PushNotificationSubscription_Max_Fields = {
    readonly __typename?: "PushNotificationSubscription_max_fields";
    readonly auth?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly endpoint?: Maybe<Scalars["String"]>;
    readonly p256dh?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "PushNotificationSubscription" */
export type PushNotificationSubscription_Max_Order_By = {
    readonly auth?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly endpoint?: InputMaybe<Order_By>;
    readonly p256dh?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type PushNotificationSubscription_Min_Fields = {
    readonly __typename?: "PushNotificationSubscription_min_fields";
    readonly auth?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly endpoint?: Maybe<Scalars["String"]>;
    readonly p256dh?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "PushNotificationSubscription" */
export type PushNotificationSubscription_Min_Order_By = {
    readonly auth?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly endpoint?: InputMaybe<Order_By>;
    readonly p256dh?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "PushNotificationSubscription" */
export type PushNotificationSubscription_Mutation_Response = {
    readonly __typename?: "PushNotificationSubscription_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<PushNotificationSubscription>;
};

/** on_conflict condition type for table "PushNotificationSubscription" */
export type PushNotificationSubscription_On_Conflict = {
    readonly constraint: PushNotificationSubscription_Constraint;
    readonly update_columns?: ReadonlyArray<PushNotificationSubscription_Update_Column>;
    readonly where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

/** Ordering options when selecting data from "PushNotificationSubscription". */
export type PushNotificationSubscription_Order_By = {
    readonly auth?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly endpoint?: InputMaybe<Order_By>;
    readonly p256dh?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly user?: InputMaybe<User_Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: PushNotificationSubscription */
export type PushNotificationSubscription_Pk_Columns_Input = {
    readonly endpoint: Scalars["String"];
};

/** select columns of table "PushNotificationSubscription" */
export enum PushNotificationSubscription_Select_Column {
    /** column name */
    Auth = "auth",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Endpoint = "endpoint",
    /** column name */
    P256dh = "p256dh",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "PushNotificationSubscription" */
export type PushNotificationSubscription_Set_Input = {
    readonly auth?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly endpoint?: InputMaybe<Scalars["String"]>;
    readonly p256dh?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "PushNotificationSubscription" */
export enum PushNotificationSubscription_Update_Column {
    /** column name */
    Auth = "auth",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Endpoint = "endpoint",
    /** column name */
    P256dh = "p256dh",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

export type RefreshYouTubeDataOutput = {
    readonly __typename?: "RefreshYouTubeDataOutput";
    readonly message?: Maybe<Scalars["String"]>;
    readonly success: Scalars["Boolean"];
};

export type StopEventBroadcastOutput = {
    readonly __typename?: "StopEventBroadcastOutput";
    readonly broadcastsStopped: Scalars["Int"];
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["String"]>;
    readonly _gt?: InputMaybe<Scalars["String"]>;
    readonly _gte?: InputMaybe<Scalars["String"]>;
    /** does the column match the given case-insensitive pattern */
    readonly _ilike?: InputMaybe<Scalars["String"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    /** does the column match the given POSIX regular expression, case insensitive */
    readonly _iregex?: InputMaybe<Scalars["String"]>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    /** does the column match the given pattern */
    readonly _like?: InputMaybe<Scalars["String"]>;
    readonly _lt?: InputMaybe<Scalars["String"]>;
    readonly _lte?: InputMaybe<Scalars["String"]>;
    readonly _neq?: InputMaybe<Scalars["String"]>;
    /** does the column NOT match the given case-insensitive pattern */
    readonly _nilike?: InputMaybe<Scalars["String"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    /** does the column NOT match the given POSIX regular expression, case insensitive */
    readonly _niregex?: InputMaybe<Scalars["String"]>;
    /** does the column NOT match the given pattern */
    readonly _nlike?: InputMaybe<Scalars["String"]>;
    /** does the column NOT match the given POSIX regular expression, case sensitive */
    readonly _nregex?: InputMaybe<Scalars["String"]>;
    /** does the column NOT match the given SQL regular expression */
    readonly _nsimilar?: InputMaybe<Scalars["String"]>;
    /** does the column match the given POSIX regular expression, case sensitive */
    readonly _regex?: InputMaybe<Scalars["String"]>;
    /** does the column match the given SQL regular expression */
    readonly _similar?: InputMaybe<Scalars["String"]>;
};

export type SubmitGoogleOAuthCodeOutput = {
    readonly __typename?: "SubmitGoogleOAuthCodeOutput";
    readonly message?: Maybe<Scalars["String"]>;
    readonly success: Scalars["Boolean"];
};

export type SubmitUpdatedSubtitlesOutput = {
    readonly __typename?: "SubmitUpdatedSubtitlesOutput";
    readonly message: Scalars["String"];
    readonly success: Scalars["Boolean"];
};

export type SubmitUploadableElementOutput = {
    readonly __typename?: "SubmitUploadableElementOutput";
    readonly message: Scalars["String"];
    readonly success: Scalars["Boolean"];
};

export type ToggleVonageRecordingStateOutput = {
    readonly __typename?: "ToggleVonageRecordingStateOutput";
    readonly allowed: Scalars["Boolean"];
    readonly recordingState: Scalars["Boolean"];
};

export type TranscribeGeneratePresignedUrlOutput = {
    readonly __typename?: "TranscribeGeneratePresignedUrlOutput";
    readonly url: Scalars["String"];
};

export type UpdateProfilePhotoResponse = {
    readonly __typename?: "UpdateProfilePhotoResponse";
    readonly ok: Scalars["Boolean"];
    readonly photoURL_50x50?: Maybe<Scalars["String"]>;
    readonly photoURL_350x350?: Maybe<Scalars["String"]>;
};

/** columns and relationships of "User" */
export type User = {
    readonly __typename?: "User";
    readonly acceptedPrivacyPolicyAt?: Maybe<Scalars["timestamptz"]>;
    readonly acceptedTermsAt?: Maybe<Scalars["timestamptz"]>;
    /** An array relationship */
    readonly conferenceDemoCodes: ReadonlyArray<Conference_DemoCode>;
    /** An aggregate relationship */
    readonly conferenceDemoCodes_aggregate: Conference_DemoCode_Aggregate;
    /** An array relationship */
    readonly conferencesCreated: ReadonlyArray<Conference_Conference>;
    /** An aggregate relationship */
    readonly conferencesCreated_aggregate: Conference_Conference_Aggregate;
    readonly createdAt: Scalars["timestamptz"];
    readonly email?: Maybe<Scalars["String"]>;
    /** An array relationship */
    readonly emails: ReadonlyArray<Email>;
    /** An aggregate relationship */
    readonly emails_aggregate: Email_Aggregate;
    readonly id: Scalars["String"];
    /** An array relationship */
    readonly invitationsPendingConfirmation: ReadonlyArray<Registrant_Invitation>;
    /** An aggregate relationship */
    readonly invitationsPendingConfirmation_aggregate: Registrant_Invitation_Aggregate;
    /** An array relationship */
    readonly pushNotificationSubscriptions: ReadonlyArray<PushNotificationSubscription>;
    /** An aggregate relationship */
    readonly pushNotificationSubscriptions_aggregate: PushNotificationSubscription_Aggregate;
    /** An array relationship */
    readonly registrants: ReadonlyArray<Registrant_Registrant>;
    /** An aggregate relationship */
    readonly registrants_aggregate: Registrant_Registrant_Aggregate;
    /** An array relationship */
    readonly superUserPermissionGrants: ReadonlyArray<System_SuperUserPermissionGrant>;
    /** An aggregate relationship */
    readonly superUserPermissionGrants_aggregate: System_SuperUserPermissionGrant_Aggregate;
    readonly updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "User" */
export type UserConferenceDemoCodesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserConferenceDemoCodes_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserConferencesCreatedArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserConferencesCreated_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserEmailsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserEmails_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserInvitationsPendingConfirmationArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserInvitationsPendingConfirmation_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserPushNotificationSubscriptionsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserPushNotificationSubscriptions_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserRegistrantsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserRegistrants_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserSuperUserPermissionGrantsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "User" */
export type UserSuperUserPermissionGrants_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** aggregated selection of "User" */
export type User_Aggregate = {
    readonly __typename?: "User_aggregate";
    readonly aggregate?: Maybe<User_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<User>;
};

/** aggregate fields of "User" */
export type User_Aggregate_Fields = {
    readonly __typename?: "User_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<User_Max_Fields>;
    readonly min?: Maybe<User_Min_Fields>;
};

/** aggregate fields of "User" */
export type User_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<User_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "User". All fields are combined with a logical 'AND'. */
export type User_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<User_Bool_Exp>>;
    readonly _not?: InputMaybe<User_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<User_Bool_Exp>>;
    readonly acceptedPrivacyPolicyAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly acceptedTermsAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly conferenceDemoCodes?: InputMaybe<Conference_DemoCode_Bool_Exp>;
    readonly conferencesCreated?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly email?: InputMaybe<String_Comparison_Exp>;
    readonly emails?: InputMaybe<Email_Bool_Exp>;
    readonly id?: InputMaybe<String_Comparison_Exp>;
    readonly invitationsPendingConfirmation?: InputMaybe<Registrant_Invitation_Bool_Exp>;
    readonly pushNotificationSubscriptions?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
    readonly registrants?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly superUserPermissionGrants?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "User" */
export enum User_Constraint {
    /** unique or primary key constraint */
    UserEmailKey = "user_email_key",
    /** unique or primary key constraint */
    UserPkey = "user_pkey",
}

/** input type for inserting data into table "User" */
export type User_Insert_Input = {
    readonly acceptedPrivacyPolicyAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly acceptedTermsAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly conferenceDemoCodes?: InputMaybe<Conference_DemoCode_Arr_Rel_Insert_Input>;
    readonly conferencesCreated?: InputMaybe<Conference_Conference_Arr_Rel_Insert_Input>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly email?: InputMaybe<Scalars["String"]>;
    readonly emails?: InputMaybe<Email_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["String"]>;
    readonly invitationsPendingConfirmation?: InputMaybe<Registrant_Invitation_Arr_Rel_Insert_Input>;
    readonly pushNotificationSubscriptions?: InputMaybe<PushNotificationSubscription_Arr_Rel_Insert_Input>;
    readonly registrants?: InputMaybe<Registrant_Registrant_Arr_Rel_Insert_Input>;
    readonly superUserPermissionGrants?: InputMaybe<System_SuperUserPermissionGrant_Arr_Rel_Insert_Input>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type User_Max_Fields = {
    readonly __typename?: "User_max_fields";
    readonly acceptedPrivacyPolicyAt?: Maybe<Scalars["timestamptz"]>;
    readonly acceptedTermsAt?: Maybe<Scalars["timestamptz"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly email?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type User_Min_Fields = {
    readonly __typename?: "User_min_fields";
    readonly acceptedPrivacyPolicyAt?: Maybe<Scalars["timestamptz"]>;
    readonly acceptedTermsAt?: Maybe<Scalars["timestamptz"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly email?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "User" */
export type User_Mutation_Response = {
    readonly __typename?: "User_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<User>;
};

/** input type for inserting object relation for remote table "User" */
export type User_Obj_Rel_Insert_Input = {
    readonly data: User_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<User_On_Conflict>;
};

/** on_conflict condition type for table "User" */
export type User_On_Conflict = {
    readonly constraint: User_Constraint;
    readonly update_columns?: ReadonlyArray<User_Update_Column>;
    readonly where?: InputMaybe<User_Bool_Exp>;
};

/** Ordering options when selecting data from "User". */
export type User_Order_By = {
    readonly acceptedPrivacyPolicyAt?: InputMaybe<Order_By>;
    readonly acceptedTermsAt?: InputMaybe<Order_By>;
    readonly conferenceDemoCodes_aggregate?: InputMaybe<Conference_DemoCode_Aggregate_Order_By>;
    readonly conferencesCreated_aggregate?: InputMaybe<Conference_Conference_Aggregate_Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly email?: InputMaybe<Order_By>;
    readonly emails_aggregate?: InputMaybe<Email_Aggregate_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly invitationsPendingConfirmation_aggregate?: InputMaybe<Registrant_Invitation_Aggregate_Order_By>;
    readonly pushNotificationSubscriptions_aggregate?: InputMaybe<PushNotificationSubscription_Aggregate_Order_By>;
    readonly registrants_aggregate?: InputMaybe<Registrant_Registrant_Aggregate_Order_By>;
    readonly superUserPermissionGrants_aggregate?: InputMaybe<System_SuperUserPermissionGrant_Aggregate_Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: User */
export type User_Pk_Columns_Input = {
    readonly id: Scalars["String"];
};

/** select columns of table "User" */
export enum User_Select_Column {
    /** column name */
    AcceptedPrivacyPolicyAt = "acceptedPrivacyPolicyAt",
    /** column name */
    AcceptedTermsAt = "acceptedTermsAt",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Email = "email",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "User" */
export type User_Set_Input = {
    readonly acceptedPrivacyPolicyAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly acceptedTermsAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly email?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "User" */
export enum User_Update_Column {
    /** column name */
    AcceptedPrivacyPolicyAt = "acceptedPrivacyPolicyAt",
    /** column name */
    AcceptedTermsAt = "acceptedTermsAt",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Email = "email",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updatedAt",
}

export type VapidPublicKeyOutput = {
    readonly __typename?: "VAPIDPublicKeyOutput";
    readonly key: Scalars["String"];
};

/** columns and relationships of "analytics.AppStats" */
export type Analytics_AppStats = {
    readonly __typename?: "analytics_AppStats";
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["Int"];
    readonly pages?: Maybe<Scalars["jsonb"]>;
    readonly total_unique_tabs: Scalars["Int"];
    readonly total_unique_user_ids: Scalars["Int"];
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "analytics.AppStats" */
export type Analytics_AppStatsPagesArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "analytics.AppStats" */
export type Analytics_AppStats_Aggregate = {
    readonly __typename?: "analytics_AppStats_aggregate";
    readonly aggregate?: Maybe<Analytics_AppStats_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Analytics_AppStats>;
};

/** aggregate fields of "analytics.AppStats" */
export type Analytics_AppStats_Aggregate_Fields = {
    readonly __typename?: "analytics_AppStats_aggregate_fields";
    readonly avg?: Maybe<Analytics_AppStats_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Analytics_AppStats_Max_Fields>;
    readonly min?: Maybe<Analytics_AppStats_Min_Fields>;
    readonly stddev?: Maybe<Analytics_AppStats_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Analytics_AppStats_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Analytics_AppStats_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Analytics_AppStats_Sum_Fields>;
    readonly var_pop?: Maybe<Analytics_AppStats_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Analytics_AppStats_Var_Samp_Fields>;
    readonly variance?: Maybe<Analytics_AppStats_Variance_Fields>;
};

/** aggregate fields of "analytics.AppStats" */
export type Analytics_AppStats_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Analytics_AppStats_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Analytics_AppStats_Append_Input = {
    readonly pages?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate avg on columns */
export type Analytics_AppStats_Avg_Fields = {
    readonly __typename?: "analytics_AppStats_avg_fields";
    readonly id?: Maybe<Scalars["Float"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Float"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "analytics.AppStats". All fields are combined with a logical 'AND'. */
export type Analytics_AppStats_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Analytics_AppStats_Bool_Exp>>;
    readonly _not?: InputMaybe<Analytics_AppStats_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Analytics_AppStats_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Int_Comparison_Exp>;
    readonly pages?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly total_unique_tabs?: InputMaybe<Int_Comparison_Exp>;
    readonly total_unique_user_ids?: InputMaybe<Int_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.AppStats" */
export enum Analytics_AppStats_Constraint {
    /** unique or primary key constraint */
    AppStatsPkey = "AppStats_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Analytics_AppStats_Delete_At_Path_Input = {
    readonly pages?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Analytics_AppStats_Delete_Elem_Input = {
    readonly pages?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Analytics_AppStats_Delete_Key_Input = {
    readonly pages?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "analytics.AppStats" */
export type Analytics_AppStats_Inc_Input = {
    readonly id?: InputMaybe<Scalars["Int"]>;
    readonly total_unique_tabs?: InputMaybe<Scalars["Int"]>;
    readonly total_unique_user_ids?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "analytics.AppStats" */
export type Analytics_AppStats_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["Int"]>;
    readonly pages?: InputMaybe<Scalars["jsonb"]>;
    readonly total_unique_tabs?: InputMaybe<Scalars["Int"]>;
    readonly total_unique_user_ids?: InputMaybe<Scalars["Int"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Analytics_AppStats_Max_Fields = {
    readonly __typename?: "analytics_AppStats_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["Int"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Int"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Int"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Analytics_AppStats_Min_Fields = {
    readonly __typename?: "analytics_AppStats_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["Int"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Int"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Int"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "analytics.AppStats" */
export type Analytics_AppStats_Mutation_Response = {
    readonly __typename?: "analytics_AppStats_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Analytics_AppStats>;
};

/** on_conflict condition type for table "analytics.AppStats" */
export type Analytics_AppStats_On_Conflict = {
    readonly constraint: Analytics_AppStats_Constraint;
    readonly update_columns?: ReadonlyArray<Analytics_AppStats_Update_Column>;
    readonly where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.AppStats". */
export type Analytics_AppStats_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly pages?: InputMaybe<Order_By>;
    readonly total_unique_tabs?: InputMaybe<Order_By>;
    readonly total_unique_user_ids?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_AppStats */
export type Analytics_AppStats_Pk_Columns_Input = {
    readonly id: Scalars["Int"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Analytics_AppStats_Prepend_Input = {
    readonly pages?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "analytics.AppStats" */
export enum Analytics_AppStats_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    Pages = "pages",
    /** column name */
    TotalUniqueTabs = "total_unique_tabs",
    /** column name */
    TotalUniqueUserIds = "total_unique_user_ids",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "analytics.AppStats" */
export type Analytics_AppStats_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["Int"]>;
    readonly pages?: InputMaybe<Scalars["jsonb"]>;
    readonly total_unique_tabs?: InputMaybe<Scalars["Int"]>;
    readonly total_unique_user_ids?: InputMaybe<Scalars["Int"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Analytics_AppStats_Stddev_Fields = {
    readonly __typename?: "analytics_AppStats_stddev_fields";
    readonly id?: Maybe<Scalars["Float"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Float"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Analytics_AppStats_Stddev_Pop_Fields = {
    readonly __typename?: "analytics_AppStats_stddev_pop_fields";
    readonly id?: Maybe<Scalars["Float"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Float"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Analytics_AppStats_Stddev_Samp_Fields = {
    readonly __typename?: "analytics_AppStats_stddev_samp_fields";
    readonly id?: Maybe<Scalars["Float"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Float"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Analytics_AppStats_Sum_Fields = {
    readonly __typename?: "analytics_AppStats_sum_fields";
    readonly id?: Maybe<Scalars["Int"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Int"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Int"]>;
};

/** update columns of table "analytics.AppStats" */
export enum Analytics_AppStats_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    Pages = "pages",
    /** column name */
    TotalUniqueTabs = "total_unique_tabs",
    /** column name */
    TotalUniqueUserIds = "total_unique_user_ids",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Analytics_AppStats_Var_Pop_Fields = {
    readonly __typename?: "analytics_AppStats_var_pop_fields";
    readonly id?: Maybe<Scalars["Float"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Float"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Analytics_AppStats_Var_Samp_Fields = {
    readonly __typename?: "analytics_AppStats_var_samp_fields";
    readonly id?: Maybe<Scalars["Float"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Float"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Analytics_AppStats_Variance_Fields = {
    readonly __typename?: "analytics_AppStats_variance_fields";
    readonly id?: Maybe<Scalars["Float"]>;
    readonly total_unique_tabs?: Maybe<Scalars["Float"]>;
    readonly total_unique_user_ids?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations = {
    readonly __typename?: "analytics_CompletedRegistrations";
    /** An object relationship */
    readonly conference?: Maybe<Conference_Conference>;
    readonly count?: Maybe<Scalars["bigint"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
};

/** aggregated selection of "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Aggregate = {
    readonly __typename?: "analytics_CompletedRegistrations_aggregate";
    readonly aggregate?: Maybe<Analytics_CompletedRegistrations_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Analytics_CompletedRegistrations>;
};

/** aggregate fields of "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Aggregate_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_aggregate_fields";
    readonly avg?: Maybe<Analytics_CompletedRegistrations_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Analytics_CompletedRegistrations_Max_Fields>;
    readonly min?: Maybe<Analytics_CompletedRegistrations_Min_Fields>;
    readonly stddev?: Maybe<Analytics_CompletedRegistrations_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Analytics_CompletedRegistrations_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Analytics_CompletedRegistrations_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Analytics_CompletedRegistrations_Sum_Fields>;
    readonly var_pop?: Maybe<Analytics_CompletedRegistrations_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Analytics_CompletedRegistrations_Var_Samp_Fields>;
    readonly variance?: Maybe<Analytics_CompletedRegistrations_Variance_Fields>;
};

/** aggregate fields of "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Analytics_CompletedRegistrations_Avg_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_avg_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "analytics.CompletedRegistrations". All fields are combined with a logical 'AND'. */
export type Analytics_CompletedRegistrations_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Bool_Exp>>;
    readonly _not?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly count?: InputMaybe<Bigint_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** input type for inserting data into table "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly count?: InputMaybe<Scalars["bigint"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate max on columns */
export type Analytics_CompletedRegistrations_Max_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_max_fields";
    readonly count?: Maybe<Scalars["bigint"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
};

/** aggregate min on columns */
export type Analytics_CompletedRegistrations_Min_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_min_fields";
    readonly count?: Maybe<Scalars["bigint"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
};

/** input type for inserting object relation for remote table "analytics.CompletedRegistrations" */
export type Analytics_CompletedRegistrations_Obj_Rel_Insert_Input = {
    readonly data: Analytics_CompletedRegistrations_Insert_Input;
};

/** Ordering options when selecting data from "analytics.CompletedRegistrations". */
export type Analytics_CompletedRegistrations_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** select columns of table "analytics.CompletedRegistrations" */
export enum Analytics_CompletedRegistrations_Select_Column {
    /** column name */
    Count = "count",
    /** column name */
    Id = "id",
}

/** aggregate stddev on columns */
export type Analytics_CompletedRegistrations_Stddev_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_stddev_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Analytics_CompletedRegistrations_Stddev_Pop_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_stddev_pop_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Analytics_CompletedRegistrations_Stddev_Samp_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_stddev_samp_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Analytics_CompletedRegistrations_Sum_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_sum_fields";
    readonly count?: Maybe<Scalars["bigint"]>;
};

/** aggregate var_pop on columns */
export type Analytics_CompletedRegistrations_Var_Pop_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_var_pop_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Analytics_CompletedRegistrations_Var_Samp_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_var_samp_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Analytics_CompletedRegistrations_Variance_Fields = {
    readonly __typename?: "analytics_CompletedRegistrations_variance_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "analytics.ContentElementStats" */
export type Analytics_ContentElementStats = {
    readonly __typename?: "analytics_ContentElementStats";
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly element: Content_Element;
    readonly elementId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    readonly updated_at: Scalars["timestamptz"];
    readonly viewCount: Scalars["Int"];
};

/** aggregated selection of "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Aggregate = {
    readonly __typename?: "analytics_ContentElementStats_aggregate";
    readonly aggregate?: Maybe<Analytics_ContentElementStats_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Analytics_ContentElementStats>;
};

/** aggregate fields of "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Aggregate_Fields = {
    readonly __typename?: "analytics_ContentElementStats_aggregate_fields";
    readonly avg?: Maybe<Analytics_ContentElementStats_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Analytics_ContentElementStats_Max_Fields>;
    readonly min?: Maybe<Analytics_ContentElementStats_Min_Fields>;
    readonly stddev?: Maybe<Analytics_ContentElementStats_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Analytics_ContentElementStats_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Analytics_ContentElementStats_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Analytics_ContentElementStats_Sum_Fields>;
    readonly var_pop?: Maybe<Analytics_ContentElementStats_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Analytics_ContentElementStats_Var_Samp_Fields>;
    readonly variance?: Maybe<Analytics_ContentElementStats_Variance_Fields>;
};

/** aggregate fields of "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Analytics_ContentElementStats_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Analytics_ContentElementStats_Max_Order_By>;
    readonly min?: InputMaybe<Analytics_ContentElementStats_Min_Order_By>;
    readonly stddev?: InputMaybe<Analytics_ContentElementStats_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Analytics_ContentElementStats_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Analytics_ContentElementStats_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Analytics_ContentElementStats_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Analytics_ContentElementStats_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Analytics_ContentElementStats_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Analytics_ContentElementStats_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Analytics_ContentElementStats_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Analytics_ContentElementStats_On_Conflict>;
};

/** aggregate avg on columns */
export type Analytics_ContentElementStats_Avg_Fields = {
    readonly __typename?: "analytics_ContentElementStats_avg_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Avg_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "analytics.ContentElementStats". All fields are combined with a logical 'AND'. */
export type Analytics_ContentElementStats_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Bool_Exp>>;
    readonly _not?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly element?: InputMaybe<Content_Element_Bool_Exp>;
    readonly elementId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly viewCount?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.ContentElementStats" */
export enum Analytics_ContentElementStats_Constraint {
    /** unique or primary key constraint */
    ContentElementStatsIdKey = "ContentElementStats_id_key",
    /** unique or primary key constraint */
    ContentElementStatsPkey = "ContentElementStats_pkey",
}

/** input type for incrementing numeric columns in table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Inc_Input = {
    readonly viewCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly viewCount?: InputMaybe<Scalars["Int"]>;
};

/** aggregate max on columns */
export type Analytics_ContentElementStats_Max_Fields = {
    readonly __typename?: "analytics_ContentElementStats_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly viewCount?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Analytics_ContentElementStats_Min_Fields = {
    readonly __typename?: "analytics_ContentElementStats_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly viewCount?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly viewCount?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Mutation_Response = {
    readonly __typename?: "analytics_ContentElementStats_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Analytics_ContentElementStats>;
};

/** on_conflict condition type for table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_On_Conflict = {
    readonly constraint: Analytics_ContentElementStats_Constraint;
    readonly update_columns?: ReadonlyArray<Analytics_ContentElementStats_Update_Column>;
    readonly where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.ContentElementStats". */
export type Analytics_ContentElementStats_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly element?: InputMaybe<Content_Element_Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly viewCount?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_ContentElementStats */
export type Analytics_ContentElementStats_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "analytics.ContentElementStats" */
export enum Analytics_ContentElementStats_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    ViewCount = "viewCount",
}

/** input type for updating data in table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly viewCount?: InputMaybe<Scalars["Int"]>;
};

/** aggregate stddev on columns */
export type Analytics_ContentElementStats_Stddev_Fields = {
    readonly __typename?: "analytics_ContentElementStats_stddev_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Stddev_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Analytics_ContentElementStats_Stddev_Pop_Fields = {
    readonly __typename?: "analytics_ContentElementStats_stddev_pop_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Stddev_Pop_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Analytics_ContentElementStats_Stddev_Samp_Fields = {
    readonly __typename?: "analytics_ContentElementStats_stddev_samp_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Stddev_Samp_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Analytics_ContentElementStats_Sum_Fields = {
    readonly __typename?: "analytics_ContentElementStats_sum_fields";
    readonly viewCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Sum_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** update columns of table "analytics.ContentElementStats" */
export enum Analytics_ContentElementStats_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    ViewCount = "viewCount",
}

/** aggregate var_pop on columns */
export type Analytics_ContentElementStats_Var_Pop_Fields = {
    readonly __typename?: "analytics_ContentElementStats_var_pop_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Var_Pop_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Analytics_ContentElementStats_Var_Samp_Fields = {
    readonly __typename?: "analytics_ContentElementStats_var_samp_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Var_Samp_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Analytics_ContentElementStats_Variance_Fields = {
    readonly __typename?: "analytics_ContentElementStats_variance_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "analytics.ContentElementStats" */
export type Analytics_ContentElementStats_Variance_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** columns and relationships of "analytics.ContentItemStats" */
export type Analytics_ContentItemStats = {
    readonly __typename?: "analytics_ContentItemStats";
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly item: Content_Item;
    readonly itemId: Scalars["uuid"];
    readonly updated_at: Scalars["timestamptz"];
    readonly viewCount: Scalars["Int"];
};

/** aggregated selection of "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Aggregate = {
    readonly __typename?: "analytics_ContentItemStats_aggregate";
    readonly aggregate?: Maybe<Analytics_ContentItemStats_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Analytics_ContentItemStats>;
};

/** aggregate fields of "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Aggregate_Fields = {
    readonly __typename?: "analytics_ContentItemStats_aggregate_fields";
    readonly avg?: Maybe<Analytics_ContentItemStats_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Analytics_ContentItemStats_Max_Fields>;
    readonly min?: Maybe<Analytics_ContentItemStats_Min_Fields>;
    readonly stddev?: Maybe<Analytics_ContentItemStats_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Analytics_ContentItemStats_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Analytics_ContentItemStats_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Analytics_ContentItemStats_Sum_Fields>;
    readonly var_pop?: Maybe<Analytics_ContentItemStats_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Analytics_ContentItemStats_Var_Samp_Fields>;
    readonly variance?: Maybe<Analytics_ContentItemStats_Variance_Fields>;
};

/** aggregate fields of "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Analytics_ContentItemStats_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Analytics_ContentItemStats_Max_Order_By>;
    readonly min?: InputMaybe<Analytics_ContentItemStats_Min_Order_By>;
    readonly stddev?: InputMaybe<Analytics_ContentItemStats_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Analytics_ContentItemStats_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Analytics_ContentItemStats_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Analytics_ContentItemStats_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Analytics_ContentItemStats_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Analytics_ContentItemStats_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Analytics_ContentItemStats_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Analytics_ContentItemStats_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Analytics_ContentItemStats_On_Conflict>;
};

/** aggregate avg on columns */
export type Analytics_ContentItemStats_Avg_Fields = {
    readonly __typename?: "analytics_ContentItemStats_avg_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Avg_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "analytics.ContentItemStats". All fields are combined with a logical 'AND'. */
export type Analytics_ContentItemStats_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Bool_Exp>>;
    readonly _not?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly viewCount?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.ContentItemStats" */
export enum Analytics_ContentItemStats_Constraint {
    /** unique or primary key constraint */
    ContentItemStatsIdKey = "ContentItemStats_id_key",
    /** unique or primary key constraint */
    ContentItemStatsPkey = "ContentItemStats_pkey",
}

/** input type for incrementing numeric columns in table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Inc_Input = {
    readonly viewCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly viewCount?: InputMaybe<Scalars["Int"]>;
};

/** aggregate max on columns */
export type Analytics_ContentItemStats_Max_Fields = {
    readonly __typename?: "analytics_ContentItemStats_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly viewCount?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Analytics_ContentItemStats_Min_Fields = {
    readonly __typename?: "analytics_ContentItemStats_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly viewCount?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly viewCount?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Mutation_Response = {
    readonly __typename?: "analytics_ContentItemStats_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Analytics_ContentItemStats>;
};

/** on_conflict condition type for table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_On_Conflict = {
    readonly constraint: Analytics_ContentItemStats_Constraint;
    readonly update_columns?: ReadonlyArray<Analytics_ContentItemStats_Update_Column>;
    readonly where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.ContentItemStats". */
export type Analytics_ContentItemStats_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly viewCount?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_ContentItemStats */
export type Analytics_ContentItemStats_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "analytics.ContentItemStats" */
export enum Analytics_ContentItemStats_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    ViewCount = "viewCount",
}

/** input type for updating data in table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly viewCount?: InputMaybe<Scalars["Int"]>;
};

/** aggregate stddev on columns */
export type Analytics_ContentItemStats_Stddev_Fields = {
    readonly __typename?: "analytics_ContentItemStats_stddev_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Stddev_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Analytics_ContentItemStats_Stddev_Pop_Fields = {
    readonly __typename?: "analytics_ContentItemStats_stddev_pop_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Stddev_Pop_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Analytics_ContentItemStats_Stddev_Samp_Fields = {
    readonly __typename?: "analytics_ContentItemStats_stddev_samp_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Stddev_Samp_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Analytics_ContentItemStats_Sum_Fields = {
    readonly __typename?: "analytics_ContentItemStats_sum_fields";
    readonly viewCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Sum_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** update columns of table "analytics.ContentItemStats" */
export enum Analytics_ContentItemStats_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    ViewCount = "viewCount",
}

/** aggregate var_pop on columns */
export type Analytics_ContentItemStats_Var_Pop_Fields = {
    readonly __typename?: "analytics_ContentItemStats_var_pop_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Var_Pop_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Analytics_ContentItemStats_Var_Samp_Fields = {
    readonly __typename?: "analytics_ContentItemStats_var_samp_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Var_Samp_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Analytics_ContentItemStats_Variance_Fields = {
    readonly __typename?: "analytics_ContentItemStats_variance_fields";
    readonly viewCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "analytics.ContentItemStats" */
export type Analytics_ContentItemStats_Variance_Order_By = {
    readonly viewCount?: InputMaybe<Order_By>;
};

/** columns and relationships of "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews = {
    readonly __typename?: "analytics_ElementTotalViews";
    /** An object relationship */
    readonly element?: Maybe<Content_Element>;
    readonly elementId: Scalars["uuid"];
    readonly totalViewCount: Scalars["bigint"];
};

/** aggregated selection of "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Aggregate = {
    readonly __typename?: "analytics_ElementTotalViews_aggregate";
    readonly aggregate?: Maybe<Analytics_ElementTotalViews_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Analytics_ElementTotalViews>;
};

/** aggregate fields of "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Aggregate_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_aggregate_fields";
    readonly avg?: Maybe<Analytics_ElementTotalViews_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Analytics_ElementTotalViews_Max_Fields>;
    readonly min?: Maybe<Analytics_ElementTotalViews_Min_Fields>;
    readonly stddev?: Maybe<Analytics_ElementTotalViews_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Analytics_ElementTotalViews_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Analytics_ElementTotalViews_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Analytics_ElementTotalViews_Sum_Fields>;
    readonly var_pop?: Maybe<Analytics_ElementTotalViews_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Analytics_ElementTotalViews_Var_Samp_Fields>;
    readonly variance?: Maybe<Analytics_ElementTotalViews_Variance_Fields>;
};

/** aggregate fields of "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Analytics_ElementTotalViews_Avg_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_avg_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "analytics.ElementTotalViews". All fields are combined with a logical 'AND'. */
export type Analytics_ElementTotalViews_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Bool_Exp>>;
    readonly _not?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Bool_Exp>>;
    readonly element?: InputMaybe<Content_Element_Bool_Exp>;
    readonly elementId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly totalViewCount?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.ElementTotalViews" */
export enum Analytics_ElementTotalViews_Constraint {
    /** unique or primary key constraint */
    ElementTotalViewsPkey = "ElementTotalViews_pkey",
}

/** input type for incrementing numeric columns in table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Inc_Input = {
    readonly totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Insert_Input = {
    readonly element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** aggregate max on columns */
export type Analytics_ElementTotalViews_Max_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_max_fields";
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** aggregate min on columns */
export type Analytics_ElementTotalViews_Min_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_min_fields";
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** response of any mutation on the table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Mutation_Response = {
    readonly __typename?: "analytics_ElementTotalViews_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Analytics_ElementTotalViews>;
};

/** input type for inserting object relation for remote table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Obj_Rel_Insert_Input = {
    readonly data: Analytics_ElementTotalViews_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Analytics_ElementTotalViews_On_Conflict>;
};

/** on_conflict condition type for table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_On_Conflict = {
    readonly constraint: Analytics_ElementTotalViews_Constraint;
    readonly update_columns?: ReadonlyArray<Analytics_ElementTotalViews_Update_Column>;
    readonly where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.ElementTotalViews". */
export type Analytics_ElementTotalViews_Order_By = {
    readonly element?: InputMaybe<Content_Element_Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly totalViewCount?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_ElementTotalViews */
export type Analytics_ElementTotalViews_Pk_Columns_Input = {
    readonly elementId: Scalars["uuid"];
};

/** select columns of table "analytics.ElementTotalViews" */
export enum Analytics_ElementTotalViews_Select_Column {
    /** column name */
    ElementId = "elementId",
    /** column name */
    TotalViewCount = "totalViewCount",
}

/** input type for updating data in table "analytics.ElementTotalViews" */
export type Analytics_ElementTotalViews_Set_Input = {
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** aggregate stddev on columns */
export type Analytics_ElementTotalViews_Stddev_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_stddev_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Analytics_ElementTotalViews_Stddev_Pop_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_stddev_pop_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Analytics_ElementTotalViews_Stddev_Samp_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_stddev_samp_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Analytics_ElementTotalViews_Sum_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_sum_fields";
    readonly totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** update columns of table "analytics.ElementTotalViews" */
export enum Analytics_ElementTotalViews_Update_Column {
    /** column name */
    ElementId = "elementId",
    /** column name */
    TotalViewCount = "totalViewCount",
}

/** aggregate var_pop on columns */
export type Analytics_ElementTotalViews_Var_Pop_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_var_pop_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Analytics_ElementTotalViews_Var_Samp_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_var_samp_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Analytics_ElementTotalViews_Variance_Fields = {
    readonly __typename?: "analytics_ElementTotalViews_variance_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews = {
    readonly __typename?: "analytics_ItemTotalViews";
    /** An object relationship */
    readonly item?: Maybe<Content_Item>;
    readonly itemId: Scalars["uuid"];
    readonly totalViewCount: Scalars["bigint"];
};

/** aggregated selection of "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Aggregate = {
    readonly __typename?: "analytics_ItemTotalViews_aggregate";
    readonly aggregate?: Maybe<Analytics_ItemTotalViews_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Analytics_ItemTotalViews>;
};

/** aggregate fields of "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Aggregate_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_aggregate_fields";
    readonly avg?: Maybe<Analytics_ItemTotalViews_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Analytics_ItemTotalViews_Max_Fields>;
    readonly min?: Maybe<Analytics_ItemTotalViews_Min_Fields>;
    readonly stddev?: Maybe<Analytics_ItemTotalViews_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Analytics_ItemTotalViews_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Analytics_ItemTotalViews_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Analytics_ItemTotalViews_Sum_Fields>;
    readonly var_pop?: Maybe<Analytics_ItemTotalViews_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Analytics_ItemTotalViews_Var_Samp_Fields>;
    readonly variance?: Maybe<Analytics_ItemTotalViews_Variance_Fields>;
};

/** aggregate fields of "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Analytics_ItemTotalViews_Avg_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_avg_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "analytics.ItemTotalViews". All fields are combined with a logical 'AND'. */
export type Analytics_ItemTotalViews_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Bool_Exp>>;
    readonly _not?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Bool_Exp>>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly totalViewCount?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.ItemTotalViews" */
export enum Analytics_ItemTotalViews_Constraint {
    /** unique or primary key constraint */
    ItemTotalViewsPkey = "ItemTotalViews_pkey",
}

/** input type for incrementing numeric columns in table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Inc_Input = {
    readonly totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Insert_Input = {
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** aggregate max on columns */
export type Analytics_ItemTotalViews_Max_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_max_fields";
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** aggregate min on columns */
export type Analytics_ItemTotalViews_Min_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_min_fields";
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** response of any mutation on the table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Mutation_Response = {
    readonly __typename?: "analytics_ItemTotalViews_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Analytics_ItemTotalViews>;
};

/** input type for inserting object relation for remote table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Obj_Rel_Insert_Input = {
    readonly data: Analytics_ItemTotalViews_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Analytics_ItemTotalViews_On_Conflict>;
};

/** on_conflict condition type for table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_On_Conflict = {
    readonly constraint: Analytics_ItemTotalViews_Constraint;
    readonly update_columns?: ReadonlyArray<Analytics_ItemTotalViews_Update_Column>;
    readonly where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.ItemTotalViews". */
export type Analytics_ItemTotalViews_Order_By = {
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly totalViewCount?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_ItemTotalViews */
export type Analytics_ItemTotalViews_Pk_Columns_Input = {
    readonly itemId: Scalars["uuid"];
};

/** select columns of table "analytics.ItemTotalViews" */
export enum Analytics_ItemTotalViews_Select_Column {
    /** column name */
    ItemId = "itemId",
    /** column name */
    TotalViewCount = "totalViewCount",
}

/** input type for updating data in table "analytics.ItemTotalViews" */
export type Analytics_ItemTotalViews_Set_Input = {
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly totalViewCount?: InputMaybe<Scalars["bigint"]>;
};

/** aggregate stddev on columns */
export type Analytics_ItemTotalViews_Stddev_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_stddev_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Analytics_ItemTotalViews_Stddev_Pop_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_stddev_pop_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Analytics_ItemTotalViews_Stddev_Samp_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_stddev_samp_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Analytics_ItemTotalViews_Sum_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_sum_fields";
    readonly totalViewCount?: Maybe<Scalars["bigint"]>;
};

/** update columns of table "analytics.ItemTotalViews" */
export enum Analytics_ItemTotalViews_Update_Column {
    /** column name */
    ItemId = "itemId",
    /** column name */
    TotalViewCount = "totalViewCount",
}

/** aggregate var_pop on columns */
export type Analytics_ItemTotalViews_Var_Pop_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_var_pop_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Analytics_ItemTotalViews_Var_Samp_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_var_samp_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Analytics_ItemTotalViews_Variance_Fields = {
    readonly __typename?: "analytics_ItemTotalViews_variance_fields";
    readonly totalViewCount?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "analytics.RoomPresence" */
export type Analytics_RoomPresence = {
    readonly __typename?: "analytics_RoomPresence";
    readonly count: Scalars["bigint"];
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly room: Room_Room;
    readonly roomId: Scalars["uuid"];
};

/** aggregated selection of "analytics.RoomPresence" */
export type Analytics_RoomPresence_Aggregate = {
    readonly __typename?: "analytics_RoomPresence_aggregate";
    readonly aggregate?: Maybe<Analytics_RoomPresence_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Analytics_RoomPresence>;
};

/** aggregate fields of "analytics.RoomPresence" */
export type Analytics_RoomPresence_Aggregate_Fields = {
    readonly __typename?: "analytics_RoomPresence_aggregate_fields";
    readonly avg?: Maybe<Analytics_RoomPresence_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Analytics_RoomPresence_Max_Fields>;
    readonly min?: Maybe<Analytics_RoomPresence_Min_Fields>;
    readonly stddev?: Maybe<Analytics_RoomPresence_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Analytics_RoomPresence_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Analytics_RoomPresence_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Analytics_RoomPresence_Sum_Fields>;
    readonly var_pop?: Maybe<Analytics_RoomPresence_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Analytics_RoomPresence_Var_Samp_Fields>;
    readonly variance?: Maybe<Analytics_RoomPresence_Variance_Fields>;
};

/** aggregate fields of "analytics.RoomPresence" */
export type Analytics_RoomPresence_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Analytics_RoomPresence_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Analytics_RoomPresence_Max_Order_By>;
    readonly min?: InputMaybe<Analytics_RoomPresence_Min_Order_By>;
    readonly stddev?: InputMaybe<Analytics_RoomPresence_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Analytics_RoomPresence_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Analytics_RoomPresence_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Analytics_RoomPresence_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Analytics_RoomPresence_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Analytics_RoomPresence_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Analytics_RoomPresence_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Analytics_RoomPresence_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Analytics_RoomPresence_On_Conflict>;
};

/** aggregate avg on columns */
export type Analytics_RoomPresence_Avg_Fields = {
    readonly __typename?: "analytics_RoomPresence_avg_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Avg_Order_By = {
    readonly count?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "analytics.RoomPresence". All fields are combined with a logical 'AND'. */
export type Analytics_RoomPresence_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Bool_Exp>>;
    readonly _not?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Bool_Exp>>;
    readonly count?: InputMaybe<Bigint_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.RoomPresence" */
export enum Analytics_RoomPresence_Constraint {
    /** unique or primary key constraint */
    RoomPresencePkey = "RoomPresence_pkey",
    /** unique or primary key constraint */
    RoomPresenceRoomIdCreatedAtKey = "RoomPresence_roomId_created_at_key",
}

/** input type for incrementing numeric columns in table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Inc_Input = {
    readonly count?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Insert_Input = {
    readonly count?: InputMaybe<Scalars["bigint"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate max on columns */
export type Analytics_RoomPresence_Max_Fields = {
    readonly __typename?: "analytics_RoomPresence_max_fields";
    readonly count?: Maybe<Scalars["bigint"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Max_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Analytics_RoomPresence_Min_Fields = {
    readonly __typename?: "analytics_RoomPresence_min_fields";
    readonly count?: Maybe<Scalars["bigint"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Min_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Mutation_Response = {
    readonly __typename?: "analytics_RoomPresence_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Analytics_RoomPresence>;
};

/** on_conflict condition type for table "analytics.RoomPresence" */
export type Analytics_RoomPresence_On_Conflict = {
    readonly constraint: Analytics_RoomPresence_Constraint;
    readonly update_columns?: ReadonlyArray<Analytics_RoomPresence_Update_Column>;
    readonly where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.RoomPresence". */
export type Analytics_RoomPresence_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_RoomPresence */
export type Analytics_RoomPresence_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "analytics.RoomPresence" */
export enum Analytics_RoomPresence_Select_Column {
    /** column name */
    Count = "count",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
}

/** input type for updating data in table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Set_Input = {
    readonly count?: InputMaybe<Scalars["bigint"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate stddev on columns */
export type Analytics_RoomPresence_Stddev_Fields = {
    readonly __typename?: "analytics_RoomPresence_stddev_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Stddev_Order_By = {
    readonly count?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Analytics_RoomPresence_Stddev_Pop_Fields = {
    readonly __typename?: "analytics_RoomPresence_stddev_pop_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Stddev_Pop_Order_By = {
    readonly count?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Analytics_RoomPresence_Stddev_Samp_Fields = {
    readonly __typename?: "analytics_RoomPresence_stddev_samp_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Stddev_Samp_Order_By = {
    readonly count?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Analytics_RoomPresence_Sum_Fields = {
    readonly __typename?: "analytics_RoomPresence_sum_fields";
    readonly count?: Maybe<Scalars["bigint"]>;
};

/** order by sum() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Sum_Order_By = {
    readonly count?: InputMaybe<Order_By>;
};

/** update columns of table "analytics.RoomPresence" */
export enum Analytics_RoomPresence_Update_Column {
    /** column name */
    Count = "count",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
}

/** aggregate var_pop on columns */
export type Analytics_RoomPresence_Var_Pop_Fields = {
    readonly __typename?: "analytics_RoomPresence_var_pop_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Var_Pop_Order_By = {
    readonly count?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Analytics_RoomPresence_Var_Samp_Fields = {
    readonly __typename?: "analytics_RoomPresence_var_samp_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Var_Samp_Order_By = {
    readonly count?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Analytics_RoomPresence_Variance_Fields = {
    readonly __typename?: "analytics_RoomPresence_variance_fields";
    readonly count?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "analytics.RoomPresence" */
export type Analytics_RoomPresence_Variance_Order_By = {
    readonly count?: InputMaybe<Order_By>;
};

/** columns and relationships of "analytics.RoomStats" */
export type Analytics_RoomStats = {
    readonly __typename?: "analytics_RoomStats";
    readonly created_at: Scalars["timestamptz"];
    readonly hlsViewCount: Scalars["Int"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly room: Room_Room;
    readonly roomId: Scalars["uuid"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "analytics.RoomStats" */
export type Analytics_RoomStats_Aggregate = {
    readonly __typename?: "analytics_RoomStats_aggregate";
    readonly aggregate?: Maybe<Analytics_RoomStats_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Analytics_RoomStats>;
};

/** aggregate fields of "analytics.RoomStats" */
export type Analytics_RoomStats_Aggregate_Fields = {
    readonly __typename?: "analytics_RoomStats_aggregate_fields";
    readonly avg?: Maybe<Analytics_RoomStats_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Analytics_RoomStats_Max_Fields>;
    readonly min?: Maybe<Analytics_RoomStats_Min_Fields>;
    readonly stddev?: Maybe<Analytics_RoomStats_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Analytics_RoomStats_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Analytics_RoomStats_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Analytics_RoomStats_Sum_Fields>;
    readonly var_pop?: Maybe<Analytics_RoomStats_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Analytics_RoomStats_Var_Samp_Fields>;
    readonly variance?: Maybe<Analytics_RoomStats_Variance_Fields>;
};

/** aggregate fields of "analytics.RoomStats" */
export type Analytics_RoomStats_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "analytics.RoomStats" */
export type Analytics_RoomStats_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Analytics_RoomStats_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Analytics_RoomStats_Max_Order_By>;
    readonly min?: InputMaybe<Analytics_RoomStats_Min_Order_By>;
    readonly stddev?: InputMaybe<Analytics_RoomStats_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Analytics_RoomStats_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Analytics_RoomStats_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Analytics_RoomStats_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Analytics_RoomStats_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Analytics_RoomStats_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Analytics_RoomStats_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "analytics.RoomStats" */
export type Analytics_RoomStats_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Analytics_RoomStats_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Analytics_RoomStats_On_Conflict>;
};

/** aggregate avg on columns */
export type Analytics_RoomStats_Avg_Fields = {
    readonly __typename?: "analytics_RoomStats_avg_fields";
    readonly hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Avg_Order_By = {
    readonly hlsViewCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "analytics.RoomStats". All fields are combined with a logical 'AND'. */
export type Analytics_RoomStats_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Bool_Exp>>;
    readonly _not?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly hlsViewCount?: InputMaybe<Int_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.RoomStats" */
export enum Analytics_RoomStats_Constraint {
    /** unique or primary key constraint */
    RoomStatsPkey = "RoomStats_pkey",
}

/** input type for incrementing numeric columns in table "analytics.RoomStats" */
export type Analytics_RoomStats_Inc_Input = {
    readonly hlsViewCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "analytics.RoomStats" */
export type Analytics_RoomStats_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly hlsViewCount?: InputMaybe<Scalars["Int"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Analytics_RoomStats_Max_Fields = {
    readonly __typename?: "analytics_RoomStats_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly hlsViewCount?: Maybe<Scalars["Int"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly hlsViewCount?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Analytics_RoomStats_Min_Fields = {
    readonly __typename?: "analytics_RoomStats_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly hlsViewCount?: Maybe<Scalars["Int"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly hlsViewCount?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "analytics.RoomStats" */
export type Analytics_RoomStats_Mutation_Response = {
    readonly __typename?: "analytics_RoomStats_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Analytics_RoomStats>;
};

/** on_conflict condition type for table "analytics.RoomStats" */
export type Analytics_RoomStats_On_Conflict = {
    readonly constraint: Analytics_RoomStats_Constraint;
    readonly update_columns?: ReadonlyArray<Analytics_RoomStats_Update_Column>;
    readonly where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

/** Ordering options when selecting data from "analytics.RoomStats". */
export type Analytics_RoomStats_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly hlsViewCount?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: analytics_RoomStats */
export type Analytics_RoomStats_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "analytics.RoomStats" */
export enum Analytics_RoomStats_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    HlsViewCount = "hlsViewCount",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "analytics.RoomStats" */
export type Analytics_RoomStats_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly hlsViewCount?: InputMaybe<Scalars["Int"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Analytics_RoomStats_Stddev_Fields = {
    readonly __typename?: "analytics_RoomStats_stddev_fields";
    readonly hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Stddev_Order_By = {
    readonly hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Analytics_RoomStats_Stddev_Pop_Fields = {
    readonly __typename?: "analytics_RoomStats_stddev_pop_fields";
    readonly hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Stddev_Pop_Order_By = {
    readonly hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Analytics_RoomStats_Stddev_Samp_Fields = {
    readonly __typename?: "analytics_RoomStats_stddev_samp_fields";
    readonly hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Stddev_Samp_Order_By = {
    readonly hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Analytics_RoomStats_Sum_Fields = {
    readonly __typename?: "analytics_RoomStats_sum_fields";
    readonly hlsViewCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Sum_Order_By = {
    readonly hlsViewCount?: InputMaybe<Order_By>;
};

/** update columns of table "analytics.RoomStats" */
export enum Analytics_RoomStats_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    HlsViewCount = "hlsViewCount",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Analytics_RoomStats_Var_Pop_Fields = {
    readonly __typename?: "analytics_RoomStats_var_pop_fields";
    readonly hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Var_Pop_Order_By = {
    readonly hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Analytics_RoomStats_Var_Samp_Fields = {
    readonly __typename?: "analytics_RoomStats_var_samp_fields";
    readonly hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Var_Samp_Order_By = {
    readonly hlsViewCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Analytics_RoomStats_Variance_Fields = {
    readonly __typename?: "analytics_RoomStats_variance_fields";
    readonly hlsViewCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "analytics.RoomStats" */
export type Analytics_RoomStats_Variance_Order_By = {
    readonly hlsViewCount?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["bigint"]>;
    readonly _gt?: InputMaybe<Scalars["bigint"]>;
    readonly _gte?: InputMaybe<Scalars["bigint"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["bigint"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["bigint"]>;
    readonly _lte?: InputMaybe<Scalars["bigint"]>;
    readonly _neq?: InputMaybe<Scalars["bigint"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["bigint"]>>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_Chat = {
    readonly __typename?: "chat_Chat";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly duplicateTo?: Maybe<Chat_Chat>;
    readonly duplicateToId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    readonly duplicatesFrom: ReadonlyArray<Chat_Chat>;
    /** An aggregate relationship */
    readonly duplicatesFrom_aggregate: Chat_Chat_Aggregate;
    readonly enableAutoPin: Scalars["Boolean"];
    readonly enableAutoSubscribe: Scalars["Boolean"];
    readonly enableMandatoryPin: Scalars["Boolean"];
    readonly enableMandatorySubscribe: Scalars["Boolean"];
    /** An array relationship */
    readonly flags: ReadonlyArray<Chat_Flag>;
    /** An aggregate relationship */
    readonly flags_aggregate: Chat_Flag_Aggregate;
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly item?: Maybe<Content_Item>;
    /** An array relationship */
    readonly messages: ReadonlyArray<Chat_Message>;
    /** An aggregate relationship */
    readonly messages_aggregate: Chat_Message_Aggregate;
    /** An array relationship */
    readonly pins: ReadonlyArray<Chat_Pin>;
    /** An aggregate relationship */
    readonly pins_aggregate: Chat_Pin_Aggregate;
    /** An array relationship */
    readonly readUpToIndices: ReadonlyArray<Chat_ReadUpToIndex>;
    /** An aggregate relationship */
    readonly readUpToIndices_aggregate: Chat_ReadUpToIndex_Aggregate;
    readonly restrictToAdmins: Scalars["Boolean"];
    /** An object relationship */
    readonly room?: Maybe<Room_Room>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    readonly subscriptions: ReadonlyArray<Chat_Subscription>;
    /** An aggregate relationship */
    readonly subscriptions_aggregate: Chat_Subscription_Aggregate;
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatDuplicatesFromArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatDuplicatesFrom_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatFlagsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatFlags_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatMessagesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatMessages_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatPinsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatPins_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatReadUpToIndicesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatReadUpToIndices_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatSubscriptionsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_ChatSubscriptions_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

/** aggregated selection of "chat.Chat" */
export type Chat_Chat_Aggregate = {
    readonly __typename?: "chat_Chat_aggregate";
    readonly aggregate?: Maybe<Chat_Chat_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_Chat>;
};

/** aggregate fields of "chat.Chat" */
export type Chat_Chat_Aggregate_Fields = {
    readonly __typename?: "chat_Chat_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_Chat_Max_Fields>;
    readonly min?: Maybe<Chat_Chat_Min_Fields>;
};

/** aggregate fields of "chat.Chat" */
export type Chat_Chat_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_Chat_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Chat" */
export type Chat_Chat_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Chat_Chat_Max_Order_By>;
    readonly min?: InputMaybe<Chat_Chat_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Chat" */
export type Chat_Chat_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Chat_Chat_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Chat_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Chat". All fields are combined with a logical 'AND'. */
export type Chat_Chat_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Chat_Chat_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_Chat_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly duplicateTo?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly duplicateToId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly duplicatesFrom?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly enableAutoPin?: InputMaybe<Boolean_Comparison_Exp>;
    readonly enableAutoSubscribe?: InputMaybe<Boolean_Comparison_Exp>;
    readonly enableMandatoryPin?: InputMaybe<Boolean_Comparison_Exp>;
    readonly enableMandatorySubscribe?: InputMaybe<Boolean_Comparison_Exp>;
    readonly flags?: InputMaybe<Chat_Flag_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly messages?: InputMaybe<Chat_Message_Bool_Exp>;
    readonly pins?: InputMaybe<Chat_Pin_Bool_Exp>;
    readonly readUpToIndices?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
    readonly restrictToAdmins?: InputMaybe<Boolean_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly subscriptions?: InputMaybe<Chat_Subscription_Bool_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Chat" */
export enum Chat_Chat_Constraint {
    /** unique or primary key constraint */
    ChatPkey = "Chat_pkey",
}

/** input type for inserting data into table "chat.Chat" */
export type Chat_Chat_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly duplicateTo?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    readonly duplicateToId?: InputMaybe<Scalars["uuid"]>;
    readonly duplicatesFrom?: InputMaybe<Chat_Chat_Arr_Rel_Insert_Input>;
    readonly enableAutoPin?: InputMaybe<Scalars["Boolean"]>;
    readonly enableAutoSubscribe?: InputMaybe<Scalars["Boolean"]>;
    readonly enableMandatoryPin?: InputMaybe<Scalars["Boolean"]>;
    readonly enableMandatorySubscribe?: InputMaybe<Scalars["Boolean"]>;
    readonly flags?: InputMaybe<Chat_Flag_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly messages?: InputMaybe<Chat_Message_Arr_Rel_Insert_Input>;
    readonly pins?: InputMaybe<Chat_Pin_Arr_Rel_Insert_Input>;
    readonly readUpToIndices?: InputMaybe<Chat_ReadUpToIndex_Arr_Rel_Insert_Input>;
    readonly restrictToAdmins?: InputMaybe<Scalars["Boolean"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly subscriptions?: InputMaybe<Chat_Subscription_Arr_Rel_Insert_Input>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_Chat_Max_Fields = {
    readonly __typename?: "chat_Chat_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly duplicateToId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.Chat" */
export type Chat_Chat_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly duplicateToId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Chat_Min_Fields = {
    readonly __typename?: "chat_Chat_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly duplicateToId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.Chat" */
export type Chat_Chat_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly duplicateToId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Chat" */
export type Chat_Chat_Mutation_Response = {
    readonly __typename?: "chat_Chat_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_Chat>;
};

/** input type for inserting object relation for remote table "chat.Chat" */
export type Chat_Chat_Obj_Rel_Insert_Input = {
    readonly data: Chat_Chat_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Chat_On_Conflict>;
};

/** on_conflict condition type for table "chat.Chat" */
export type Chat_Chat_On_Conflict = {
    readonly constraint: Chat_Chat_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_Chat_Update_Column>;
    readonly where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Chat". */
export type Chat_Chat_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly duplicateTo?: InputMaybe<Chat_Chat_Order_By>;
    readonly duplicateToId?: InputMaybe<Order_By>;
    readonly duplicatesFrom_aggregate?: InputMaybe<Chat_Chat_Aggregate_Order_By>;
    readonly enableAutoPin?: InputMaybe<Order_By>;
    readonly enableAutoSubscribe?: InputMaybe<Order_By>;
    readonly enableMandatoryPin?: InputMaybe<Order_By>;
    readonly enableMandatorySubscribe?: InputMaybe<Order_By>;
    readonly flags_aggregate?: InputMaybe<Chat_Flag_Aggregate_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly messages_aggregate?: InputMaybe<Chat_Message_Aggregate_Order_By>;
    readonly pins_aggregate?: InputMaybe<Chat_Pin_Aggregate_Order_By>;
    readonly readUpToIndices_aggregate?: InputMaybe<Chat_ReadUpToIndex_Aggregate_Order_By>;
    readonly restrictToAdmins?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly subscriptions_aggregate?: InputMaybe<Chat_Subscription_Aggregate_Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Chat */
export type Chat_Chat_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "chat.Chat" */
export enum Chat_Chat_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DuplicateToId = "duplicateToId",
    /** column name */
    EnableAutoPin = "enableAutoPin",
    /** column name */
    EnableAutoSubscribe = "enableAutoSubscribe",
    /** column name */
    EnableMandatoryPin = "enableMandatoryPin",
    /** column name */
    EnableMandatorySubscribe = "enableMandatorySubscribe",
    /** column name */
    Id = "id",
    /** column name */
    RestrictToAdmins = "restrictToAdmins",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.Chat" */
export type Chat_Chat_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly duplicateToId?: InputMaybe<Scalars["uuid"]>;
    readonly enableAutoPin?: InputMaybe<Scalars["Boolean"]>;
    readonly enableAutoSubscribe?: InputMaybe<Scalars["Boolean"]>;
    readonly enableMandatoryPin?: InputMaybe<Scalars["Boolean"]>;
    readonly enableMandatorySubscribe?: InputMaybe<Scalars["Boolean"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly restrictToAdmins?: InputMaybe<Scalars["Boolean"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "chat.Chat" */
export enum Chat_Chat_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DuplicateToId = "duplicateToId",
    /** column name */
    EnableAutoPin = "enableAutoPin",
    /** column name */
    EnableAutoSubscribe = "enableAutoSubscribe",
    /** column name */
    EnableMandatoryPin = "enableMandatoryPin",
    /** column name */
    EnableMandatorySubscribe = "enableMandatorySubscribe",
    /** column name */
    Id = "id",
    /** column name */
    RestrictToAdmins = "restrictToAdmins",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "chat.Flag" */
export type Chat_Flag = {
    readonly __typename?: "chat_Flag";
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly discussionChat?: Maybe<Chat_Chat>;
    readonly discussionChatId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly flaggedBy?: Maybe<Registrant_Registrant>;
    readonly flaggedById?: Maybe<Scalars["uuid"]>;
    readonly id: Scalars["Int"];
    /** An object relationship */
    readonly message: Chat_Message;
    readonly messageSId: Scalars["uuid"];
    readonly notes?: Maybe<Scalars["String"]>;
    readonly resolution?: Maybe<Scalars["String"]>;
    readonly resolved_at?: Maybe<Scalars["timestamptz"]>;
    readonly type: Chat_FlagType_Enum;
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "chat.FlagType" */
export type Chat_FlagType = {
    readonly __typename?: "chat_FlagType";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "chat.FlagType" */
export type Chat_FlagType_Aggregate = {
    readonly __typename?: "chat_FlagType_aggregate";
    readonly aggregate?: Maybe<Chat_FlagType_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_FlagType>;
};

/** aggregate fields of "chat.FlagType" */
export type Chat_FlagType_Aggregate_Fields = {
    readonly __typename?: "chat_FlagType_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_FlagType_Max_Fields>;
    readonly min?: Maybe<Chat_FlagType_Min_Fields>;
};

/** aggregate fields of "chat.FlagType" */
export type Chat_FlagType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_FlagType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "chat.FlagType". All fields are combined with a logical 'AND'. */
export type Chat_FlagType_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Chat_FlagType_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_FlagType_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_FlagType_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.FlagType" */
export enum Chat_FlagType_Constraint {
    /** unique or primary key constraint */
    FlagTypePkey = "FlagType_pkey",
}

export enum Chat_FlagType_Enum {
    /** It's abusive or harmful. */
    Abusive = "Abusive",
    /** It contains false information and is intended to mislead readers. */
    Disinformation = "Disinformation",
    /** It gives the wrong idea or impression. */
    Misleading = "Misleading",
    /** It expresses intentions of self-harm or suicide. */
    RiskToLife = "Risk_To_Life",
    /** It's spam, suspicious or annoying. */
    Spam = "Spam",
}

/** Boolean expression to compare columns of type "chat_FlagType_enum". All fields are combined with logical 'AND'. */
export type Chat_FlagType_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Chat_FlagType_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Chat_FlagType_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Chat_FlagType_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Chat_FlagType_Enum>>;
};

/** input type for inserting data into table "chat.FlagType" */
export type Chat_FlagType_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Chat_FlagType_Max_Fields = {
    readonly __typename?: "chat_FlagType_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Chat_FlagType_Min_Fields = {
    readonly __typename?: "chat_FlagType_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "chat.FlagType" */
export type Chat_FlagType_Mutation_Response = {
    readonly __typename?: "chat_FlagType_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_FlagType>;
};

/** on_conflict condition type for table "chat.FlagType" */
export type Chat_FlagType_On_Conflict = {
    readonly constraint: Chat_FlagType_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_FlagType_Update_Column>;
    readonly where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.FlagType". */
export type Chat_FlagType_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_FlagType */
export type Chat_FlagType_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "chat.FlagType" */
export enum Chat_FlagType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "chat.FlagType" */
export type Chat_FlagType_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "chat.FlagType" */
export enum Chat_FlagType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "chat.Flag" */
export type Chat_Flag_Aggregate = {
    readonly __typename?: "chat_Flag_aggregate";
    readonly aggregate?: Maybe<Chat_Flag_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_Flag>;
};

/** aggregate fields of "chat.Flag" */
export type Chat_Flag_Aggregate_Fields = {
    readonly __typename?: "chat_Flag_aggregate_fields";
    readonly avg?: Maybe<Chat_Flag_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_Flag_Max_Fields>;
    readonly min?: Maybe<Chat_Flag_Min_Fields>;
    readonly stddev?: Maybe<Chat_Flag_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Chat_Flag_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Chat_Flag_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Chat_Flag_Sum_Fields>;
    readonly var_pop?: Maybe<Chat_Flag_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Chat_Flag_Var_Samp_Fields>;
    readonly variance?: Maybe<Chat_Flag_Variance_Fields>;
};

/** aggregate fields of "chat.Flag" */
export type Chat_Flag_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_Flag_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Flag" */
export type Chat_Flag_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Chat_Flag_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Chat_Flag_Max_Order_By>;
    readonly min?: InputMaybe<Chat_Flag_Min_Order_By>;
    readonly stddev?: InputMaybe<Chat_Flag_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Chat_Flag_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Chat_Flag_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Chat_Flag_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Chat_Flag_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Chat_Flag_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Chat_Flag_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Flag" */
export type Chat_Flag_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Chat_Flag_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Flag_On_Conflict>;
};

/** aggregate avg on columns */
export type Chat_Flag_Avg_Fields = {
    readonly __typename?: "chat_Flag_avg_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "chat.Flag" */
export type Chat_Flag_Avg_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "chat.Flag". All fields are combined with a logical 'AND'. */
export type Chat_Flag_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Chat_Flag_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_Flag_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_Flag_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly discussionChat?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly discussionChatId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly flaggedBy?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly flaggedById?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Int_Comparison_Exp>;
    readonly message?: InputMaybe<Chat_Message_Bool_Exp>;
    readonly messageSId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly notes?: InputMaybe<String_Comparison_Exp>;
    readonly resolution?: InputMaybe<String_Comparison_Exp>;
    readonly resolved_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly type?: InputMaybe<Chat_FlagType_Enum_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Flag" */
export enum Chat_Flag_Constraint {
    /** unique or primary key constraint */
    FlagFlaggedByIdMessageSIdTypeKey = "Flag_flaggedById_messageSId_type_key",
    /** unique or primary key constraint */
    FlagPkey = "Flag_pkey",
}

/** input type for incrementing numeric columns in table "chat.Flag" */
export type Chat_Flag_Inc_Input = {
    readonly id?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "chat.Flag" */
export type Chat_Flag_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly discussionChat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    readonly discussionChatId?: InputMaybe<Scalars["uuid"]>;
    readonly flaggedBy?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly flaggedById?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["Int"]>;
    readonly message?: InputMaybe<Chat_Message_Obj_Rel_Insert_Input>;
    readonly messageSId?: InputMaybe<Scalars["uuid"]>;
    readonly notes?: InputMaybe<Scalars["String"]>;
    readonly resolution?: InputMaybe<Scalars["String"]>;
    readonly resolved_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly type?: InputMaybe<Chat_FlagType_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_Flag_Max_Fields = {
    readonly __typename?: "chat_Flag_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly discussionChatId?: Maybe<Scalars["uuid"]>;
    readonly flaggedById?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["Int"]>;
    readonly messageSId?: Maybe<Scalars["uuid"]>;
    readonly notes?: Maybe<Scalars["String"]>;
    readonly resolution?: Maybe<Scalars["String"]>;
    readonly resolved_at?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.Flag" */
export type Chat_Flag_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly discussionChatId?: InputMaybe<Order_By>;
    readonly flaggedById?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly messageSId?: InputMaybe<Order_By>;
    readonly notes?: InputMaybe<Order_By>;
    readonly resolution?: InputMaybe<Order_By>;
    readonly resolved_at?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Flag_Min_Fields = {
    readonly __typename?: "chat_Flag_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly discussionChatId?: Maybe<Scalars["uuid"]>;
    readonly flaggedById?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["Int"]>;
    readonly messageSId?: Maybe<Scalars["uuid"]>;
    readonly notes?: Maybe<Scalars["String"]>;
    readonly resolution?: Maybe<Scalars["String"]>;
    readonly resolved_at?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.Flag" */
export type Chat_Flag_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly discussionChatId?: InputMaybe<Order_By>;
    readonly flaggedById?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly messageSId?: InputMaybe<Order_By>;
    readonly notes?: InputMaybe<Order_By>;
    readonly resolution?: InputMaybe<Order_By>;
    readonly resolved_at?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Flag" */
export type Chat_Flag_Mutation_Response = {
    readonly __typename?: "chat_Flag_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_Flag>;
};

/** on_conflict condition type for table "chat.Flag" */
export type Chat_Flag_On_Conflict = {
    readonly constraint: Chat_Flag_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_Flag_Update_Column>;
    readonly where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Flag". */
export type Chat_Flag_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly discussionChat?: InputMaybe<Chat_Chat_Order_By>;
    readonly discussionChatId?: InputMaybe<Order_By>;
    readonly flaggedBy?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly flaggedById?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Chat_Message_Order_By>;
    readonly messageSId?: InputMaybe<Order_By>;
    readonly notes?: InputMaybe<Order_By>;
    readonly resolution?: InputMaybe<Order_By>;
    readonly resolved_at?: InputMaybe<Order_By>;
    readonly type?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Flag */
export type Chat_Flag_Pk_Columns_Input = {
    readonly id: Scalars["Int"];
};

/** select columns of table "chat.Flag" */
export enum Chat_Flag_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DiscussionChatId = "discussionChatId",
    /** column name */
    FlaggedById = "flaggedById",
    /** column name */
    Id = "id",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    Notes = "notes",
    /** column name */
    Resolution = "resolution",
    /** column name */
    ResolvedAt = "resolved_at",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.Flag" */
export type Chat_Flag_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly discussionChatId?: InputMaybe<Scalars["uuid"]>;
    readonly flaggedById?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["Int"]>;
    readonly messageSId?: InputMaybe<Scalars["uuid"]>;
    readonly notes?: InputMaybe<Scalars["String"]>;
    readonly resolution?: InputMaybe<Scalars["String"]>;
    readonly resolved_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly type?: InputMaybe<Chat_FlagType_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Chat_Flag_Stddev_Fields = {
    readonly __typename?: "chat_Flag_stddev_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "chat.Flag" */
export type Chat_Flag_Stddev_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Chat_Flag_Stddev_Pop_Fields = {
    readonly __typename?: "chat_Flag_stddev_pop_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "chat.Flag" */
export type Chat_Flag_Stddev_Pop_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Chat_Flag_Stddev_Samp_Fields = {
    readonly __typename?: "chat_Flag_stddev_samp_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "chat.Flag" */
export type Chat_Flag_Stddev_Samp_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Chat_Flag_Sum_Fields = {
    readonly __typename?: "chat_Flag_sum_fields";
    readonly id?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "chat.Flag" */
export type Chat_Flag_Sum_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** update columns of table "chat.Flag" */
export enum Chat_Flag_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DiscussionChatId = "discussionChatId",
    /** column name */
    FlaggedById = "flaggedById",
    /** column name */
    Id = "id",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    Notes = "notes",
    /** column name */
    Resolution = "resolution",
    /** column name */
    ResolvedAt = "resolved_at",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Chat_Flag_Var_Pop_Fields = {
    readonly __typename?: "chat_Flag_var_pop_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "chat.Flag" */
export type Chat_Flag_Var_Pop_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Chat_Flag_Var_Samp_Fields = {
    readonly __typename?: "chat_Flag_var_samp_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "chat.Flag" */
export type Chat_Flag_Var_Samp_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Chat_Flag_Variance_Fields = {
    readonly __typename?: "chat_Flag_variance_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "chat.Flag" */
export type Chat_Flag_Variance_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_Message = {
    readonly __typename?: "chat_Message";
    /** An object relationship */
    readonly chat: Chat_Chat;
    readonly chatId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    readonly data: Scalars["jsonb"];
    /** An object relationship */
    readonly duplicateIncoming?: Maybe<Chat_Message>;
    /** An object relationship */
    readonly duplicateOutgoing?: Maybe<Chat_Message>;
    readonly duplicatedMessageSId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    readonly flags: ReadonlyArray<Chat_Flag>;
    /** An aggregate relationship */
    readonly flags_aggregate: Chat_Flag_Aggregate;
    readonly id: Scalars["Int"];
    readonly isPinned: Scalars["Boolean"];
    readonly message: Scalars["String"];
    /** An array relationship */
    readonly reactions: ReadonlyArray<Chat_Reaction>;
    /** An aggregate relationship */
    readonly reactions_aggregate: Chat_Reaction_Aggregate;
    readonly sId: Scalars["uuid"];
    /** An object relationship */
    readonly sender?: Maybe<Registrant_Registrant>;
    readonly senderId?: Maybe<Scalars["uuid"]>;
    readonly systemId?: Maybe<Scalars["String"]>;
    readonly type: Chat_MessageType_Enum;
    readonly updated_at: Scalars["timestamptz"];
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageFlagsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageFlags_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageReactionsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers. */
export type Chat_MessageReactions_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** columns and relationships of "chat.MessageType" */
export type Chat_MessageType = {
    readonly __typename?: "chat_MessageType";
    readonly name: Scalars["String"];
};

/** aggregated selection of "chat.MessageType" */
export type Chat_MessageType_Aggregate = {
    readonly __typename?: "chat_MessageType_aggregate";
    readonly aggregate?: Maybe<Chat_MessageType_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_MessageType>;
};

/** aggregate fields of "chat.MessageType" */
export type Chat_MessageType_Aggregate_Fields = {
    readonly __typename?: "chat_MessageType_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_MessageType_Max_Fields>;
    readonly min?: Maybe<Chat_MessageType_Min_Fields>;
};

/** aggregate fields of "chat.MessageType" */
export type Chat_MessageType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_MessageType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "chat.MessageType". All fields are combined with a logical 'AND'. */
export type Chat_MessageType_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Chat_MessageType_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_MessageType_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_MessageType_Bool_Exp>>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.MessageType" */
export enum Chat_MessageType_Constraint {
    /** unique or primary key constraint */
    MessageTypePkey = "MessageType_pkey",
}

export enum Chat_MessageType_Enum {
    Answer = "ANSWER",
    DuplicationMarker = "DUPLICATION_MARKER",
    Emote = "EMOTE",
    EventStart = "EVENT_START",
    Message = "MESSAGE",
    ParticipationSurvey = "PARTICIPATION_SURVEY",
    Poll = "POLL",
    PollResults = "POLL_RESULTS",
    Question = "QUESTION",
}

/** Boolean expression to compare columns of type "chat_MessageType_enum". All fields are combined with logical 'AND'. */
export type Chat_MessageType_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Chat_MessageType_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Chat_MessageType_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Chat_MessageType_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Chat_MessageType_Enum>>;
};

/** input type for inserting data into table "chat.MessageType" */
export type Chat_MessageType_Insert_Input = {
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Chat_MessageType_Max_Fields = {
    readonly __typename?: "chat_MessageType_max_fields";
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Chat_MessageType_Min_Fields = {
    readonly __typename?: "chat_MessageType_min_fields";
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "chat.MessageType" */
export type Chat_MessageType_Mutation_Response = {
    readonly __typename?: "chat_MessageType_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_MessageType>;
};

/** on_conflict condition type for table "chat.MessageType" */
export type Chat_MessageType_On_Conflict = {
    readonly constraint: Chat_MessageType_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_MessageType_Update_Column>;
    readonly where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.MessageType". */
export type Chat_MessageType_Order_By = {
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_MessageType */
export type Chat_MessageType_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "chat.MessageType" */
export enum Chat_MessageType_Select_Column {
    /** column name */
    Name = "name",
}

/** input type for updating data in table "chat.MessageType" */
export type Chat_MessageType_Set_Input = {
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "chat.MessageType" */
export enum Chat_MessageType_Update_Column {
    /** column name */
    Name = "name",
}

/** aggregated selection of "chat.Message" */
export type Chat_Message_Aggregate = {
    readonly __typename?: "chat_Message_aggregate";
    readonly aggregate?: Maybe<Chat_Message_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_Message>;
};

/** aggregate fields of "chat.Message" */
export type Chat_Message_Aggregate_Fields = {
    readonly __typename?: "chat_Message_aggregate_fields";
    readonly avg?: Maybe<Chat_Message_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_Message_Max_Fields>;
    readonly min?: Maybe<Chat_Message_Min_Fields>;
    readonly stddev?: Maybe<Chat_Message_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Chat_Message_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Chat_Message_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Chat_Message_Sum_Fields>;
    readonly var_pop?: Maybe<Chat_Message_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Chat_Message_Var_Samp_Fields>;
    readonly variance?: Maybe<Chat_Message_Variance_Fields>;
};

/** aggregate fields of "chat.Message" */
export type Chat_Message_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_Message_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Message" */
export type Chat_Message_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Chat_Message_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Chat_Message_Max_Order_By>;
    readonly min?: InputMaybe<Chat_Message_Min_Order_By>;
    readonly stddev?: InputMaybe<Chat_Message_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Chat_Message_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Chat_Message_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Chat_Message_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Chat_Message_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Chat_Message_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Chat_Message_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Chat_Message_Append_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "chat.Message" */
export type Chat_Message_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Chat_Message_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Message_On_Conflict>;
};

/** aggregate avg on columns */
export type Chat_Message_Avg_Fields = {
    readonly __typename?: "chat_Message_avg_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "chat.Message" */
export type Chat_Message_Avg_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "chat.Message". All fields are combined with a logical 'AND'. */
export type Chat_Message_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Chat_Message_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_Message_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_Message_Bool_Exp>>;
    readonly chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly chatId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly data?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly duplicateIncoming?: InputMaybe<Chat_Message_Bool_Exp>;
    readonly duplicateOutgoing?: InputMaybe<Chat_Message_Bool_Exp>;
    readonly duplicatedMessageSId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly flags?: InputMaybe<Chat_Flag_Bool_Exp>;
    readonly id?: InputMaybe<Int_Comparison_Exp>;
    readonly isPinned?: InputMaybe<Boolean_Comparison_Exp>;
    readonly message?: InputMaybe<String_Comparison_Exp>;
    readonly reactions?: InputMaybe<Chat_Reaction_Bool_Exp>;
    readonly sId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly sender?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly senderId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly systemId?: InputMaybe<String_Comparison_Exp>;
    readonly type?: InputMaybe<Chat_MessageType_Enum_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Message" */
export enum Chat_Message_Constraint {
    /** unique or primary key constraint */
    MessageDuplicatedMessageSIdKey = "Message_duplicatedMessageSId_key",
    /** unique or primary key constraint */
    MessagePkey = "Message_pkey",
    /** unique or primary key constraint */
    MessageSIdChatIdKey = "Message_sId_chatId_key",
    /** unique or primary key constraint */
    MessageSIdKey = "Message_sId_key",
    /** unique or primary key constraint */
    MessageSystemIdKey = "Message_systemId_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Chat_Message_Delete_At_Path_Input = {
    readonly data?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Chat_Message_Delete_Elem_Input = {
    readonly data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Chat_Message_Delete_Key_Input = {
    readonly data?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "chat.Message" */
export type Chat_Message_Inc_Input = {
    readonly id?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "chat.Message" */
export type Chat_Message_Insert_Input = {
    readonly chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly duplicateIncoming?: InputMaybe<Chat_Message_Obj_Rel_Insert_Input>;
    readonly duplicateOutgoing?: InputMaybe<Chat_Message_Obj_Rel_Insert_Input>;
    readonly duplicatedMessageSId?: InputMaybe<Scalars["uuid"]>;
    readonly flags?: InputMaybe<Chat_Flag_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["Int"]>;
    readonly isPinned?: InputMaybe<Scalars["Boolean"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly reactions?: InputMaybe<Chat_Reaction_Arr_Rel_Insert_Input>;
    readonly sId?: InputMaybe<Scalars["uuid"]>;
    readonly sender?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly senderId?: InputMaybe<Scalars["uuid"]>;
    readonly systemId?: InputMaybe<Scalars["String"]>;
    readonly type?: InputMaybe<Chat_MessageType_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_Message_Max_Fields = {
    readonly __typename?: "chat_Message_max_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly duplicatedMessageSId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["Int"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly sId?: Maybe<Scalars["uuid"]>;
    readonly senderId?: Maybe<Scalars["uuid"]>;
    readonly systemId?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.Message" */
export type Chat_Message_Max_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly duplicatedMessageSId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly sId?: InputMaybe<Order_By>;
    readonly senderId?: InputMaybe<Order_By>;
    readonly systemId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Message_Min_Fields = {
    readonly __typename?: "chat_Message_min_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly duplicatedMessageSId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["Int"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly sId?: Maybe<Scalars["uuid"]>;
    readonly senderId?: Maybe<Scalars["uuid"]>;
    readonly systemId?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.Message" */
export type Chat_Message_Min_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly duplicatedMessageSId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly sId?: InputMaybe<Order_By>;
    readonly senderId?: InputMaybe<Order_By>;
    readonly systemId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Message" */
export type Chat_Message_Mutation_Response = {
    readonly __typename?: "chat_Message_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_Message>;
};

/** input type for inserting object relation for remote table "chat.Message" */
export type Chat_Message_Obj_Rel_Insert_Input = {
    readonly data: Chat_Message_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Message_On_Conflict>;
};

/** on_conflict condition type for table "chat.Message" */
export type Chat_Message_On_Conflict = {
    readonly constraint: Chat_Message_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_Message_Update_Column>;
    readonly where?: InputMaybe<Chat_Message_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Message". */
export type Chat_Message_Order_By = {
    readonly chat?: InputMaybe<Chat_Chat_Order_By>;
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly data?: InputMaybe<Order_By>;
    readonly duplicateIncoming?: InputMaybe<Chat_Message_Order_By>;
    readonly duplicateOutgoing?: InputMaybe<Chat_Message_Order_By>;
    readonly duplicatedMessageSId?: InputMaybe<Order_By>;
    readonly flags_aggregate?: InputMaybe<Chat_Flag_Aggregate_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly isPinned?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly reactions_aggregate?: InputMaybe<Chat_Reaction_Aggregate_Order_By>;
    readonly sId?: InputMaybe<Order_By>;
    readonly sender?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly senderId?: InputMaybe<Order_By>;
    readonly systemId?: InputMaybe<Order_By>;
    readonly type?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Message */
export type Chat_Message_Pk_Columns_Input = {
    readonly id: Scalars["Int"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Chat_Message_Prepend_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "chat.Message" */
export enum Chat_Message_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    DuplicatedMessageSId = "duplicatedMessageSId",
    /** column name */
    Id = "id",
    /** column name */
    IsPinned = "isPinned",
    /** column name */
    Message = "message",
    /** column name */
    SId = "sId",
    /** column name */
    SenderId = "senderId",
    /** column name */
    SystemId = "systemId",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.Message" */
export type Chat_Message_Set_Input = {
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly duplicatedMessageSId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["Int"]>;
    readonly isPinned?: InputMaybe<Scalars["Boolean"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly sId?: InputMaybe<Scalars["uuid"]>;
    readonly senderId?: InputMaybe<Scalars["uuid"]>;
    readonly systemId?: InputMaybe<Scalars["String"]>;
    readonly type?: InputMaybe<Chat_MessageType_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Chat_Message_Stddev_Fields = {
    readonly __typename?: "chat_Message_stddev_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "chat.Message" */
export type Chat_Message_Stddev_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Chat_Message_Stddev_Pop_Fields = {
    readonly __typename?: "chat_Message_stddev_pop_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "chat.Message" */
export type Chat_Message_Stddev_Pop_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Chat_Message_Stddev_Samp_Fields = {
    readonly __typename?: "chat_Message_stddev_samp_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "chat.Message" */
export type Chat_Message_Stddev_Samp_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Chat_Message_Sum_Fields = {
    readonly __typename?: "chat_Message_sum_fields";
    readonly id?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "chat.Message" */
export type Chat_Message_Sum_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** update columns of table "chat.Message" */
export enum Chat_Message_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    DuplicatedMessageSId = "duplicatedMessageSId",
    /** column name */
    Id = "id",
    /** column name */
    IsPinned = "isPinned",
    /** column name */
    Message = "message",
    /** column name */
    SId = "sId",
    /** column name */
    SenderId = "senderId",
    /** column name */
    SystemId = "systemId",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Chat_Message_Var_Pop_Fields = {
    readonly __typename?: "chat_Message_var_pop_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "chat.Message" */
export type Chat_Message_Var_Pop_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Chat_Message_Var_Samp_Fields = {
    readonly __typename?: "chat_Message_var_samp_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "chat.Message" */
export type Chat_Message_Var_Samp_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Chat_Message_Variance_Fields = {
    readonly __typename?: "chat_Message_variance_fields";
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "chat.Message" */
export type Chat_Message_Variance_Order_By = {
    readonly id?: InputMaybe<Order_By>;
};

/** Pin a chat to the sidebar. */
export type Chat_Pin = {
    readonly __typename?: "chat_Pin";
    /** An object relationship */
    readonly chat: Chat_Chat;
    readonly chatId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    readonly wasManuallyPinned: Scalars["Boolean"];
};

/** aggregated selection of "chat.Pin" */
export type Chat_Pin_Aggregate = {
    readonly __typename?: "chat_Pin_aggregate";
    readonly aggregate?: Maybe<Chat_Pin_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_Pin>;
};

/** aggregate fields of "chat.Pin" */
export type Chat_Pin_Aggregate_Fields = {
    readonly __typename?: "chat_Pin_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_Pin_Max_Fields>;
    readonly min?: Maybe<Chat_Pin_Min_Fields>;
};

/** aggregate fields of "chat.Pin" */
export type Chat_Pin_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_Pin_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Pin" */
export type Chat_Pin_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Chat_Pin_Max_Order_By>;
    readonly min?: InputMaybe<Chat_Pin_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Pin" */
export type Chat_Pin_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Chat_Pin_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Pin_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Pin". All fields are combined with a logical 'AND'. */
export type Chat_Pin_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Chat_Pin_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_Pin_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_Pin_Bool_Exp>>;
    readonly chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly chatId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly wasManuallyPinned?: InputMaybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Pin" */
export enum Chat_Pin_Constraint {
    /** unique or primary key constraint */
    ChatPinPkey = "ChatPin_pkey",
}

/** input type for inserting data into table "chat.Pin" */
export type Chat_Pin_Insert_Input = {
    readonly chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly wasManuallyPinned?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate max on columns */
export type Chat_Pin_Max_Fields = {
    readonly __typename?: "chat_Pin_max_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "chat.Pin" */
export type Chat_Pin_Max_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Pin_Min_Fields = {
    readonly __typename?: "chat_Pin_min_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "chat.Pin" */
export type Chat_Pin_Min_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Pin" */
export type Chat_Pin_Mutation_Response = {
    readonly __typename?: "chat_Pin_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_Pin>;
};

/** input type for inserting object relation for remote table "chat.Pin" */
export type Chat_Pin_Obj_Rel_Insert_Input = {
    readonly data: Chat_Pin_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Pin_On_Conflict>;
};

/** on_conflict condition type for table "chat.Pin" */
export type Chat_Pin_On_Conflict = {
    readonly constraint: Chat_Pin_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_Pin_Update_Column>;
    readonly where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Pin". */
export type Chat_Pin_Order_By = {
    readonly chat?: InputMaybe<Chat_Chat_Order_By>;
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly wasManuallyPinned?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Pin */
export type Chat_Pin_Pk_Columns_Input = {
    readonly chatId: Scalars["uuid"];
    readonly registrantId: Scalars["uuid"];
};

/** select columns of table "chat.Pin" */
export enum Chat_Pin_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    WasManuallyPinned = "wasManuallyPinned",
}

/** input type for updating data in table "chat.Pin" */
export type Chat_Pin_Set_Input = {
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly wasManuallyPinned?: InputMaybe<Scalars["Boolean"]>;
};

/** update columns of table "chat.Pin" */
export enum Chat_Pin_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    WasManuallyPinned = "wasManuallyPinned",
}

/** columns and relationships of "chat.Reaction" */
export type Chat_Reaction = {
    readonly __typename?: "chat_Reaction";
    /** An object relationship */
    readonly chat: Chat_Chat;
    readonly chatId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    readonly data: Scalars["jsonb"];
    /** An object relationship */
    readonly duplicate?: Maybe<Chat_Reaction>;
    readonly duplicateSId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    readonly duplicates: ReadonlyArray<Chat_Reaction>;
    /** An aggregate relationship */
    readonly duplicates_aggregate: Chat_Reaction_Aggregate;
    /** An object relationship */
    readonly message: Chat_Message;
    readonly messageSId: Scalars["uuid"];
    readonly sId: Scalars["uuid"];
    /** An object relationship */
    readonly sender: Registrant_Registrant;
    readonly senderId: Scalars["uuid"];
    readonly symbol: Scalars["String"];
    readonly type: Chat_ReactionType_Enum;
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "chat.Reaction" */
export type Chat_ReactionDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "chat.Reaction" */
export type Chat_ReactionDuplicatesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** columns and relationships of "chat.Reaction" */
export type Chat_ReactionDuplicates_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** columns and relationships of "chat.ReactionType" */
export type Chat_ReactionType = {
    readonly __typename?: "chat_ReactionType";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "chat.ReactionType" */
export type Chat_ReactionType_Aggregate = {
    readonly __typename?: "chat_ReactionType_aggregate";
    readonly aggregate?: Maybe<Chat_ReactionType_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_ReactionType>;
};

/** aggregate fields of "chat.ReactionType" */
export type Chat_ReactionType_Aggregate_Fields = {
    readonly __typename?: "chat_ReactionType_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_ReactionType_Max_Fields>;
    readonly min?: Maybe<Chat_ReactionType_Min_Fields>;
};

/** aggregate fields of "chat.ReactionType" */
export type Chat_ReactionType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_ReactionType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "chat.ReactionType". All fields are combined with a logical 'AND'. */
export type Chat_ReactionType_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Chat_ReactionType_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_ReactionType_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_ReactionType_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.ReactionType" */
export enum Chat_ReactionType_Constraint {
    /** unique or primary key constraint */
    ReactionTypePkey = "ReactionType_pkey",
}

export enum Chat_ReactionType_Enum {
    /** Link to a message that answers the question. */
    Answer = "ANSWER",
    /** A plain emoji reaction */
    Emoji = "EMOJI",
    /** Responding to an event participation survey. */
    EventParticipation = "EVENT_PARTICIPATION",
    /** A vote in a poll */
    PollChoice = "POLL_CHOICE",
    /** Stop accepting new responses to the poll */
    PollClosed = "POLL_CLOSED",
    /** Make the poll results visible */
    PollComplete = "POLL_COMPLETE",
}

/** Boolean expression to compare columns of type "chat_ReactionType_enum". All fields are combined with logical 'AND'. */
export type Chat_ReactionType_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Chat_ReactionType_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Chat_ReactionType_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Chat_ReactionType_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Chat_ReactionType_Enum>>;
};

/** input type for inserting data into table "chat.ReactionType" */
export type Chat_ReactionType_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Chat_ReactionType_Max_Fields = {
    readonly __typename?: "chat_ReactionType_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Chat_ReactionType_Min_Fields = {
    readonly __typename?: "chat_ReactionType_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "chat.ReactionType" */
export type Chat_ReactionType_Mutation_Response = {
    readonly __typename?: "chat_ReactionType_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_ReactionType>;
};

/** on_conflict condition type for table "chat.ReactionType" */
export type Chat_ReactionType_On_Conflict = {
    readonly constraint: Chat_ReactionType_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_ReactionType_Update_Column>;
    readonly where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.ReactionType". */
export type Chat_ReactionType_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_ReactionType */
export type Chat_ReactionType_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "chat.ReactionType" */
export enum Chat_ReactionType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "chat.ReactionType" */
export type Chat_ReactionType_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "chat.ReactionType" */
export enum Chat_ReactionType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "chat.Reaction" */
export type Chat_Reaction_Aggregate = {
    readonly __typename?: "chat_Reaction_aggregate";
    readonly aggregate?: Maybe<Chat_Reaction_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_Reaction>;
};

/** aggregate fields of "chat.Reaction" */
export type Chat_Reaction_Aggregate_Fields = {
    readonly __typename?: "chat_Reaction_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_Reaction_Max_Fields>;
    readonly min?: Maybe<Chat_Reaction_Min_Fields>;
};

/** aggregate fields of "chat.Reaction" */
export type Chat_Reaction_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_Reaction_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Reaction" */
export type Chat_Reaction_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Chat_Reaction_Max_Order_By>;
    readonly min?: InputMaybe<Chat_Reaction_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Chat_Reaction_Append_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "chat.Reaction" */
export type Chat_Reaction_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Chat_Reaction_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Reaction_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Reaction". All fields are combined with a logical 'AND'. */
export type Chat_Reaction_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Chat_Reaction_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_Reaction_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_Reaction_Bool_Exp>>;
    readonly chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly chatId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly data?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly duplicate?: InputMaybe<Chat_Reaction_Bool_Exp>;
    readonly duplicateSId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly duplicates?: InputMaybe<Chat_Reaction_Bool_Exp>;
    readonly message?: InputMaybe<Chat_Message_Bool_Exp>;
    readonly messageSId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly sId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly sender?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly senderId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly symbol?: InputMaybe<String_Comparison_Exp>;
    readonly type?: InputMaybe<Chat_ReactionType_Enum_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Reaction" */
export enum Chat_Reaction_Constraint {
    /** unique or primary key constraint */
    ReactionPkey = "Reaction_pkey",
    /** unique or primary key constraint */
    ReactionSIdKey = "Reaction_sId_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Chat_Reaction_Delete_At_Path_Input = {
    readonly data?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Chat_Reaction_Delete_Elem_Input = {
    readonly data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Chat_Reaction_Delete_Key_Input = {
    readonly data?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "chat.Reaction" */
export type Chat_Reaction_Insert_Input = {
    readonly chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly duplicate?: InputMaybe<Chat_Reaction_Obj_Rel_Insert_Input>;
    readonly duplicateSId?: InputMaybe<Scalars["uuid"]>;
    readonly duplicates?: InputMaybe<Chat_Reaction_Arr_Rel_Insert_Input>;
    readonly message?: InputMaybe<Chat_Message_Obj_Rel_Insert_Input>;
    readonly messageSId?: InputMaybe<Scalars["uuid"]>;
    readonly sId?: InputMaybe<Scalars["uuid"]>;
    readonly sender?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly senderId?: InputMaybe<Scalars["uuid"]>;
    readonly symbol?: InputMaybe<Scalars["String"]>;
    readonly type?: InputMaybe<Chat_ReactionType_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_Reaction_Max_Fields = {
    readonly __typename?: "chat_Reaction_max_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly duplicateSId?: Maybe<Scalars["uuid"]>;
    readonly messageSId?: Maybe<Scalars["uuid"]>;
    readonly sId?: Maybe<Scalars["uuid"]>;
    readonly senderId?: Maybe<Scalars["uuid"]>;
    readonly symbol?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.Reaction" */
export type Chat_Reaction_Max_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly duplicateSId?: InputMaybe<Order_By>;
    readonly messageSId?: InputMaybe<Order_By>;
    readonly sId?: InputMaybe<Order_By>;
    readonly senderId?: InputMaybe<Order_By>;
    readonly symbol?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Reaction_Min_Fields = {
    readonly __typename?: "chat_Reaction_min_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly duplicateSId?: Maybe<Scalars["uuid"]>;
    readonly messageSId?: Maybe<Scalars["uuid"]>;
    readonly sId?: Maybe<Scalars["uuid"]>;
    readonly senderId?: Maybe<Scalars["uuid"]>;
    readonly symbol?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.Reaction" */
export type Chat_Reaction_Min_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly duplicateSId?: InputMaybe<Order_By>;
    readonly messageSId?: InputMaybe<Order_By>;
    readonly sId?: InputMaybe<Order_By>;
    readonly senderId?: InputMaybe<Order_By>;
    readonly symbol?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Reaction" */
export type Chat_Reaction_Mutation_Response = {
    readonly __typename?: "chat_Reaction_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_Reaction>;
};

/** input type for inserting object relation for remote table "chat.Reaction" */
export type Chat_Reaction_Obj_Rel_Insert_Input = {
    readonly data: Chat_Reaction_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Reaction_On_Conflict>;
};

/** on_conflict condition type for table "chat.Reaction" */
export type Chat_Reaction_On_Conflict = {
    readonly constraint: Chat_Reaction_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_Reaction_Update_Column>;
    readonly where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Reaction". */
export type Chat_Reaction_Order_By = {
    readonly chat?: InputMaybe<Chat_Chat_Order_By>;
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly data?: InputMaybe<Order_By>;
    readonly duplicate?: InputMaybe<Chat_Reaction_Order_By>;
    readonly duplicateSId?: InputMaybe<Order_By>;
    readonly duplicates_aggregate?: InputMaybe<Chat_Reaction_Aggregate_Order_By>;
    readonly message?: InputMaybe<Chat_Message_Order_By>;
    readonly messageSId?: InputMaybe<Order_By>;
    readonly sId?: InputMaybe<Order_By>;
    readonly sender?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly senderId?: InputMaybe<Order_By>;
    readonly symbol?: InputMaybe<Order_By>;
    readonly type?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Reaction */
export type Chat_Reaction_Pk_Columns_Input = {
    readonly sId: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Chat_Reaction_Prepend_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "chat.Reaction" */
export enum Chat_Reaction_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    DuplicateSId = "duplicateSId",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    SId = "sId",
    /** column name */
    SenderId = "senderId",
    /** column name */
    Symbol = "symbol",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.Reaction" */
export type Chat_Reaction_Set_Input = {
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly duplicateSId?: InputMaybe<Scalars["uuid"]>;
    readonly messageSId?: InputMaybe<Scalars["uuid"]>;
    readonly sId?: InputMaybe<Scalars["uuid"]>;
    readonly senderId?: InputMaybe<Scalars["uuid"]>;
    readonly symbol?: InputMaybe<Scalars["String"]>;
    readonly type?: InputMaybe<Chat_ReactionType_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "chat.Reaction" */
export enum Chat_Reaction_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    DuplicateSId = "duplicateSId",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    SId = "sId",
    /** column name */
    SenderId = "senderId",
    /** column name */
    Symbol = "symbol",
    /** column name */
    Type = "type",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex = {
    readonly __typename?: "chat_ReadUpToIndex";
    /** An object relationship */
    readonly chat: Chat_Chat;
    readonly chatId: Scalars["uuid"];
    readonly messageSId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate = {
    readonly __typename?: "chat_ReadUpToIndex_aggregate";
    readonly aggregate?: Maybe<Chat_ReadUpToIndex_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_ReadUpToIndex>;
};

/** aggregate fields of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate_Fields = {
    readonly __typename?: "chat_ReadUpToIndex_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_ReadUpToIndex_Max_Fields>;
    readonly min?: Maybe<Chat_ReadUpToIndex_Min_Fields>;
};

/** aggregate fields of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Chat_ReadUpToIndex_Max_Order_By>;
    readonly min?: InputMaybe<Chat_ReadUpToIndex_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Chat_ReadUpToIndex_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_ReadUpToIndex_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.ReadUpToIndex". All fields are combined with a logical 'AND'. */
export type Chat_ReadUpToIndex_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Bool_Exp>>;
    readonly chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly chatId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly messageSId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.ReadUpToIndex" */
export enum Chat_ReadUpToIndex_Constraint {
    /** unique or primary key constraint */
    ReadUpToIndexPkey = "ReadUpToIndex_pkey",
}

/** input type for inserting data into table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Insert_Input = {
    readonly chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly messageSId?: InputMaybe<Scalars["uuid"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Chat_ReadUpToIndex_Max_Fields = {
    readonly __typename?: "chat_ReadUpToIndex_max_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly messageSId?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Max_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly messageSId?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_ReadUpToIndex_Min_Fields = {
    readonly __typename?: "chat_ReadUpToIndex_min_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly messageSId?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Min_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly messageSId?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Mutation_Response = {
    readonly __typename?: "chat_ReadUpToIndex_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_ReadUpToIndex>;
};

/** on_conflict condition type for table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_On_Conflict = {
    readonly constraint: Chat_ReadUpToIndex_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_ReadUpToIndex_Update_Column>;
    readonly where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.ReadUpToIndex". */
export type Chat_ReadUpToIndex_Order_By = {
    readonly chat?: InputMaybe<Chat_Chat_Order_By>;
    readonly chatId?: InputMaybe<Order_By>;
    readonly messageSId?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_ReadUpToIndex */
export type Chat_ReadUpToIndex_Pk_Columns_Input = {
    readonly chatId: Scalars["uuid"];
    readonly registrantId: Scalars["uuid"];
};

/** select columns of table "chat.ReadUpToIndex" */
export enum Chat_ReadUpToIndex_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Set_Input = {
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly messageSId?: InputMaybe<Scalars["uuid"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "chat.ReadUpToIndex" */
export enum Chat_ReadUpToIndex_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    MessageSId = "messageSId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** Subscribe to chat notifications. */
export type Chat_Subscription = {
    readonly __typename?: "chat_Subscription";
    /** An object relationship */
    readonly XPin?: Maybe<Chat_Pin>;
    /** An object relationship */
    readonly chat: Chat_Chat;
    readonly chatId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    readonly wasManuallySubscribed: Scalars["Boolean"];
};

/** aggregated selection of "chat.Subscription" */
export type Chat_Subscription_Aggregate = {
    readonly __typename?: "chat_Subscription_aggregate";
    readonly aggregate?: Maybe<Chat_Subscription_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Chat_Subscription>;
};

/** aggregate fields of "chat.Subscription" */
export type Chat_Subscription_Aggregate_Fields = {
    readonly __typename?: "chat_Subscription_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Chat_Subscription_Max_Fields>;
    readonly min?: Maybe<Chat_Subscription_Min_Fields>;
};

/** aggregate fields of "chat.Subscription" */
export type Chat_Subscription_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Chat_Subscription_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "chat.Subscription" */
export type Chat_Subscription_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Chat_Subscription_Max_Order_By>;
    readonly min?: InputMaybe<Chat_Subscription_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Subscription" */
export type Chat_Subscription_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Chat_Subscription_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Chat_Subscription_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Subscription". All fields are combined with a logical 'AND'. */
export type Chat_Subscription_Bool_Exp = {
    readonly XPin?: InputMaybe<Chat_Pin_Bool_Exp>;
    readonly _and?: InputMaybe<ReadonlyArray<Chat_Subscription_Bool_Exp>>;
    readonly _not?: InputMaybe<Chat_Subscription_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Chat_Subscription_Bool_Exp>>;
    readonly chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly chatId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly wasManuallySubscribed?: InputMaybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Subscription" */
export enum Chat_Subscription_Constraint {
    /** unique or primary key constraint */
    SubscriptionPkey = "Subscription_pkey",
}

/** input type for inserting data into table "chat.Subscription" */
export type Chat_Subscription_Insert_Input = {
    readonly XPin?: InputMaybe<Chat_Pin_Obj_Rel_Insert_Input>;
    readonly chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly wasManuallySubscribed?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate max on columns */
export type Chat_Subscription_Max_Fields = {
    readonly __typename?: "chat_Subscription_max_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "chat.Subscription" */
export type Chat_Subscription_Max_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Subscription_Min_Fields = {
    readonly __typename?: "chat_Subscription_min_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "chat.Subscription" */
export type Chat_Subscription_Min_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "chat.Subscription" */
export type Chat_Subscription_Mutation_Response = {
    readonly __typename?: "chat_Subscription_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Chat_Subscription>;
};

/** on_conflict condition type for table "chat.Subscription" */
export type Chat_Subscription_On_Conflict = {
    readonly constraint: Chat_Subscription_Constraint;
    readonly update_columns?: ReadonlyArray<Chat_Subscription_Update_Column>;
    readonly where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

/** Ordering options when selecting data from "chat.Subscription". */
export type Chat_Subscription_Order_By = {
    readonly XPin?: InputMaybe<Chat_Pin_Order_By>;
    readonly chat?: InputMaybe<Chat_Chat_Order_By>;
    readonly chatId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly wasManuallySubscribed?: InputMaybe<Order_By>;
};

/** primary key columns input for table: chat_Subscription */
export type Chat_Subscription_Pk_Columns_Input = {
    readonly chatId: Scalars["uuid"];
    readonly registrantId: Scalars["uuid"];
};

/** select columns of table "chat.Subscription" */
export enum Chat_Subscription_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    WasManuallySubscribed = "wasManuallySubscribed",
}

/** input type for updating data in table "chat.Subscription" */
export type Chat_Subscription_Set_Input = {
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly wasManuallySubscribed?: InputMaybe<Scalars["Boolean"]>;
};

/** update columns of table "chat.Subscription" */
export enum Chat_Subscription_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    WasManuallySubscribed = "wasManuallySubscribed",
}

/** columns and relationships of "collection.Exhibition" */
export type Collection_Exhibition = {
    readonly __typename?: "collection_Exhibition";
    readonly colour: Scalars["String"];
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly descriptiveItem?: Maybe<Content_Item>;
    readonly descriptiveItemId?: Maybe<Scalars["uuid"]>;
    readonly id: Scalars["uuid"];
    readonly isHidden: Scalars["Boolean"];
    /** An array relationship */
    readonly items: ReadonlyArray<Content_ItemExhibition>;
    /** An aggregate relationship */
    readonly items_aggregate: Content_ItemExhibition_Aggregate;
    readonly name: Scalars["String"];
    readonly priority: Scalars["Int"];
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at: Scalars["timestamptz"];
    readonly visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "collection.Exhibition" */
export type Collection_ExhibitionItemsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** columns and relationships of "collection.Exhibition" */
export type Collection_ExhibitionItems_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** aggregated selection of "collection.Exhibition" */
export type Collection_Exhibition_Aggregate = {
    readonly __typename?: "collection_Exhibition_aggregate";
    readonly aggregate?: Maybe<Collection_Exhibition_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Collection_Exhibition>;
};

/** aggregate fields of "collection.Exhibition" */
export type Collection_Exhibition_Aggregate_Fields = {
    readonly __typename?: "collection_Exhibition_aggregate_fields";
    readonly avg?: Maybe<Collection_Exhibition_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Collection_Exhibition_Max_Fields>;
    readonly min?: Maybe<Collection_Exhibition_Min_Fields>;
    readonly stddev?: Maybe<Collection_Exhibition_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Collection_Exhibition_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Collection_Exhibition_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Collection_Exhibition_Sum_Fields>;
    readonly var_pop?: Maybe<Collection_Exhibition_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Collection_Exhibition_Var_Samp_Fields>;
    readonly variance?: Maybe<Collection_Exhibition_Variance_Fields>;
};

/** aggregate fields of "collection.Exhibition" */
export type Collection_Exhibition_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Collection_Exhibition_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "collection.Exhibition" */
export type Collection_Exhibition_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Collection_Exhibition_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Collection_Exhibition_Max_Order_By>;
    readonly min?: InputMaybe<Collection_Exhibition_Min_Order_By>;
    readonly stddev?: InputMaybe<Collection_Exhibition_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Collection_Exhibition_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Collection_Exhibition_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Collection_Exhibition_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Collection_Exhibition_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Collection_Exhibition_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Collection_Exhibition_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "collection.Exhibition" */
export type Collection_Exhibition_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Collection_Exhibition_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Collection_Exhibition_On_Conflict>;
};

/** aggregate avg on columns */
export type Collection_Exhibition_Avg_Fields = {
    readonly __typename?: "collection_Exhibition_avg_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Avg_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "collection.Exhibition". All fields are combined with a logical 'AND'. */
export type Collection_Exhibition_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Collection_Exhibition_Bool_Exp>>;
    readonly _not?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Collection_Exhibition_Bool_Exp>>;
    readonly colour?: InputMaybe<String_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly descriptiveItem?: InputMaybe<Content_Item_Bool_Exp>;
    readonly descriptiveItemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly isHidden?: InputMaybe<Boolean_Comparison_Exp>;
    readonly items?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly priority?: InputMaybe<Int_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "collection.Exhibition" */
export enum Collection_Exhibition_Constraint {
    /** unique or primary key constraint */
    ExhibitionPkey = "Exhibition_pkey",
    /** unique or primary key constraint */
    CollectionExhibitionNameConferenceId = "collection_Exhibition_name_conferenceId",
    /** unique or primary key constraint */
    CollectionExhibitionNameSubconferenceId = "collection_Exhibition_name_subconferenceId",
}

/** input type for incrementing numeric columns in table "collection.Exhibition" */
export type Collection_Exhibition_Inc_Input = {
    readonly priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "collection.Exhibition" */
export type Collection_Exhibition_Insert_Input = {
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly descriptiveItem?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly descriptiveItemId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isHidden?: InputMaybe<Scalars["Boolean"]>;
    readonly items?: InputMaybe<Content_ItemExhibition_Arr_Rel_Insert_Input>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Collection_Exhibition_Max_Fields = {
    readonly __typename?: "collection_Exhibition_max_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly descriptiveItemId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Max_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly descriptiveItemId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Collection_Exhibition_Min_Fields = {
    readonly __typename?: "collection_Exhibition_min_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly descriptiveItemId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Min_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly descriptiveItemId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "collection.Exhibition" */
export type Collection_Exhibition_Mutation_Response = {
    readonly __typename?: "collection_Exhibition_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Collection_Exhibition>;
};

/** input type for inserting object relation for remote table "collection.Exhibition" */
export type Collection_Exhibition_Obj_Rel_Insert_Input = {
    readonly data: Collection_Exhibition_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Collection_Exhibition_On_Conflict>;
};

/** on_conflict condition type for table "collection.Exhibition" */
export type Collection_Exhibition_On_Conflict = {
    readonly constraint: Collection_Exhibition_Constraint;
    readonly update_columns?: ReadonlyArray<Collection_Exhibition_Update_Column>;
    readonly where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** Ordering options when selecting data from "collection.Exhibition". */
export type Collection_Exhibition_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly descriptiveItem?: InputMaybe<Content_Item_Order_By>;
    readonly descriptiveItemId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly isHidden?: InputMaybe<Order_By>;
    readonly items_aggregate?: InputMaybe<Content_ItemExhibition_Aggregate_Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: collection_Exhibition */
export type Collection_Exhibition_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "collection.Exhibition" */
export enum Collection_Exhibition_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DescriptiveItemId = "descriptiveItemId",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "collection.Exhibition" */
export type Collection_Exhibition_Set_Input = {
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly descriptiveItemId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isHidden?: InputMaybe<Scalars["Boolean"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate stddev on columns */
export type Collection_Exhibition_Stddev_Fields = {
    readonly __typename?: "collection_Exhibition_stddev_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Stddev_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Collection_Exhibition_Stddev_Pop_Fields = {
    readonly __typename?: "collection_Exhibition_stddev_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Stddev_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Collection_Exhibition_Stddev_Samp_Fields = {
    readonly __typename?: "collection_Exhibition_stddev_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Stddev_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Collection_Exhibition_Sum_Fields = {
    readonly __typename?: "collection_Exhibition_sum_fields";
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Sum_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** update columns of table "collection.Exhibition" */
export enum Collection_Exhibition_Update_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DescriptiveItemId = "descriptiveItemId",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** aggregate var_pop on columns */
export type Collection_Exhibition_Var_Pop_Fields = {
    readonly __typename?: "collection_Exhibition_var_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Var_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Collection_Exhibition_Var_Samp_Fields = {
    readonly __typename?: "collection_Exhibition_var_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Var_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Collection_Exhibition_Variance_Fields = {
    readonly __typename?: "collection_Exhibition_variance_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "collection.Exhibition" */
export type Collection_Exhibition_Variance_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPerson = {
    readonly __typename?: "collection_ProgramPerson";
    readonly accessToken: Scalars["String"];
    readonly affiliation?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly email?: Maybe<Scalars["String"]>;
    /** An array relationship */
    readonly eventPeople: ReadonlyArray<Schedule_EventProgramPerson>;
    /** An aggregate relationship */
    readonly eventPeople_aggregate: Schedule_EventProgramPerson_Aggregate;
    readonly id: Scalars["uuid"];
    /** An array relationship */
    readonly itemPeople: ReadonlyArray<Content_ItemProgramPerson>;
    /** An aggregate relationship */
    readonly itemPeople_aggregate: Content_ItemProgramPerson_Aggregate;
    readonly name: Scalars["String"];
    /** An object relationship */
    readonly registrant?: Maybe<Registrant_Registrant>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly subconference?: Maybe<Conference_Subconference>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly submissionRequestsSentCount: Scalars["Int"];
    readonly visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPersonEventPeopleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPersonEventPeople_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPersonItemPeopleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** columns and relationships of "collection.ProgramPerson" */
export type Collection_ProgramPersonItemPeople_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** aggregated selection of "collection.ProgramPerson" */
export type Collection_ProgramPerson_Aggregate = {
    readonly __typename?: "collection_ProgramPerson_aggregate";
    readonly aggregate?: Maybe<Collection_ProgramPerson_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Collection_ProgramPerson>;
};

/** aggregate fields of "collection.ProgramPerson" */
export type Collection_ProgramPerson_Aggregate_Fields = {
    readonly __typename?: "collection_ProgramPerson_aggregate_fields";
    readonly avg?: Maybe<Collection_ProgramPerson_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Collection_ProgramPerson_Max_Fields>;
    readonly min?: Maybe<Collection_ProgramPerson_Min_Fields>;
    readonly stddev?: Maybe<Collection_ProgramPerson_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Collection_ProgramPerson_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Collection_ProgramPerson_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Collection_ProgramPerson_Sum_Fields>;
    readonly var_pop?: Maybe<Collection_ProgramPerson_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Collection_ProgramPerson_Var_Samp_Fields>;
    readonly variance?: Maybe<Collection_ProgramPerson_Variance_Fields>;
};

/** aggregate fields of "collection.ProgramPerson" */
export type Collection_ProgramPerson_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Collection_ProgramPerson_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Collection_ProgramPerson_Max_Order_By>;
    readonly min?: InputMaybe<Collection_ProgramPerson_Min_Order_By>;
    readonly stddev?: InputMaybe<Collection_ProgramPerson_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Collection_ProgramPerson_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Collection_ProgramPerson_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Collection_ProgramPerson_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Collection_ProgramPerson_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Collection_ProgramPerson_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Collection_ProgramPerson_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Collection_ProgramPerson_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Collection_ProgramPerson_On_Conflict>;
};

/** aggregate avg on columns */
export type Collection_ProgramPerson_Avg_Fields = {
    readonly __typename?: "collection_ProgramPerson_avg_fields";
    readonly submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Avg_Order_By = {
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "collection.ProgramPerson". All fields are combined with a logical 'AND'. */
export type Collection_ProgramPerson_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Bool_Exp>>;
    readonly _not?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Bool_Exp>>;
    readonly accessToken?: InputMaybe<String_Comparison_Exp>;
    readonly affiliation?: InputMaybe<String_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly email?: InputMaybe<String_Comparison_Exp>;
    readonly eventPeople?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly itemPeople?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly submissionRequestsSentCount?: InputMaybe<Int_Comparison_Exp>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "collection.ProgramPerson" */
export enum Collection_ProgramPerson_Constraint {
    /** unique or primary key constraint */
    ProgramPersonPkey = "ProgramPerson_pkey",
    /** unique or primary key constraint */
    CollectionProgramPersonAccessToken = "collection_ProgramPerson_accessToken",
    /** unique or primary key constraint */
    CollectionProgramPersonConferenceIdName = "collection_ProgramPerson_conferenceId_name",
    /** unique or primary key constraint */
    CollectionProgramPersonConferenceIdNameAffiliation = "collection_ProgramPerson_conferenceId_name_affiliation",
    /** unique or primary key constraint */
    CollectionProgramPersonSubconferenceIdName = "collection_ProgramPerson_subconferenceId_name",
    /** unique or primary key constraint */
    CollectionProgramPersonSubconferenceIdNameAffiliation = "collection_ProgramPerson_subconferenceId_name_affiliation",
}

/** input type for incrementing numeric columns in table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Inc_Input = {
    readonly submissionRequestsSentCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Insert_Input = {
    readonly accessToken?: InputMaybe<Scalars["String"]>;
    readonly affiliation?: InputMaybe<Scalars["String"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly email?: InputMaybe<Scalars["String"]>;
    readonly eventPeople?: InputMaybe<Schedule_EventProgramPerson_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemPeople?: InputMaybe<Content_ItemProgramPerson_Arr_Rel_Insert_Input>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly submissionRequestsSentCount?: InputMaybe<Scalars["Int"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Collection_ProgramPerson_Max_Fields = {
    readonly __typename?: "collection_ProgramPerson_max_fields";
    readonly accessToken?: Maybe<Scalars["String"]>;
    readonly affiliation?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly email?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly submissionRequestsSentCount?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Max_Order_By = {
    readonly accessToken?: InputMaybe<Order_By>;
    readonly affiliation?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly email?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Collection_ProgramPerson_Min_Fields = {
    readonly __typename?: "collection_ProgramPerson_min_fields";
    readonly accessToken?: Maybe<Scalars["String"]>;
    readonly affiliation?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly email?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly submissionRequestsSentCount?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Min_Order_By = {
    readonly accessToken?: InputMaybe<Order_By>;
    readonly affiliation?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly email?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Mutation_Response = {
    readonly __typename?: "collection_ProgramPerson_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Collection_ProgramPerson>;
};

/** input type for inserting object relation for remote table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Obj_Rel_Insert_Input = {
    readonly data: Collection_ProgramPerson_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Collection_ProgramPerson_On_Conflict>;
};

/** on_conflict condition type for table "collection.ProgramPerson" */
export type Collection_ProgramPerson_On_Conflict = {
    readonly constraint: Collection_ProgramPerson_Constraint;
    readonly update_columns?: ReadonlyArray<Collection_ProgramPerson_Update_Column>;
    readonly where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** Ordering options when selecting data from "collection.ProgramPerson". */
export type Collection_ProgramPerson_Order_By = {
    readonly accessToken?: InputMaybe<Order_By>;
    readonly affiliation?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly email?: InputMaybe<Order_By>;
    readonly eventPeople_aggregate?: InputMaybe<Schedule_EventProgramPerson_Aggregate_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemPeople_aggregate?: InputMaybe<Content_ItemProgramPerson_Aggregate_Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly subconference?: InputMaybe<Conference_Subconference_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
    readonly visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: collection_ProgramPerson */
export type Collection_ProgramPerson_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "collection.ProgramPerson" */
export enum Collection_ProgramPerson_Select_Column {
    /** column name */
    AccessToken = "accessToken",
    /** column name */
    Affiliation = "affiliation",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    Email = "email",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    SubmissionRequestsSentCount = "submissionRequestsSentCount",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Set_Input = {
    readonly accessToken?: InputMaybe<Scalars["String"]>;
    readonly affiliation?: InputMaybe<Scalars["String"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly email?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly submissionRequestsSentCount?: InputMaybe<Scalars["Int"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate stddev on columns */
export type Collection_ProgramPerson_Stddev_Fields = {
    readonly __typename?: "collection_ProgramPerson_stddev_fields";
    readonly submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Stddev_Order_By = {
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Collection_ProgramPerson_Stddev_Pop_Fields = {
    readonly __typename?: "collection_ProgramPerson_stddev_pop_fields";
    readonly submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Stddev_Pop_Order_By = {
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Collection_ProgramPerson_Stddev_Samp_Fields = {
    readonly __typename?: "collection_ProgramPerson_stddev_samp_fields";
    readonly submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Stddev_Samp_Order_By = {
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Collection_ProgramPerson_Sum_Fields = {
    readonly __typename?: "collection_ProgramPerson_sum_fields";
    readonly submissionRequestsSentCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Sum_Order_By = {
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** update columns of table "collection.ProgramPerson" */
export enum Collection_ProgramPerson_Update_Column {
    /** column name */
    AccessToken = "accessToken",
    /** column name */
    Affiliation = "affiliation",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    Email = "email",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    SubmissionRequestsSentCount = "submissionRequestsSentCount",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** aggregate var_pop on columns */
export type Collection_ProgramPerson_Var_Pop_Fields = {
    readonly __typename?: "collection_ProgramPerson_var_pop_fields";
    readonly submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Var_Pop_Order_By = {
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Collection_ProgramPerson_Var_Samp_Fields = {
    readonly __typename?: "collection_ProgramPerson_var_samp_fields";
    readonly submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Var_Samp_Order_By = {
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Collection_ProgramPerson_Variance_Fields = {
    readonly __typename?: "collection_ProgramPerson_variance_fields";
    readonly submissionRequestsSentCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "collection.ProgramPerson" */
export type Collection_ProgramPerson_Variance_Order_By = {
    readonly submissionRequestsSentCount?: InputMaybe<Order_By>;
};

/** columns and relationships of "collection.Tag" */
export type Collection_Tag = {
    readonly __typename?: "collection_Tag";
    readonly colour: Scalars["String"];
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An array relationship */
    readonly itemTags: ReadonlyArray<Content_ItemTag>;
    /** An aggregate relationship */
    readonly itemTags_aggregate: Content_ItemTag_Aggregate;
    readonly name: Scalars["String"];
    readonly priority: Scalars["Int"];
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt: Scalars["timestamptz"];
    readonly visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "collection.Tag" */
export type Collection_TagItemTagsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** columns and relationships of "collection.Tag" */
export type Collection_TagItemTags_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** aggregated selection of "collection.Tag" */
export type Collection_Tag_Aggregate = {
    readonly __typename?: "collection_Tag_aggregate";
    readonly aggregate?: Maybe<Collection_Tag_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Collection_Tag>;
};

/** aggregate fields of "collection.Tag" */
export type Collection_Tag_Aggregate_Fields = {
    readonly __typename?: "collection_Tag_aggregate_fields";
    readonly avg?: Maybe<Collection_Tag_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Collection_Tag_Max_Fields>;
    readonly min?: Maybe<Collection_Tag_Min_Fields>;
    readonly stddev?: Maybe<Collection_Tag_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Collection_Tag_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Collection_Tag_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Collection_Tag_Sum_Fields>;
    readonly var_pop?: Maybe<Collection_Tag_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Collection_Tag_Var_Samp_Fields>;
    readonly variance?: Maybe<Collection_Tag_Variance_Fields>;
};

/** aggregate fields of "collection.Tag" */
export type Collection_Tag_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Collection_Tag_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "collection.Tag" */
export type Collection_Tag_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Collection_Tag_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Collection_Tag_Max_Order_By>;
    readonly min?: InputMaybe<Collection_Tag_Min_Order_By>;
    readonly stddev?: InputMaybe<Collection_Tag_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Collection_Tag_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Collection_Tag_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Collection_Tag_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Collection_Tag_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Collection_Tag_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Collection_Tag_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "collection.Tag" */
export type Collection_Tag_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Collection_Tag_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Collection_Tag_On_Conflict>;
};

/** aggregate avg on columns */
export type Collection_Tag_Avg_Fields = {
    readonly __typename?: "collection_Tag_avg_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "collection.Tag" */
export type Collection_Tag_Avg_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "collection.Tag". All fields are combined with a logical 'AND'. */
export type Collection_Tag_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Collection_Tag_Bool_Exp>>;
    readonly _not?: InputMaybe<Collection_Tag_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Collection_Tag_Bool_Exp>>;
    readonly colour?: InputMaybe<String_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly itemTags?: InputMaybe<Content_ItemTag_Bool_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly priority?: InputMaybe<Int_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "collection.Tag" */
export enum Collection_Tag_Constraint {
    /** unique or primary key constraint */
    TagPkey = "Tag_pkey",
}

/** input type for incrementing numeric columns in table "collection.Tag" */
export type Collection_Tag_Inc_Input = {
    readonly priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "collection.Tag" */
export type Collection_Tag_Insert_Input = {
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemTags?: InputMaybe<Content_ItemTag_Arr_Rel_Insert_Input>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Collection_Tag_Max_Fields = {
    readonly __typename?: "collection_Tag_max_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "collection.Tag" */
export type Collection_Tag_Max_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Collection_Tag_Min_Fields = {
    readonly __typename?: "collection_Tag_min_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "collection.Tag" */
export type Collection_Tag_Min_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "collection.Tag" */
export type Collection_Tag_Mutation_Response = {
    readonly __typename?: "collection_Tag_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Collection_Tag>;
};

/** input type for inserting object relation for remote table "collection.Tag" */
export type Collection_Tag_Obj_Rel_Insert_Input = {
    readonly data: Collection_Tag_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Collection_Tag_On_Conflict>;
};

/** on_conflict condition type for table "collection.Tag" */
export type Collection_Tag_On_Conflict = {
    readonly constraint: Collection_Tag_Constraint;
    readonly update_columns?: ReadonlyArray<Collection_Tag_Update_Column>;
    readonly where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

/** Ordering options when selecting data from "collection.Tag". */
export type Collection_Tag_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemTags_aggregate?: InputMaybe<Content_ItemTag_Aggregate_Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: collection_Tag */
export type Collection_Tag_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "collection.Tag" */
export enum Collection_Tag_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "collection.Tag" */
export type Collection_Tag_Set_Input = {
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate stddev on columns */
export type Collection_Tag_Stddev_Fields = {
    readonly __typename?: "collection_Tag_stddev_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "collection.Tag" */
export type Collection_Tag_Stddev_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Collection_Tag_Stddev_Pop_Fields = {
    readonly __typename?: "collection_Tag_stddev_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "collection.Tag" */
export type Collection_Tag_Stddev_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Collection_Tag_Stddev_Samp_Fields = {
    readonly __typename?: "collection_Tag_stddev_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "collection.Tag" */
export type Collection_Tag_Stddev_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Collection_Tag_Sum_Fields = {
    readonly __typename?: "collection_Tag_sum_fields";
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "collection.Tag" */
export type Collection_Tag_Sum_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** update columns of table "collection.Tag" */
export enum Collection_Tag_Update_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** aggregate var_pop on columns */
export type Collection_Tag_Var_Pop_Fields = {
    readonly __typename?: "collection_Tag_var_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "collection.Tag" */
export type Collection_Tag_Var_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Collection_Tag_Var_Samp_Fields = {
    readonly __typename?: "collection_Tag_var_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "collection.Tag" */
export type Collection_Tag_Var_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Collection_Tag_Variance_Fields = {
    readonly __typename?: "collection_Tag_variance_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "collection.Tag" */
export type Collection_Tag_Variance_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

export type Collection_SearchProgramPerson_Args = {
    readonly conferenceid?: InputMaybe<Scalars["uuid"]>;
    readonly search?: InputMaybe<Scalars["String"]>;
    readonly subconferenceid?: InputMaybe<Scalars["uuid"]>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_Conference = {
    readonly __typename?: "conference_Conference";
    readonly announcementsChatId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    readonly chats: ReadonlyArray<Chat_Chat>;
    /** An aggregate relationship */
    readonly chats_aggregate: Chat_Chat_Aggregate;
    /** An object relationship */
    readonly completedRegistrationsStat?: Maybe<Analytics_CompletedRegistrations>;
    readonly conferenceVisibilityLevel: Conference_VisibilityLevel_Enum;
    /** An array relationship */
    readonly configurations: ReadonlyArray<Conference_Configuration>;
    /** An aggregate relationship */
    readonly configurations_aggregate: Conference_Configuration_Aggregate;
    readonly createdAt: Scalars["timestamptz"];
    readonly createdBy: Scalars["String"];
    /** An object relationship */
    readonly creator: User;
    readonly defaultProgramVisibilityLevel: Scalars["String"];
    /** An object relationship */
    readonly demoCode: Conference_DemoCode;
    readonly demoCodeId: Scalars["uuid"];
    /** An array relationship */
    readonly events: ReadonlyArray<Schedule_Event>;
    /** An aggregate relationship */
    readonly events_aggregate: Schedule_Event_Aggregate;
    /** An array relationship */
    readonly exhibitions: ReadonlyArray<Collection_Exhibition>;
    /** An aggregate relationship */
    readonly exhibitions_aggregate: Collection_Exhibition_Aggregate;
    readonly globalInviteCode?: Maybe<Scalars["uuid"]>;
    readonly id: Scalars["uuid"];
    /** An array relationship */
    readonly items: ReadonlyArray<Content_Item>;
    /** An aggregate relationship */
    readonly items_aggregate: Content_Item_Aggregate;
    readonly lowestRoleWithAccess?: Maybe<Registrant_RegistrantRole_Enum>;
    readonly name: Scalars["String"];
    /** An array relationship */
    readonly programPeople: ReadonlyArray<Collection_ProgramPerson>;
    /** An aggregate relationship */
    readonly programPeople_aggregate: Collection_ProgramPerson_Aggregate;
    /** An object relationship */
    readonly quota?: Maybe<Conference_Quota>;
    /** An array relationship */
    readonly registrants: ReadonlyArray<Registrant_Registrant>;
    /** An aggregate relationship */
    readonly registrants_aggregate: Registrant_Registrant_Aggregate;
    /** An object relationship */
    readonly remainingQuota?: Maybe<Conference_RemainingQuota>;
    /** An array relationship */
    readonly rooms: ReadonlyArray<Room_Room>;
    /** An aggregate relationship */
    readonly rooms_aggregate: Room_Room_Aggregate;
    readonly shortName: Scalars["String"];
    /** An array relationship */
    readonly shufflePeriods: ReadonlyArray<Room_ShufflePeriod>;
    /** An aggregate relationship */
    readonly shufflePeriods_aggregate: Room_ShufflePeriod_Aggregate;
    readonly slug: Scalars["String"];
    /** An array relationship */
    readonly sponsorshipTiers: ReadonlyArray<Sponsor_Tier>;
    /** An aggregate relationship */
    readonly sponsorshipTiers_aggregate: Sponsor_Tier_Aggregate;
    /** An array relationship */
    readonly subconferences: ReadonlyArray<Conference_Subconference>;
    /** An aggregate relationship */
    readonly subconferences_aggregate: Conference_Subconference_Aggregate;
    /** An array relationship */
    readonly tags: ReadonlyArray<Collection_Tag>;
    /** An aggregate relationship */
    readonly tags_aggregate: Collection_Tag_Aggregate;
    readonly updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly usage?: Maybe<Conference_Usage>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceChatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceChats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceConfigurationsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceConfigurations_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceExhibitionsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceExhibitions_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceItemsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceItems_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceProgramPeopleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceProgramPeople_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceRegistrantsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceRegistrants_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceRoomsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceRooms_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceShufflePeriodsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceShufflePeriods_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceSponsorshipTiersArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceSponsorshipTiers_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceSubconferencesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceSubconferences_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceTagsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

/** columns and relationships of "conference.Conference" */
export type Conference_ConferenceTags_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

/** aggregated selection of "conference.Conference" */
export type Conference_Conference_Aggregate = {
    readonly __typename?: "conference_Conference_aggregate";
    readonly aggregate?: Maybe<Conference_Conference_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Conference_Conference>;
};

/** aggregate fields of "conference.Conference" */
export type Conference_Conference_Aggregate_Fields = {
    readonly __typename?: "conference_Conference_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Conference_Conference_Max_Fields>;
    readonly min?: Maybe<Conference_Conference_Min_Fields>;
};

/** aggregate fields of "conference.Conference" */
export type Conference_Conference_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Conference_Conference_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "conference.Conference" */
export type Conference_Conference_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Conference_Conference_Max_Order_By>;
    readonly min?: InputMaybe<Conference_Conference_Min_Order_By>;
};

/** input type for inserting array relation for remote table "conference.Conference" */
export type Conference_Conference_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Conference_Conference_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Conference_Conference_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conference.Conference". All fields are combined with a logical 'AND'. */
export type Conference_Conference_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Conference_Conference_Bool_Exp>>;
    readonly _not?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Conference_Conference_Bool_Exp>>;
    readonly announcementsChatId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly chats?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly completedRegistrationsStat?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
    readonly conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
    readonly configurations?: InputMaybe<Conference_Configuration_Bool_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly createdBy?: InputMaybe<String_Comparison_Exp>;
    readonly creator?: InputMaybe<User_Bool_Exp>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<String_Comparison_Exp>;
    readonly demoCode?: InputMaybe<Conference_DemoCode_Bool_Exp>;
    readonly demoCodeId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly events?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly exhibitions?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    readonly globalInviteCode?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly items?: InputMaybe<Content_Item_Bool_Exp>;
    readonly lowestRoleWithAccess?: InputMaybe<Registrant_RegistrantRole_Enum_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly programPeople?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    readonly quota?: InputMaybe<Conference_Quota_Bool_Exp>;
    readonly registrants?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly remainingQuota?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
    readonly rooms?: InputMaybe<Room_Room_Bool_Exp>;
    readonly shortName?: InputMaybe<String_Comparison_Exp>;
    readonly shufflePeriods?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    readonly slug?: InputMaybe<String_Comparison_Exp>;
    readonly sponsorshipTiers?: InputMaybe<Sponsor_Tier_Bool_Exp>;
    readonly subconferences?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly tags?: InputMaybe<Collection_Tag_Bool_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly usage?: InputMaybe<Conference_Usage_Bool_Exp>;
};

/** unique or primary key constraints on table "conference.Conference" */
export enum Conference_Conference_Constraint {
    /** unique or primary key constraint */
    ConferenceDemoCodeIdKey = "Conference_demoCodeId_key",
    /** unique or primary key constraint */
    ConferenceGlobalInviteCodeKey = "Conference_globalInviteCode_key",
    /** unique or primary key constraint */
    ConferenceNameKey = "Conference_name_key",
    /** unique or primary key constraint */
    ConferencePkey = "Conference_pkey",
    /** unique or primary key constraint */
    ConferenceShortNameKey = "Conference_shortName_key",
    /** unique or primary key constraint */
    ConferenceSlugKey = "Conference_slug_key",
}

/** input type for inserting data into table "conference.Conference" */
export type Conference_Conference_Insert_Input = {
    readonly announcementsChatId?: InputMaybe<Scalars["uuid"]>;
    readonly chats?: InputMaybe<Chat_Chat_Arr_Rel_Insert_Input>;
    readonly completedRegistrationsStat?: InputMaybe<Analytics_CompletedRegistrations_Obj_Rel_Insert_Input>;
    readonly conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    readonly configurations?: InputMaybe<Conference_Configuration_Arr_Rel_Insert_Input>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly createdBy?: InputMaybe<Scalars["String"]>;
    readonly creator?: InputMaybe<User_Obj_Rel_Insert_Input>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<Scalars["String"]>;
    readonly demoCode?: InputMaybe<Conference_DemoCode_Obj_Rel_Insert_Input>;
    readonly demoCodeId?: InputMaybe<Scalars["uuid"]>;
    readonly events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    readonly exhibitions?: InputMaybe<Collection_Exhibition_Arr_Rel_Insert_Input>;
    readonly globalInviteCode?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly items?: InputMaybe<Content_Item_Arr_Rel_Insert_Input>;
    readonly lowestRoleWithAccess?: InputMaybe<Registrant_RegistrantRole_Enum>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly programPeople?: InputMaybe<Collection_ProgramPerson_Arr_Rel_Insert_Input>;
    readonly quota?: InputMaybe<Conference_Quota_Obj_Rel_Insert_Input>;
    readonly registrants?: InputMaybe<Registrant_Registrant_Arr_Rel_Insert_Input>;
    readonly remainingQuota?: InputMaybe<Conference_RemainingQuota_Obj_Rel_Insert_Input>;
    readonly rooms?: InputMaybe<Room_Room_Arr_Rel_Insert_Input>;
    readonly shortName?: InputMaybe<Scalars["String"]>;
    readonly shufflePeriods?: InputMaybe<Room_ShufflePeriod_Arr_Rel_Insert_Input>;
    readonly slug?: InputMaybe<Scalars["String"]>;
    readonly sponsorshipTiers?: InputMaybe<Sponsor_Tier_Arr_Rel_Insert_Input>;
    readonly subconferences?: InputMaybe<Conference_Subconference_Arr_Rel_Insert_Input>;
    readonly tags?: InputMaybe<Collection_Tag_Arr_Rel_Insert_Input>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly usage?: InputMaybe<Conference_Usage_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Conference_Conference_Max_Fields = {
    readonly __typename?: "conference_Conference_max_fields";
    readonly announcementsChatId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly createdBy?: Maybe<Scalars["String"]>;
    readonly defaultProgramVisibilityLevel?: Maybe<Scalars["String"]>;
    readonly demoCodeId?: Maybe<Scalars["uuid"]>;
    readonly globalInviteCode?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly shortName?: Maybe<Scalars["String"]>;
    readonly slug?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "conference.Conference" */
export type Conference_Conference_Max_Order_By = {
    readonly announcementsChatId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly createdBy?: InputMaybe<Order_By>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<Order_By>;
    readonly demoCodeId?: InputMaybe<Order_By>;
    readonly globalInviteCode?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly shortName?: InputMaybe<Order_By>;
    readonly slug?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conference_Conference_Min_Fields = {
    readonly __typename?: "conference_Conference_min_fields";
    readonly announcementsChatId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly createdBy?: Maybe<Scalars["String"]>;
    readonly defaultProgramVisibilityLevel?: Maybe<Scalars["String"]>;
    readonly demoCodeId?: Maybe<Scalars["uuid"]>;
    readonly globalInviteCode?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly shortName?: Maybe<Scalars["String"]>;
    readonly slug?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "conference.Conference" */
export type Conference_Conference_Min_Order_By = {
    readonly announcementsChatId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly createdBy?: InputMaybe<Order_By>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<Order_By>;
    readonly demoCodeId?: InputMaybe<Order_By>;
    readonly globalInviteCode?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly shortName?: InputMaybe<Order_By>;
    readonly slug?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conference.Conference" */
export type Conference_Conference_Mutation_Response = {
    readonly __typename?: "conference_Conference_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Conference_Conference>;
};

/** input type for inserting object relation for remote table "conference.Conference" */
export type Conference_Conference_Obj_Rel_Insert_Input = {
    readonly data: Conference_Conference_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Conference_Conference_On_Conflict>;
};

/** on_conflict condition type for table "conference.Conference" */
export type Conference_Conference_On_Conflict = {
    readonly constraint: Conference_Conference_Constraint;
    readonly update_columns?: ReadonlyArray<Conference_Conference_Update_Column>;
    readonly where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Conference". */
export type Conference_Conference_Order_By = {
    readonly announcementsChatId?: InputMaybe<Order_By>;
    readonly chats_aggregate?: InputMaybe<Chat_Chat_Aggregate_Order_By>;
    readonly completedRegistrationsStat?: InputMaybe<Analytics_CompletedRegistrations_Order_By>;
    readonly conferenceVisibilityLevel?: InputMaybe<Order_By>;
    readonly configurations_aggregate?: InputMaybe<Conference_Configuration_Aggregate_Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly createdBy?: InputMaybe<Order_By>;
    readonly creator?: InputMaybe<User_Order_By>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<Order_By>;
    readonly demoCode?: InputMaybe<Conference_DemoCode_Order_By>;
    readonly demoCodeId?: InputMaybe<Order_By>;
    readonly events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    readonly exhibitions_aggregate?: InputMaybe<Collection_Exhibition_Aggregate_Order_By>;
    readonly globalInviteCode?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly items_aggregate?: InputMaybe<Content_Item_Aggregate_Order_By>;
    readonly lowestRoleWithAccess?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly programPeople_aggregate?: InputMaybe<Collection_ProgramPerson_Aggregate_Order_By>;
    readonly quota?: InputMaybe<Conference_Quota_Order_By>;
    readonly registrants_aggregate?: InputMaybe<Registrant_Registrant_Aggregate_Order_By>;
    readonly remainingQuota?: InputMaybe<Conference_RemainingQuota_Order_By>;
    readonly rooms_aggregate?: InputMaybe<Room_Room_Aggregate_Order_By>;
    readonly shortName?: InputMaybe<Order_By>;
    readonly shufflePeriods_aggregate?: InputMaybe<Room_ShufflePeriod_Aggregate_Order_By>;
    readonly slug?: InputMaybe<Order_By>;
    readonly sponsorshipTiers_aggregate?: InputMaybe<Sponsor_Tier_Aggregate_Order_By>;
    readonly subconferences_aggregate?: InputMaybe<Conference_Subconference_Aggregate_Order_By>;
    readonly tags_aggregate?: InputMaybe<Collection_Tag_Aggregate_Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly usage?: InputMaybe<Conference_Usage_Order_By>;
};

/** primary key columns input for table: conference_Conference */
export type Conference_Conference_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "conference.Conference" */
export enum Conference_Conference_Select_Column {
    /** column name */
    AnnouncementsChatId = "announcementsChatId",
    /** column name */
    ConferenceVisibilityLevel = "conferenceVisibilityLevel",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    CreatedBy = "createdBy",
    /** column name */
    DefaultProgramVisibilityLevel = "defaultProgramVisibilityLevel",
    /** column name */
    DemoCodeId = "demoCodeId",
    /** column name */
    GlobalInviteCode = "globalInviteCode",
    /** column name */
    Id = "id",
    /** column name */
    LowestRoleWithAccess = "lowestRoleWithAccess",
    /** column name */
    Name = "name",
    /** column name */
    ShortName = "shortName",
    /** column name */
    Slug = "slug",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "conference.Conference" */
export type Conference_Conference_Set_Input = {
    readonly announcementsChatId?: InputMaybe<Scalars["uuid"]>;
    readonly conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly createdBy?: InputMaybe<Scalars["String"]>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<Scalars["String"]>;
    readonly demoCodeId?: InputMaybe<Scalars["uuid"]>;
    readonly globalInviteCode?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly lowestRoleWithAccess?: InputMaybe<Registrant_RegistrantRole_Enum>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly shortName?: InputMaybe<Scalars["String"]>;
    readonly slug?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "conference.Conference" */
export enum Conference_Conference_Update_Column {
    /** column name */
    AnnouncementsChatId = "announcementsChatId",
    /** column name */
    ConferenceVisibilityLevel = "conferenceVisibilityLevel",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    CreatedBy = "createdBy",
    /** column name */
    DefaultProgramVisibilityLevel = "defaultProgramVisibilityLevel",
    /** column name */
    DemoCodeId = "demoCodeId",
    /** column name */
    GlobalInviteCode = "globalInviteCode",
    /** column name */
    Id = "id",
    /** column name */
    LowestRoleWithAccess = "lowestRoleWithAccess",
    /** column name */
    Name = "name",
    /** column name */
    ShortName = "shortName",
    /** column name */
    Slug = "slug",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "conference.Configuration" */
export type Conference_Configuration = {
    readonly __typename?: "conference_Configuration";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly key: Conference_ConfigurationKey_Enum;
    readonly updatedAt: Scalars["timestamptz"];
    readonly value: Scalars["jsonb"];
};

/** columns and relationships of "conference.Configuration" */
export type Conference_ConfigurationValueArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "conference.ConfigurationKey" */
export type Conference_ConfigurationKey = {
    readonly __typename?: "conference_ConfigurationKey";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Aggregate = {
    readonly __typename?: "conference_ConfigurationKey_aggregate";
    readonly aggregate?: Maybe<Conference_ConfigurationKey_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Conference_ConfigurationKey>;
};

/** aggregate fields of "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Aggregate_Fields = {
    readonly __typename?: "conference_ConfigurationKey_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Conference_ConfigurationKey_Max_Fields>;
    readonly min?: Maybe<Conference_ConfigurationKey_Min_Fields>;
};

/** aggregate fields of "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "conference.ConfigurationKey". All fields are combined with a logical 'AND'. */
export type Conference_ConfigurationKey_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Bool_Exp>>;
    readonly _not?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.ConfigurationKey" */
export enum Conference_ConfigurationKey_Constraint {
    /** unique or primary key constraint */
    ConfigurationKeyPkey = "ConfigurationKey_pkey",
}

export enum Conference_ConfigurationKey_Enum {
    /** Number. Milliseconds UTC. Time from which to stop sending initial invitations automatically. */
    AutomaticInvitationsEnd = "AUTOMATIC_INVITATIONS_END",
    /** Number. Milliseconds UTC. Time from which to stop sending repeat emails for unaccepted invitations automatically. */
    AutomaticInvitationsRepeatEnd = "AUTOMATIC_INVITATIONS_REPEAT_END",
    /** Number. Milliseconds. Time between sending repeat emails for unaccepted invitations. */
    AutomaticInvitationsRepeatFrequency = "AUTOMATIC_INVITATIONS_REPEAT_FREQUENCY",
    /** Number. Milliseconds UTC. Time from which to stop sending repeat emails for unaccepted invitations automatically. */
    AutomaticInvitationsRepeatStart = "AUTOMATIC_INVITATIONS_REPEAT_START",
    /** Number. Milliseconds UTC. Time from which to start sending initial invitations automatically. */
    AutomaticInvitationsStart = "AUTOMATIC_INVITATIONS_START",
    /** A list of videos to be used as the background for title/sponsor slides. */
    BackgroundVideos = "BACKGROUND_VIDEOS",
    /** A string representing the app version. Changing this causes the user's browsers to refresh. */
    ClowdrAppVersion = "CLOWDR_APP_VERSION",
    /** Boolean. Disable the "All times for this content" section of the Item pages. */
    DisableAllEventsForItem = "DISABLE_ALL_EVENTS_FOR_ITEM",
    /** Boolean. Disable the "Events around this content" section of the Item pages. */
    DisableNearbyEvents = "DISABLE_NEARBY_EVENTS",
    EmailTemplateSubmissionRequest = "EMAIL_TEMPLATE_SUBMISSION_REQUEST",
    EmailTemplateSubtitlesGenerated = "EMAIL_TEMPLATE_SUBTITLES_GENERATED",
    /** Boolean. Whether to enable the backstage stream preview or not. */
    EnableBackstageStreamPreview = "ENABLE_BACKSTAGE_STREAM_PREVIEW",
    /** Boolean. Whether to enable the External RTMP Broadcast feature. */
    EnableExternalRtmpBroadcast = "ENABLE_EXTERNAL_RTMP_BROADCAST",
    /** Boolean. Whether to enable external RTMP input feature. */
    EnableExternalRtmpInput = "ENABLE_EXTERNAL_RTMP_INPUT",
    /** Whether to enable email notifications for recordings (default: true). */
    EnableRecordingSubtitleEmailNotifications = "ENABLE_RECORDING_SUBTITLE_EMAIL_NOTIFICATIONS",
    /** Boolean. Hide the exhibition people from the event boxes in the schedule. */
    EventBoxHideExhibitionPeople = "EVENT_BOX_HIDE_EXHIBITION_PEOPLE",
    /** List of S3 URLs. */
    FillerVideos = "FILLER_VIDEOS",
    /** Boolean. Switches on the Sponsors menu button (even if no sponsors exist). */
    ForceMenuSponsorsLink = "FORCE_MENU_SPONSORS_LINK",
    /** A string representing the full frontend host URL for the conference. If not provided, this defaults to the system configuration. */
    FrontendHost = "FRONTEND_HOST",
    /** String. Name for hidden exhibitions. Default: "Exhibition" */
    HiddenExhibitionsLabel = "HIDDEN_EXHIBITIONS_LABEL",
    /** An image to be displayed if AWS MediaLive loses input. */
    InputLossSlate = "INPUT_LOSS_SLATE",
    /** Additional text for the My Backstages modal. */
    MyBackstagesNotice = "MY_BACKSTAGES_NOTICE",
    /** A string representing a valid URL for users to register for the conference. */
    RegistrationUrl = "REGISTRATION_URL",
    /** Select different versions of the schedule view. */
    ScheduleViewVersion = "SCHEDULE_VIEW_VERSION",
    /** String. Label for the "sponsors" in the sidebar for when a conference uses a different term. */
    SponsorsLabel = "SPONSORS_LABEL",
    /** A list of strings indicating which program people roles receive notifications (e.g. subtitles) about submissions. Default: ["PRESENTER","AUTHOR"]. */
    SubmissionNotificationRoles = "SUBMISSION_NOTIFICATION_ROLES",
    /** A string representing a valid email address for contacting the conference organisers. */
    SupportAddress = "SUPPORT_ADDRESS",
    /** A string representing a valid email address for contacting the service hosting company for technical support related to the conference. */
    TechSupportAddress = "TECH_SUPPORT_ADDRESS",
    /** JSON representation of a custom Component Map colors object. */
    ThemeComponentColors = "THEME_COMPONENT_COLORS",
    /** Text of the upload agreement or a URL to one. */
    UploadAgreement = "UPLOAD_AGREEMENT",
    /** The time in milliseconds since the UNIX epoch, as a string. */
    UploadCutoffTimestamp = "UPLOAD_CUTOFF_TIMESTAMP",
    /** String. Name for visible exhibitions. Default: "Exhibition" */
    VisibleExhibitionsLabel = "VISIBLE_EXHIBITIONS_LABEL",
    /** Integer. The maximum number of simultaneous screen shares allowed in Vonage video chats. */
    VonageMaxSimultaneousScreenShares = "VONAGE_MAX_SIMULTANEOUS_SCREEN_SHARES",
}

/** Boolean expression to compare columns of type "conference_ConfigurationKey_enum". All fields are combined with logical 'AND'. */
export type Conference_ConfigurationKey_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Conference_ConfigurationKey_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Conference_ConfigurationKey_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Enum>>;
};

/** input type for inserting data into table "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Conference_ConfigurationKey_Max_Fields = {
    readonly __typename?: "conference_ConfigurationKey_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Conference_ConfigurationKey_Min_Fields = {
    readonly __typename?: "conference_ConfigurationKey_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Mutation_Response = {
    readonly __typename?: "conference_ConfigurationKey_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Conference_ConfigurationKey>;
};

/** on_conflict condition type for table "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_On_Conflict = {
    readonly constraint: Conference_ConfigurationKey_Constraint;
    readonly update_columns?: ReadonlyArray<Conference_ConfigurationKey_Update_Column>;
    readonly where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.ConfigurationKey". */
export type Conference_ConfigurationKey_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_ConfigurationKey */
export type Conference_ConfigurationKey_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "conference.ConfigurationKey" */
export enum Conference_ConfigurationKey_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "conference.ConfigurationKey" */
export type Conference_ConfigurationKey_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "conference.ConfigurationKey" */
export enum Conference_ConfigurationKey_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "conference.Configuration" */
export type Conference_Configuration_Aggregate = {
    readonly __typename?: "conference_Configuration_aggregate";
    readonly aggregate?: Maybe<Conference_Configuration_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Conference_Configuration>;
};

/** aggregate fields of "conference.Configuration" */
export type Conference_Configuration_Aggregate_Fields = {
    readonly __typename?: "conference_Configuration_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Conference_Configuration_Max_Fields>;
    readonly min?: Maybe<Conference_Configuration_Min_Fields>;
};

/** aggregate fields of "conference.Configuration" */
export type Conference_Configuration_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Conference_Configuration_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "conference.Configuration" */
export type Conference_Configuration_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Conference_Configuration_Max_Order_By>;
    readonly min?: InputMaybe<Conference_Configuration_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Conference_Configuration_Append_Input = {
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "conference.Configuration" */
export type Conference_Configuration_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Conference_Configuration_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Conference_Configuration_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conference.Configuration". All fields are combined with a logical 'AND'. */
export type Conference_Configuration_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Conference_Configuration_Bool_Exp>>;
    readonly _not?: InputMaybe<Conference_Configuration_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Conference_Configuration_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly key?: InputMaybe<Conference_ConfigurationKey_Enum_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly value?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.Configuration" */
export enum Conference_Configuration_Constraint {
    /** unique or primary key constraint */
    ConfigurationPkey = "Configuration_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Conference_Configuration_Delete_At_Path_Input = {
    readonly value?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Conference_Configuration_Delete_Elem_Input = {
    readonly value?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Conference_Configuration_Delete_Key_Input = {
    readonly value?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "conference.Configuration" */
export type Conference_Configuration_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly key?: InputMaybe<Conference_ConfigurationKey_Enum>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type Conference_Configuration_Max_Fields = {
    readonly __typename?: "conference_Configuration_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "conference.Configuration" */
export type Conference_Configuration_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conference_Configuration_Min_Fields = {
    readonly __typename?: "conference_Configuration_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "conference.Configuration" */
export type Conference_Configuration_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conference.Configuration" */
export type Conference_Configuration_Mutation_Response = {
    readonly __typename?: "conference_Configuration_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Conference_Configuration>;
};

/** on_conflict condition type for table "conference.Configuration" */
export type Conference_Configuration_On_Conflict = {
    readonly constraint: Conference_Configuration_Constraint;
    readonly update_columns?: ReadonlyArray<Conference_Configuration_Update_Column>;
    readonly where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Configuration". */
export type Conference_Configuration_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly key?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_Configuration */
export type Conference_Configuration_Pk_Columns_Input = {
    readonly conferenceId: Scalars["uuid"];
    readonly key: Conference_ConfigurationKey_Enum;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Conference_Configuration_Prepend_Input = {
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "conference.Configuration" */
export enum Conference_Configuration_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Key = "key",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    Value = "value",
}

/** input type for updating data in table "conference.Configuration" */
export type Conference_Configuration_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly key?: InputMaybe<Conference_ConfigurationKey_Enum>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** update columns of table "conference.Configuration" */
export enum Conference_Configuration_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Key = "key",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    Value = "value",
}

/** columns and relationships of "conference.DemoCode" */
export type Conference_DemoCode = {
    readonly __typename?: "conference_DemoCode";
    /** An object relationship */
    readonly conference?: Maybe<Conference_Conference>;
    readonly createdAt: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly note?: Maybe<Scalars["String"]>;
    readonly updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly usedBy?: Maybe<User>;
    readonly usedById?: Maybe<Scalars["String"]>;
};

/** aggregated selection of "conference.DemoCode" */
export type Conference_DemoCode_Aggregate = {
    readonly __typename?: "conference_DemoCode_aggregate";
    readonly aggregate?: Maybe<Conference_DemoCode_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Conference_DemoCode>;
};

/** aggregate fields of "conference.DemoCode" */
export type Conference_DemoCode_Aggregate_Fields = {
    readonly __typename?: "conference_DemoCode_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Conference_DemoCode_Max_Fields>;
    readonly min?: Maybe<Conference_DemoCode_Min_Fields>;
};

/** aggregate fields of "conference.DemoCode" */
export type Conference_DemoCode_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Conference_DemoCode_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "conference.DemoCode" */
export type Conference_DemoCode_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Conference_DemoCode_Max_Order_By>;
    readonly min?: InputMaybe<Conference_DemoCode_Min_Order_By>;
};

/** input type for inserting array relation for remote table "conference.DemoCode" */
export type Conference_DemoCode_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Conference_DemoCode_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Conference_DemoCode_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conference.DemoCode". All fields are combined with a logical 'AND'. */
export type Conference_DemoCode_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Conference_DemoCode_Bool_Exp>>;
    readonly _not?: InputMaybe<Conference_DemoCode_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Conference_DemoCode_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly note?: InputMaybe<String_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly usedBy?: InputMaybe<User_Bool_Exp>;
    readonly usedById?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.DemoCode" */
export enum Conference_DemoCode_Constraint {
    /** unique or primary key constraint */
    DemoCodePkey = "DemoCode_pkey",
}

/** input type for inserting data into table "conference.DemoCode" */
export type Conference_DemoCode_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly note?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly usedBy?: InputMaybe<User_Obj_Rel_Insert_Input>;
    readonly usedById?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Conference_DemoCode_Max_Fields = {
    readonly __typename?: "conference_DemoCode_max_fields";
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly note?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly usedById?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "conference.DemoCode" */
export type Conference_DemoCode_Max_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly note?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly usedById?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conference_DemoCode_Min_Fields = {
    readonly __typename?: "conference_DemoCode_min_fields";
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly note?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly usedById?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "conference.DemoCode" */
export type Conference_DemoCode_Min_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly note?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly usedById?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conference.DemoCode" */
export type Conference_DemoCode_Mutation_Response = {
    readonly __typename?: "conference_DemoCode_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Conference_DemoCode>;
};

/** input type for inserting object relation for remote table "conference.DemoCode" */
export type Conference_DemoCode_Obj_Rel_Insert_Input = {
    readonly data: Conference_DemoCode_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Conference_DemoCode_On_Conflict>;
};

/** on_conflict condition type for table "conference.DemoCode" */
export type Conference_DemoCode_On_Conflict = {
    readonly constraint: Conference_DemoCode_Constraint;
    readonly update_columns?: ReadonlyArray<Conference_DemoCode_Update_Column>;
    readonly where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.DemoCode". */
export type Conference_DemoCode_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly note?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly usedBy?: InputMaybe<User_Order_By>;
    readonly usedById?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_DemoCode */
export type Conference_DemoCode_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "conference.DemoCode" */
export enum Conference_DemoCode_Select_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Note = "note",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UsedById = "usedById",
}

/** input type for updating data in table "conference.DemoCode" */
export type Conference_DemoCode_Set_Input = {
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly note?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly usedById?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "conference.DemoCode" */
export enum Conference_DemoCode_Update_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Note = "note",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UsedById = "usedById",
}

/** columns and relationships of "conference.Quota" */
export type Conference_Quota = {
    readonly __typename?: "conference_Quota";
    readonly areStreamingEventsAllowed: Scalars["Boolean"];
    readonly areVideoChatEventsAllowed: Scalars["Boolean"];
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly maxContentItems: Scalars["Int"];
    readonly maxMediaElementsPerContentItem: Scalars["Int"];
    readonly maxMediaElementsPerSponsor: Scalars["Int"];
    readonly maxNonMediaElementsPerContentItem: Scalars["Int"];
    readonly maxNonMediaElementsPerSponsor: Scalars["Int"];
    readonly maxNonStreamingProgramRooms: Scalars["Int"];
    readonly maxPublicSocialRooms: Scalars["Int"];
    readonly maxRegistrants: Scalars["Int"];
    readonly maxStreamingEventIndividualMinutes: Scalars["Int"];
    readonly maxStreamingEventTotalMinutes: Scalars["Int"];
    readonly maxStreamingProgramRooms: Scalars["Int"];
    readonly maxSubconferences: Scalars["Int"];
    readonly maxSupportMeetingMinutes: Scalars["Int"];
    readonly maxVideoChatEventIndividualMinutes: Scalars["Int"];
    readonly maxVideoChatEventTotalMinutes: Scalars["Int"];
    readonly maxVideoChatNonEventTotalMinutesConsumed: Scalars["Int"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "conference.Quota" */
export type Conference_Quota_Aggregate = {
    readonly __typename?: "conference_Quota_aggregate";
    readonly aggregate?: Maybe<Conference_Quota_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Conference_Quota>;
};

/** aggregate fields of "conference.Quota" */
export type Conference_Quota_Aggregate_Fields = {
    readonly __typename?: "conference_Quota_aggregate_fields";
    readonly avg?: Maybe<Conference_Quota_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Conference_Quota_Max_Fields>;
    readonly min?: Maybe<Conference_Quota_Min_Fields>;
    readonly stddev?: Maybe<Conference_Quota_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Conference_Quota_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Conference_Quota_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Conference_Quota_Sum_Fields>;
    readonly var_pop?: Maybe<Conference_Quota_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Conference_Quota_Var_Samp_Fields>;
    readonly variance?: Maybe<Conference_Quota_Variance_Fields>;
};

/** aggregate fields of "conference.Quota" */
export type Conference_Quota_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Conference_Quota_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Conference_Quota_Avg_Fields = {
    readonly __typename?: "conference_Quota_avg_fields";
    readonly maxContentItems?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly maxRegistrants?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxSubconferences?: Maybe<Scalars["Float"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "conference.Quota". All fields are combined with a logical 'AND'. */
export type Conference_Quota_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Conference_Quota_Bool_Exp>>;
    readonly _not?: InputMaybe<Conference_Quota_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Conference_Quota_Bool_Exp>>;
    readonly areStreamingEventsAllowed?: InputMaybe<Boolean_Comparison_Exp>;
    readonly areVideoChatEventsAllowed?: InputMaybe<Boolean_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly maxContentItems?: InputMaybe<Int_Comparison_Exp>;
    readonly maxMediaElementsPerContentItem?: InputMaybe<Int_Comparison_Exp>;
    readonly maxMediaElementsPerSponsor?: InputMaybe<Int_Comparison_Exp>;
    readonly maxNonMediaElementsPerContentItem?: InputMaybe<Int_Comparison_Exp>;
    readonly maxNonMediaElementsPerSponsor?: InputMaybe<Int_Comparison_Exp>;
    readonly maxNonStreamingProgramRooms?: InputMaybe<Int_Comparison_Exp>;
    readonly maxPublicSocialRooms?: InputMaybe<Int_Comparison_Exp>;
    readonly maxRegistrants?: InputMaybe<Int_Comparison_Exp>;
    readonly maxStreamingEventIndividualMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly maxStreamingEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly maxStreamingProgramRooms?: InputMaybe<Int_Comparison_Exp>;
    readonly maxSubconferences?: InputMaybe<Int_Comparison_Exp>;
    readonly maxSupportMeetingMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly maxVideoChatEventIndividualMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly maxVideoChatEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Int_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.Quota" */
export enum Conference_Quota_Constraint {
    /** unique or primary key constraint */
    QuotaConferenceIdKey = "Quota_conferenceId_key",
    /** unique or primary key constraint */
    QuotaPkey = "Quota_pkey",
}

/** input type for incrementing numeric columns in table "conference.Quota" */
export type Conference_Quota_Inc_Input = {
    readonly maxContentItems?: InputMaybe<Scalars["Int"]>;
    readonly maxMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    readonly maxMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    readonly maxNonStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    readonly maxPublicSocialRooms?: InputMaybe<Scalars["Int"]>;
    readonly maxRegistrants?: InputMaybe<Scalars["Int"]>;
    readonly maxStreamingEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    readonly maxSubconferences?: InputMaybe<Scalars["Int"]>;
    readonly maxSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxVideoChatEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "conference.Quota" */
export type Conference_Quota_Insert_Input = {
    readonly areStreamingEventsAllowed?: InputMaybe<Scalars["Boolean"]>;
    readonly areVideoChatEventsAllowed?: InputMaybe<Scalars["Boolean"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly maxContentItems?: InputMaybe<Scalars["Int"]>;
    readonly maxMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    readonly maxMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    readonly maxNonStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    readonly maxPublicSocialRooms?: InputMaybe<Scalars["Int"]>;
    readonly maxRegistrants?: InputMaybe<Scalars["Int"]>;
    readonly maxStreamingEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    readonly maxSubconferences?: InputMaybe<Scalars["Int"]>;
    readonly maxSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxVideoChatEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Scalars["Int"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Conference_Quota_Max_Fields = {
    readonly __typename?: "conference_Quota_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly maxContentItems?: Maybe<Scalars["Int"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Int"]>;
    readonly maxRegistrants?: Maybe<Scalars["Int"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    readonly maxSubconferences?: Maybe<Scalars["Int"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Int"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Conference_Quota_Min_Fields = {
    readonly __typename?: "conference_Quota_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly maxContentItems?: Maybe<Scalars["Int"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Int"]>;
    readonly maxRegistrants?: Maybe<Scalars["Int"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    readonly maxSubconferences?: Maybe<Scalars["Int"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Int"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "conference.Quota" */
export type Conference_Quota_Mutation_Response = {
    readonly __typename?: "conference_Quota_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Conference_Quota>;
};

/** input type for inserting object relation for remote table "conference.Quota" */
export type Conference_Quota_Obj_Rel_Insert_Input = {
    readonly data: Conference_Quota_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Conference_Quota_On_Conflict>;
};

/** on_conflict condition type for table "conference.Quota" */
export type Conference_Quota_On_Conflict = {
    readonly constraint: Conference_Quota_Constraint;
    readonly update_columns?: ReadonlyArray<Conference_Quota_Update_Column>;
    readonly where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Quota". */
export type Conference_Quota_Order_By = {
    readonly areStreamingEventsAllowed?: InputMaybe<Order_By>;
    readonly areVideoChatEventsAllowed?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly maxContentItems?: InputMaybe<Order_By>;
    readonly maxMediaElementsPerContentItem?: InputMaybe<Order_By>;
    readonly maxMediaElementsPerSponsor?: InputMaybe<Order_By>;
    readonly maxNonMediaElementsPerContentItem?: InputMaybe<Order_By>;
    readonly maxNonMediaElementsPerSponsor?: InputMaybe<Order_By>;
    readonly maxNonStreamingProgramRooms?: InputMaybe<Order_By>;
    readonly maxPublicSocialRooms?: InputMaybe<Order_By>;
    readonly maxRegistrants?: InputMaybe<Order_By>;
    readonly maxStreamingEventIndividualMinutes?: InputMaybe<Order_By>;
    readonly maxStreamingEventTotalMinutes?: InputMaybe<Order_By>;
    readonly maxStreamingProgramRooms?: InputMaybe<Order_By>;
    readonly maxSubconferences?: InputMaybe<Order_By>;
    readonly maxSupportMeetingMinutes?: InputMaybe<Order_By>;
    readonly maxVideoChatEventIndividualMinutes?: InputMaybe<Order_By>;
    readonly maxVideoChatEventTotalMinutes?: InputMaybe<Order_By>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_Quota */
export type Conference_Quota_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "conference.Quota" */
export enum Conference_Quota_Select_Column {
    /** column name */
    AreStreamingEventsAllowed = "areStreamingEventsAllowed",
    /** column name */
    AreVideoChatEventsAllowed = "areVideoChatEventsAllowed",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    MaxContentItems = "maxContentItems",
    /** column name */
    MaxMediaElementsPerContentItem = "maxMediaElementsPerContentItem",
    /** column name */
    MaxMediaElementsPerSponsor = "maxMediaElementsPerSponsor",
    /** column name */
    MaxNonMediaElementsPerContentItem = "maxNonMediaElementsPerContentItem",
    /** column name */
    MaxNonMediaElementsPerSponsor = "maxNonMediaElementsPerSponsor",
    /** column name */
    MaxNonStreamingProgramRooms = "maxNonStreamingProgramRooms",
    /** column name */
    MaxPublicSocialRooms = "maxPublicSocialRooms",
    /** column name */
    MaxRegistrants = "maxRegistrants",
    /** column name */
    MaxStreamingEventIndividualMinutes = "maxStreamingEventIndividualMinutes",
    /** column name */
    MaxStreamingEventTotalMinutes = "maxStreamingEventTotalMinutes",
    /** column name */
    MaxStreamingProgramRooms = "maxStreamingProgramRooms",
    /** column name */
    MaxSubconferences = "maxSubconferences",
    /** column name */
    MaxSupportMeetingMinutes = "maxSupportMeetingMinutes",
    /** column name */
    MaxVideoChatEventIndividualMinutes = "maxVideoChatEventIndividualMinutes",
    /** column name */
    MaxVideoChatEventTotalMinutes = "maxVideoChatEventTotalMinutes",
    /** column name */
    MaxVideoChatNonEventTotalMinutesConsumed = "maxVideoChatNonEventTotalMinutesConsumed",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "conference.Quota" */
export type Conference_Quota_Set_Input = {
    readonly areStreamingEventsAllowed?: InputMaybe<Scalars["Boolean"]>;
    readonly areVideoChatEventsAllowed?: InputMaybe<Scalars["Boolean"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly maxContentItems?: InputMaybe<Scalars["Int"]>;
    readonly maxMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    readonly maxMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerContentItem?: InputMaybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerSponsor?: InputMaybe<Scalars["Int"]>;
    readonly maxNonStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    readonly maxPublicSocialRooms?: InputMaybe<Scalars["Int"]>;
    readonly maxRegistrants?: InputMaybe<Scalars["Int"]>;
    readonly maxStreamingEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxStreamingProgramRooms?: InputMaybe<Scalars["Int"]>;
    readonly maxSubconferences?: InputMaybe<Scalars["Int"]>;
    readonly maxSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxVideoChatEventIndividualMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: InputMaybe<Scalars["Int"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Conference_Quota_Stddev_Fields = {
    readonly __typename?: "conference_Quota_stddev_fields";
    readonly maxContentItems?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly maxRegistrants?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxSubconferences?: Maybe<Scalars["Float"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Conference_Quota_Stddev_Pop_Fields = {
    readonly __typename?: "conference_Quota_stddev_pop_fields";
    readonly maxContentItems?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly maxRegistrants?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxSubconferences?: Maybe<Scalars["Float"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Conference_Quota_Stddev_Samp_Fields = {
    readonly __typename?: "conference_Quota_stddev_samp_fields";
    readonly maxContentItems?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly maxRegistrants?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxSubconferences?: Maybe<Scalars["Float"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Conference_Quota_Sum_Fields = {
    readonly __typename?: "conference_Quota_sum_fields";
    readonly maxContentItems?: Maybe<Scalars["Int"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Int"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Int"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Int"]>;
    readonly maxRegistrants?: Maybe<Scalars["Int"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Int"]>;
    readonly maxSubconferences?: Maybe<Scalars["Int"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Int"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Int"]>;
};

/** update columns of table "conference.Quota" */
export enum Conference_Quota_Update_Column {
    /** column name */
    AreStreamingEventsAllowed = "areStreamingEventsAllowed",
    /** column name */
    AreVideoChatEventsAllowed = "areVideoChatEventsAllowed",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    MaxContentItems = "maxContentItems",
    /** column name */
    MaxMediaElementsPerContentItem = "maxMediaElementsPerContentItem",
    /** column name */
    MaxMediaElementsPerSponsor = "maxMediaElementsPerSponsor",
    /** column name */
    MaxNonMediaElementsPerContentItem = "maxNonMediaElementsPerContentItem",
    /** column name */
    MaxNonMediaElementsPerSponsor = "maxNonMediaElementsPerSponsor",
    /** column name */
    MaxNonStreamingProgramRooms = "maxNonStreamingProgramRooms",
    /** column name */
    MaxPublicSocialRooms = "maxPublicSocialRooms",
    /** column name */
    MaxRegistrants = "maxRegistrants",
    /** column name */
    MaxStreamingEventIndividualMinutes = "maxStreamingEventIndividualMinutes",
    /** column name */
    MaxStreamingEventTotalMinutes = "maxStreamingEventTotalMinutes",
    /** column name */
    MaxStreamingProgramRooms = "maxStreamingProgramRooms",
    /** column name */
    MaxSubconferences = "maxSubconferences",
    /** column name */
    MaxSupportMeetingMinutes = "maxSupportMeetingMinutes",
    /** column name */
    MaxVideoChatEventIndividualMinutes = "maxVideoChatEventIndividualMinutes",
    /** column name */
    MaxVideoChatEventTotalMinutes = "maxVideoChatEventTotalMinutes",
    /** column name */
    MaxVideoChatNonEventTotalMinutesConsumed = "maxVideoChatNonEventTotalMinutesConsumed",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Conference_Quota_Var_Pop_Fields = {
    readonly __typename?: "conference_Quota_var_pop_fields";
    readonly maxContentItems?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly maxRegistrants?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxSubconferences?: Maybe<Scalars["Float"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Conference_Quota_Var_Samp_Fields = {
    readonly __typename?: "conference_Quota_var_samp_fields";
    readonly maxContentItems?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly maxRegistrants?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxSubconferences?: Maybe<Scalars["Float"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Conference_Quota_Variance_Fields = {
    readonly __typename?: "conference_Quota_variance_fields";
    readonly maxContentItems?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerContentItem?: Maybe<Scalars["Float"]>;
    readonly maxNonMediaElementsPerSponsor?: Maybe<Scalars["Float"]>;
    readonly maxNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly maxRegistrants?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly maxSubconferences?: Maybe<Scalars["Float"]>;
    readonly maxSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventIndividualMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly maxVideoChatNonEventTotalMinutesConsumed?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "conference.RemainingQuota" */
export type Conference_RemainingQuota = {
    readonly __typename?: "conference_RemainingQuota";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly remainingContentItems?: Maybe<Scalars["bigint"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingRegistrants?: Maybe<Scalars["bigint"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingSubconferences?: Maybe<Scalars["bigint"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly slug?: Maybe<Scalars["String"]>;
};

/** aggregated selection of "conference.RemainingQuota" */
export type Conference_RemainingQuota_Aggregate = {
    readonly __typename?: "conference_RemainingQuota_aggregate";
    readonly aggregate?: Maybe<Conference_RemainingQuota_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Conference_RemainingQuota>;
};

/** aggregate fields of "conference.RemainingQuota" */
export type Conference_RemainingQuota_Aggregate_Fields = {
    readonly __typename?: "conference_RemainingQuota_aggregate_fields";
    readonly avg?: Maybe<Conference_RemainingQuota_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Conference_RemainingQuota_Max_Fields>;
    readonly min?: Maybe<Conference_RemainingQuota_Min_Fields>;
    readonly stddev?: Maybe<Conference_RemainingQuota_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Conference_RemainingQuota_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Conference_RemainingQuota_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Conference_RemainingQuota_Sum_Fields>;
    readonly var_pop?: Maybe<Conference_RemainingQuota_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Conference_RemainingQuota_Var_Samp_Fields>;
    readonly variance?: Maybe<Conference_RemainingQuota_Variance_Fields>;
};

/** aggregate fields of "conference.RemainingQuota" */
export type Conference_RemainingQuota_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Conference_RemainingQuota_Avg_Fields = {
    readonly __typename?: "conference_RemainingQuota_avg_fields";
    readonly remainingContentItems?: Maybe<Scalars["Float"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly remainingRegistrants?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingSubconferences?: Maybe<Scalars["Float"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "conference.RemainingQuota". All fields are combined with a logical 'AND'. */
export type Conference_RemainingQuota_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Bool_Exp>>;
    readonly _not?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Bool_Exp>>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly remainingContentItems?: InputMaybe<Bigint_Comparison_Exp>;
    readonly remainingNonStreamingProgramRooms?: InputMaybe<Bigint_Comparison_Exp>;
    readonly remainingPublicSocialRooms?: InputMaybe<Bigint_Comparison_Exp>;
    readonly remainingRegistrants?: InputMaybe<Bigint_Comparison_Exp>;
    readonly remainingStreamingEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly remainingStreamingProgramRooms?: InputMaybe<Bigint_Comparison_Exp>;
    readonly remainingSubconferences?: InputMaybe<Bigint_Comparison_Exp>;
    readonly remainingSupportMeetingMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly remainingVideoChatEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly remainingVideoChatNonEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly slug?: InputMaybe<String_Comparison_Exp>;
};

/** input type for inserting data into table "conference.RemainingQuota" */
export type Conference_RemainingQuota_Insert_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly remainingContentItems?: InputMaybe<Scalars["bigint"]>;
    readonly remainingNonStreamingProgramRooms?: InputMaybe<Scalars["bigint"]>;
    readonly remainingPublicSocialRooms?: InputMaybe<Scalars["bigint"]>;
    readonly remainingRegistrants?: InputMaybe<Scalars["bigint"]>;
    readonly remainingStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly remainingStreamingProgramRooms?: InputMaybe<Scalars["bigint"]>;
    readonly remainingSubconferences?: InputMaybe<Scalars["bigint"]>;
    readonly remainingSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    readonly remainingVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly slug?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Conference_RemainingQuota_Max_Fields = {
    readonly __typename?: "conference_RemainingQuota_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly remainingContentItems?: Maybe<Scalars["bigint"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingRegistrants?: Maybe<Scalars["bigint"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingSubconferences?: Maybe<Scalars["bigint"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly slug?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Conference_RemainingQuota_Min_Fields = {
    readonly __typename?: "conference_RemainingQuota_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly remainingContentItems?: Maybe<Scalars["bigint"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingRegistrants?: Maybe<Scalars["bigint"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingSubconferences?: Maybe<Scalars["bigint"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly slug?: Maybe<Scalars["String"]>;
};

/** input type for inserting object relation for remote table "conference.RemainingQuota" */
export type Conference_RemainingQuota_Obj_Rel_Insert_Input = {
    readonly data: Conference_RemainingQuota_Insert_Input;
};

/** Ordering options when selecting data from "conference.RemainingQuota". */
export type Conference_RemainingQuota_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly remainingContentItems?: InputMaybe<Order_By>;
    readonly remainingNonStreamingProgramRooms?: InputMaybe<Order_By>;
    readonly remainingPublicSocialRooms?: InputMaybe<Order_By>;
    readonly remainingRegistrants?: InputMaybe<Order_By>;
    readonly remainingStreamingEventTotalMinutes?: InputMaybe<Order_By>;
    readonly remainingStreamingProgramRooms?: InputMaybe<Order_By>;
    readonly remainingSubconferences?: InputMaybe<Order_By>;
    readonly remainingSupportMeetingMinutes?: InputMaybe<Order_By>;
    readonly remainingVideoChatEventTotalMinutes?: InputMaybe<Order_By>;
    readonly remainingVideoChatNonEventTotalMinutes?: InputMaybe<Order_By>;
    readonly slug?: InputMaybe<Order_By>;
};

/** select columns of table "conference.RemainingQuota" */
export enum Conference_RemainingQuota_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    RemainingContentItems = "remainingContentItems",
    /** column name */
    RemainingNonStreamingProgramRooms = "remainingNonStreamingProgramRooms",
    /** column name */
    RemainingPublicSocialRooms = "remainingPublicSocialRooms",
    /** column name */
    RemainingRegistrants = "remainingRegistrants",
    /** column name */
    RemainingStreamingEventTotalMinutes = "remainingStreamingEventTotalMinutes",
    /** column name */
    RemainingStreamingProgramRooms = "remainingStreamingProgramRooms",
    /** column name */
    RemainingSubconferences = "remainingSubconferences",
    /** column name */
    RemainingSupportMeetingMinutes = "remainingSupportMeetingMinutes",
    /** column name */
    RemainingVideoChatEventTotalMinutes = "remainingVideoChatEventTotalMinutes",
    /** column name */
    RemainingVideoChatNonEventTotalMinutes = "remainingVideoChatNonEventTotalMinutes",
    /** column name */
    Slug = "slug",
}

/** aggregate stddev on columns */
export type Conference_RemainingQuota_Stddev_Fields = {
    readonly __typename?: "conference_RemainingQuota_stddev_fields";
    readonly remainingContentItems?: Maybe<Scalars["Float"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly remainingRegistrants?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingSubconferences?: Maybe<Scalars["Float"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Conference_RemainingQuota_Stddev_Pop_Fields = {
    readonly __typename?: "conference_RemainingQuota_stddev_pop_fields";
    readonly remainingContentItems?: Maybe<Scalars["Float"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly remainingRegistrants?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingSubconferences?: Maybe<Scalars["Float"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Conference_RemainingQuota_Stddev_Samp_Fields = {
    readonly __typename?: "conference_RemainingQuota_stddev_samp_fields";
    readonly remainingContentItems?: Maybe<Scalars["Float"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly remainingRegistrants?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingSubconferences?: Maybe<Scalars["Float"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Conference_RemainingQuota_Sum_Fields = {
    readonly __typename?: "conference_RemainingQuota_sum_fields";
    readonly remainingContentItems?: Maybe<Scalars["bigint"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingRegistrants?: Maybe<Scalars["bigint"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["bigint"]>;
    readonly remainingSubconferences?: Maybe<Scalars["bigint"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
};

/** aggregate var_pop on columns */
export type Conference_RemainingQuota_Var_Pop_Fields = {
    readonly __typename?: "conference_RemainingQuota_var_pop_fields";
    readonly remainingContentItems?: Maybe<Scalars["Float"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly remainingRegistrants?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingSubconferences?: Maybe<Scalars["Float"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Conference_RemainingQuota_Var_Samp_Fields = {
    readonly __typename?: "conference_RemainingQuota_var_samp_fields";
    readonly remainingContentItems?: Maybe<Scalars["Float"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly remainingRegistrants?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingSubconferences?: Maybe<Scalars["Float"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Conference_RemainingQuota_Variance_Fields = {
    readonly __typename?: "conference_RemainingQuota_variance_fields";
    readonly remainingContentItems?: Maybe<Scalars["Float"]>;
    readonly remainingNonStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingPublicSocialRooms?: Maybe<Scalars["Float"]>;
    readonly remainingRegistrants?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingStreamingProgramRooms?: Maybe<Scalars["Float"]>;
    readonly remainingSubconferences?: Maybe<Scalars["Float"]>;
    readonly remainingSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly remainingVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "conference.Subconference" */
export type Conference_Subconference = {
    readonly __typename?: "conference_Subconference";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly conferenceVisibilityLevel: Conference_VisibilityLevel_Enum;
    readonly created_at: Scalars["timestamptz"];
    readonly defaultProgramVisibilityLevel: Conference_VisibilityLevel_Enum;
    readonly id: Scalars["uuid"];
    /** An array relationship */
    readonly memberships: ReadonlyArray<Registrant_SubconferenceMembership>;
    /** An aggregate relationship */
    readonly memberships_aggregate: Registrant_SubconferenceMembership_Aggregate;
    readonly name: Scalars["String"];
    readonly shortName: Scalars["String"];
    readonly slug: Scalars["String"];
    /** An array relationship */
    readonly sponsorshipTiers: ReadonlyArray<Sponsor_Tier>;
    /** An aggregate relationship */
    readonly sponsorshipTiers_aggregate: Sponsor_Tier_Aggregate;
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "conference.Subconference" */
export type Conference_SubconferenceMembershipsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** columns and relationships of "conference.Subconference" */
export type Conference_SubconferenceMemberships_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** columns and relationships of "conference.Subconference" */
export type Conference_SubconferenceSponsorshipTiersArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** columns and relationships of "conference.Subconference" */
export type Conference_SubconferenceSponsorshipTiers_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** aggregated selection of "conference.Subconference" */
export type Conference_Subconference_Aggregate = {
    readonly __typename?: "conference_Subconference_aggregate";
    readonly aggregate?: Maybe<Conference_Subconference_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Conference_Subconference>;
};

/** aggregate fields of "conference.Subconference" */
export type Conference_Subconference_Aggregate_Fields = {
    readonly __typename?: "conference_Subconference_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Conference_Subconference_Max_Fields>;
    readonly min?: Maybe<Conference_Subconference_Min_Fields>;
};

/** aggregate fields of "conference.Subconference" */
export type Conference_Subconference_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Conference_Subconference_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "conference.Subconference" */
export type Conference_Subconference_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Conference_Subconference_Max_Order_By>;
    readonly min?: InputMaybe<Conference_Subconference_Min_Order_By>;
};

/** input type for inserting array relation for remote table "conference.Subconference" */
export type Conference_Subconference_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Conference_Subconference_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Conference_Subconference_On_Conflict>;
};

/** Boolean expression to filter rows from the table "conference.Subconference". All fields are combined with a logical 'AND'. */
export type Conference_Subconference_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Conference_Subconference_Bool_Exp>>;
    readonly _not?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Conference_Subconference_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly memberships?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly shortName?: InputMaybe<String_Comparison_Exp>;
    readonly slug?: InputMaybe<String_Comparison_Exp>;
    readonly sponsorshipTiers?: InputMaybe<Sponsor_Tier_Bool_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.Subconference" */
export enum Conference_Subconference_Constraint {
    /** unique or primary key constraint */
    SubconferenceConferenceIdNameKey = "Subconference_conferenceId_name_key",
    /** unique or primary key constraint */
    SubconferenceConferenceIdShortNameKey = "Subconference_conferenceId_shortName_key",
    /** unique or primary key constraint */
    SubconferenceConferenceIdSlugKey = "Subconference_conferenceId_slug_key",
    /** unique or primary key constraint */
    SubconferencePkey = "Subconference_pkey",
}

/** input type for inserting data into table "conference.Subconference" */
export type Conference_Subconference_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly memberships?: InputMaybe<Registrant_SubconferenceMembership_Arr_Rel_Insert_Input>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly shortName?: InputMaybe<Scalars["String"]>;
    readonly slug?: InputMaybe<Scalars["String"]>;
    readonly sponsorshipTiers?: InputMaybe<Sponsor_Tier_Arr_Rel_Insert_Input>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Conference_Subconference_Max_Fields = {
    readonly __typename?: "conference_Subconference_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly shortName?: Maybe<Scalars["String"]>;
    readonly slug?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "conference.Subconference" */
export type Conference_Subconference_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly shortName?: InputMaybe<Order_By>;
    readonly slug?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Conference_Subconference_Min_Fields = {
    readonly __typename?: "conference_Subconference_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly shortName?: Maybe<Scalars["String"]>;
    readonly slug?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "conference.Subconference" */
export type Conference_Subconference_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly shortName?: InputMaybe<Order_By>;
    readonly slug?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "conference.Subconference" */
export type Conference_Subconference_Mutation_Response = {
    readonly __typename?: "conference_Subconference_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Conference_Subconference>;
};

/** input type for inserting object relation for remote table "conference.Subconference" */
export type Conference_Subconference_Obj_Rel_Insert_Input = {
    readonly data: Conference_Subconference_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Conference_Subconference_On_Conflict>;
};

/** on_conflict condition type for table "conference.Subconference" */
export type Conference_Subconference_On_Conflict = {
    readonly constraint: Conference_Subconference_Constraint;
    readonly update_columns?: ReadonlyArray<Conference_Subconference_Update_Column>;
    readonly where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Subconference". */
export type Conference_Subconference_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly conferenceVisibilityLevel?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly memberships_aggregate?: InputMaybe<Registrant_SubconferenceMembership_Aggregate_Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly shortName?: InputMaybe<Order_By>;
    readonly slug?: InputMaybe<Order_By>;
    readonly sponsorshipTiers_aggregate?: InputMaybe<Sponsor_Tier_Aggregate_Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_Subconference */
export type Conference_Subconference_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "conference.Subconference" */
export enum Conference_Subconference_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferenceVisibilityLevel = "conferenceVisibilityLevel",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DefaultProgramVisibilityLevel = "defaultProgramVisibilityLevel",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    ShortName = "shortName",
    /** column name */
    Slug = "slug",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "conference.Subconference" */
export type Conference_Subconference_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly conferenceVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly defaultProgramVisibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly shortName?: InputMaybe<Scalars["String"]>;
    readonly slug?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "conference.Subconference" */
export enum Conference_Subconference_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferenceVisibilityLevel = "conferenceVisibilityLevel",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DefaultProgramVisibilityLevel = "defaultProgramVisibilityLevel",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    ShortName = "shortName",
    /** column name */
    Slug = "slug",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "conference.Usage" */
export type Conference_Usage = {
    readonly __typename?: "conference_Usage";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly consumedStreamingEventTotalMinutes: Scalars["Int"];
    readonly consumedSupportMeetingMinutes: Scalars["Int"];
    readonly consumedVideoChatEventTotalMinutes: Scalars["Int"];
    readonly consumedVideoChatNonEventTotalMinutes: Scalars["Int"];
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly lastUpdatedConsumedStreamingEventTotalMinutes: Scalars["timestamptz"];
    readonly lastUpdatedConsumedSupportMeetingMinutes: Scalars["timestamptz"];
    readonly lastUpdatedConsumedVideoChatEventTotalMinutes: Scalars["timestamptz"];
    readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes: Scalars["timestamptz"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "conference.Usage" */
export type Conference_Usage_Aggregate = {
    readonly __typename?: "conference_Usage_aggregate";
    readonly aggregate?: Maybe<Conference_Usage_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Conference_Usage>;
};

/** aggregate fields of "conference.Usage" */
export type Conference_Usage_Aggregate_Fields = {
    readonly __typename?: "conference_Usage_aggregate_fields";
    readonly avg?: Maybe<Conference_Usage_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Conference_Usage_Max_Fields>;
    readonly min?: Maybe<Conference_Usage_Min_Fields>;
    readonly stddev?: Maybe<Conference_Usage_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Conference_Usage_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Conference_Usage_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Conference_Usage_Sum_Fields>;
    readonly var_pop?: Maybe<Conference_Usage_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Conference_Usage_Var_Samp_Fields>;
    readonly variance?: Maybe<Conference_Usage_Variance_Fields>;
};

/** aggregate fields of "conference.Usage" */
export type Conference_Usage_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Conference_Usage_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Conference_Usage_Avg_Fields = {
    readonly __typename?: "conference_Usage_avg_fields";
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "conference.Usage". All fields are combined with a logical 'AND'. */
export type Conference_Usage_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Conference_Usage_Bool_Exp>>;
    readonly _not?: InputMaybe<Conference_Usage_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Conference_Usage_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly consumedStreamingEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly consumedSupportMeetingMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly consumedVideoChatEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly consumedVideoChatNonEventTotalMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly lastUpdatedConsumedStreamingEventTotalMinutes?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly lastUpdatedConsumedSupportMeetingMinutes?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly lastUpdatedConsumedVideoChatEventTotalMinutes?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.Usage" */
export enum Conference_Usage_Constraint {
    /** unique or primary key constraint */
    UsageConferenceIdKey = "Usage_conferenceId_key",
    /** unique or primary key constraint */
    UsagePkey = "Usage_pkey",
}

/** input type for incrementing numeric columns in table "conference.Usage" */
export type Conference_Usage_Inc_Input = {
    readonly consumedStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly consumedSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    readonly consumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "conference.Usage" */
export type Conference_Usage_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly consumedStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly consumedSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    readonly consumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly lastUpdatedConsumedStreamingEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedSupportMeetingMinutes?: InputMaybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Conference_Usage_Max_Fields = {
    readonly __typename?: "conference_Usage_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly lastUpdatedConsumedStreamingEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedSupportMeetingMinutes?: Maybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedVideoChatEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Conference_Usage_Min_Fields = {
    readonly __typename?: "conference_Usage_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly lastUpdatedConsumedStreamingEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedSupportMeetingMinutes?: Maybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedVideoChatEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "conference.Usage" */
export type Conference_Usage_Mutation_Response = {
    readonly __typename?: "conference_Usage_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Conference_Usage>;
};

/** input type for inserting object relation for remote table "conference.Usage" */
export type Conference_Usage_Obj_Rel_Insert_Input = {
    readonly data: Conference_Usage_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Conference_Usage_On_Conflict>;
};

/** on_conflict condition type for table "conference.Usage" */
export type Conference_Usage_On_Conflict = {
    readonly constraint: Conference_Usage_Constraint;
    readonly update_columns?: ReadonlyArray<Conference_Usage_Update_Column>;
    readonly where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.Usage". */
export type Conference_Usage_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly consumedStreamingEventTotalMinutes?: InputMaybe<Order_By>;
    readonly consumedSupportMeetingMinutes?: InputMaybe<Order_By>;
    readonly consumedVideoChatEventTotalMinutes?: InputMaybe<Order_By>;
    readonly consumedVideoChatNonEventTotalMinutes?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly lastUpdatedConsumedStreamingEventTotalMinutes?: InputMaybe<Order_By>;
    readonly lastUpdatedConsumedSupportMeetingMinutes?: InputMaybe<Order_By>;
    readonly lastUpdatedConsumedVideoChatEventTotalMinutes?: InputMaybe<Order_By>;
    readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_Usage */
export type Conference_Usage_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "conference.Usage" */
export enum Conference_Usage_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConsumedStreamingEventTotalMinutes = "consumedStreamingEventTotalMinutes",
    /** column name */
    ConsumedSupportMeetingMinutes = "consumedSupportMeetingMinutes",
    /** column name */
    ConsumedVideoChatEventTotalMinutes = "consumedVideoChatEventTotalMinutes",
    /** column name */
    ConsumedVideoChatNonEventTotalMinutes = "consumedVideoChatNonEventTotalMinutes",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    LastUpdatedConsumedStreamingEventTotalMinutes = "lastUpdatedConsumedStreamingEventTotalMinutes",
    /** column name */
    LastUpdatedConsumedSupportMeetingMinutes = "lastUpdatedConsumedSupportMeetingMinutes",
    /** column name */
    LastUpdatedConsumedVideoChatEventTotalMinutes = "lastUpdatedConsumedVideoChatEventTotalMinutes",
    /** column name */
    LastUpdatedConsumedVideoChatNonEventTotalMinutes = "lastUpdatedConsumedVideoChatNonEventTotalMinutes",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "conference.Usage" */
export type Conference_Usage_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly consumedStreamingEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly consumedSupportMeetingMinutes?: InputMaybe<Scalars["Int"]>;
    readonly consumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["Int"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly lastUpdatedConsumedStreamingEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedSupportMeetingMinutes?: InputMaybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedVideoChatEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes?: InputMaybe<Scalars["timestamptz"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Conference_Usage_Stddev_Fields = {
    readonly __typename?: "conference_Usage_stddev_fields";
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Conference_Usage_Stddev_Pop_Fields = {
    readonly __typename?: "conference_Usage_stddev_pop_fields";
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Conference_Usage_Stddev_Samp_Fields = {
    readonly __typename?: "conference_Usage_stddev_samp_fields";
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Conference_Usage_Sum_Fields = {
    readonly __typename?: "conference_Usage_sum_fields";
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Int"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Int"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Int"]>;
};

/** update columns of table "conference.Usage" */
export enum Conference_Usage_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConsumedStreamingEventTotalMinutes = "consumedStreamingEventTotalMinutes",
    /** column name */
    ConsumedSupportMeetingMinutes = "consumedSupportMeetingMinutes",
    /** column name */
    ConsumedVideoChatEventTotalMinutes = "consumedVideoChatEventTotalMinutes",
    /** column name */
    ConsumedVideoChatNonEventTotalMinutes = "consumedVideoChatNonEventTotalMinutes",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    LastUpdatedConsumedStreamingEventTotalMinutes = "lastUpdatedConsumedStreamingEventTotalMinutes",
    /** column name */
    LastUpdatedConsumedSupportMeetingMinutes = "lastUpdatedConsumedSupportMeetingMinutes",
    /** column name */
    LastUpdatedConsumedVideoChatEventTotalMinutes = "lastUpdatedConsumedVideoChatEventTotalMinutes",
    /** column name */
    LastUpdatedConsumedVideoChatNonEventTotalMinutes = "lastUpdatedConsumedVideoChatNonEventTotalMinutes",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Conference_Usage_Var_Pop_Fields = {
    readonly __typename?: "conference_Usage_var_pop_fields";
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Conference_Usage_Var_Samp_Fields = {
    readonly __typename?: "conference_Usage_var_samp_fields";
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Conference_Usage_Variance_Fields = {
    readonly __typename?: "conference_Usage_variance_fields";
    readonly consumedStreamingEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedSupportMeetingMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatEventTotalMinutes?: Maybe<Scalars["Float"]>;
    readonly consumedVideoChatNonEventTotalMinutes?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "conference.VisibilityLevel" */
export type Conference_VisibilityLevel = {
    readonly __typename?: "conference_VisibilityLevel";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name: Scalars["String"];
};

/** aggregated selection of "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Aggregate = {
    readonly __typename?: "conference_VisibilityLevel_aggregate";
    readonly aggregate?: Maybe<Conference_VisibilityLevel_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Conference_VisibilityLevel>;
};

/** aggregate fields of "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Aggregate_Fields = {
    readonly __typename?: "conference_VisibilityLevel_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Conference_VisibilityLevel_Max_Fields>;
    readonly min?: Maybe<Conference_VisibilityLevel_Min_Fields>;
};

/** aggregate fields of "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "conference.VisibilityLevel". All fields are combined with a logical 'AND'. */
export type Conference_VisibilityLevel_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Bool_Exp>>;
    readonly _not?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "conference.VisibilityLevel" */
export enum Conference_VisibilityLevel_Constraint {
    /** unique or primary key constraint */
    VisibilityLevelPkey = "VisibilityLevel_pkey",
}

export enum Conference_VisibilityLevel_Enum {
    External = "EXTERNAL",
    Internal = "INTERNAL",
    Private = "PRIVATE",
    Public = "PUBLIC",
    /** Primarily intended for content elements, this visibility level specifies that _only_ unauthenticated users (the general public) should be able to view the element. That is to say, registrants should not see the element. For instance, this may be used to show a registration link button only to unregistered users. */
    PublicOnly = "PUBLIC_ONLY",
}

/** Boolean expression to compare columns of type "conference_VisibilityLevel_enum". All fields are combined with logical 'AND'. */
export type Conference_VisibilityLevel_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Conference_VisibilityLevel_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Conference_VisibilityLevel_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Enum>>;
};

/** input type for inserting data into table "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Conference_VisibilityLevel_Max_Fields = {
    readonly __typename?: "conference_VisibilityLevel_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Conference_VisibilityLevel_Min_Fields = {
    readonly __typename?: "conference_VisibilityLevel_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Mutation_Response = {
    readonly __typename?: "conference_VisibilityLevel_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Conference_VisibilityLevel>;
};

/** on_conflict condition type for table "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_On_Conflict = {
    readonly constraint: Conference_VisibilityLevel_Constraint;
    readonly update_columns?: ReadonlyArray<Conference_VisibilityLevel_Update_Column>;
    readonly where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

/** Ordering options when selecting data from "conference.VisibilityLevel". */
export type Conference_VisibilityLevel_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: conference_VisibilityLevel */
export type Conference_VisibilityLevel_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "conference.VisibilityLevel" */
export enum Conference_VisibilityLevel_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "conference.VisibilityLevel" */
export type Conference_VisibilityLevel_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "conference.VisibilityLevel" */
export enum Conference_VisibilityLevel_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_Element = {
    readonly __typename?: "content_Element";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly data: Scalars["jsonb"];
    /** A computed field, executes function "content.elementHasBeenSubmitted" */
    readonly hasBeenSubmitted?: Maybe<Scalars["Boolean"]>;
    readonly id: Scalars["uuid"];
    readonly isHidden: Scalars["Boolean"];
    /** An object relationship */
    readonly item: Content_Item;
    readonly itemId: Scalars["uuid"];
    /** A computed field, executes function "content.Element_itemTitle" */
    readonly itemTitle?: Maybe<Scalars["String"]>;
    readonly layoutData?: Maybe<Scalars["jsonb"]>;
    readonly name: Scalars["String"];
    readonly source?: Maybe<Scalars["jsonb"]>;
    /** An array relationship */
    readonly stats: ReadonlyArray<Analytics_ContentElementStats>;
    /** An aggregate relationship */
    readonly stats_aggregate: Analytics_ContentElementStats_Aggregate;
    /** An object relationship */
    readonly subconference?: Maybe<Conference_Subconference>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly totalViewsStat?: Maybe<Analytics_ElementTotalViews>;
    /** An object relationship */
    readonly type: Content_ElementType;
    readonly typeName: Content_ElementType_Enum;
    readonly updatedAt: Scalars["timestamptz"];
    readonly uploadsRemaining?: Maybe<Scalars["Int"]>;
    readonly visibilityLevel: Conference_VisibilityLevel_Enum;
    /** An array relationship */
    readonly youTubeUploads: ReadonlyArray<Video_YouTubeUpload>;
    /** An aggregate relationship */
    readonly youTubeUploads_aggregate: Video_YouTubeUpload_Aggregate;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementLayoutDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementSourceArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementYouTubeUploadsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** The "source" field is used in Postgres triggers to permit certain inserts irrespective of quotas. This ensures recordings can always be inserted. */
export type Content_ElementYouTubeUploads_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** columns and relationships of "content.ElementType" */
export type Content_ElementType = {
    readonly __typename?: "content_ElementType";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "content.ElementType" */
export type Content_ElementType_Aggregate = {
    readonly __typename?: "content_ElementType_aggregate";
    readonly aggregate?: Maybe<Content_ElementType_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Content_ElementType>;
};

/** aggregate fields of "content.ElementType" */
export type Content_ElementType_Aggregate_Fields = {
    readonly __typename?: "content_ElementType_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Content_ElementType_Max_Fields>;
    readonly min?: Maybe<Content_ElementType_Min_Fields>;
};

/** aggregate fields of "content.ElementType" */
export type Content_ElementType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Content_ElementType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "content.ElementType". All fields are combined with a logical 'AND'. */
export type Content_ElementType_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Content_ElementType_Bool_Exp>>;
    readonly _not?: InputMaybe<Content_ElementType_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Content_ElementType_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ElementType" */
export enum Content_ElementType_Constraint {
    /** unique or primary key constraint */
    ElementTypePkey = "ElementType_pkey",
}

export enum Content_ElementType_Enum {
    /** Abstract Markdown text. */
    Abstract = "ABSTRACT",
    /** Show a summary of the currently active social and discussion rooms */
    ActiveSocialRooms = "ACTIVE_SOCIAL_ROOMS",
    /** File for an audio clip (stored by Clowdr). */
    AudioFile = "AUDIO_FILE",
    /** Link to an audio clip (audio is not embedded in Clowdr UI). */
    AudioLink = "AUDIO_LINK",
    /** URL for an audio clip (audio is embedded in Clowdr UI). */
    AudioUrl = "AUDIO_URL",
    /** List of content groups in the system. */
    ContentGroupList = "CONTENT_GROUP_LIST",
    /** A horizontal divider */
    Divider = "DIVIDER",
    /** Button that opens the explore program modal. Intended for use on the landing page. */
    ExploreProgramButton = "EXPLORE_PROGRAM_BUTTON",
    /** Button that opens the explore program modal with the Schedule tab open. Intended for use on the landing page. */
    ExploreScheduleButton = "EXPLORE_SCHEDULE_BUTTON",
    /** Data for a Zoom meeting. */
    ExternalEventLink = "EXTERNAL_EVENT_LINK",
    /** File for an image (stored by Clowdr). */
    ImageFile = "IMAGE_FILE",
    /** URL to an image (embedded in Clowdr UI). */
    ImageUrl = "IMAGE_URL",
    /** A generic URL. */
    Link = "LINK",
    /** A URL for a link button. */
    LinkButton = "LINK_BUTTON",
    /** Show a summary of the currently live program rooms */
    LiveProgramRooms = "LIVE_PROGRAM_ROOMS",
    /** File for a paper (stored by Clowdr). */
    PaperFile = "PAPER_FILE",
    /** Link for a paper (preview is not embedded in Clowdr UI). */
    PaperLink = "PAPER_LINK",
    /** URL to a paper (preview may be embedded in Clowdr UI e.g. PDF JS viewer). */
    PaperUrl = "PAPER_URL",
    /** File for a poster image (stored by Clowdr). */
    PosterFile = "POSTER_FILE",
    /** URL to a poster image (embedded in Clowdr UI). */
    PosterUrl = "POSTER_URL",
    /** Show a summary of the sponsor booths */
    SponsorBooths = "SPONSOR_BOOTHS",
    /** General-purpose Markdown text. */
    Text = "TEXT",
    /** Video file to be broadcast. */
    VideoBroadcast = "VIDEO_BROADCAST",
    /** Video file for counting down to a transition in a broadcast. */
    VideoCountdown = "VIDEO_COUNTDOWN",
    /** File for a video (stored by Clowdr). */
    VideoFile = "VIDEO_FILE",
    /** Video file for filler loop between events/during breaks in a broadcast. */
    VideoFiller = "VIDEO_FILLER",
    /** Link to a video (video is not embedded in Clowdr UI). */
    VideoLink = "VIDEO_LINK",
    /** Video file to be published in advance of the conference. */
    VideoPrepublish = "VIDEO_PREPUBLISH",
    /** Video file for sponsors filler loop between events/during breaks in a broadcast. */
    VideoSponsorsFiller = "VIDEO_SPONSORS_FILLER",
    /** Video file for titles introducing an event during a broadcast. */
    VideoTitles = "VIDEO_TITLES",
    /** URL for a video (video is embedded in Clowdr UI). */
    VideoUrl = "VIDEO_URL",
    /** Schedule view for the whole conference. */
    WholeSchedule = "WHOLE_SCHEDULE",
}

/** Boolean expression to compare columns of type "content_ElementType_enum". All fields are combined with logical 'AND'. */
export type Content_ElementType_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Content_ElementType_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Content_ElementType_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Content_ElementType_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Content_ElementType_Enum>>;
};

/** input type for inserting data into table "content.ElementType" */
export type Content_ElementType_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Content_ElementType_Max_Fields = {
    readonly __typename?: "content_ElementType_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Content_ElementType_Min_Fields = {
    readonly __typename?: "content_ElementType_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "content.ElementType" */
export type Content_ElementType_Mutation_Response = {
    readonly __typename?: "content_ElementType_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Content_ElementType>;
};

/** input type for inserting object relation for remote table "content.ElementType" */
export type Content_ElementType_Obj_Rel_Insert_Input = {
    readonly data: Content_ElementType_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Content_ElementType_On_Conflict>;
};

/** on_conflict condition type for table "content.ElementType" */
export type Content_ElementType_On_Conflict = {
    readonly constraint: Content_ElementType_Constraint;
    readonly update_columns?: ReadonlyArray<Content_ElementType_Update_Column>;
    readonly where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ElementType". */
export type Content_ElementType_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ElementType */
export type Content_ElementType_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "content.ElementType" */
export enum Content_ElementType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "content.ElementType" */
export type Content_ElementType_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "content.ElementType" */
export enum Content_ElementType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "content.Element" */
export type Content_Element_Aggregate = {
    readonly __typename?: "content_Element_aggregate";
    readonly aggregate?: Maybe<Content_Element_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Content_Element>;
};

/** aggregate fields of "content.Element" */
export type Content_Element_Aggregate_Fields = {
    readonly __typename?: "content_Element_aggregate_fields";
    readonly avg?: Maybe<Content_Element_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Content_Element_Max_Fields>;
    readonly min?: Maybe<Content_Element_Min_Fields>;
    readonly stddev?: Maybe<Content_Element_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Content_Element_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Content_Element_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Content_Element_Sum_Fields>;
    readonly var_pop?: Maybe<Content_Element_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Content_Element_Var_Samp_Fields>;
    readonly variance?: Maybe<Content_Element_Variance_Fields>;
};

/** aggregate fields of "content.Element" */
export type Content_Element_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Content_Element_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.Element" */
export type Content_Element_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Content_Element_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Content_Element_Max_Order_By>;
    readonly min?: InputMaybe<Content_Element_Min_Order_By>;
    readonly stddev?: InputMaybe<Content_Element_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Content_Element_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Content_Element_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Content_Element_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Content_Element_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Content_Element_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Content_Element_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Content_Element_Append_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly layoutData?: InputMaybe<Scalars["jsonb"]>;
    readonly source?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "content.Element" */
export type Content_Element_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Content_Element_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Content_Element_On_Conflict>;
};

/** aggregate avg on columns */
export type Content_Element_Avg_Fields = {
    readonly __typename?: "content_Element_avg_fields";
    readonly uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "content.Element" */
export type Content_Element_Avg_Order_By = {
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "content.Element". All fields are combined with a logical 'AND'. */
export type Content_Element_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Content_Element_Bool_Exp>>;
    readonly _not?: InputMaybe<Content_Element_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Content_Element_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly data?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly hasBeenSubmitted?: InputMaybe<Boolean_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly isHidden?: InputMaybe<Boolean_Comparison_Exp>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly itemTitle?: InputMaybe<String_Comparison_Exp>;
    readonly layoutData?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly source?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly stats?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
    readonly subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly totalViewsStat?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
    readonly type?: InputMaybe<Content_ElementType_Bool_Exp>;
    readonly typeName?: InputMaybe<Content_ElementType_Enum_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly uploadsRemaining?: InputMaybe<Int_Comparison_Exp>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
    readonly youTubeUploads?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** unique or primary key constraints on table "content.Element" */
export enum Content_Element_Constraint {
    /** unique or primary key constraint */
    ElementPkey = "Element_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Content_Element_Delete_At_Path_Input = {
    readonly data?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    readonly layoutData?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    readonly source?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Content_Element_Delete_Elem_Input = {
    readonly data?: InputMaybe<Scalars["Int"]>;
    readonly layoutData?: InputMaybe<Scalars["Int"]>;
    readonly source?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Content_Element_Delete_Key_Input = {
    readonly data?: InputMaybe<Scalars["String"]>;
    readonly layoutData?: InputMaybe<Scalars["String"]>;
    readonly source?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "content.Element" */
export type Content_Element_Inc_Input = {
    readonly uploadsRemaining?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "content.Element" */
export type Content_Element_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isHidden?: InputMaybe<Scalars["Boolean"]>;
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly layoutData?: InputMaybe<Scalars["jsonb"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly source?: InputMaybe<Scalars["jsonb"]>;
    readonly stats?: InputMaybe<Analytics_ContentElementStats_Arr_Rel_Insert_Input>;
    readonly subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly totalViewsStat?: InputMaybe<Analytics_ElementTotalViews_Obj_Rel_Insert_Input>;
    readonly type?: InputMaybe<Content_ElementType_Obj_Rel_Insert_Input>;
    readonly typeName?: InputMaybe<Content_ElementType_Enum>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly uploadsRemaining?: InputMaybe<Scalars["Int"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
    readonly youTubeUploads?: InputMaybe<Video_YouTubeUpload_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Content_Element_Max_Fields = {
    readonly __typename?: "content_Element_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly uploadsRemaining?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "content.Element" */
export type Content_Element_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_Element_Min_Fields = {
    readonly __typename?: "content_Element_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly uploadsRemaining?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "content.Element" */
export type Content_Element_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.Element" */
export type Content_Element_Mutation_Response = {
    readonly __typename?: "content_Element_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Content_Element>;
};

/** input type for inserting object relation for remote table "content.Element" */
export type Content_Element_Obj_Rel_Insert_Input = {
    readonly data: Content_Element_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Content_Element_On_Conflict>;
};

/** on_conflict condition type for table "content.Element" */
export type Content_Element_On_Conflict = {
    readonly constraint: Content_Element_Constraint;
    readonly update_columns?: ReadonlyArray<Content_Element_Update_Column>;
    readonly where?: InputMaybe<Content_Element_Bool_Exp>;
};

/** Ordering options when selecting data from "content.Element". */
export type Content_Element_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly data?: InputMaybe<Order_By>;
    readonly hasBeenSubmitted?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly isHidden?: InputMaybe<Order_By>;
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly itemTitle?: InputMaybe<Order_By>;
    readonly layoutData?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly source?: InputMaybe<Order_By>;
    readonly stats_aggregate?: InputMaybe<Analytics_ContentElementStats_Aggregate_Order_By>;
    readonly subconference?: InputMaybe<Conference_Subconference_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly totalViewsStat?: InputMaybe<Analytics_ElementTotalViews_Order_By>;
    readonly type?: InputMaybe<Content_ElementType_Order_By>;
    readonly typeName?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly uploadsRemaining?: InputMaybe<Order_By>;
    readonly visibilityLevel?: InputMaybe<Order_By>;
    readonly youTubeUploads_aggregate?: InputMaybe<Video_YouTubeUpload_Aggregate_Order_By>;
};

/** primary key columns input for table: content_Element */
export type Content_Element_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Content_Element_Prepend_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly layoutData?: InputMaybe<Scalars["jsonb"]>;
    readonly source?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "content.Element" */
export enum Content_Element_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Data = "data",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    ItemId = "itemId",
    /** column name */
    LayoutData = "layoutData",
    /** column name */
    Name = "name",
    /** column name */
    Source = "source",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TypeName = "typeName",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UploadsRemaining = "uploadsRemaining",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "content.Element" */
export type Content_Element_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isHidden?: InputMaybe<Scalars["Boolean"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly layoutData?: InputMaybe<Scalars["jsonb"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly source?: InputMaybe<Scalars["jsonb"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly typeName?: InputMaybe<Content_ElementType_Enum>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly uploadsRemaining?: InputMaybe<Scalars["Int"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate stddev on columns */
export type Content_Element_Stddev_Fields = {
    readonly __typename?: "content_Element_stddev_fields";
    readonly uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "content.Element" */
export type Content_Element_Stddev_Order_By = {
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Content_Element_Stddev_Pop_Fields = {
    readonly __typename?: "content_Element_stddev_pop_fields";
    readonly uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "content.Element" */
export type Content_Element_Stddev_Pop_Order_By = {
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Content_Element_Stddev_Samp_Fields = {
    readonly __typename?: "content_Element_stddev_samp_fields";
    readonly uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "content.Element" */
export type Content_Element_Stddev_Samp_Order_By = {
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Content_Element_Sum_Fields = {
    readonly __typename?: "content_Element_sum_fields";
    readonly uploadsRemaining?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "content.Element" */
export type Content_Element_Sum_Order_By = {
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** update columns of table "content.Element" */
export enum Content_Element_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Data = "data",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    ItemId = "itemId",
    /** column name */
    LayoutData = "layoutData",
    /** column name */
    Name = "name",
    /** column name */
    Source = "source",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TypeName = "typeName",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UploadsRemaining = "uploadsRemaining",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** aggregate var_pop on columns */
export type Content_Element_Var_Pop_Fields = {
    readonly __typename?: "content_Element_var_pop_fields";
    readonly uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "content.Element" */
export type Content_Element_Var_Pop_Order_By = {
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Content_Element_Var_Samp_Fields = {
    readonly __typename?: "content_Element_var_samp_fields";
    readonly uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "content.Element" */
export type Content_Element_Var_Samp_Order_By = {
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Content_Element_Variance_Fields = {
    readonly __typename?: "content_Element_variance_fields";
    readonly uploadsRemaining?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "content.Element" */
export type Content_Element_Variance_Order_By = {
    readonly uploadsRemaining?: InputMaybe<Order_By>;
};

/** columns and relationships of "content.Item" */
export type Content_Item = {
    readonly __typename?: "content_Item";
    /** An object relationship */
    readonly chat?: Maybe<Chat_Chat>;
    readonly chatId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    /** An array relationship */
    readonly descriptionOfExhibitions: ReadonlyArray<Collection_Exhibition>;
    /** An aggregate relationship */
    readonly descriptionOfExhibitions_aggregate: Collection_Exhibition_Aggregate;
    /** An array relationship */
    readonly elements: ReadonlyArray<Content_Element>;
    /** An aggregate relationship */
    readonly elements_aggregate: Content_Element_Aggregate;
    /** An array relationship */
    readonly events: ReadonlyArray<Schedule_Event>;
    /** An aggregate relationship */
    readonly events_aggregate: Schedule_Event_Aggregate;
    /** A computed field, executes function "content.itemHasUnsubmittedElements" */
    readonly hasUnsubmittedElements?: Maybe<Scalars["Boolean"]>;
    readonly id: Scalars["uuid"];
    /** An array relationship */
    readonly itemExhibitions: ReadonlyArray<Content_ItemExhibition>;
    /** An aggregate relationship */
    readonly itemExhibitions_aggregate: Content_ItemExhibition_Aggregate;
    /** An array relationship */
    readonly itemPeople: ReadonlyArray<Content_ItemProgramPerson>;
    /** An aggregate relationship */
    readonly itemPeople_aggregate: Content_ItemProgramPerson_Aggregate;
    /** An array relationship */
    readonly itemTags: ReadonlyArray<Content_ItemTag>;
    /** An aggregate relationship */
    readonly itemTags_aggregate: Content_ItemTag_Aggregate;
    /** An object relationship */
    readonly room?: Maybe<Room_Room>;
    readonly shortTitle?: Maybe<Scalars["String"]>;
    /** An array relationship */
    readonly sponsorshipTierMemberships: ReadonlyArray<Sponsor_TierMember>;
    /** An aggregate relationship */
    readonly sponsorshipTierMemberships_aggregate: Sponsor_TierMember_Aggregate;
    /** An array relationship */
    readonly stats: ReadonlyArray<Analytics_ContentItemStats>;
    /** An aggregate relationship */
    readonly stats_aggregate: Analytics_ContentItemStats_Aggregate;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly title: Scalars["String"];
    /** An object relationship */
    readonly totalViewsStat?: Maybe<Analytics_ItemTotalViews>;
    /** An object relationship */
    readonly type: Content_ItemType;
    readonly typeName: Content_ItemType_Enum;
    readonly updatedAt: Scalars["timestamptz"];
    readonly visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "content.Item" */
export type Content_ItemDescriptionOfExhibitionsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemDescriptionOfExhibitions_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemElementsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemElements_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemExhibitionsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemExhibitions_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemPeopleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemPeople_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemTagsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemItemTags_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemSponsorshipTierMembershipsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemSponsorshipTierMemberships_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

/** columns and relationships of "content.Item" */
export type Content_ItemStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

/** columns and relationships of "content.ItemExhibition" */
export type Content_ItemExhibition = {
    readonly __typename?: "content_ItemExhibition";
    /** An object relationship */
    readonly exhibition: Collection_Exhibition;
    readonly exhibitionId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly item: Content_Item;
    readonly itemId: Scalars["uuid"];
    readonly layout?: Maybe<Scalars["jsonb"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** columns and relationships of "content.ItemExhibition" */
export type Content_ItemExhibitionLayoutArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "content.ItemExhibition" */
export type Content_ItemExhibition_Aggregate = {
    readonly __typename?: "content_ItemExhibition_aggregate";
    readonly aggregate?: Maybe<Content_ItemExhibition_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Content_ItemExhibition>;
};

/** aggregate fields of "content.ItemExhibition" */
export type Content_ItemExhibition_Aggregate_Fields = {
    readonly __typename?: "content_ItemExhibition_aggregate_fields";
    readonly avg?: Maybe<Content_ItemExhibition_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Content_ItemExhibition_Max_Fields>;
    readonly min?: Maybe<Content_ItemExhibition_Min_Fields>;
    readonly stddev?: Maybe<Content_ItemExhibition_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Content_ItemExhibition_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Content_ItemExhibition_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Content_ItemExhibition_Sum_Fields>;
    readonly var_pop?: Maybe<Content_ItemExhibition_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Content_ItemExhibition_Var_Samp_Fields>;
    readonly variance?: Maybe<Content_ItemExhibition_Variance_Fields>;
};

/** aggregate fields of "content.ItemExhibition" */
export type Content_ItemExhibition_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.ItemExhibition" */
export type Content_ItemExhibition_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Content_ItemExhibition_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Content_ItemExhibition_Max_Order_By>;
    readonly min?: InputMaybe<Content_ItemExhibition_Min_Order_By>;
    readonly stddev?: InputMaybe<Content_ItemExhibition_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Content_ItemExhibition_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Content_ItemExhibition_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Content_ItemExhibition_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Content_ItemExhibition_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Content_ItemExhibition_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Content_ItemExhibition_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Content_ItemExhibition_Append_Input = {
    readonly layout?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "content.ItemExhibition" */
export type Content_ItemExhibition_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Content_ItemExhibition_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Content_ItemExhibition_On_Conflict>;
};

/** aggregate avg on columns */
export type Content_ItemExhibition_Avg_Fields = {
    readonly __typename?: "content_ItemExhibition_avg_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Avg_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "content.ItemExhibition". All fields are combined with a logical 'AND'. */
export type Content_ItemExhibition_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Bool_Exp>>;
    readonly _not?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Bool_Exp>>;
    readonly exhibition?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    readonly exhibitionId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly layout?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly priority?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ItemExhibition" */
export enum Content_ItemExhibition_Constraint {
    /** unique or primary key constraint */
    ItemExhibitionPkey = "ItemExhibition_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Content_ItemExhibition_Delete_At_Path_Input = {
    readonly layout?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Content_ItemExhibition_Delete_Elem_Input = {
    readonly layout?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Content_ItemExhibition_Delete_Key_Input = {
    readonly layout?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "content.ItemExhibition" */
export type Content_ItemExhibition_Inc_Input = {
    readonly priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "content.ItemExhibition" */
export type Content_ItemExhibition_Insert_Input = {
    readonly exhibition?: InputMaybe<Collection_Exhibition_Obj_Rel_Insert_Input>;
    readonly exhibitionId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly layout?: InputMaybe<Scalars["jsonb"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
};

/** aggregate max on columns */
export type Content_ItemExhibition_Max_Fields = {
    readonly __typename?: "content_ItemExhibition_max_fields";
    readonly exhibitionId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Max_Order_By = {
    readonly exhibitionId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_ItemExhibition_Min_Fields = {
    readonly __typename?: "content_ItemExhibition_min_fields";
    readonly exhibitionId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Min_Order_By = {
    readonly exhibitionId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.ItemExhibition" */
export type Content_ItemExhibition_Mutation_Response = {
    readonly __typename?: "content_ItemExhibition_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Content_ItemExhibition>;
};

/** on_conflict condition type for table "content.ItemExhibition" */
export type Content_ItemExhibition_On_Conflict = {
    readonly constraint: Content_ItemExhibition_Constraint;
    readonly update_columns?: ReadonlyArray<Content_ItemExhibition_Update_Column>;
    readonly where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ItemExhibition". */
export type Content_ItemExhibition_Order_By = {
    readonly exhibition?: InputMaybe<Collection_Exhibition_Order_By>;
    readonly exhibitionId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly layout?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ItemExhibition */
export type Content_ItemExhibition_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Content_ItemExhibition_Prepend_Input = {
    readonly layout?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "content.ItemExhibition" */
export enum Content_ItemExhibition_Select_Column {
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    Layout = "layout",
    /** column name */
    Priority = "priority",
}

/** input type for updating data in table "content.ItemExhibition" */
export type Content_ItemExhibition_Set_Input = {
    readonly exhibitionId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly layout?: InputMaybe<Scalars["jsonb"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
};

/** aggregate stddev on columns */
export type Content_ItemExhibition_Stddev_Fields = {
    readonly __typename?: "content_ItemExhibition_stddev_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Stddev_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Content_ItemExhibition_Stddev_Pop_Fields = {
    readonly __typename?: "content_ItemExhibition_stddev_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Stddev_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Content_ItemExhibition_Stddev_Samp_Fields = {
    readonly __typename?: "content_ItemExhibition_stddev_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Stddev_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Content_ItemExhibition_Sum_Fields = {
    readonly __typename?: "content_ItemExhibition_sum_fields";
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Sum_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** update columns of table "content.ItemExhibition" */
export enum Content_ItemExhibition_Update_Column {
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    Layout = "layout",
    /** column name */
    Priority = "priority",
}

/** aggregate var_pop on columns */
export type Content_ItemExhibition_Var_Pop_Fields = {
    readonly __typename?: "content_ItemExhibition_var_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Var_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Content_ItemExhibition_Var_Samp_Fields = {
    readonly __typename?: "content_ItemExhibition_var_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Var_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Content_ItemExhibition_Variance_Fields = {
    readonly __typename?: "content_ItemExhibition_variance_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "content.ItemExhibition" */
export type Content_ItemExhibition_Variance_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "content.ItemProgramPerson" */
export type Content_ItemProgramPerson = {
    readonly __typename?: "content_ItemProgramPerson";
    /** A computed field, executes function "content.itemProgramPerson_HasSubmissionRequestBeenSent" */
    readonly hasSubmissionRequestBeenSent?: Maybe<Scalars["Boolean"]>;
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly item: Content_Item;
    readonly itemId: Scalars["uuid"];
    /** An object relationship */
    readonly person: Collection_ProgramPerson;
    readonly personId: Scalars["uuid"];
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly roleName: Scalars["String"];
};

/** aggregated selection of "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Aggregate = {
    readonly __typename?: "content_ItemProgramPerson_aggregate";
    readonly aggregate?: Maybe<Content_ItemProgramPerson_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Content_ItemProgramPerson>;
};

/** aggregate fields of "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Aggregate_Fields = {
    readonly __typename?: "content_ItemProgramPerson_aggregate_fields";
    readonly avg?: Maybe<Content_ItemProgramPerson_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Content_ItemProgramPerson_Max_Fields>;
    readonly min?: Maybe<Content_ItemProgramPerson_Min_Fields>;
    readonly stddev?: Maybe<Content_ItemProgramPerson_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Content_ItemProgramPerson_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Content_ItemProgramPerson_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Content_ItemProgramPerson_Sum_Fields>;
    readonly var_pop?: Maybe<Content_ItemProgramPerson_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Content_ItemProgramPerson_Var_Samp_Fields>;
    readonly variance?: Maybe<Content_ItemProgramPerson_Variance_Fields>;
};

/** aggregate fields of "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Content_ItemProgramPerson_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Content_ItemProgramPerson_Max_Order_By>;
    readonly min?: InputMaybe<Content_ItemProgramPerson_Min_Order_By>;
    readonly stddev?: InputMaybe<Content_ItemProgramPerson_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Content_ItemProgramPerson_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Content_ItemProgramPerson_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Content_ItemProgramPerson_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Content_ItemProgramPerson_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Content_ItemProgramPerson_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Content_ItemProgramPerson_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Content_ItemProgramPerson_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Content_ItemProgramPerson_On_Conflict>;
};

/** aggregate avg on columns */
export type Content_ItemProgramPerson_Avg_Fields = {
    readonly __typename?: "content_ItemProgramPerson_avg_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Avg_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "content.ItemProgramPerson". All fields are combined with a logical 'AND'. */
export type Content_ItemProgramPerson_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Bool_Exp>>;
    readonly _not?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Bool_Exp>>;
    readonly hasSubmissionRequestBeenSent?: InputMaybe<Boolean_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly person?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    readonly personId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly priority?: InputMaybe<Int_Comparison_Exp>;
    readonly roleName?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ItemProgramPerson" */
export enum Content_ItemProgramPerson_Constraint {
    /** unique or primary key constraint */
    ItemProgramPersonPkey = "ItemProgramPerson_pkey",
    /** unique or primary key constraint */
    ItemProgramPersonRoleNamePersonIdItemIdKey = "ItemProgramPerson_roleName_personId_itemId_key",
}

/** input type for incrementing numeric columns in table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Inc_Input = {
    readonly priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Insert_Input = {
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly person?: InputMaybe<Collection_ProgramPerson_Obj_Rel_Insert_Input>;
    readonly personId?: InputMaybe<Scalars["uuid"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly roleName?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Content_ItemProgramPerson_Max_Fields = {
    readonly __typename?: "content_ItemProgramPerson_max_fields";
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly personId?: Maybe<Scalars["uuid"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly roleName?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Max_Order_By = {
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly personId?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly roleName?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_ItemProgramPerson_Min_Fields = {
    readonly __typename?: "content_ItemProgramPerson_min_fields";
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly personId?: Maybe<Scalars["uuid"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly roleName?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Min_Order_By = {
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly personId?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly roleName?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Mutation_Response = {
    readonly __typename?: "content_ItemProgramPerson_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Content_ItemProgramPerson>;
};

/** on_conflict condition type for table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_On_Conflict = {
    readonly constraint: Content_ItemProgramPerson_Constraint;
    readonly update_columns?: ReadonlyArray<Content_ItemProgramPerson_Update_Column>;
    readonly where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ItemProgramPerson". */
export type Content_ItemProgramPerson_Order_By = {
    readonly hasSubmissionRequestBeenSent?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly person?: InputMaybe<Collection_ProgramPerson_Order_By>;
    readonly personId?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly roleName?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ItemProgramPerson */
export type Content_ItemProgramPerson_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "content.ItemProgramPerson" */
export enum Content_ItemProgramPerson_Select_Column {
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    PersonId = "personId",
    /** column name */
    Priority = "priority",
    /** column name */
    RoleName = "roleName",
}

/** input type for updating data in table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Set_Input = {
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly personId?: InputMaybe<Scalars["uuid"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly roleName?: InputMaybe<Scalars["String"]>;
};

/** aggregate stddev on columns */
export type Content_ItemProgramPerson_Stddev_Fields = {
    readonly __typename?: "content_ItemProgramPerson_stddev_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Stddev_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Content_ItemProgramPerson_Stddev_Pop_Fields = {
    readonly __typename?: "content_ItemProgramPerson_stddev_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Stddev_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Content_ItemProgramPerson_Stddev_Samp_Fields = {
    readonly __typename?: "content_ItemProgramPerson_stddev_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Stddev_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Content_ItemProgramPerson_Sum_Fields = {
    readonly __typename?: "content_ItemProgramPerson_sum_fields";
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Sum_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** update columns of table "content.ItemProgramPerson" */
export enum Content_ItemProgramPerson_Update_Column {
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    PersonId = "personId",
    /** column name */
    Priority = "priority",
    /** column name */
    RoleName = "roleName",
}

/** aggregate var_pop on columns */
export type Content_ItemProgramPerson_Var_Pop_Fields = {
    readonly __typename?: "content_ItemProgramPerson_var_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Var_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Content_ItemProgramPerson_Var_Samp_Fields = {
    readonly __typename?: "content_ItemProgramPerson_var_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Var_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Content_ItemProgramPerson_Variance_Fields = {
    readonly __typename?: "content_ItemProgramPerson_variance_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "content.ItemProgramPerson" */
export type Content_ItemProgramPerson_Variance_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "content.ItemTag" */
export type Content_ItemTag = {
    readonly __typename?: "content_ItemTag";
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly item: Content_Item;
    readonly itemId: Scalars["uuid"];
    /** An object relationship */
    readonly tag: Collection_Tag;
    readonly tagId: Scalars["uuid"];
};

/** aggregated selection of "content.ItemTag" */
export type Content_ItemTag_Aggregate = {
    readonly __typename?: "content_ItemTag_aggregate";
    readonly aggregate?: Maybe<Content_ItemTag_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Content_ItemTag>;
};

/** aggregate fields of "content.ItemTag" */
export type Content_ItemTag_Aggregate_Fields = {
    readonly __typename?: "content_ItemTag_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Content_ItemTag_Max_Fields>;
    readonly min?: Maybe<Content_ItemTag_Min_Fields>;
};

/** aggregate fields of "content.ItemTag" */
export type Content_ItemTag_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Content_ItemTag_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.ItemTag" */
export type Content_ItemTag_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Content_ItemTag_Max_Order_By>;
    readonly min?: InputMaybe<Content_ItemTag_Min_Order_By>;
};

/** input type for inserting array relation for remote table "content.ItemTag" */
export type Content_ItemTag_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Content_ItemTag_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Content_ItemTag_On_Conflict>;
};

/** Boolean expression to filter rows from the table "content.ItemTag". All fields are combined with a logical 'AND'. */
export type Content_ItemTag_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Content_ItemTag_Bool_Exp>>;
    readonly _not?: InputMaybe<Content_ItemTag_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Content_ItemTag_Bool_Exp>>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly tag?: InputMaybe<Collection_Tag_Bool_Exp>;
    readonly tagId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ItemTag" */
export enum Content_ItemTag_Constraint {
    /** unique or primary key constraint */
    ItemTagItemIdTagIdKey = "ItemTag_itemId_tagId_key",
    /** unique or primary key constraint */
    ItemTagPkey = "ItemTag_pkey",
}

/** input type for inserting data into table "content.ItemTag" */
export type Content_ItemTag_Insert_Input = {
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly tag?: InputMaybe<Collection_Tag_Obj_Rel_Insert_Input>;
    readonly tagId?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate max on columns */
export type Content_ItemTag_Max_Fields = {
    readonly __typename?: "content_ItemTag_max_fields";
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly tagId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "content.ItemTag" */
export type Content_ItemTag_Max_Order_By = {
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly tagId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_ItemTag_Min_Fields = {
    readonly __typename?: "content_ItemTag_min_fields";
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly tagId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "content.ItemTag" */
export type Content_ItemTag_Min_Order_By = {
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly tagId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.ItemTag" */
export type Content_ItemTag_Mutation_Response = {
    readonly __typename?: "content_ItemTag_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Content_ItemTag>;
};

/** on_conflict condition type for table "content.ItemTag" */
export type Content_ItemTag_On_Conflict = {
    readonly constraint: Content_ItemTag_Constraint;
    readonly update_columns?: ReadonlyArray<Content_ItemTag_Update_Column>;
    readonly where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ItemTag". */
export type Content_ItemTag_Order_By = {
    readonly id?: InputMaybe<Order_By>;
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly tag?: InputMaybe<Collection_Tag_Order_By>;
    readonly tagId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ItemTag */
export type Content_ItemTag_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "content.ItemTag" */
export enum Content_ItemTag_Select_Column {
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    TagId = "tagId",
}

/** input type for updating data in table "content.ItemTag" */
export type Content_ItemTag_Set_Input = {
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly tagId?: InputMaybe<Scalars["uuid"]>;
};

/** update columns of table "content.ItemTag" */
export enum Content_ItemTag_Update_Column {
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    TagId = "tagId",
}

/** columns and relationships of "content.ItemType" */
export type Content_ItemType = {
    readonly __typename?: "content_ItemType";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "content.ItemType" */
export type Content_ItemType_Aggregate = {
    readonly __typename?: "content_ItemType_aggregate";
    readonly aggregate?: Maybe<Content_ItemType_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Content_ItemType>;
};

/** aggregate fields of "content.ItemType" */
export type Content_ItemType_Aggregate_Fields = {
    readonly __typename?: "content_ItemType_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Content_ItemType_Max_Fields>;
    readonly min?: Maybe<Content_ItemType_Min_Fields>;
};

/** aggregate fields of "content.ItemType" */
export type Content_ItemType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Content_ItemType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "content.ItemType". All fields are combined with a logical 'AND'. */
export type Content_ItemType_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Content_ItemType_Bool_Exp>>;
    readonly _not?: InputMaybe<Content_ItemType_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Content_ItemType_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.ItemType" */
export enum Content_ItemType_Constraint {
    /** unique or primary key constraint */
    ItemTypePkey = "ItemType_pkey",
}

export enum Content_ItemType_Enum {
    /** A demonstration. */
    Demonstration = "DEMONSTRATION",
    /** A keynote. */
    Keynote = "KEYNOTE",
    /** Conference main landing page. */
    LandingPage = "LANDING_PAGE",
    /** A generic group type - use sparingly. */
    Other = "OTHER",
    /** A paper. */
    Paper = "PAPER",
    /** A poster. */
    Poster = "POSTER",
    /** A presentation. */
    Presentation = "PRESENTATION",
    /** Content representing a whole session. */
    Session = "SESSION",
    /** A Q&A covering the whole session. */
    SessionQAndA = "SESSION_Q_AND_A",
    /** A scheduled social. */
    Social = "SOCIAL",
    /** A sponsor. */
    Sponsor = "SPONSOR",
    /** An item of conference goodies for attendee's swag bags. */
    SwagBag = "SWAG_BAG",
    /** A symposium. */
    Symposium = "SYMPOSIUM",
    /** A tutorial. */
    Tutorial = "TUTORIAL",
    /** A workshop. */
    Workshop = "WORKSHOP",
}

/** Boolean expression to compare columns of type "content_ItemType_enum". All fields are combined with logical 'AND'. */
export type Content_ItemType_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Content_ItemType_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Content_ItemType_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Content_ItemType_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Content_ItemType_Enum>>;
};

/** input type for inserting data into table "content.ItemType" */
export type Content_ItemType_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Content_ItemType_Max_Fields = {
    readonly __typename?: "content_ItemType_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Content_ItemType_Min_Fields = {
    readonly __typename?: "content_ItemType_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "content.ItemType" */
export type Content_ItemType_Mutation_Response = {
    readonly __typename?: "content_ItemType_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Content_ItemType>;
};

/** input type for inserting object relation for remote table "content.ItemType" */
export type Content_ItemType_Obj_Rel_Insert_Input = {
    readonly data: Content_ItemType_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Content_ItemType_On_Conflict>;
};

/** on_conflict condition type for table "content.ItemType" */
export type Content_ItemType_On_Conflict = {
    readonly constraint: Content_ItemType_Constraint;
    readonly update_columns?: ReadonlyArray<Content_ItemType_Update_Column>;
    readonly where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

/** Ordering options when selecting data from "content.ItemType". */
export type Content_ItemType_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_ItemType */
export type Content_ItemType_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "content.ItemType" */
export enum Content_ItemType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "content.ItemType" */
export type Content_ItemType_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "content.ItemType" */
export enum Content_ItemType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "content.Item" */
export type Content_Item_Aggregate = {
    readonly __typename?: "content_Item_aggregate";
    readonly aggregate?: Maybe<Content_Item_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Content_Item>;
};

/** aggregate fields of "content.Item" */
export type Content_Item_Aggregate_Fields = {
    readonly __typename?: "content_Item_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Content_Item_Max_Fields>;
    readonly min?: Maybe<Content_Item_Min_Fields>;
};

/** aggregate fields of "content.Item" */
export type Content_Item_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "content.Item" */
export type Content_Item_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Content_Item_Max_Order_By>;
    readonly min?: InputMaybe<Content_Item_Min_Order_By>;
};

/** input type for inserting array relation for remote table "content.Item" */
export type Content_Item_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Content_Item_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Content_Item_On_Conflict>;
};

/** Boolean expression to filter rows from the table "content.Item". All fields are combined with a logical 'AND'. */
export type Content_Item_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Content_Item_Bool_Exp>>;
    readonly _not?: InputMaybe<Content_Item_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Content_Item_Bool_Exp>>;
    readonly chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly chatId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly descriptionOfExhibitions?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    readonly elements?: InputMaybe<Content_Element_Bool_Exp>;
    readonly events?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly hasUnsubmittedElements?: InputMaybe<Boolean_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly itemExhibitions?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
    readonly itemPeople?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
    readonly itemTags?: InputMaybe<Content_ItemTag_Bool_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly shortTitle?: InputMaybe<String_Comparison_Exp>;
    readonly sponsorshipTierMemberships?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
    readonly stats?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly title?: InputMaybe<String_Comparison_Exp>;
    readonly totalViewsStat?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
    readonly type?: InputMaybe<Content_ItemType_Bool_Exp>;
    readonly typeName?: InputMaybe<Content_ItemType_Enum_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "content.Item" */
export enum Content_Item_Constraint {
    /** unique or primary key constraint */
    ItemChatIdKey = "Item_chatId_key",
    /** unique or primary key constraint */
    ItemPkey = "Item_pkey",
}

/** input type for inserting data into table "content.Item" */
export type Content_Item_Insert_Input = {
    readonly chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly descriptionOfExhibitions?: InputMaybe<Collection_Exhibition_Arr_Rel_Insert_Input>;
    readonly elements?: InputMaybe<Content_Element_Arr_Rel_Insert_Input>;
    readonly events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemExhibitions?: InputMaybe<Content_ItemExhibition_Arr_Rel_Insert_Input>;
    readonly itemPeople?: InputMaybe<Content_ItemProgramPerson_Arr_Rel_Insert_Input>;
    readonly itemTags?: InputMaybe<Content_ItemTag_Arr_Rel_Insert_Input>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly shortTitle?: InputMaybe<Scalars["String"]>;
    readonly sponsorshipTierMemberships?: InputMaybe<Sponsor_TierMember_Arr_Rel_Insert_Input>;
    readonly stats?: InputMaybe<Analytics_ContentItemStats_Arr_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly title?: InputMaybe<Scalars["String"]>;
    readonly totalViewsStat?: InputMaybe<Analytics_ItemTotalViews_Obj_Rel_Insert_Input>;
    readonly type?: InputMaybe<Content_ItemType_Obj_Rel_Insert_Input>;
    readonly typeName?: InputMaybe<Content_ItemType_Enum>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Content_Item_Max_Fields = {
    readonly __typename?: "content_Item_max_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly shortTitle?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly title?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "content.Item" */
export type Content_Item_Max_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly shortTitle?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly title?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Content_Item_Min_Fields = {
    readonly __typename?: "content_Item_min_fields";
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly shortTitle?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly title?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "content.Item" */
export type Content_Item_Min_Order_By = {
    readonly chatId?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly shortTitle?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly title?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "content.Item" */
export type Content_Item_Mutation_Response = {
    readonly __typename?: "content_Item_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Content_Item>;
};

/** input type for inserting object relation for remote table "content.Item" */
export type Content_Item_Obj_Rel_Insert_Input = {
    readonly data: Content_Item_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Content_Item_On_Conflict>;
};

/** on_conflict condition type for table "content.Item" */
export type Content_Item_On_Conflict = {
    readonly constraint: Content_Item_Constraint;
    readonly update_columns?: ReadonlyArray<Content_Item_Update_Column>;
    readonly where?: InputMaybe<Content_Item_Bool_Exp>;
};

/** Ordering options when selecting data from "content.Item". */
export type Content_Item_Order_By = {
    readonly chat?: InputMaybe<Chat_Chat_Order_By>;
    readonly chatId?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly descriptionOfExhibitions_aggregate?: InputMaybe<Collection_Exhibition_Aggregate_Order_By>;
    readonly elements_aggregate?: InputMaybe<Content_Element_Aggregate_Order_By>;
    readonly events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    readonly hasUnsubmittedElements?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemExhibitions_aggregate?: InputMaybe<Content_ItemExhibition_Aggregate_Order_By>;
    readonly itemPeople_aggregate?: InputMaybe<Content_ItemProgramPerson_Aggregate_Order_By>;
    readonly itemTags_aggregate?: InputMaybe<Content_ItemTag_Aggregate_Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly shortTitle?: InputMaybe<Order_By>;
    readonly sponsorshipTierMemberships_aggregate?: InputMaybe<Sponsor_TierMember_Aggregate_Order_By>;
    readonly stats_aggregate?: InputMaybe<Analytics_ContentItemStats_Aggregate_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly title?: InputMaybe<Order_By>;
    readonly totalViewsStat?: InputMaybe<Analytics_ItemTotalViews_Order_By>;
    readonly type?: InputMaybe<Content_ItemType_Order_By>;
    readonly typeName?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: content_Item */
export type Content_Item_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "content.Item" */
export enum Content_Item_Select_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    ShortTitle = "shortTitle",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Title = "title",
    /** column name */
    TypeName = "typeName",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "content.Item" */
export type Content_Item_Set_Input = {
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly shortTitle?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly title?: InputMaybe<Scalars["String"]>;
    readonly typeName?: InputMaybe<Content_ItemType_Enum>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** update columns of table "content.Item" */
export enum Content_Item_Update_Column {
    /** column name */
    ChatId = "chatId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    ShortTitle = "shortTitle",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Title = "title",
    /** column name */
    TypeName = "typeName",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

export type Content_SearchItems_Args = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly search?: InputMaybe<Scalars["String"]>;
};

/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export type Float8_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["float8"]>;
    readonly _gt?: InputMaybe<Scalars["float8"]>;
    readonly _gte?: InputMaybe<Scalars["float8"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["float8"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["float8"]>;
    readonly _lte?: InputMaybe<Scalars["float8"]>;
    readonly _neq?: InputMaybe<Scalars["float8"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["float8"]>>;
};

/** columns and relationships of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob = {
    readonly __typename?: "job_queues_ChannelStackCreateJob";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly jobStatus: Job_Queues_JobStatus;
    readonly jobStatusName: Job_Queues_JobStatus_Enum;
    readonly message?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly room: Room_Room;
    readonly roomId: Scalars["uuid"];
    readonly stackLogicalResourceId: Scalars["String"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate = {
    readonly __typename?: "job_queues_ChannelStackCreateJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_ChannelStackCreateJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_ChannelStackCreateJob>;
};

/** aggregate fields of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_ChannelStackCreateJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_ChannelStackCreateJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_ChannelStackCreateJob_Min_Fields>;
};

/** aggregate fields of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Job_Queues_ChannelStackCreateJob_Max_Order_By>;
    readonly min?: InputMaybe<Job_Queues_ChannelStackCreateJob_Min_Order_By>;
};

/** input type for inserting array relation for remote table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Job_Queues_ChannelStackCreateJob_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.ChannelStackCreateJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_ChannelStackCreateJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    readonly message?: InputMaybe<String_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly stackLogicalResourceId?: InputMaybe<String_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ChannelStackCreateJob" */
export enum Job_Queues_ChannelStackCreateJob_Constraint {
    /** unique or primary key constraint */
    ChannelStackCreateJobPkey = "ChannelStackCreateJob_pkey",
    /** unique or primary key constraint */
    ChannelStackCreateJobStackLogicalResourceIdKey = "ChannelStackCreateJob_stackLogicalResourceId_key",
}

/** input type for inserting data into table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly stackLogicalResourceId?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_ChannelStackCreateJob_Max_Fields = {
    readonly __typename?: "job_queues_ChannelStackCreateJob_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly stackLogicalResourceId?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly stackLogicalResourceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_ChannelStackCreateJob_Min_Fields = {
    readonly __typename?: "job_queues_ChannelStackCreateJob_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly stackLogicalResourceId?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly stackLogicalResourceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Mutation_Response = {
    readonly __typename?: "job_queues_ChannelStackCreateJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_ChannelStackCreateJob>;
};

/** input type for inserting object relation for remote table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Obj_Rel_Insert_Input = {
    readonly data: Job_Queues_ChannelStackCreateJob_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** on_conflict condition type for table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_On_Conflict = {
    readonly constraint: Job_Queues_ChannelStackCreateJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_ChannelStackCreateJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ChannelStackCreateJob". */
export type Job_Queues_ChannelStackCreateJob_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    readonly jobStatusName?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly stackLogicalResourceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ChannelStackCreateJob */
export type Job_Queues_ChannelStackCreateJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "job_queues.ChannelStackCreateJob" */
export enum Job_Queues_ChannelStackCreateJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    RoomId = "roomId",
    /** column name */
    StackLogicalResourceId = "stackLogicalResourceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly stackLogicalResourceId?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.ChannelStackCreateJob" */
export enum Job_Queues_ChannelStackCreateJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    RoomId = "roomId",
    /** column name */
    StackLogicalResourceId = "stackLogicalResourceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob = {
    readonly __typename?: "job_queues_ChannelStackDeleteJob";
    readonly cloudFormationStackArn: Scalars["String"];
    readonly createdAt: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly jobStatusName: Job_Queues_JobStatus_Enum;
    readonly mediaLiveChannelId: Scalars["String"];
    readonly message?: Maybe<Scalars["String"]>;
    readonly updatedAt: Scalars["timestamptz"];
};

/** aggregated selection of "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Aggregate = {
    readonly __typename?: "job_queues_ChannelStackDeleteJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_ChannelStackDeleteJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_ChannelStackDeleteJob>;
};

/** aggregate fields of "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_ChannelStackDeleteJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_ChannelStackDeleteJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_ChannelStackDeleteJob_Min_Fields>;
};

/** aggregate fields of "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.ChannelStackDeleteJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_ChannelStackDeleteJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Bool_Exp>>;
    readonly cloudFormationStackArn?: InputMaybe<String_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    readonly mediaLiveChannelId?: InputMaybe<String_Comparison_Exp>;
    readonly message?: InputMaybe<String_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ChannelStackDeleteJob" */
export enum Job_Queues_ChannelStackDeleteJob_Constraint {
    /** unique or primary key constraint */
    ChannelStackDeleteJobPkey = "ChannelStackDeleteJob_pkey",
}

/** input type for inserting data into table "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Insert_Input = {
    readonly cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_ChannelStackDeleteJob_Max_Fields = {
    readonly __typename?: "job_queues_ChannelStackDeleteJob_max_fields";
    readonly cloudFormationStackArn?: Maybe<Scalars["String"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly mediaLiveChannelId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_ChannelStackDeleteJob_Min_Fields = {
    readonly __typename?: "job_queues_ChannelStackDeleteJob_min_fields";
    readonly cloudFormationStackArn?: Maybe<Scalars["String"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly mediaLiveChannelId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Mutation_Response = {
    readonly __typename?: "job_queues_ChannelStackDeleteJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_ChannelStackDeleteJob>;
};

/** on_conflict condition type for table "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_On_Conflict = {
    readonly constraint: Job_Queues_ChannelStackDeleteJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ChannelStackDeleteJob". */
export type Job_Queues_ChannelStackDeleteJob_Order_By = {
    readonly cloudFormationStackArn?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobStatusName?: InputMaybe<Order_By>;
    readonly mediaLiveChannelId?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ChannelStackDeleteJob */
export type Job_Queues_ChannelStackDeleteJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "job_queues.ChannelStackDeleteJob" */
export enum Job_Queues_ChannelStackDeleteJob_Select_Column {
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    Message = "message",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "job_queues.ChannelStackDeleteJob" */
export type Job_Queues_ChannelStackDeleteJob_Set_Input = {
    readonly cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.ChannelStackDeleteJob" */
export enum Job_Queues_ChannelStackDeleteJob_Update_Column {
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    Message = "message",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob = {
    readonly __typename?: "job_queues_ChannelStackUpdateJob";
    /** An object relationship */
    readonly channelStack?: Maybe<Video_ChannelStack>;
    readonly channelStackId?: Maybe<Scalars["uuid"]>;
    readonly cloudFormationStackArn: Scalars["String"];
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly jobStatusName: Job_Queues_JobStatus_Enum;
    readonly mediaLiveChannelId: Scalars["String"];
    readonly message?: Maybe<Scalars["String"]>;
    readonly newRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly newRtmpBInputId?: Maybe<Scalars["String"]>;
    readonly newRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    readonly newRtmpOutputUri?: Maybe<Scalars["String"]>;
    readonly newRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly newRtmpRoomInputId?: Maybe<Scalars["String"]>;
    readonly oldRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly oldRtmpBInputId?: Maybe<Scalars["String"]>;
    readonly oldRtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    readonly oldRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    readonly oldRtmpOutputUri?: Maybe<Scalars["String"]>;
    readonly oldRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly oldRtmpRoomInputId?: Maybe<Scalars["String"]>;
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Aggregate = {
    readonly __typename?: "job_queues_ChannelStackUpdateJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_ChannelStackUpdateJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_ChannelStackUpdateJob>;
};

/** aggregate fields of "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_ChannelStackUpdateJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_ChannelStackUpdateJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_ChannelStackUpdateJob_Min_Fields>;
};

/** aggregate fields of "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Max_Order_By>;
    readonly min?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Min_Order_By>;
};

/** input type for inserting array relation for remote table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Job_Queues_ChannelStackUpdateJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.ChannelStackUpdateJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_ChannelStackUpdateJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Bool_Exp>>;
    readonly channelStack?: InputMaybe<Video_ChannelStack_Bool_Exp>;
    readonly channelStackId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly cloudFormationStackArn?: InputMaybe<String_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    readonly mediaLiveChannelId?: InputMaybe<String_Comparison_Exp>;
    readonly message?: InputMaybe<String_Comparison_Exp>;
    readonly newRtmpBInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly newRtmpBInputId?: InputMaybe<String_Comparison_Exp>;
    readonly newRtmpOutputStreamKey?: InputMaybe<String_Comparison_Exp>;
    readonly newRtmpOutputUri?: InputMaybe<String_Comparison_Exp>;
    readonly newRtmpRoomInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly newRtmpRoomInputId?: InputMaybe<String_Comparison_Exp>;
    readonly oldRtmpBInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly oldRtmpBInputId?: InputMaybe<String_Comparison_Exp>;
    readonly oldRtmpOutputDestinationId?: InputMaybe<String_Comparison_Exp>;
    readonly oldRtmpOutputStreamKey?: InputMaybe<String_Comparison_Exp>;
    readonly oldRtmpOutputUri?: InputMaybe<String_Comparison_Exp>;
    readonly oldRtmpRoomInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly oldRtmpRoomInputId?: InputMaybe<String_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ChannelStackUpdateJob" */
export enum Job_Queues_ChannelStackUpdateJob_Constraint {
    /** unique or primary key constraint */
    ChannelStackUpdateJobPkey = "ChannelStackUpdateJob_pkey",
}

/** input type for inserting data into table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Insert_Input = {
    readonly channelStack?: InputMaybe<Video_ChannelStack_Obj_Rel_Insert_Input>;
    readonly channelStackId?: InputMaybe<Scalars["uuid"]>;
    readonly cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly newRtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly newRtmpBInputId?: InputMaybe<Scalars["String"]>;
    readonly newRtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    readonly newRtmpOutputUri?: InputMaybe<Scalars["String"]>;
    readonly newRtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly newRtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpBInputId?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpOutputDestinationId?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpOutputUri?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_ChannelStackUpdateJob_Max_Fields = {
    readonly __typename?: "job_queues_ChannelStackUpdateJob_max_fields";
    readonly channelStackId?: Maybe<Scalars["uuid"]>;
    readonly cloudFormationStackArn?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly mediaLiveChannelId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly newRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly newRtmpBInputId?: Maybe<Scalars["String"]>;
    readonly newRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    readonly newRtmpOutputUri?: Maybe<Scalars["String"]>;
    readonly newRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly newRtmpRoomInputId?: Maybe<Scalars["String"]>;
    readonly oldRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly oldRtmpBInputId?: Maybe<Scalars["String"]>;
    readonly oldRtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    readonly oldRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    readonly oldRtmpOutputUri?: Maybe<Scalars["String"]>;
    readonly oldRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly oldRtmpRoomInputId?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Max_Order_By = {
    readonly channelStackId?: InputMaybe<Order_By>;
    readonly cloudFormationStackArn?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly mediaLiveChannelId?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly newRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    readonly newRtmpBInputId?: InputMaybe<Order_By>;
    readonly newRtmpOutputStreamKey?: InputMaybe<Order_By>;
    readonly newRtmpOutputUri?: InputMaybe<Order_By>;
    readonly newRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    readonly newRtmpRoomInputId?: InputMaybe<Order_By>;
    readonly oldRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    readonly oldRtmpBInputId?: InputMaybe<Order_By>;
    readonly oldRtmpOutputDestinationId?: InputMaybe<Order_By>;
    readonly oldRtmpOutputStreamKey?: InputMaybe<Order_By>;
    readonly oldRtmpOutputUri?: InputMaybe<Order_By>;
    readonly oldRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    readonly oldRtmpRoomInputId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_ChannelStackUpdateJob_Min_Fields = {
    readonly __typename?: "job_queues_ChannelStackUpdateJob_min_fields";
    readonly channelStackId?: Maybe<Scalars["uuid"]>;
    readonly cloudFormationStackArn?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly mediaLiveChannelId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly newRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly newRtmpBInputId?: Maybe<Scalars["String"]>;
    readonly newRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    readonly newRtmpOutputUri?: Maybe<Scalars["String"]>;
    readonly newRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly newRtmpRoomInputId?: Maybe<Scalars["String"]>;
    readonly oldRtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly oldRtmpBInputId?: Maybe<Scalars["String"]>;
    readonly oldRtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    readonly oldRtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    readonly oldRtmpOutputUri?: Maybe<Scalars["String"]>;
    readonly oldRtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly oldRtmpRoomInputId?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Min_Order_By = {
    readonly channelStackId?: InputMaybe<Order_By>;
    readonly cloudFormationStackArn?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly mediaLiveChannelId?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly newRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    readonly newRtmpBInputId?: InputMaybe<Order_By>;
    readonly newRtmpOutputStreamKey?: InputMaybe<Order_By>;
    readonly newRtmpOutputUri?: InputMaybe<Order_By>;
    readonly newRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    readonly newRtmpRoomInputId?: InputMaybe<Order_By>;
    readonly oldRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    readonly oldRtmpBInputId?: InputMaybe<Order_By>;
    readonly oldRtmpOutputDestinationId?: InputMaybe<Order_By>;
    readonly oldRtmpOutputStreamKey?: InputMaybe<Order_By>;
    readonly oldRtmpOutputUri?: InputMaybe<Order_By>;
    readonly oldRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    readonly oldRtmpRoomInputId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Mutation_Response = {
    readonly __typename?: "job_queues_ChannelStackUpdateJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_ChannelStackUpdateJob>;
};

/** on_conflict condition type for table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_On_Conflict = {
    readonly constraint: Job_Queues_ChannelStackUpdateJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ChannelStackUpdateJob". */
export type Job_Queues_ChannelStackUpdateJob_Order_By = {
    readonly channelStack?: InputMaybe<Video_ChannelStack_Order_By>;
    readonly channelStackId?: InputMaybe<Order_By>;
    readonly cloudFormationStackArn?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobStatusName?: InputMaybe<Order_By>;
    readonly mediaLiveChannelId?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly newRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    readonly newRtmpBInputId?: InputMaybe<Order_By>;
    readonly newRtmpOutputStreamKey?: InputMaybe<Order_By>;
    readonly newRtmpOutputUri?: InputMaybe<Order_By>;
    readonly newRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    readonly newRtmpRoomInputId?: InputMaybe<Order_By>;
    readonly oldRtmpBInputAttachmentName?: InputMaybe<Order_By>;
    readonly oldRtmpBInputId?: InputMaybe<Order_By>;
    readonly oldRtmpOutputDestinationId?: InputMaybe<Order_By>;
    readonly oldRtmpOutputStreamKey?: InputMaybe<Order_By>;
    readonly oldRtmpOutputUri?: InputMaybe<Order_By>;
    readonly oldRtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    readonly oldRtmpRoomInputId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ChannelStackUpdateJob */
export type Job_Queues_ChannelStackUpdateJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "job_queues.ChannelStackUpdateJob" */
export enum Job_Queues_ChannelStackUpdateJob_Select_Column {
    /** column name */
    ChannelStackId = "channelStackId",
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    Message = "message",
    /** column name */
    NewRtmpBInputAttachmentName = "newRtmpBInputAttachmentName",
    /** column name */
    NewRtmpBInputId = "newRtmpBInputId",
    /** column name */
    NewRtmpOutputStreamKey = "newRtmpOutputStreamKey",
    /** column name */
    NewRtmpOutputUri = "newRtmpOutputUri",
    /** column name */
    NewRtmpRoomInputAttachmentName = "newRtmpRoomInputAttachmentName",
    /** column name */
    NewRtmpRoomInputId = "newRtmpRoomInputId",
    /** column name */
    OldRtmpBInputAttachmentName = "oldRtmpBInputAttachmentName",
    /** column name */
    OldRtmpBInputId = "oldRtmpBInputId",
    /** column name */
    OldRtmpOutputDestinationId = "oldRtmpOutputDestinationId",
    /** column name */
    OldRtmpOutputStreamKey = "oldRtmpOutputStreamKey",
    /** column name */
    OldRtmpOutputUri = "oldRtmpOutputUri",
    /** column name */
    OldRtmpRoomInputAttachmentName = "oldRtmpRoomInputAttachmentName",
    /** column name */
    OldRtmpRoomInputId = "oldRtmpRoomInputId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.ChannelStackUpdateJob" */
export type Job_Queues_ChannelStackUpdateJob_Set_Input = {
    readonly channelStackId?: InputMaybe<Scalars["uuid"]>;
    readonly cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly newRtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly newRtmpBInputId?: InputMaybe<Scalars["String"]>;
    readonly newRtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    readonly newRtmpOutputUri?: InputMaybe<Scalars["String"]>;
    readonly newRtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly newRtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpBInputId?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpOutputDestinationId?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpOutputUri?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly oldRtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.ChannelStackUpdateJob" */
export enum Job_Queues_ChannelStackUpdateJob_Update_Column {
    /** column name */
    ChannelStackId = "channelStackId",
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    Message = "message",
    /** column name */
    NewRtmpBInputAttachmentName = "newRtmpBInputAttachmentName",
    /** column name */
    NewRtmpBInputId = "newRtmpBInputId",
    /** column name */
    NewRtmpOutputStreamKey = "newRtmpOutputStreamKey",
    /** column name */
    NewRtmpOutputUri = "newRtmpOutputUri",
    /** column name */
    NewRtmpRoomInputAttachmentName = "newRtmpRoomInputAttachmentName",
    /** column name */
    NewRtmpRoomInputId = "newRtmpRoomInputId",
    /** column name */
    OldRtmpBInputAttachmentName = "oldRtmpBInputAttachmentName",
    /** column name */
    OldRtmpBInputId = "oldRtmpBInputId",
    /** column name */
    OldRtmpOutputDestinationId = "oldRtmpOutputDestinationId",
    /** column name */
    OldRtmpOutputStreamKey = "oldRtmpOutputStreamKey",
    /** column name */
    OldRtmpOutputUri = "oldRtmpOutputUri",
    /** column name */
    OldRtmpRoomInputAttachmentName = "oldRtmpRoomInputAttachmentName",
    /** column name */
    OldRtmpRoomInputId = "oldRtmpRoomInputId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob = {
    readonly __typename?: "job_queues_CombineVideosJob";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    readonly created_at: Scalars["timestamptz"];
    readonly data: Scalars["jsonb"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly jobStatus: Job_Queues_JobStatus;
    readonly jobStatusName: Job_Queues_JobStatus_Enum;
    readonly mediaConvertJobId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly outputName: Scalars["String"];
    /** An object relationship */
    readonly registrant?: Maybe<Registrant_Registrant>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJobDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate = {
    readonly __typename?: "job_queues_CombineVideosJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_CombineVideosJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_CombineVideosJob>;
};

/** aggregate fields of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_CombineVideosJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_CombineVideosJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_CombineVideosJob_Min_Fields>;
};

/** aggregate fields of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CombineVideosJob_Append_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "job_queues.CombineVideosJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_CombineVideosJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdByRegistrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly data?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    readonly mediaConvertJobId?: InputMaybe<String_Comparison_Exp>;
    readonly message?: InputMaybe<String_Comparison_Exp>;
    readonly outputName?: InputMaybe<String_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.CombineVideosJob" */
export enum Job_Queues_CombineVideosJob_Constraint {
    /** unique or primary key constraint */
    CombineVideosJobPkey = "CombineVideosJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_CombineVideosJob_Delete_At_Path_Input = {
    readonly data?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_CombineVideosJob_Delete_Elem_Input = {
    readonly data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_CombineVideosJob_Delete_Key_Input = {
    readonly data?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdByRegistrantId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly mediaConvertJobId?: InputMaybe<Scalars["String"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly outputName?: InputMaybe<Scalars["String"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_CombineVideosJob_Max_Fields = {
    readonly __typename?: "job_queues_CombineVideosJob_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly mediaConvertJobId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly outputName?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_CombineVideosJob_Min_Fields = {
    readonly __typename?: "job_queues_CombineVideosJob_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly mediaConvertJobId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly outputName?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Mutation_Response = {
    readonly __typename?: "job_queues_CombineVideosJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_CombineVideosJob>;
};

/** on_conflict condition type for table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_On_Conflict = {
    readonly constraint: Job_Queues_CombineVideosJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_CombineVideosJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.CombineVideosJob". */
export type Job_Queues_CombineVideosJob_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdByRegistrantId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly data?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    readonly jobStatusName?: InputMaybe<Order_By>;
    readonly mediaConvertJobId?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly outputName?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_CombineVideosJob */
export type Job_Queues_CombineVideosJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CombineVideosJob_Prepend_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.CombineVideosJob" */
export enum Job_Queues_CombineVideosJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedByRegistrantId = "createdByRegistrantId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaConvertJobId = "mediaConvertJobId",
    /** column name */
    Message = "message",
    /** column name */
    OutputName = "outputName",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdByRegistrantId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly mediaConvertJobId?: InputMaybe<Scalars["String"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly outputName?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.CombineVideosJob" */
export enum Job_Queues_CombineVideosJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedByRegistrantId = "createdByRegistrantId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaConvertJobId = "mediaConvertJobId",
    /** column name */
    Message = "message",
    /** column name */
    OutputName = "outputName",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob = {
    readonly __typename?: "job_queues_CustomEmailJob";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly markdownBody: Scalars["String"];
    readonly processed: Scalars["Boolean"];
    readonly registrantIds: Scalars["jsonb"];
    /** An object relationship */
    readonly subconference?: Maybe<Conference_Subconference>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly subject: Scalars["String"];
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJobRegistrantIdsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate = {
    readonly __typename?: "job_queues_CustomEmailJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_CustomEmailJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_CustomEmailJob>;
};

/** aggregate fields of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_CustomEmailJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_CustomEmailJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_CustomEmailJob_Min_Fields>;
};

/** aggregate fields of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CustomEmailJob_Append_Input = {
    readonly registrantIds?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "job_queues.CustomEmailJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_CustomEmailJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly markdownBody?: InputMaybe<String_Comparison_Exp>;
    readonly processed?: InputMaybe<Boolean_Comparison_Exp>;
    readonly registrantIds?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly subject?: InputMaybe<String_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.CustomEmailJob" */
export enum Job_Queues_CustomEmailJob_Constraint {
    /** unique or primary key constraint */
    CustomEmailJobPkey = "CustomEmailJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_CustomEmailJob_Delete_At_Path_Input = {
    readonly registrantIds?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_CustomEmailJob_Delete_Elem_Input = {
    readonly registrantIds?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_CustomEmailJob_Delete_Key_Input = {
    readonly registrantIds?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly markdownBody?: InputMaybe<Scalars["String"]>;
    readonly processed?: InputMaybe<Scalars["Boolean"]>;
    readonly registrantIds?: InputMaybe<Scalars["jsonb"]>;
    readonly subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly subject?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_CustomEmailJob_Max_Fields = {
    readonly __typename?: "job_queues_CustomEmailJob_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly markdownBody?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly subject?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_CustomEmailJob_Min_Fields = {
    readonly __typename?: "job_queues_CustomEmailJob_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly markdownBody?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly subject?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Mutation_Response = {
    readonly __typename?: "job_queues_CustomEmailJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_CustomEmailJob>;
};

/** on_conflict condition type for table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_On_Conflict = {
    readonly constraint: Job_Queues_CustomEmailJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_CustomEmailJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.CustomEmailJob". */
export type Job_Queues_CustomEmailJob_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly markdownBody?: InputMaybe<Order_By>;
    readonly processed?: InputMaybe<Order_By>;
    readonly registrantIds?: InputMaybe<Order_By>;
    readonly subconference?: InputMaybe<Conference_Subconference_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly subject?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_CustomEmailJob */
export type Job_Queues_CustomEmailJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CustomEmailJob_Prepend_Input = {
    readonly registrantIds?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.CustomEmailJob" */
export enum Job_Queues_CustomEmailJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    MarkdownBody = "markdownBody",
    /** column name */
    Processed = "processed",
    /** column name */
    RegistrantIds = "registrantIds",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Subject = "subject",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly markdownBody?: InputMaybe<Scalars["String"]>;
    readonly processed?: InputMaybe<Scalars["Boolean"]>;
    readonly registrantIds?: InputMaybe<Scalars["jsonb"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly subject?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.CustomEmailJob" */
export enum Job_Queues_CustomEmailJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    MarkdownBody = "markdownBody",
    /** column name */
    Processed = "processed",
    /** column name */
    RegistrantIds = "registrantIds",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Subject = "subject",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJob = {
    readonly __typename?: "job_queues_ImportJob";
    readonly completed_at?: Maybe<Scalars["timestamptz"]>;
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdBy?: Maybe<Scalars["uuid"]>;
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly creator?: Maybe<Registrant_Registrant>;
    readonly data: Scalars["jsonb"];
    readonly errors?: Maybe<Scalars["jsonb"]>;
    readonly id: Scalars["uuid"];
    readonly options: Scalars["jsonb"];
    /** An array relationship */
    readonly outputs: ReadonlyArray<Job_Queues_ImportJobOutput>;
    /** An aggregate relationship */
    readonly outputs_aggregate: Job_Queues_ImportJobOutput_Aggregate;
    readonly progress: Scalars["Int"];
    readonly progressMaximum: Scalars["Int"];
    readonly status: Scalars["String"];
    /** An object relationship */
    readonly subconference?: Maybe<Conference_Subconference>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobErrorsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobOptionsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobOutputsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

/** columns and relationships of "job_queues.ImportJob" */
export type Job_Queues_ImportJobOutputs_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

/** columns and relationships of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput = {
    readonly __typename?: "job_queues_ImportJobOutput";
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly jobId: Scalars["uuid"];
    readonly name: Scalars["String"];
    readonly updated_at: Scalars["timestamptz"];
    readonly value: Scalars["jsonb"];
};

/** columns and relationships of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutputValueArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Aggregate = {
    readonly __typename?: "job_queues_ImportJobOutput_aggregate";
    readonly aggregate?: Maybe<Job_Queues_ImportJobOutput_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_ImportJobOutput>;
};

/** aggregate fields of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Aggregate_Fields = {
    readonly __typename?: "job_queues_ImportJobOutput_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_ImportJobOutput_Max_Fields>;
    readonly min?: Maybe<Job_Queues_ImportJobOutput_Min_Fields>;
};

/** aggregate fields of "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Job_Queues_ImportJobOutput_Max_Order_By>;
    readonly min?: InputMaybe<Job_Queues_ImportJobOutput_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_ImportJobOutput_Append_Input = {
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Job_Queues_ImportJobOutput_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Job_Queues_ImportJobOutput_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.ImportJobOutput". All fields are combined with a logical 'AND'. */
export type Job_Queues_ImportJobOutput_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly value?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ImportJobOutput" */
export enum Job_Queues_ImportJobOutput_Constraint {
    /** unique or primary key constraint */
    ImportJobOutputJobIdNameKey = "ImportJobOutput_jobId_name_key",
    /** unique or primary key constraint */
    ImportJobOutputPkey = "ImportJobOutput_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_ImportJobOutput_Delete_At_Path_Input = {
    readonly value?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_ImportJobOutput_Delete_Elem_Input = {
    readonly value?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_ImportJobOutput_Delete_Key_Input = {
    readonly value?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobId?: InputMaybe<Scalars["uuid"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type Job_Queues_ImportJobOutput_Max_Fields = {
    readonly __typename?: "job_queues_ImportJobOutput_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly jobId?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobId?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_ImportJobOutput_Min_Fields = {
    readonly __typename?: "job_queues_ImportJobOutput_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly jobId?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobId?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Mutation_Response = {
    readonly __typename?: "job_queues_ImportJobOutput_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_ImportJobOutput>;
};

/** on_conflict condition type for table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_On_Conflict = {
    readonly constraint: Job_Queues_ImportJobOutput_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_ImportJobOutput_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ImportJobOutput". */
export type Job_Queues_ImportJobOutput_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobId?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ImportJobOutput */
export type Job_Queues_ImportJobOutput_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_ImportJobOutput_Prepend_Input = {
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.ImportJobOutput" */
export enum Job_Queues_ImportJobOutput_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobId = "jobId",
    /** column name */
    Name = "name",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Value = "value",
}

/** input type for updating data in table "job_queues.ImportJobOutput" */
export type Job_Queues_ImportJobOutput_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobId?: InputMaybe<Scalars["uuid"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** update columns of table "job_queues.ImportJobOutput" */
export enum Job_Queues_ImportJobOutput_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    JobId = "jobId",
    /** column name */
    Name = "name",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Value = "value",
}

/** aggregated selection of "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Aggregate = {
    readonly __typename?: "job_queues_ImportJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_ImportJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_ImportJob>;
};

/** aggregate fields of "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_ImportJob_aggregate_fields";
    readonly avg?: Maybe<Job_Queues_ImportJob_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_ImportJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_ImportJob_Min_Fields>;
    readonly stddev?: Maybe<Job_Queues_ImportJob_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Job_Queues_ImportJob_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Job_Queues_ImportJob_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Job_Queues_ImportJob_Sum_Fields>;
    readonly var_pop?: Maybe<Job_Queues_ImportJob_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Job_Queues_ImportJob_Var_Samp_Fields>;
    readonly variance?: Maybe<Job_Queues_ImportJob_Variance_Fields>;
};

/** aggregate fields of "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_ImportJob_Append_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly errors?: InputMaybe<Scalars["jsonb"]>;
    readonly options?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate avg on columns */
export type Job_Queues_ImportJob_Avg_Fields = {
    readonly __typename?: "job_queues_ImportJob_avg_fields";
    readonly progress?: Maybe<Scalars["Float"]>;
    readonly progressMaximum?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "job_queues.ImportJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_ImportJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Bool_Exp>>;
    readonly completed_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdBy?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly creator?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly data?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly errors?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly options?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly outputs?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
    readonly progress?: InputMaybe<Int_Comparison_Exp>;
    readonly progressMaximum?: InputMaybe<Int_Comparison_Exp>;
    readonly status?: InputMaybe<String_Comparison_Exp>;
    readonly subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ImportJob" */
export enum Job_Queues_ImportJob_Constraint {
    /** unique or primary key constraint */
    ImportJobConferenceIdStatusKey = "ImportJob_conferenceId_status_key",
    /** unique or primary key constraint */
    ImportJobConferenceIdSubconferenceIdStatusKey = "ImportJob_conferenceId_subconferenceId_status_key",
    /** unique or primary key constraint */
    ImportJobPkey = "ImportJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_ImportJob_Delete_At_Path_Input = {
    readonly data?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    readonly errors?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    readonly options?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_ImportJob_Delete_Elem_Input = {
    readonly data?: InputMaybe<Scalars["Int"]>;
    readonly errors?: InputMaybe<Scalars["Int"]>;
    readonly options?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_ImportJob_Delete_Key_Input = {
    readonly data?: InputMaybe<Scalars["String"]>;
    readonly errors?: InputMaybe<Scalars["String"]>;
    readonly options?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Inc_Input = {
    readonly progress?: InputMaybe<Scalars["Int"]>;
    readonly progressMaximum?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Insert_Input = {
    readonly completed_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdBy?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly creator?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly errors?: InputMaybe<Scalars["jsonb"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly options?: InputMaybe<Scalars["jsonb"]>;
    readonly outputs?: InputMaybe<Job_Queues_ImportJobOutput_Arr_Rel_Insert_Input>;
    readonly progress?: InputMaybe<Scalars["Int"]>;
    readonly progressMaximum?: InputMaybe<Scalars["Int"]>;
    readonly status?: InputMaybe<Scalars["String"]>;
    readonly subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_ImportJob_Max_Fields = {
    readonly __typename?: "job_queues_ImportJob_max_fields";
    readonly completed_at?: Maybe<Scalars["timestamptz"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdBy?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly progress?: Maybe<Scalars["Int"]>;
    readonly progressMaximum?: Maybe<Scalars["Int"]>;
    readonly status?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_ImportJob_Min_Fields = {
    readonly __typename?: "job_queues_ImportJob_min_fields";
    readonly completed_at?: Maybe<Scalars["timestamptz"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdBy?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly progress?: Maybe<Scalars["Int"]>;
    readonly progressMaximum?: Maybe<Scalars["Int"]>;
    readonly status?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Mutation_Response = {
    readonly __typename?: "job_queues_ImportJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_ImportJob>;
};

/** on_conflict condition type for table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_On_Conflict = {
    readonly constraint: Job_Queues_ImportJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_ImportJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.ImportJob". */
export type Job_Queues_ImportJob_Order_By = {
    readonly completed_at?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdBy?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly creator?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly data?: InputMaybe<Order_By>;
    readonly errors?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly options?: InputMaybe<Order_By>;
    readonly outputs_aggregate?: InputMaybe<Job_Queues_ImportJobOutput_Aggregate_Order_By>;
    readonly progress?: InputMaybe<Order_By>;
    readonly progressMaximum?: InputMaybe<Order_By>;
    readonly status?: InputMaybe<Order_By>;
    readonly subconference?: InputMaybe<Conference_Subconference_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_ImportJob */
export type Job_Queues_ImportJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_ImportJob_Prepend_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly errors?: InputMaybe<Scalars["jsonb"]>;
    readonly options?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.ImportJob" */
export enum Job_Queues_ImportJob_Select_Column {
    /** column name */
    CompletedAt = "completed_at",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedBy = "createdBy",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    Errors = "errors",
    /** column name */
    Id = "id",
    /** column name */
    Options = "options",
    /** column name */
    Progress = "progress",
    /** column name */
    ProgressMaximum = "progressMaximum",
    /** column name */
    Status = "status",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.ImportJob" */
export type Job_Queues_ImportJob_Set_Input = {
    readonly completed_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdBy?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly errors?: InputMaybe<Scalars["jsonb"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly options?: InputMaybe<Scalars["jsonb"]>;
    readonly progress?: InputMaybe<Scalars["Int"]>;
    readonly progressMaximum?: InputMaybe<Scalars["Int"]>;
    readonly status?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Job_Queues_ImportJob_Stddev_Fields = {
    readonly __typename?: "job_queues_ImportJob_stddev_fields";
    readonly progress?: Maybe<Scalars["Float"]>;
    readonly progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Job_Queues_ImportJob_Stddev_Pop_Fields = {
    readonly __typename?: "job_queues_ImportJob_stddev_pop_fields";
    readonly progress?: Maybe<Scalars["Float"]>;
    readonly progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Job_Queues_ImportJob_Stddev_Samp_Fields = {
    readonly __typename?: "job_queues_ImportJob_stddev_samp_fields";
    readonly progress?: Maybe<Scalars["Float"]>;
    readonly progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Job_Queues_ImportJob_Sum_Fields = {
    readonly __typename?: "job_queues_ImportJob_sum_fields";
    readonly progress?: Maybe<Scalars["Int"]>;
    readonly progressMaximum?: Maybe<Scalars["Int"]>;
};

/** update columns of table "job_queues.ImportJob" */
export enum Job_Queues_ImportJob_Update_Column {
    /** column name */
    CompletedAt = "completed_at",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedBy = "createdBy",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    Errors = "errors",
    /** column name */
    Id = "id",
    /** column name */
    Options = "options",
    /** column name */
    Progress = "progress",
    /** column name */
    ProgressMaximum = "progressMaximum",
    /** column name */
    Status = "status",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Job_Queues_ImportJob_Var_Pop_Fields = {
    readonly __typename?: "job_queues_ImportJob_var_pop_fields";
    readonly progress?: Maybe<Scalars["Float"]>;
    readonly progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Job_Queues_ImportJob_Var_Samp_Fields = {
    readonly __typename?: "job_queues_ImportJob_var_samp_fields";
    readonly progress?: Maybe<Scalars["Float"]>;
    readonly progressMaximum?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Job_Queues_ImportJob_Variance_Fields = {
    readonly __typename?: "job_queues_ImportJob_variance_fields";
    readonly progress?: Maybe<Scalars["Float"]>;
    readonly progressMaximum?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob = {
    readonly __typename?: "job_queues_InvitationEmailJob";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly processed: Scalars["Boolean"];
    readonly registrantIds: Scalars["jsonb"];
    readonly sendRepeat: Scalars["Boolean"];
    readonly updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJobRegistrantIdsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate = {
    readonly __typename?: "job_queues_InvitationEmailJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_InvitationEmailJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_InvitationEmailJob>;
};

/** aggregate fields of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_InvitationEmailJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_InvitationEmailJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_InvitationEmailJob_Min_Fields>;
};

/** aggregate fields of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_InvitationEmailJob_Append_Input = {
    readonly registrantIds?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "job_queues.InvitationEmailJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_InvitationEmailJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly processed?: InputMaybe<Boolean_Comparison_Exp>;
    readonly registrantIds?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly sendRepeat?: InputMaybe<Boolean_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.InvitationEmailJob" */
export enum Job_Queues_InvitationEmailJob_Constraint {
    /** unique or primary key constraint */
    InvitationEmailJobsPkey = "InvitationEmailJobs_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_InvitationEmailJob_Delete_At_Path_Input = {
    readonly registrantIds?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_InvitationEmailJob_Delete_Elem_Input = {
    readonly registrantIds?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_InvitationEmailJob_Delete_Key_Input = {
    readonly registrantIds?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly processed?: InputMaybe<Scalars["Boolean"]>;
    readonly registrantIds?: InputMaybe<Scalars["jsonb"]>;
    readonly sendRepeat?: InputMaybe<Scalars["Boolean"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_InvitationEmailJob_Max_Fields = {
    readonly __typename?: "job_queues_InvitationEmailJob_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_InvitationEmailJob_Min_Fields = {
    readonly __typename?: "job_queues_InvitationEmailJob_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Mutation_Response = {
    readonly __typename?: "job_queues_InvitationEmailJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_InvitationEmailJob>;
};

/** on_conflict condition type for table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_On_Conflict = {
    readonly constraint: Job_Queues_InvitationEmailJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_InvitationEmailJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.InvitationEmailJob". */
export type Job_Queues_InvitationEmailJob_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly processed?: InputMaybe<Order_By>;
    readonly registrantIds?: InputMaybe<Order_By>;
    readonly sendRepeat?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_InvitationEmailJob */
export type Job_Queues_InvitationEmailJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_InvitationEmailJob_Prepend_Input = {
    readonly registrantIds?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.InvitationEmailJob" */
export enum Job_Queues_InvitationEmailJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Processed = "processed",
    /** column name */
    RegistrantIds = "registrantIds",
    /** column name */
    SendRepeat = "sendRepeat",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly processed?: InputMaybe<Scalars["Boolean"]>;
    readonly registrantIds?: InputMaybe<Scalars["jsonb"]>;
    readonly sendRepeat?: InputMaybe<Scalars["Boolean"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.InvitationEmailJob" */
export enum Job_Queues_InvitationEmailJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Processed = "processed",
    /** column name */
    RegistrantIds = "registrantIds",
    /** column name */
    SendRepeat = "sendRepeat",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "job_queues.JobStatus" */
export type Job_Queues_JobStatus = {
    readonly __typename?: "job_queues_JobStatus";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Aggregate = {
    readonly __typename?: "job_queues_JobStatus_aggregate";
    readonly aggregate?: Maybe<Job_Queues_JobStatus_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_JobStatus>;
};

/** aggregate fields of "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Aggregate_Fields = {
    readonly __typename?: "job_queues_JobStatus_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_JobStatus_Max_Fields>;
    readonly min?: Maybe<Job_Queues_JobStatus_Min_Fields>;
};

/** aggregate fields of "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.JobStatus". All fields are combined with a logical 'AND'. */
export type Job_Queues_JobStatus_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.JobStatus" */
export enum Job_Queues_JobStatus_Constraint {
    /** unique or primary key constraint */
    JobStatusPkey = "JobStatus_pkey",
}

export enum Job_Queues_JobStatus_Enum {
    /** Job completed successfully. */
    Completed = "COMPLETED",
    /** Job is no longer valid. */
    Expired = "EXPIRED",
    /** Job failed during execution. */
    Failed = "FAILED",
    /** Job is currently in progress. */
    InProgress = "IN_PROGRESS",
    /** Job has not yet started execution. */
    New = "NEW",
}

/** Boolean expression to compare columns of type "job_queues_JobStatus_enum". All fields are combined with logical 'AND'. */
export type Job_Queues_JobStatus_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Enum>>;
};

/** input type for inserting data into table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Job_Queues_JobStatus_Max_Fields = {
    readonly __typename?: "job_queues_JobStatus_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Job_Queues_JobStatus_Min_Fields = {
    readonly __typename?: "job_queues_JobStatus_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Mutation_Response = {
    readonly __typename?: "job_queues_JobStatus_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_JobStatus>;
};

/** input type for inserting object relation for remote table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Obj_Rel_Insert_Input = {
    readonly data: Job_Queues_JobStatus_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Job_Queues_JobStatus_On_Conflict>;
};

/** on_conflict condition type for table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_On_Conflict = {
    readonly constraint: Job_Queues_JobStatus_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_JobStatus_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.JobStatus". */
export type Job_Queues_JobStatus_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_JobStatus */
export type Job_Queues_JobStatus_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "job_queues.JobStatus" */
export enum Job_Queues_JobStatus_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "job_queues.JobStatus" */
export type Job_Queues_JobStatus_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "job_queues.JobStatus" */
export enum Job_Queues_JobStatus_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob = {
    readonly __typename?: "job_queues_MediaPackageHarvestJob";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly event: Schedule_Event;
    readonly eventId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly jobStatus: Job_Queues_JobStatus;
    readonly jobStatusName: Job_Queues_JobStatus_Enum;
    readonly mediaPackageHarvestJobId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate = {
    readonly __typename?: "job_queues_MediaPackageHarvestJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_MediaPackageHarvestJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_MediaPackageHarvestJob>;
};

/** aggregate fields of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_MediaPackageHarvestJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_MediaPackageHarvestJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_MediaPackageHarvestJob_Min_Fields>;
};

/** aggregate fields of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.MediaPackageHarvestJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_MediaPackageHarvestJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly event?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly eventId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    readonly mediaPackageHarvestJobId?: InputMaybe<String_Comparison_Exp>;
    readonly message?: InputMaybe<String_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.MediaPackageHarvestJob" */
export enum Job_Queues_MediaPackageHarvestJob_Constraint {
    /** unique or primary key constraint */
    MediaPackageHarvestJobMediaPackageHarvestJobIdKey = "MediaPackageHarvestJob_mediaPackageHarvestJobId_key",
    /** unique or primary key constraint */
    MediaPackageHarvestJobPkey = "MediaPackageHarvestJob_pkey",
}

/** input type for inserting data into table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly mediaPackageHarvestJobId?: InputMaybe<Scalars["String"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_MediaPackageHarvestJob_Max_Fields = {
    readonly __typename?: "job_queues_MediaPackageHarvestJob_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly mediaPackageHarvestJobId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_MediaPackageHarvestJob_Min_Fields = {
    readonly __typename?: "job_queues_MediaPackageHarvestJob_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly mediaPackageHarvestJobId?: Maybe<Scalars["String"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Mutation_Response = {
    readonly __typename?: "job_queues_MediaPackageHarvestJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_MediaPackageHarvestJob>;
};

/** on_conflict condition type for table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_On_Conflict = {
    readonly constraint: Job_Queues_MediaPackageHarvestJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.MediaPackageHarvestJob". */
export type Job_Queues_MediaPackageHarvestJob_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly event?: InputMaybe<Schedule_Event_Order_By>;
    readonly eventId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    readonly jobStatusName?: InputMaybe<Order_By>;
    readonly mediaPackageHarvestJobId?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_MediaPackageHarvestJob */
export type Job_Queues_MediaPackageHarvestJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "job_queues.MediaPackageHarvestJob" */
export enum Job_Queues_MediaPackageHarvestJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaPackageHarvestJobId = "mediaPackageHarvestJobId",
    /** column name */
    Message = "message",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly mediaPackageHarvestJobId?: InputMaybe<Scalars["String"]>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.MediaPackageHarvestJob" */
export enum Job_Queues_MediaPackageHarvestJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    MediaPackageHarvestJobId = "mediaPackageHarvestJobId",
    /** column name */
    Message = "message",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob = {
    readonly __typename?: "job_queues_PrepareJob";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly jobStatus: Job_Queues_JobStatus;
    readonly jobStatusName: Job_Queues_JobStatus_Enum;
    readonly message?: Maybe<Scalars["String"]>;
    readonly updatedAt: Scalars["timestamptz"];
    /** An array relationship */
    readonly videoRenderJobs: ReadonlyArray<Video_VideoRenderJob>;
    /** An aggregate relationship */
    readonly videoRenderJobs_aggregate: Video_VideoRenderJob_Aggregate;
};

/** columns and relationships of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJobVideoRenderJobsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

/** columns and relationships of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJobVideoRenderJobs_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

/** aggregated selection of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Aggregate = {
    readonly __typename?: "job_queues_PrepareJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_PrepareJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_PrepareJob>;
};

/** aggregate fields of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_PrepareJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_PrepareJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_PrepareJob_Min_Fields>;
};

/** aggregate fields of "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.PrepareJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_PrepareJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    readonly message?: InputMaybe<String_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly videoRenderJobs?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

/** unique or primary key constraints on table "job_queues.PrepareJob" */
export enum Job_Queues_PrepareJob_Constraint {
    /** unique or primary key constraint */
    PrepareJobPkey = "PrepareJob_pkey",
}

/** input type for inserting data into table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly videoRenderJobs?: InputMaybe<Video_VideoRenderJob_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Job_Queues_PrepareJob_Max_Fields = {
    readonly __typename?: "job_queues_PrepareJob_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_PrepareJob_Min_Fields = {
    readonly __typename?: "job_queues_PrepareJob_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Mutation_Response = {
    readonly __typename?: "job_queues_PrepareJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_PrepareJob>;
};

/** input type for inserting object relation for remote table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Obj_Rel_Insert_Input = {
    readonly data: Job_Queues_PrepareJob_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Job_Queues_PrepareJob_On_Conflict>;
};

/** on_conflict condition type for table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_On_Conflict = {
    readonly constraint: Job_Queues_PrepareJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_PrepareJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.PrepareJob". */
export type Job_Queues_PrepareJob_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    readonly jobStatusName?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly videoRenderJobs_aggregate?: InputMaybe<Video_VideoRenderJob_Aggregate_Order_By>;
};

/** primary key columns input for table: job_queues_PrepareJob */
export type Job_Queues_PrepareJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "job_queues.PrepareJob" */
export enum Job_Queues_PrepareJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "job_queues.PrepareJob" */
export type Job_Queues_PrepareJob_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.PrepareJob" */
export enum Job_Queues_PrepareJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob = {
    readonly __typename?: "job_queues_PublishVideoJob";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly element: Content_Element;
    readonly elementId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    readonly jobStatusName: Scalars["String"];
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt: Scalars["timestamptz"];
    readonly vimeoVideoUrl?: Maybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate = {
    readonly __typename?: "job_queues_PublishVideoJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_PublishVideoJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_PublishVideoJob>;
};

/** aggregate fields of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_PublishVideoJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_PublishVideoJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_PublishVideoJob_Min_Fields>;
};

/** aggregate fields of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "job_queues.PublishVideoJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_PublishVideoJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly element?: InputMaybe<Content_Element_Bool_Exp>;
    readonly elementId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobStatusName?: InputMaybe<String_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly vimeoVideoUrl?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.PublishVideoJob" */
export enum Job_Queues_PublishVideoJob_Constraint {
    /** unique or primary key constraint */
    PublishVideoJobPkey = "PublishVideoJob_pkey",
}

/** input type for inserting data into table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly vimeoVideoUrl?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Job_Queues_PublishVideoJob_Max_Fields = {
    readonly __typename?: "job_queues_PublishVideoJob_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly jobStatusName?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly vimeoVideoUrl?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Job_Queues_PublishVideoJob_Min_Fields = {
    readonly __typename?: "job_queues_PublishVideoJob_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly jobStatusName?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly vimeoVideoUrl?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Mutation_Response = {
    readonly __typename?: "job_queues_PublishVideoJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_PublishVideoJob>;
};

/** on_conflict condition type for table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_On_Conflict = {
    readonly constraint: Job_Queues_PublishVideoJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_PublishVideoJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.PublishVideoJob". */
export type Job_Queues_PublishVideoJob_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly element?: InputMaybe<Content_Element_Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobStatusName?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly vimeoVideoUrl?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_PublishVideoJob */
export type Job_Queues_PublishVideoJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "job_queues.PublishVideoJob" */
export enum Job_Queues_PublishVideoJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VimeoVideoUrl = "vimeoVideoUrl",
}

/** input type for updating data in table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly vimeoVideoUrl?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "job_queues.PublishVideoJob" */
export enum Job_Queues_PublishVideoJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VimeoVideoUrl = "vimeoVideoUrl",
}

/** columns and relationships of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob = {
    readonly __typename?: "job_queues_SubmissionRequestEmailJob";
    readonly created_at: Scalars["timestamptz"];
    readonly emailTemplate?: Maybe<Scalars["jsonb"]>;
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly person: Collection_ProgramPerson;
    readonly personId: Scalars["uuid"];
    readonly processed: Scalars["Boolean"];
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJobEmailTemplateArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate = {
    readonly __typename?: "job_queues_SubmissionRequestEmailJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_SubmissionRequestEmailJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_SubmissionRequestEmailJob>;
};

/** aggregate fields of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_SubmissionRequestEmailJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_SubmissionRequestEmailJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_SubmissionRequestEmailJob_Min_Fields>;
};

/** aggregate fields of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_SubmissionRequestEmailJob_Append_Input = {
    readonly emailTemplate?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "job_queues.SubmissionRequestEmailJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_SubmissionRequestEmailJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly emailTemplate?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly person?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    readonly personId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly processed?: InputMaybe<Boolean_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.SubmissionRequestEmailJob" */
export enum Job_Queues_SubmissionRequestEmailJob_Constraint {
    /** unique or primary key constraint */
    SubmissionRequestEmailJobPkey = "SubmissionRequestEmailJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_SubmissionRequestEmailJob_Delete_At_Path_Input = {
    readonly emailTemplate?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_SubmissionRequestEmailJob_Delete_Elem_Input = {
    readonly emailTemplate?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_SubmissionRequestEmailJob_Delete_Key_Input = {
    readonly emailTemplate?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly emailTemplate?: InputMaybe<Scalars["jsonb"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly person?: InputMaybe<Collection_ProgramPerson_Obj_Rel_Insert_Input>;
    readonly personId?: InputMaybe<Scalars["uuid"]>;
    readonly processed?: InputMaybe<Scalars["Boolean"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Job_Queues_SubmissionRequestEmailJob_Max_Fields = {
    readonly __typename?: "job_queues_SubmissionRequestEmailJob_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly personId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Job_Queues_SubmissionRequestEmailJob_Min_Fields = {
    readonly __typename?: "job_queues_SubmissionRequestEmailJob_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly personId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Mutation_Response = {
    readonly __typename?: "job_queues_SubmissionRequestEmailJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_SubmissionRequestEmailJob>;
};

/** on_conflict condition type for table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_On_Conflict = {
    readonly constraint: Job_Queues_SubmissionRequestEmailJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.SubmissionRequestEmailJob". */
export type Job_Queues_SubmissionRequestEmailJob_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly emailTemplate?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly person?: InputMaybe<Collection_ProgramPerson_Order_By>;
    readonly personId?: InputMaybe<Order_By>;
    readonly processed?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: job_queues_SubmissionRequestEmailJob */
export type Job_Queues_SubmissionRequestEmailJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_SubmissionRequestEmailJob_Prepend_Input = {
    readonly emailTemplate?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.SubmissionRequestEmailJob" */
export enum Job_Queues_SubmissionRequestEmailJob_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EmailTemplate = "emailTemplate",
    /** column name */
    Id = "id",
    /** column name */
    PersonId = "personId",
    /** column name */
    Processed = "processed",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly emailTemplate?: InputMaybe<Scalars["jsonb"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly personId?: InputMaybe<Scalars["uuid"]>;
    readonly processed?: InputMaybe<Scalars["Boolean"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "job_queues.SubmissionRequestEmailJob" */
export enum Job_Queues_SubmissionRequestEmailJob_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EmailTemplate = "emailTemplate",
    /** column name */
    Id = "id",
    /** column name */
    PersonId = "personId",
    /** column name */
    Processed = "processed",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly element: Content_Element;
    readonly elementId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly jobStatus: Job_Queues_JobStatus;
    readonly jobStatusName: Job_Queues_JobStatus_Enum;
    readonly message?: Maybe<Scalars["String"]>;
    readonly playlistId?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly registrantGoogleAccount: Registrant_GoogleAccount;
    readonly registrantGoogleAccountId: Scalars["uuid"];
    readonly result?: Maybe<Scalars["jsonb"]>;
    readonly retriesCount: Scalars["Int"];
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt: Scalars["timestamptz"];
    readonly videoDescription: Scalars["String"];
    readonly videoPrivacyStatus: Scalars["String"];
    readonly videoTitle: Scalars["String"];
    /** An array relationship */
    readonly youTubeUploads: ReadonlyArray<Video_YouTubeUpload>;
    /** An aggregate relationship */
    readonly youTubeUploads_aggregate: Video_YouTubeUpload_Aggregate;
};

/** columns and relationships of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJobResultArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJobYouTubeUploadsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** columns and relationships of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJobYouTubeUploads_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** aggregated selection of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_aggregate";
    readonly aggregate?: Maybe<Job_Queues_UploadYouTubeVideoJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Job_Queues_UploadYouTubeVideoJob>;
};

/** aggregate fields of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_aggregate_fields";
    readonly avg?: Maybe<Job_Queues_UploadYouTubeVideoJob_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Job_Queues_UploadYouTubeVideoJob_Max_Fields>;
    readonly min?: Maybe<Job_Queues_UploadYouTubeVideoJob_Min_Fields>;
    readonly stddev?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Job_Queues_UploadYouTubeVideoJob_Sum_Fields>;
    readonly var_pop?: Maybe<Job_Queues_UploadYouTubeVideoJob_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Job_Queues_UploadYouTubeVideoJob_Var_Samp_Fields>;
    readonly variance?: Maybe<Job_Queues_UploadYouTubeVideoJob_Variance_Fields>;
};

/** aggregate fields of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_UploadYouTubeVideoJob_Append_Input = {
    readonly result?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate avg on columns */
export type Job_Queues_UploadYouTubeVideoJob_Avg_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_avg_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "job_queues.UploadYouTubeVideoJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_UploadYouTubeVideoJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly element?: InputMaybe<Content_Element_Bool_Exp>;
    readonly elementId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    readonly message?: InputMaybe<String_Comparison_Exp>;
    readonly playlistId?: InputMaybe<String_Comparison_Exp>;
    readonly registrantGoogleAccount?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
    readonly registrantGoogleAccountId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly result?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly retriesCount?: InputMaybe<Int_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly videoDescription?: InputMaybe<String_Comparison_Exp>;
    readonly videoPrivacyStatus?: InputMaybe<String_Comparison_Exp>;
    readonly videoTitle?: InputMaybe<String_Comparison_Exp>;
    readonly youTubeUploads?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** unique or primary key constraints on table "job_queues.UploadYouTubeVideoJob" */
export enum Job_Queues_UploadYouTubeVideoJob_Constraint {
    /** unique or primary key constraint */
    UploadYouTubeVideoJobPkey = "UploadYouTubeVideoJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_UploadYouTubeVideoJob_Delete_At_Path_Input = {
    readonly result?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_UploadYouTubeVideoJob_Delete_Elem_Input = {
    readonly result?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_UploadYouTubeVideoJob_Delete_Key_Input = {
    readonly result?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Inc_Input = {
    readonly retriesCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly playlistId?: InputMaybe<Scalars["String"]>;
    readonly registrantGoogleAccount?: InputMaybe<Registrant_GoogleAccount_Obj_Rel_Insert_Input>;
    readonly registrantGoogleAccountId?: InputMaybe<Scalars["uuid"]>;
    readonly result?: InputMaybe<Scalars["jsonb"]>;
    readonly retriesCount?: InputMaybe<Scalars["Int"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly videoDescription?: InputMaybe<Scalars["String"]>;
    readonly videoPrivacyStatus?: InputMaybe<Scalars["String"]>;
    readonly videoTitle?: InputMaybe<Scalars["String"]>;
    readonly youTubeUploads?: InputMaybe<Video_YouTubeUpload_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Job_Queues_UploadYouTubeVideoJob_Max_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly playlistId?: Maybe<Scalars["String"]>;
    readonly registrantGoogleAccountId?: Maybe<Scalars["uuid"]>;
    readonly retriesCount?: Maybe<Scalars["Int"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly videoDescription?: Maybe<Scalars["String"]>;
    readonly videoPrivacyStatus?: Maybe<Scalars["String"]>;
    readonly videoTitle?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Job_Queues_UploadYouTubeVideoJob_Min_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly playlistId?: Maybe<Scalars["String"]>;
    readonly registrantGoogleAccountId?: Maybe<Scalars["uuid"]>;
    readonly retriesCount?: Maybe<Scalars["Int"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly videoDescription?: Maybe<Scalars["String"]>;
    readonly videoPrivacyStatus?: Maybe<Scalars["String"]>;
    readonly videoTitle?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Mutation_Response = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Job_Queues_UploadYouTubeVideoJob>;
};

/** on_conflict condition type for table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_On_Conflict = {
    readonly constraint: Job_Queues_UploadYouTubeVideoJob_Constraint;
    readonly update_columns?: ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Update_Column>;
    readonly where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

/** Ordering options when selecting data from "job_queues.UploadYouTubeVideoJob". */
export type Job_Queues_UploadYouTubeVideoJob_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly element?: InputMaybe<Content_Element_Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    readonly jobStatusName?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly playlistId?: InputMaybe<Order_By>;
    readonly registrantGoogleAccount?: InputMaybe<Registrant_GoogleAccount_Order_By>;
    readonly registrantGoogleAccountId?: InputMaybe<Order_By>;
    readonly result?: InputMaybe<Order_By>;
    readonly retriesCount?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly videoDescription?: InputMaybe<Order_By>;
    readonly videoPrivacyStatus?: InputMaybe<Order_By>;
    readonly videoTitle?: InputMaybe<Order_By>;
    readonly youTubeUploads_aggregate?: InputMaybe<Video_YouTubeUpload_Aggregate_Order_By>;
};

/** primary key columns input for table: job_queues_UploadYouTubeVideoJob */
export type Job_Queues_UploadYouTubeVideoJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_UploadYouTubeVideoJob_Prepend_Input = {
    readonly result?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "job_queues.UploadYouTubeVideoJob" */
export enum Job_Queues_UploadYouTubeVideoJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    PlaylistId = "playlistId",
    /** column name */
    RegistrantGoogleAccountId = "registrantGoogleAccountId",
    /** column name */
    Result = "result",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VideoDescription = "videoDescription",
    /** column name */
    VideoPrivacyStatus = "videoPrivacyStatus",
    /** column name */
    VideoTitle = "videoTitle",
}

/** input type for updating data in table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly playlistId?: InputMaybe<Scalars["String"]>;
    readonly registrantGoogleAccountId?: InputMaybe<Scalars["uuid"]>;
    readonly result?: InputMaybe<Scalars["jsonb"]>;
    readonly retriesCount?: InputMaybe<Scalars["Int"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly videoDescription?: InputMaybe<Scalars["String"]>;
    readonly videoPrivacyStatus?: InputMaybe<Scalars["String"]>;
    readonly videoTitle?: InputMaybe<Scalars["String"]>;
};

/** aggregate stddev on columns */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_stddev_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Pop_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_stddev_pop_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Samp_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_stddev_samp_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Job_Queues_UploadYouTubeVideoJob_Sum_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_sum_fields";
    readonly retriesCount?: Maybe<Scalars["Int"]>;
};

/** update columns of table "job_queues.UploadYouTubeVideoJob" */
export enum Job_Queues_UploadYouTubeVideoJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    PlaylistId = "playlistId",
    /** column name */
    RegistrantGoogleAccountId = "registrantGoogleAccountId",
    /** column name */
    Result = "result",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VideoDescription = "videoDescription",
    /** column name */
    VideoPrivacyStatus = "videoPrivacyStatus",
    /** column name */
    VideoTitle = "videoTitle",
}

/** aggregate var_pop on columns */
export type Job_Queues_UploadYouTubeVideoJob_Var_Pop_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_var_pop_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Job_Queues_UploadYouTubeVideoJob_Var_Samp_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_var_samp_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Job_Queues_UploadYouTubeVideoJob_Variance_Fields = {
    readonly __typename?: "job_queues_UploadYouTubeVideoJob_variance_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

export type Jsonb_Cast_Exp = {
    readonly String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
    readonly _cast?: InputMaybe<Jsonb_Cast_Exp>;
    /** is the column contained in the given json value */
    readonly _contained_in?: InputMaybe<Scalars["jsonb"]>;
    /** does the column contain the given json value at the top level */
    readonly _contains?: InputMaybe<Scalars["jsonb"]>;
    readonly _eq?: InputMaybe<Scalars["jsonb"]>;
    readonly _gt?: InputMaybe<Scalars["jsonb"]>;
    readonly _gte?: InputMaybe<Scalars["jsonb"]>;
    /** does the string exist as a top-level key in the column */
    readonly _has_key?: InputMaybe<Scalars["String"]>;
    /** do all of these strings exist as top-level keys in the column */
    readonly _has_keys_all?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    /** do any of these strings exist as top-level keys in the column */
    readonly _has_keys_any?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["jsonb"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["jsonb"]>;
    readonly _lte?: InputMaybe<Scalars["jsonb"]>;
    readonly _neq?: InputMaybe<Scalars["jsonb"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["jsonb"]>>;
};

/** mutation root */
export type Mutation_Root = {
    readonly __typename?: "mutation_root";
    /** execute VOLATILE function "conference.updateEventUsage" which returns "conference.Usage" */
    readonly conference_updateEventUsage: ReadonlyArray<Conference_Usage>;
    readonly createItemRoom?: Maybe<CreateItemRoomOutput>;
    readonly createRoomDm?: Maybe<CreateRoomDmOutput>;
    /** delete data from the table: "Email" */
    readonly delete_Email?: Maybe<Email_Mutation_Response>;
    /** delete single row from the table: "Email" */
    readonly delete_Email_by_pk?: Maybe<Email>;
    /** delete data from the table: "PushNotificationSubscription" */
    readonly delete_PushNotificationSubscription?: Maybe<PushNotificationSubscription_Mutation_Response>;
    /** delete single row from the table: "PushNotificationSubscription" */
    readonly delete_PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
    /** delete data from the table: "User" */
    readonly delete_User?: Maybe<User_Mutation_Response>;
    /** delete single row from the table: "User" */
    readonly delete_User_by_pk?: Maybe<User>;
    /** delete data from the table: "analytics.AppStats" */
    readonly delete_analytics_AppStats?: Maybe<Analytics_AppStats_Mutation_Response>;
    /** delete single row from the table: "analytics.AppStats" */
    readonly delete_analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
    /** delete data from the table: "analytics.ContentElementStats" */
    readonly delete_analytics_ContentElementStats?: Maybe<Analytics_ContentElementStats_Mutation_Response>;
    /** delete single row from the table: "analytics.ContentElementStats" */
    readonly delete_analytics_ContentElementStats_by_pk?: Maybe<Analytics_ContentElementStats>;
    /** delete data from the table: "analytics.ContentItemStats" */
    readonly delete_analytics_ContentItemStats?: Maybe<Analytics_ContentItemStats_Mutation_Response>;
    /** delete single row from the table: "analytics.ContentItemStats" */
    readonly delete_analytics_ContentItemStats_by_pk?: Maybe<Analytics_ContentItemStats>;
    /** delete data from the table: "analytics.ElementTotalViews" */
    readonly delete_analytics_ElementTotalViews?: Maybe<Analytics_ElementTotalViews_Mutation_Response>;
    /** delete single row from the table: "analytics.ElementTotalViews" */
    readonly delete_analytics_ElementTotalViews_by_pk?: Maybe<Analytics_ElementTotalViews>;
    /** delete data from the table: "analytics.ItemTotalViews" */
    readonly delete_analytics_ItemTotalViews?: Maybe<Analytics_ItemTotalViews_Mutation_Response>;
    /** delete single row from the table: "analytics.ItemTotalViews" */
    readonly delete_analytics_ItemTotalViews_by_pk?: Maybe<Analytics_ItemTotalViews>;
    /** delete data from the table: "analytics.RoomPresence" */
    readonly delete_analytics_RoomPresence?: Maybe<Analytics_RoomPresence_Mutation_Response>;
    /** delete single row from the table: "analytics.RoomPresence" */
    readonly delete_analytics_RoomPresence_by_pk?: Maybe<Analytics_RoomPresence>;
    /** delete data from the table: "analytics.RoomStats" */
    readonly delete_analytics_RoomStats?: Maybe<Analytics_RoomStats_Mutation_Response>;
    /** delete single row from the table: "analytics.RoomStats" */
    readonly delete_analytics_RoomStats_by_pk?: Maybe<Analytics_RoomStats>;
    /** delete data from the table: "chat.Chat" */
    readonly delete_chat_Chat?: Maybe<Chat_Chat_Mutation_Response>;
    /** delete single row from the table: "chat.Chat" */
    readonly delete_chat_Chat_by_pk?: Maybe<Chat_Chat>;
    /** delete data from the table: "chat.Flag" */
    readonly delete_chat_Flag?: Maybe<Chat_Flag_Mutation_Response>;
    /** delete data from the table: "chat.FlagType" */
    readonly delete_chat_FlagType?: Maybe<Chat_FlagType_Mutation_Response>;
    /** delete single row from the table: "chat.FlagType" */
    readonly delete_chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
    /** delete single row from the table: "chat.Flag" */
    readonly delete_chat_Flag_by_pk?: Maybe<Chat_Flag>;
    /** delete data from the table: "chat.Message" */
    readonly delete_chat_Message?: Maybe<Chat_Message_Mutation_Response>;
    /** delete data from the table: "chat.MessageType" */
    readonly delete_chat_MessageType?: Maybe<Chat_MessageType_Mutation_Response>;
    /** delete single row from the table: "chat.MessageType" */
    readonly delete_chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
    /** delete single row from the table: "chat.Message" */
    readonly delete_chat_Message_by_pk?: Maybe<Chat_Message>;
    /** delete data from the table: "chat.Pin" */
    readonly delete_chat_Pin?: Maybe<Chat_Pin_Mutation_Response>;
    /** delete single row from the table: "chat.Pin" */
    readonly delete_chat_Pin_by_pk?: Maybe<Chat_Pin>;
    /** delete data from the table: "chat.Reaction" */
    readonly delete_chat_Reaction?: Maybe<Chat_Reaction_Mutation_Response>;
    /** delete data from the table: "chat.ReactionType" */
    readonly delete_chat_ReactionType?: Maybe<Chat_ReactionType_Mutation_Response>;
    /** delete single row from the table: "chat.ReactionType" */
    readonly delete_chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
    /** delete single row from the table: "chat.Reaction" */
    readonly delete_chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
    /** delete data from the table: "chat.ReadUpToIndex" */
    readonly delete_chat_ReadUpToIndex?: Maybe<Chat_ReadUpToIndex_Mutation_Response>;
    /** delete single row from the table: "chat.ReadUpToIndex" */
    readonly delete_chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
    /** delete data from the table: "chat.Subscription" */
    readonly delete_chat_Subscription?: Maybe<Chat_Subscription_Mutation_Response>;
    /** delete single row from the table: "chat.Subscription" */
    readonly delete_chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
    /** delete data from the table: "collection.Exhibition" */
    readonly delete_collection_Exhibition?: Maybe<Collection_Exhibition_Mutation_Response>;
    /** delete single row from the table: "collection.Exhibition" */
    readonly delete_collection_Exhibition_by_pk?: Maybe<Collection_Exhibition>;
    /** delete data from the table: "collection.ProgramPerson" */
    readonly delete_collection_ProgramPerson?: Maybe<Collection_ProgramPerson_Mutation_Response>;
    /** delete single row from the table: "collection.ProgramPerson" */
    readonly delete_collection_ProgramPerson_by_pk?: Maybe<Collection_ProgramPerson>;
    /** delete data from the table: "collection.Tag" */
    readonly delete_collection_Tag?: Maybe<Collection_Tag_Mutation_Response>;
    /** delete single row from the table: "collection.Tag" */
    readonly delete_collection_Tag_by_pk?: Maybe<Collection_Tag>;
    /** delete data from the table: "conference.Conference" */
    readonly delete_conference_Conference?: Maybe<Conference_Conference_Mutation_Response>;
    /** delete single row from the table: "conference.Conference" */
    readonly delete_conference_Conference_by_pk?: Maybe<Conference_Conference>;
    /** delete data from the table: "conference.Configuration" */
    readonly delete_conference_Configuration?: Maybe<Conference_Configuration_Mutation_Response>;
    /** delete data from the table: "conference.ConfigurationKey" */
    readonly delete_conference_ConfigurationKey?: Maybe<Conference_ConfigurationKey_Mutation_Response>;
    /** delete single row from the table: "conference.ConfigurationKey" */
    readonly delete_conference_ConfigurationKey_by_pk?: Maybe<Conference_ConfigurationKey>;
    /** delete single row from the table: "conference.Configuration" */
    readonly delete_conference_Configuration_by_pk?: Maybe<Conference_Configuration>;
    /** delete data from the table: "conference.DemoCode" */
    readonly delete_conference_DemoCode?: Maybe<Conference_DemoCode_Mutation_Response>;
    /** delete single row from the table: "conference.DemoCode" */
    readonly delete_conference_DemoCode_by_pk?: Maybe<Conference_DemoCode>;
    /** delete data from the table: "conference.Quota" */
    readonly delete_conference_Quota?: Maybe<Conference_Quota_Mutation_Response>;
    /** delete single row from the table: "conference.Quota" */
    readonly delete_conference_Quota_by_pk?: Maybe<Conference_Quota>;
    /** delete data from the table: "conference.Subconference" */
    readonly delete_conference_Subconference?: Maybe<Conference_Subconference_Mutation_Response>;
    /** delete single row from the table: "conference.Subconference" */
    readonly delete_conference_Subconference_by_pk?: Maybe<Conference_Subconference>;
    /** delete data from the table: "conference.Usage" */
    readonly delete_conference_Usage?: Maybe<Conference_Usage_Mutation_Response>;
    /** delete single row from the table: "conference.Usage" */
    readonly delete_conference_Usage_by_pk?: Maybe<Conference_Usage>;
    /** delete data from the table: "conference.VisibilityLevel" */
    readonly delete_conference_VisibilityLevel?: Maybe<Conference_VisibilityLevel_Mutation_Response>;
    /** delete single row from the table: "conference.VisibilityLevel" */
    readonly delete_conference_VisibilityLevel_by_pk?: Maybe<Conference_VisibilityLevel>;
    /** delete data from the table: "content.Element" */
    readonly delete_content_Element?: Maybe<Content_Element_Mutation_Response>;
    /** delete data from the table: "content.ElementType" */
    readonly delete_content_ElementType?: Maybe<Content_ElementType_Mutation_Response>;
    /** delete single row from the table: "content.ElementType" */
    readonly delete_content_ElementType_by_pk?: Maybe<Content_ElementType>;
    /** delete single row from the table: "content.Element" */
    readonly delete_content_Element_by_pk?: Maybe<Content_Element>;
    /** delete data from the table: "content.Item" */
    readonly delete_content_Item?: Maybe<Content_Item_Mutation_Response>;
    /** delete data from the table: "content.ItemExhibition" */
    readonly delete_content_ItemExhibition?: Maybe<Content_ItemExhibition_Mutation_Response>;
    /** delete single row from the table: "content.ItemExhibition" */
    readonly delete_content_ItemExhibition_by_pk?: Maybe<Content_ItemExhibition>;
    /** delete data from the table: "content.ItemProgramPerson" */
    readonly delete_content_ItemProgramPerson?: Maybe<Content_ItemProgramPerson_Mutation_Response>;
    /** delete single row from the table: "content.ItemProgramPerson" */
    readonly delete_content_ItemProgramPerson_by_pk?: Maybe<Content_ItemProgramPerson>;
    /** delete data from the table: "content.ItemTag" */
    readonly delete_content_ItemTag?: Maybe<Content_ItemTag_Mutation_Response>;
    /** delete single row from the table: "content.ItemTag" */
    readonly delete_content_ItemTag_by_pk?: Maybe<Content_ItemTag>;
    /** delete data from the table: "content.ItemType" */
    readonly delete_content_ItemType?: Maybe<Content_ItemType_Mutation_Response>;
    /** delete single row from the table: "content.ItemType" */
    readonly delete_content_ItemType_by_pk?: Maybe<Content_ItemType>;
    /** delete single row from the table: "content.Item" */
    readonly delete_content_Item_by_pk?: Maybe<Content_Item>;
    /** delete data from the table: "job_queues.ChannelStackCreateJob" */
    readonly delete_job_queues_ChannelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.ChannelStackCreateJob" */
    readonly delete_job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** delete data from the table: "job_queues.ChannelStackDeleteJob" */
    readonly delete_job_queues_ChannelStackDeleteJob?: Maybe<Job_Queues_ChannelStackDeleteJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.ChannelStackDeleteJob" */
    readonly delete_job_queues_ChannelStackDeleteJob_by_pk?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** delete data from the table: "job_queues.ChannelStackUpdateJob" */
    readonly delete_job_queues_ChannelStackUpdateJob?: Maybe<Job_Queues_ChannelStackUpdateJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.ChannelStackUpdateJob" */
    readonly delete_job_queues_ChannelStackUpdateJob_by_pk?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** delete data from the table: "job_queues.CombineVideosJob" */
    readonly delete_job_queues_CombineVideosJob?: Maybe<Job_Queues_CombineVideosJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.CombineVideosJob" */
    readonly delete_job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
    /** delete data from the table: "job_queues.CustomEmailJob" */
    readonly delete_job_queues_CustomEmailJob?: Maybe<Job_Queues_CustomEmailJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.CustomEmailJob" */
    readonly delete_job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
    /** delete data from the table: "job_queues.ImportJob" */
    readonly delete_job_queues_ImportJob?: Maybe<Job_Queues_ImportJob_Mutation_Response>;
    /** delete data from the table: "job_queues.ImportJobOutput" */
    readonly delete_job_queues_ImportJobOutput?: Maybe<Job_Queues_ImportJobOutput_Mutation_Response>;
    /** delete single row from the table: "job_queues.ImportJobOutput" */
    readonly delete_job_queues_ImportJobOutput_by_pk?: Maybe<Job_Queues_ImportJobOutput>;
    /** delete single row from the table: "job_queues.ImportJob" */
    readonly delete_job_queues_ImportJob_by_pk?: Maybe<Job_Queues_ImportJob>;
    /** delete data from the table: "job_queues.InvitationEmailJob" */
    readonly delete_job_queues_InvitationEmailJob?: Maybe<Job_Queues_InvitationEmailJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.InvitationEmailJob" */
    readonly delete_job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
    /** delete data from the table: "job_queues.JobStatus" */
    readonly delete_job_queues_JobStatus?: Maybe<Job_Queues_JobStatus_Mutation_Response>;
    /** delete single row from the table: "job_queues.JobStatus" */
    readonly delete_job_queues_JobStatus_by_pk?: Maybe<Job_Queues_JobStatus>;
    /** delete data from the table: "job_queues.MediaPackageHarvestJob" */
    readonly delete_job_queues_MediaPackageHarvestJob?: Maybe<Job_Queues_MediaPackageHarvestJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.MediaPackageHarvestJob" */
    readonly delete_job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** delete data from the table: "job_queues.PrepareJob" */
    readonly delete_job_queues_PrepareJob?: Maybe<Job_Queues_PrepareJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.PrepareJob" */
    readonly delete_job_queues_PrepareJob_by_pk?: Maybe<Job_Queues_PrepareJob>;
    /** delete data from the table: "job_queues.PublishVideoJob" */
    readonly delete_job_queues_PublishVideoJob?: Maybe<Job_Queues_PublishVideoJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.PublishVideoJob" */
    readonly delete_job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
    /** delete data from the table: "job_queues.SubmissionRequestEmailJob" */
    readonly delete_job_queues_SubmissionRequestEmailJob?: Maybe<Job_Queues_SubmissionRequestEmailJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.SubmissionRequestEmailJob" */
    readonly delete_job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** delete data from the table: "job_queues.UploadYouTubeVideoJob" */
    readonly delete_job_queues_UploadYouTubeVideoJob?: Maybe<Job_Queues_UploadYouTubeVideoJob_Mutation_Response>;
    /** delete single row from the table: "job_queues.UploadYouTubeVideoJob" */
    readonly delete_job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    /** delete data from the table: "registrant.GoogleAccount" */
    readonly delete_registrant_GoogleAccount?: Maybe<Registrant_GoogleAccount_Mutation_Response>;
    /** delete single row from the table: "registrant.GoogleAccount" */
    readonly delete_registrant_GoogleAccount_by_pk?: Maybe<Registrant_GoogleAccount>;
    /** delete data from the table: "registrant.Group" */
    readonly delete_registrant_Group?: Maybe<Registrant_Group_Mutation_Response>;
    /** delete data from the table: "registrant.GroupRegistrant" */
    readonly delete_registrant_GroupRegistrant?: Maybe<Registrant_GroupRegistrant_Mutation_Response>;
    /** delete single row from the table: "registrant.GroupRegistrant" */
    readonly delete_registrant_GroupRegistrant_by_pk?: Maybe<Registrant_GroupRegistrant>;
    /** delete single row from the table: "registrant.Group" */
    readonly delete_registrant_Group_by_pk?: Maybe<Registrant_Group>;
    /** delete data from the table: "registrant.Invitation" */
    readonly delete_registrant_Invitation?: Maybe<Registrant_Invitation_Mutation_Response>;
    /** delete single row from the table: "registrant.Invitation" */
    readonly delete_registrant_Invitation_by_pk?: Maybe<Registrant_Invitation>;
    /** delete data from the table: "registrant.Profile" */
    readonly delete_registrant_Profile?: Maybe<Registrant_Profile_Mutation_Response>;
    /** delete single row from the table: "registrant.Profile" */
    readonly delete_registrant_Profile_by_pk?: Maybe<Registrant_Profile>;
    /** delete data from the table: "registrant.Registrant" */
    readonly delete_registrant_Registrant?: Maybe<Registrant_Registrant_Mutation_Response>;
    /** delete data from the table: "registrant.RegistrantRole" */
    readonly delete_registrant_RegistrantRole?: Maybe<Registrant_RegistrantRole_Mutation_Response>;
    /** delete single row from the table: "registrant.RegistrantRole" */
    readonly delete_registrant_RegistrantRole_by_pk?: Maybe<Registrant_RegistrantRole>;
    /** delete single row from the table: "registrant.Registrant" */
    readonly delete_registrant_Registrant_by_pk?: Maybe<Registrant_Registrant>;
    /** delete data from the table: "registrant.SavedVonageRoomRecording" */
    readonly delete_registrant_SavedVonageRoomRecording?: Maybe<Registrant_SavedVonageRoomRecording_Mutation_Response>;
    /** delete single row from the table: "registrant.SavedVonageRoomRecording" */
    readonly delete_registrant_SavedVonageRoomRecording_by_pk?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** delete data from the table: "registrant.SubconferenceMembership" */
    readonly delete_registrant_SubconferenceMembership?: Maybe<Registrant_SubconferenceMembership_Mutation_Response>;
    /** delete single row from the table: "registrant.SubconferenceMembership" */
    readonly delete_registrant_SubconferenceMembership_by_pk?: Maybe<Registrant_SubconferenceMembership>;
    /** delete data from the table: "room.Backend" */
    readonly delete_room_Backend?: Maybe<Room_Backend_Mutation_Response>;
    /** delete single row from the table: "room.Backend" */
    readonly delete_room_Backend_by_pk?: Maybe<Room_Backend>;
    /** delete data from the table: "room.ChimeMeeting" */
    readonly delete_room_ChimeMeeting?: Maybe<Room_ChimeMeeting_Mutation_Response>;
    /** delete single row from the table: "room.ChimeMeeting" */
    readonly delete_room_ChimeMeeting_by_pk?: Maybe<Room_ChimeMeeting>;
    /** delete data from the table: "room.ManagementMode" */
    readonly delete_room_ManagementMode?: Maybe<Room_ManagementMode_Mutation_Response>;
    /** delete single row from the table: "room.ManagementMode" */
    readonly delete_room_ManagementMode_by_pk?: Maybe<Room_ManagementMode>;
    /** delete data from the table: "room.PersonRole" */
    readonly delete_room_PersonRole?: Maybe<Room_PersonRole_Mutation_Response>;
    /** delete single row from the table: "room.PersonRole" */
    readonly delete_room_PersonRole_by_pk?: Maybe<Room_PersonRole>;
    /** delete data from the table: "room.Room" */
    readonly delete_room_Room?: Maybe<Room_Room_Mutation_Response>;
    /** delete data from the table: "room.RoomGroupMembership" */
    readonly delete_room_RoomGroupMembership?: Maybe<Room_RoomGroupMembership_Mutation_Response>;
    /** delete single row from the table: "room.RoomGroupMembership" */
    readonly delete_room_RoomGroupMembership_by_pk?: Maybe<Room_RoomGroupMembership>;
    /** delete data from the table: "room.RoomMembership" */
    readonly delete_room_RoomMembership?: Maybe<Room_RoomMembership_Mutation_Response>;
    /** delete single row from the table: "room.RoomMembership" */
    readonly delete_room_RoomMembership_by_pk?: Maybe<Room_RoomMembership>;
    /** delete single row from the table: "room.Room" */
    readonly delete_room_Room_by_pk?: Maybe<Room_Room>;
    /** delete data from the table: "room.ShuffleAlgorithm" */
    readonly delete_room_ShuffleAlgorithm?: Maybe<Room_ShuffleAlgorithm_Mutation_Response>;
    /** delete single row from the table: "room.ShuffleAlgorithm" */
    readonly delete_room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
    /** delete data from the table: "room.ShufflePeriod" */
    readonly delete_room_ShufflePeriod?: Maybe<Room_ShufflePeriod_Mutation_Response>;
    /** delete single row from the table: "room.ShufflePeriod" */
    readonly delete_room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
    /** delete data from the table: "room.ShuffleQueueEntry" */
    readonly delete_room_ShuffleQueueEntry?: Maybe<Room_ShuffleQueueEntry_Mutation_Response>;
    /** delete single row from the table: "room.ShuffleQueueEntry" */
    readonly delete_room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
    /** delete data from the table: "room.ShuffleRoom" */
    readonly delete_room_ShuffleRoom?: Maybe<Room_ShuffleRoom_Mutation_Response>;
    /** delete single row from the table: "room.ShuffleRoom" */
    readonly delete_room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
    /** delete data from the table: "schedule.Continuation" */
    readonly delete_schedule_Continuation?: Maybe<Schedule_Continuation_Mutation_Response>;
    /** delete single row from the table: "schedule.Continuation" */
    readonly delete_schedule_Continuation_by_pk?: Maybe<Schedule_Continuation>;
    /** delete data from the table: "schedule.CurrentEvents" */
    readonly delete_schedule_CurrentEvents?: Maybe<Schedule_CurrentEvents_Mutation_Response>;
    /** delete data from the table: "schedule.Event" */
    readonly delete_schedule_Event?: Maybe<Schedule_Event_Mutation_Response>;
    /** delete data from the table: "schedule.EventProgramPerson" */
    readonly delete_schedule_EventProgramPerson?: Maybe<Schedule_EventProgramPerson_Mutation_Response>;
    /** delete data from the table: "schedule.EventProgramPersonRole" */
    readonly delete_schedule_EventProgramPersonRole?: Maybe<Schedule_EventProgramPersonRole_Mutation_Response>;
    /** delete single row from the table: "schedule.EventProgramPersonRole" */
    readonly delete_schedule_EventProgramPersonRole_by_pk?: Maybe<Schedule_EventProgramPersonRole>;
    /** delete single row from the table: "schedule.EventProgramPerson" */
    readonly delete_schedule_EventProgramPerson_by_pk?: Maybe<Schedule_EventProgramPerson>;
    /** delete single row from the table: "schedule.Event" */
    readonly delete_schedule_Event_by_pk?: Maybe<Schedule_Event>;
    /** delete data from the table: "schedule.Mode" */
    readonly delete_schedule_Mode?: Maybe<Schedule_Mode_Mutation_Response>;
    /** delete single row from the table: "schedule.Mode" */
    readonly delete_schedule_Mode_by_pk?: Maybe<Schedule_Mode>;
    /** delete data from the table: "schedule.StarredEvent" */
    readonly delete_schedule_StarredEvent?: Maybe<Schedule_StarredEvent_Mutation_Response>;
    /** delete single row from the table: "schedule.StarredEvent" */
    readonly delete_schedule_StarredEvent_by_pk?: Maybe<Schedule_StarredEvent>;
    /** delete data from the table: "sponsor.Tier" */
    readonly delete_sponsor_Tier?: Maybe<Sponsor_Tier_Mutation_Response>;
    /** delete data from the table: "sponsor.TierMember" */
    readonly delete_sponsor_TierMember?: Maybe<Sponsor_TierMember_Mutation_Response>;
    /** delete single row from the table: "sponsor.TierMember" */
    readonly delete_sponsor_TierMember_by_pk?: Maybe<Sponsor_TierMember>;
    /** delete single row from the table: "sponsor.Tier" */
    readonly delete_sponsor_Tier_by_pk?: Maybe<Sponsor_Tier>;
    /** delete data from the table: "system.Configuration" */
    readonly delete_system_Configuration?: Maybe<System_Configuration_Mutation_Response>;
    /** delete data from the table: "system.ConfigurationKey" */
    readonly delete_system_ConfigurationKey?: Maybe<System_ConfigurationKey_Mutation_Response>;
    /** delete single row from the table: "system.ConfigurationKey" */
    readonly delete_system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
    /** delete data from the table: "system.ConfigurationPermissionGrant" */
    readonly delete_system_ConfigurationPermissionGrant?: Maybe<System_ConfigurationPermissionGrant_Mutation_Response>;
    /** delete single row from the table: "system.ConfigurationPermissionGrant" */
    readonly delete_system_ConfigurationPermissionGrant_by_pk?: Maybe<System_ConfigurationPermissionGrant>;
    /** delete single row from the table: "system.Configuration" */
    readonly delete_system_Configuration_by_pk?: Maybe<System_Configuration>;
    /** delete data from the table: "system.SuperUserPermission" */
    readonly delete_system_SuperUserPermission?: Maybe<System_SuperUserPermission_Mutation_Response>;
    /** delete data from the table: "system.SuperUserPermissionGrant" */
    readonly delete_system_SuperUserPermissionGrant?: Maybe<System_SuperUserPermissionGrant_Mutation_Response>;
    /** delete single row from the table: "system.SuperUserPermissionGrant" */
    readonly delete_system_SuperUserPermissionGrant_by_pk?: Maybe<System_SuperUserPermissionGrant>;
    /** delete single row from the table: "system.SuperUserPermission" */
    readonly delete_system_SuperUserPermission_by_pk?: Maybe<System_SuperUserPermission>;
    /** delete data from the table: "video.ChannelStack" */
    readonly delete_video_ChannelStack?: Maybe<Video_ChannelStack_Mutation_Response>;
    /** delete single row from the table: "video.ChannelStack" */
    readonly delete_video_ChannelStack_by_pk?: Maybe<Video_ChannelStack>;
    /** delete data from the table: "video.EventVonageSession" */
    readonly delete_video_EventVonageSession?: Maybe<Video_EventVonageSession_Mutation_Response>;
    /** delete single row from the table: "video.EventVonageSession" */
    readonly delete_video_EventVonageSession_by_pk?: Maybe<Video_EventVonageSession>;
    /** delete data from the table: "video.ImmediateSwitch" */
    readonly delete_video_ImmediateSwitch?: Maybe<Video_ImmediateSwitch_Mutation_Response>;
    /** delete single row from the table: "video.ImmediateSwitch" */
    readonly delete_video_ImmediateSwitch_by_pk?: Maybe<Video_ImmediateSwitch>;
    /** delete data from the table: "video.InputType" */
    readonly delete_video_InputType?: Maybe<Video_InputType_Mutation_Response>;
    /** delete single row from the table: "video.InputType" */
    readonly delete_video_InputType_by_pk?: Maybe<Video_InputType>;
    /** delete data from the table: "video.MediaLiveChannelStatus" */
    readonly delete_video_MediaLiveChannelStatus?: Maybe<Video_MediaLiveChannelStatus_Mutation_Response>;
    /** delete single row from the table: "video.MediaLiveChannelStatus" */
    readonly delete_video_MediaLiveChannelStatus_by_pk?: Maybe<Video_MediaLiveChannelStatus>;
    /** delete data from the table: "video.RoomRtmpInput" */
    readonly delete_video_RoomRtmpInput?: Maybe<Video_RoomRtmpInput_Mutation_Response>;
    /** delete single row from the table: "video.RoomRtmpInput" */
    readonly delete_video_RoomRtmpInput_by_pk?: Maybe<Video_RoomRtmpInput>;
    /** delete data from the table: "video.RoomRtmpOutput" */
    readonly delete_video_RoomRtmpOutput?: Maybe<Video_RoomRtmpOutput_Mutation_Response>;
    /** delete single row from the table: "video.RoomRtmpOutput" */
    readonly delete_video_RoomRtmpOutput_by_pk?: Maybe<Video_RoomRtmpOutput>;
    /** delete data from the table: "video.RtmpInput" */
    readonly delete_video_RtmpInput?: Maybe<Video_RtmpInput_Mutation_Response>;
    /** delete single row from the table: "video.RtmpInput" */
    readonly delete_video_RtmpInput_by_pk?: Maybe<Video_RtmpInput>;
    /** delete data from the table: "video.TranscriptionJob" */
    readonly delete_video_TranscriptionJob?: Maybe<Video_TranscriptionJob_Mutation_Response>;
    /** delete single row from the table: "video.TranscriptionJob" */
    readonly delete_video_TranscriptionJob_by_pk?: Maybe<Video_TranscriptionJob>;
    /** delete data from the table: "video.VideoRenderJob" */
    readonly delete_video_VideoRenderJob?: Maybe<Video_VideoRenderJob_Mutation_Response>;
    /** delete single row from the table: "video.VideoRenderJob" */
    readonly delete_video_VideoRenderJob_by_pk?: Maybe<Video_VideoRenderJob>;
    /** delete data from the table: "video.VonageParticipantStream" */
    readonly delete_video_VonageParticipantStream?: Maybe<Video_VonageParticipantStream_Mutation_Response>;
    /** delete single row from the table: "video.VonageParticipantStream" */
    readonly delete_video_VonageParticipantStream_by_pk?: Maybe<Video_VonageParticipantStream>;
    /** delete data from the table: "video.VonageRoomRecording" */
    readonly delete_video_VonageRoomRecording?: Maybe<Video_VonageRoomRecording_Mutation_Response>;
    /** delete single row from the table: "video.VonageRoomRecording" */
    readonly delete_video_VonageRoomRecording_by_pk?: Maybe<Video_VonageRoomRecording>;
    /** delete data from the table: "video.VonageSessionLayout" */
    readonly delete_video_VonageSessionLayout?: Maybe<Video_VonageSessionLayout_Mutation_Response>;
    /** delete single row from the table: "video.VonageSessionLayout" */
    readonly delete_video_VonageSessionLayout_by_pk?: Maybe<Video_VonageSessionLayout>;
    /** delete data from the table: "video.VonageVideoPlaybackCommand" */
    readonly delete_video_VonageVideoPlaybackCommand?: Maybe<Video_VonageVideoPlaybackCommand_Mutation_Response>;
    /** delete single row from the table: "video.VonageVideoPlaybackCommand" */
    readonly delete_video_VonageVideoPlaybackCommand_by_pk?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** delete data from the table: "video.YouTubeUpload" */
    readonly delete_video_YouTubeUpload?: Maybe<Video_YouTubeUpload_Mutation_Response>;
    /** delete single row from the table: "video.YouTubeUpload" */
    readonly delete_video_YouTubeUpload_by_pk?: Maybe<Video_YouTubeUpload>;
    readonly getGoogleOAuthUrl?: Maybe<GetGoogleOAuthUrlOutput>;
    readonly initialiseSuperUser?: Maybe<InitialiseSuperUserOutput>;
    /** insert data into the table: "Email" */
    readonly insert_Email?: Maybe<Email_Mutation_Response>;
    /** insert a single row into the table: "Email" */
    readonly insert_Email_one?: Maybe<Email>;
    /** insert data into the table: "PushNotificationSubscription" */
    readonly insert_PushNotificationSubscription?: Maybe<PushNotificationSubscription_Mutation_Response>;
    /** insert a single row into the table: "PushNotificationSubscription" */
    readonly insert_PushNotificationSubscription_one?: Maybe<PushNotificationSubscription>;
    /** insert data into the table: "User" */
    readonly insert_User?: Maybe<User_Mutation_Response>;
    /** insert a single row into the table: "User" */
    readonly insert_User_one?: Maybe<User>;
    /** insert data into the table: "analytics.AppStats" */
    readonly insert_analytics_AppStats?: Maybe<Analytics_AppStats_Mutation_Response>;
    /** insert a single row into the table: "analytics.AppStats" */
    readonly insert_analytics_AppStats_one?: Maybe<Analytics_AppStats>;
    /** insert data into the table: "analytics.ContentElementStats" */
    readonly insert_analytics_ContentElementStats?: Maybe<Analytics_ContentElementStats_Mutation_Response>;
    /** insert a single row into the table: "analytics.ContentElementStats" */
    readonly insert_analytics_ContentElementStats_one?: Maybe<Analytics_ContentElementStats>;
    /** insert data into the table: "analytics.ContentItemStats" */
    readonly insert_analytics_ContentItemStats?: Maybe<Analytics_ContentItemStats_Mutation_Response>;
    /** insert a single row into the table: "analytics.ContentItemStats" */
    readonly insert_analytics_ContentItemStats_one?: Maybe<Analytics_ContentItemStats>;
    /** insert data into the table: "analytics.ElementTotalViews" */
    readonly insert_analytics_ElementTotalViews?: Maybe<Analytics_ElementTotalViews_Mutation_Response>;
    /** insert a single row into the table: "analytics.ElementTotalViews" */
    readonly insert_analytics_ElementTotalViews_one?: Maybe<Analytics_ElementTotalViews>;
    /** insert data into the table: "analytics.ItemTotalViews" */
    readonly insert_analytics_ItemTotalViews?: Maybe<Analytics_ItemTotalViews_Mutation_Response>;
    /** insert a single row into the table: "analytics.ItemTotalViews" */
    readonly insert_analytics_ItemTotalViews_one?: Maybe<Analytics_ItemTotalViews>;
    /** insert data into the table: "analytics.RoomPresence" */
    readonly insert_analytics_RoomPresence?: Maybe<Analytics_RoomPresence_Mutation_Response>;
    /** insert a single row into the table: "analytics.RoomPresence" */
    readonly insert_analytics_RoomPresence_one?: Maybe<Analytics_RoomPresence>;
    /** insert data into the table: "analytics.RoomStats" */
    readonly insert_analytics_RoomStats?: Maybe<Analytics_RoomStats_Mutation_Response>;
    /** insert a single row into the table: "analytics.RoomStats" */
    readonly insert_analytics_RoomStats_one?: Maybe<Analytics_RoomStats>;
    /** insert data into the table: "chat.Chat" */
    readonly insert_chat_Chat?: Maybe<Chat_Chat_Mutation_Response>;
    /** insert a single row into the table: "chat.Chat" */
    readonly insert_chat_Chat_one?: Maybe<Chat_Chat>;
    /** insert data into the table: "chat.Flag" */
    readonly insert_chat_Flag?: Maybe<Chat_Flag_Mutation_Response>;
    /** insert data into the table: "chat.FlagType" */
    readonly insert_chat_FlagType?: Maybe<Chat_FlagType_Mutation_Response>;
    /** insert a single row into the table: "chat.FlagType" */
    readonly insert_chat_FlagType_one?: Maybe<Chat_FlagType>;
    /** insert a single row into the table: "chat.Flag" */
    readonly insert_chat_Flag_one?: Maybe<Chat_Flag>;
    /** insert data into the table: "chat.Message" */
    readonly insert_chat_Message?: Maybe<Chat_Message_Mutation_Response>;
    /** insert data into the table: "chat.MessageType" */
    readonly insert_chat_MessageType?: Maybe<Chat_MessageType_Mutation_Response>;
    /** insert a single row into the table: "chat.MessageType" */
    readonly insert_chat_MessageType_one?: Maybe<Chat_MessageType>;
    /** insert a single row into the table: "chat.Message" */
    readonly insert_chat_Message_one?: Maybe<Chat_Message>;
    /** insert data into the table: "chat.Pin" */
    readonly insert_chat_Pin?: Maybe<Chat_Pin_Mutation_Response>;
    /** insert a single row into the table: "chat.Pin" */
    readonly insert_chat_Pin_one?: Maybe<Chat_Pin>;
    /** insert data into the table: "chat.Reaction" */
    readonly insert_chat_Reaction?: Maybe<Chat_Reaction_Mutation_Response>;
    /** insert data into the table: "chat.ReactionType" */
    readonly insert_chat_ReactionType?: Maybe<Chat_ReactionType_Mutation_Response>;
    /** insert a single row into the table: "chat.ReactionType" */
    readonly insert_chat_ReactionType_one?: Maybe<Chat_ReactionType>;
    /** insert a single row into the table: "chat.Reaction" */
    readonly insert_chat_Reaction_one?: Maybe<Chat_Reaction>;
    /** insert data into the table: "chat.ReadUpToIndex" */
    readonly insert_chat_ReadUpToIndex?: Maybe<Chat_ReadUpToIndex_Mutation_Response>;
    /** insert a single row into the table: "chat.ReadUpToIndex" */
    readonly insert_chat_ReadUpToIndex_one?: Maybe<Chat_ReadUpToIndex>;
    /** insert data into the table: "chat.Subscription" */
    readonly insert_chat_Subscription?: Maybe<Chat_Subscription_Mutation_Response>;
    /** insert a single row into the table: "chat.Subscription" */
    readonly insert_chat_Subscription_one?: Maybe<Chat_Subscription>;
    /** insert data into the table: "collection.Exhibition" */
    readonly insert_collection_Exhibition?: Maybe<Collection_Exhibition_Mutation_Response>;
    /** insert a single row into the table: "collection.Exhibition" */
    readonly insert_collection_Exhibition_one?: Maybe<Collection_Exhibition>;
    /** insert data into the table: "collection.ProgramPerson" */
    readonly insert_collection_ProgramPerson?: Maybe<Collection_ProgramPerson_Mutation_Response>;
    /** insert a single row into the table: "collection.ProgramPerson" */
    readonly insert_collection_ProgramPerson_one?: Maybe<Collection_ProgramPerson>;
    /** insert data into the table: "collection.Tag" */
    readonly insert_collection_Tag?: Maybe<Collection_Tag_Mutation_Response>;
    /** insert a single row into the table: "collection.Tag" */
    readonly insert_collection_Tag_one?: Maybe<Collection_Tag>;
    /** insert data into the table: "conference.Conference" */
    readonly insert_conference_Conference?: Maybe<Conference_Conference_Mutation_Response>;
    /** insert a single row into the table: "conference.Conference" */
    readonly insert_conference_Conference_one?: Maybe<Conference_Conference>;
    /** insert data into the table: "conference.Configuration" */
    readonly insert_conference_Configuration?: Maybe<Conference_Configuration_Mutation_Response>;
    /** insert data into the table: "conference.ConfigurationKey" */
    readonly insert_conference_ConfigurationKey?: Maybe<Conference_ConfigurationKey_Mutation_Response>;
    /** insert a single row into the table: "conference.ConfigurationKey" */
    readonly insert_conference_ConfigurationKey_one?: Maybe<Conference_ConfigurationKey>;
    /** insert a single row into the table: "conference.Configuration" */
    readonly insert_conference_Configuration_one?: Maybe<Conference_Configuration>;
    /** insert data into the table: "conference.DemoCode" */
    readonly insert_conference_DemoCode?: Maybe<Conference_DemoCode_Mutation_Response>;
    /** insert a single row into the table: "conference.DemoCode" */
    readonly insert_conference_DemoCode_one?: Maybe<Conference_DemoCode>;
    /** insert data into the table: "conference.Quota" */
    readonly insert_conference_Quota?: Maybe<Conference_Quota_Mutation_Response>;
    /** insert a single row into the table: "conference.Quota" */
    readonly insert_conference_Quota_one?: Maybe<Conference_Quota>;
    /** insert data into the table: "conference.Subconference" */
    readonly insert_conference_Subconference?: Maybe<Conference_Subconference_Mutation_Response>;
    /** insert a single row into the table: "conference.Subconference" */
    readonly insert_conference_Subconference_one?: Maybe<Conference_Subconference>;
    /** insert data into the table: "conference.Usage" */
    readonly insert_conference_Usage?: Maybe<Conference_Usage_Mutation_Response>;
    /** insert a single row into the table: "conference.Usage" */
    readonly insert_conference_Usage_one?: Maybe<Conference_Usage>;
    /** insert data into the table: "conference.VisibilityLevel" */
    readonly insert_conference_VisibilityLevel?: Maybe<Conference_VisibilityLevel_Mutation_Response>;
    /** insert a single row into the table: "conference.VisibilityLevel" */
    readonly insert_conference_VisibilityLevel_one?: Maybe<Conference_VisibilityLevel>;
    /** insert data into the table: "content.Element" */
    readonly insert_content_Element?: Maybe<Content_Element_Mutation_Response>;
    /** insert data into the table: "content.ElementType" */
    readonly insert_content_ElementType?: Maybe<Content_ElementType_Mutation_Response>;
    /** insert a single row into the table: "content.ElementType" */
    readonly insert_content_ElementType_one?: Maybe<Content_ElementType>;
    /** insert a single row into the table: "content.Element" */
    readonly insert_content_Element_one?: Maybe<Content_Element>;
    /** insert data into the table: "content.Item" */
    readonly insert_content_Item?: Maybe<Content_Item_Mutation_Response>;
    /** insert data into the table: "content.ItemExhibition" */
    readonly insert_content_ItemExhibition?: Maybe<Content_ItemExhibition_Mutation_Response>;
    /** insert a single row into the table: "content.ItemExhibition" */
    readonly insert_content_ItemExhibition_one?: Maybe<Content_ItemExhibition>;
    /** insert data into the table: "content.ItemProgramPerson" */
    readonly insert_content_ItemProgramPerson?: Maybe<Content_ItemProgramPerson_Mutation_Response>;
    /** insert a single row into the table: "content.ItemProgramPerson" */
    readonly insert_content_ItemProgramPerson_one?: Maybe<Content_ItemProgramPerson>;
    /** insert data into the table: "content.ItemTag" */
    readonly insert_content_ItemTag?: Maybe<Content_ItemTag_Mutation_Response>;
    /** insert a single row into the table: "content.ItemTag" */
    readonly insert_content_ItemTag_one?: Maybe<Content_ItemTag>;
    /** insert data into the table: "content.ItemType" */
    readonly insert_content_ItemType?: Maybe<Content_ItemType_Mutation_Response>;
    /** insert a single row into the table: "content.ItemType" */
    readonly insert_content_ItemType_one?: Maybe<Content_ItemType>;
    /** insert a single row into the table: "content.Item" */
    readonly insert_content_Item_one?: Maybe<Content_Item>;
    /** insert data into the table: "job_queues.ChannelStackCreateJob" */
    readonly insert_job_queues_ChannelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.ChannelStackCreateJob" */
    readonly insert_job_queues_ChannelStackCreateJob_one?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** insert data into the table: "job_queues.ChannelStackDeleteJob" */
    readonly insert_job_queues_ChannelStackDeleteJob?: Maybe<Job_Queues_ChannelStackDeleteJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.ChannelStackDeleteJob" */
    readonly insert_job_queues_ChannelStackDeleteJob_one?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** insert data into the table: "job_queues.ChannelStackUpdateJob" */
    readonly insert_job_queues_ChannelStackUpdateJob?: Maybe<Job_Queues_ChannelStackUpdateJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.ChannelStackUpdateJob" */
    readonly insert_job_queues_ChannelStackUpdateJob_one?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** insert data into the table: "job_queues.CombineVideosJob" */
    readonly insert_job_queues_CombineVideosJob?: Maybe<Job_Queues_CombineVideosJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.CombineVideosJob" */
    readonly insert_job_queues_CombineVideosJob_one?: Maybe<Job_Queues_CombineVideosJob>;
    /** insert data into the table: "job_queues.CustomEmailJob" */
    readonly insert_job_queues_CustomEmailJob?: Maybe<Job_Queues_CustomEmailJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.CustomEmailJob" */
    readonly insert_job_queues_CustomEmailJob_one?: Maybe<Job_Queues_CustomEmailJob>;
    /** insert data into the table: "job_queues.ImportJob" */
    readonly insert_job_queues_ImportJob?: Maybe<Job_Queues_ImportJob_Mutation_Response>;
    /** insert data into the table: "job_queues.ImportJobOutput" */
    readonly insert_job_queues_ImportJobOutput?: Maybe<Job_Queues_ImportJobOutput_Mutation_Response>;
    /** insert a single row into the table: "job_queues.ImportJobOutput" */
    readonly insert_job_queues_ImportJobOutput_one?: Maybe<Job_Queues_ImportJobOutput>;
    /** insert a single row into the table: "job_queues.ImportJob" */
    readonly insert_job_queues_ImportJob_one?: Maybe<Job_Queues_ImportJob>;
    /** insert data into the table: "job_queues.InvitationEmailJob" */
    readonly insert_job_queues_InvitationEmailJob?: Maybe<Job_Queues_InvitationEmailJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.InvitationEmailJob" */
    readonly insert_job_queues_InvitationEmailJob_one?: Maybe<Job_Queues_InvitationEmailJob>;
    /** insert data into the table: "job_queues.JobStatus" */
    readonly insert_job_queues_JobStatus?: Maybe<Job_Queues_JobStatus_Mutation_Response>;
    /** insert a single row into the table: "job_queues.JobStatus" */
    readonly insert_job_queues_JobStatus_one?: Maybe<Job_Queues_JobStatus>;
    /** insert data into the table: "job_queues.MediaPackageHarvestJob" */
    readonly insert_job_queues_MediaPackageHarvestJob?: Maybe<Job_Queues_MediaPackageHarvestJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.MediaPackageHarvestJob" */
    readonly insert_job_queues_MediaPackageHarvestJob_one?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** insert data into the table: "job_queues.PrepareJob" */
    readonly insert_job_queues_PrepareJob?: Maybe<Job_Queues_PrepareJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.PrepareJob" */
    readonly insert_job_queues_PrepareJob_one?: Maybe<Job_Queues_PrepareJob>;
    /** insert data into the table: "job_queues.PublishVideoJob" */
    readonly insert_job_queues_PublishVideoJob?: Maybe<Job_Queues_PublishVideoJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.PublishVideoJob" */
    readonly insert_job_queues_PublishVideoJob_one?: Maybe<Job_Queues_PublishVideoJob>;
    /** insert data into the table: "job_queues.SubmissionRequestEmailJob" */
    readonly insert_job_queues_SubmissionRequestEmailJob?: Maybe<Job_Queues_SubmissionRequestEmailJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.SubmissionRequestEmailJob" */
    readonly insert_job_queues_SubmissionRequestEmailJob_one?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** insert data into the table: "job_queues.UploadYouTubeVideoJob" */
    readonly insert_job_queues_UploadYouTubeVideoJob?: Maybe<Job_Queues_UploadYouTubeVideoJob_Mutation_Response>;
    /** insert a single row into the table: "job_queues.UploadYouTubeVideoJob" */
    readonly insert_job_queues_UploadYouTubeVideoJob_one?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    /** insert data into the table: "registrant.GoogleAccount" */
    readonly insert_registrant_GoogleAccount?: Maybe<Registrant_GoogleAccount_Mutation_Response>;
    /** insert a single row into the table: "registrant.GoogleAccount" */
    readonly insert_registrant_GoogleAccount_one?: Maybe<Registrant_GoogleAccount>;
    /** insert data into the table: "registrant.Group" */
    readonly insert_registrant_Group?: Maybe<Registrant_Group_Mutation_Response>;
    /** insert data into the table: "registrant.GroupRegistrant" */
    readonly insert_registrant_GroupRegistrant?: Maybe<Registrant_GroupRegistrant_Mutation_Response>;
    /** insert a single row into the table: "registrant.GroupRegistrant" */
    readonly insert_registrant_GroupRegistrant_one?: Maybe<Registrant_GroupRegistrant>;
    /** insert a single row into the table: "registrant.Group" */
    readonly insert_registrant_Group_one?: Maybe<Registrant_Group>;
    /** insert data into the table: "registrant.Invitation" */
    readonly insert_registrant_Invitation?: Maybe<Registrant_Invitation_Mutation_Response>;
    /** insert a single row into the table: "registrant.Invitation" */
    readonly insert_registrant_Invitation_one?: Maybe<Registrant_Invitation>;
    /** insert data into the table: "registrant.Profile" */
    readonly insert_registrant_Profile?: Maybe<Registrant_Profile_Mutation_Response>;
    /** insert a single row into the table: "registrant.Profile" */
    readonly insert_registrant_Profile_one?: Maybe<Registrant_Profile>;
    /** insert data into the table: "registrant.Registrant" */
    readonly insert_registrant_Registrant?: Maybe<Registrant_Registrant_Mutation_Response>;
    /** insert data into the table: "registrant.RegistrantRole" */
    readonly insert_registrant_RegistrantRole?: Maybe<Registrant_RegistrantRole_Mutation_Response>;
    /** insert a single row into the table: "registrant.RegistrantRole" */
    readonly insert_registrant_RegistrantRole_one?: Maybe<Registrant_RegistrantRole>;
    /** insert a single row into the table: "registrant.Registrant" */
    readonly insert_registrant_Registrant_one?: Maybe<Registrant_Registrant>;
    /** insert data into the table: "registrant.SavedVonageRoomRecording" */
    readonly insert_registrant_SavedVonageRoomRecording?: Maybe<Registrant_SavedVonageRoomRecording_Mutation_Response>;
    /** insert a single row into the table: "registrant.SavedVonageRoomRecording" */
    readonly insert_registrant_SavedVonageRoomRecording_one?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** insert data into the table: "registrant.SubconferenceMembership" */
    readonly insert_registrant_SubconferenceMembership?: Maybe<Registrant_SubconferenceMembership_Mutation_Response>;
    /** insert a single row into the table: "registrant.SubconferenceMembership" */
    readonly insert_registrant_SubconferenceMembership_one?: Maybe<Registrant_SubconferenceMembership>;
    /** insert data into the table: "room.Backend" */
    readonly insert_room_Backend?: Maybe<Room_Backend_Mutation_Response>;
    /** insert a single row into the table: "room.Backend" */
    readonly insert_room_Backend_one?: Maybe<Room_Backend>;
    /** insert data into the table: "room.ChimeMeeting" */
    readonly insert_room_ChimeMeeting?: Maybe<Room_ChimeMeeting_Mutation_Response>;
    /** insert a single row into the table: "room.ChimeMeeting" */
    readonly insert_room_ChimeMeeting_one?: Maybe<Room_ChimeMeeting>;
    /** insert data into the table: "room.ManagementMode" */
    readonly insert_room_ManagementMode?: Maybe<Room_ManagementMode_Mutation_Response>;
    /** insert a single row into the table: "room.ManagementMode" */
    readonly insert_room_ManagementMode_one?: Maybe<Room_ManagementMode>;
    /** insert data into the table: "room.PersonRole" */
    readonly insert_room_PersonRole?: Maybe<Room_PersonRole_Mutation_Response>;
    /** insert a single row into the table: "room.PersonRole" */
    readonly insert_room_PersonRole_one?: Maybe<Room_PersonRole>;
    /** insert data into the table: "room.Room" */
    readonly insert_room_Room?: Maybe<Room_Room_Mutation_Response>;
    /** insert data into the table: "room.RoomGroupMembership" */
    readonly insert_room_RoomGroupMembership?: Maybe<Room_RoomGroupMembership_Mutation_Response>;
    /** insert a single row into the table: "room.RoomGroupMembership" */
    readonly insert_room_RoomGroupMembership_one?: Maybe<Room_RoomGroupMembership>;
    /** insert data into the table: "room.RoomMembership" */
    readonly insert_room_RoomMembership?: Maybe<Room_RoomMembership_Mutation_Response>;
    /** insert a single row into the table: "room.RoomMembership" */
    readonly insert_room_RoomMembership_one?: Maybe<Room_RoomMembership>;
    /** insert a single row into the table: "room.Room" */
    readonly insert_room_Room_one?: Maybe<Room_Room>;
    /** insert data into the table: "room.ShuffleAlgorithm" */
    readonly insert_room_ShuffleAlgorithm?: Maybe<Room_ShuffleAlgorithm_Mutation_Response>;
    /** insert a single row into the table: "room.ShuffleAlgorithm" */
    readonly insert_room_ShuffleAlgorithm_one?: Maybe<Room_ShuffleAlgorithm>;
    /** insert data into the table: "room.ShufflePeriod" */
    readonly insert_room_ShufflePeriod?: Maybe<Room_ShufflePeriod_Mutation_Response>;
    /** insert a single row into the table: "room.ShufflePeriod" */
    readonly insert_room_ShufflePeriod_one?: Maybe<Room_ShufflePeriod>;
    /** insert data into the table: "room.ShuffleQueueEntry" */
    readonly insert_room_ShuffleQueueEntry?: Maybe<Room_ShuffleQueueEntry_Mutation_Response>;
    /** insert a single row into the table: "room.ShuffleQueueEntry" */
    readonly insert_room_ShuffleQueueEntry_one?: Maybe<Room_ShuffleQueueEntry>;
    /** insert data into the table: "room.ShuffleRoom" */
    readonly insert_room_ShuffleRoom?: Maybe<Room_ShuffleRoom_Mutation_Response>;
    /** insert a single row into the table: "room.ShuffleRoom" */
    readonly insert_room_ShuffleRoom_one?: Maybe<Room_ShuffleRoom>;
    /** insert data into the table: "schedule.Continuation" */
    readonly insert_schedule_Continuation?: Maybe<Schedule_Continuation_Mutation_Response>;
    /** insert a single row into the table: "schedule.Continuation" */
    readonly insert_schedule_Continuation_one?: Maybe<Schedule_Continuation>;
    /** insert data into the table: "schedule.CurrentEvents" */
    readonly insert_schedule_CurrentEvents?: Maybe<Schedule_CurrentEvents_Mutation_Response>;
    /** insert a single row into the table: "schedule.CurrentEvents" */
    readonly insert_schedule_CurrentEvents_one?: Maybe<Schedule_CurrentEvents>;
    /** insert data into the table: "schedule.Event" */
    readonly insert_schedule_Event?: Maybe<Schedule_Event_Mutation_Response>;
    /** insert data into the table: "schedule.EventProgramPerson" */
    readonly insert_schedule_EventProgramPerson?: Maybe<Schedule_EventProgramPerson_Mutation_Response>;
    /** insert data into the table: "schedule.EventProgramPersonRole" */
    readonly insert_schedule_EventProgramPersonRole?: Maybe<Schedule_EventProgramPersonRole_Mutation_Response>;
    /** insert a single row into the table: "schedule.EventProgramPersonRole" */
    readonly insert_schedule_EventProgramPersonRole_one?: Maybe<Schedule_EventProgramPersonRole>;
    /** insert a single row into the table: "schedule.EventProgramPerson" */
    readonly insert_schedule_EventProgramPerson_one?: Maybe<Schedule_EventProgramPerson>;
    /** insert a single row into the table: "schedule.Event" */
    readonly insert_schedule_Event_one?: Maybe<Schedule_Event>;
    /** insert data into the table: "schedule.Mode" */
    readonly insert_schedule_Mode?: Maybe<Schedule_Mode_Mutation_Response>;
    /** insert a single row into the table: "schedule.Mode" */
    readonly insert_schedule_Mode_one?: Maybe<Schedule_Mode>;
    /** insert data into the table: "schedule.StarredEvent" */
    readonly insert_schedule_StarredEvent?: Maybe<Schedule_StarredEvent_Mutation_Response>;
    /** insert a single row into the table: "schedule.StarredEvent" */
    readonly insert_schedule_StarredEvent_one?: Maybe<Schedule_StarredEvent>;
    /** insert data into the table: "sponsor.Tier" */
    readonly insert_sponsor_Tier?: Maybe<Sponsor_Tier_Mutation_Response>;
    /** insert data into the table: "sponsor.TierMember" */
    readonly insert_sponsor_TierMember?: Maybe<Sponsor_TierMember_Mutation_Response>;
    /** insert a single row into the table: "sponsor.TierMember" */
    readonly insert_sponsor_TierMember_one?: Maybe<Sponsor_TierMember>;
    /** insert a single row into the table: "sponsor.Tier" */
    readonly insert_sponsor_Tier_one?: Maybe<Sponsor_Tier>;
    /** insert data into the table: "system.Configuration" */
    readonly insert_system_Configuration?: Maybe<System_Configuration_Mutation_Response>;
    /** insert data into the table: "system.ConfigurationKey" */
    readonly insert_system_ConfigurationKey?: Maybe<System_ConfigurationKey_Mutation_Response>;
    /** insert a single row into the table: "system.ConfigurationKey" */
    readonly insert_system_ConfigurationKey_one?: Maybe<System_ConfigurationKey>;
    /** insert data into the table: "system.ConfigurationPermissionGrant" */
    readonly insert_system_ConfigurationPermissionGrant?: Maybe<System_ConfigurationPermissionGrant_Mutation_Response>;
    /** insert a single row into the table: "system.ConfigurationPermissionGrant" */
    readonly insert_system_ConfigurationPermissionGrant_one?: Maybe<System_ConfigurationPermissionGrant>;
    /** insert a single row into the table: "system.Configuration" */
    readonly insert_system_Configuration_one?: Maybe<System_Configuration>;
    /** insert data into the table: "system.SuperUserPermission" */
    readonly insert_system_SuperUserPermission?: Maybe<System_SuperUserPermission_Mutation_Response>;
    /** insert data into the table: "system.SuperUserPermissionGrant" */
    readonly insert_system_SuperUserPermissionGrant?: Maybe<System_SuperUserPermissionGrant_Mutation_Response>;
    /** insert a single row into the table: "system.SuperUserPermissionGrant" */
    readonly insert_system_SuperUserPermissionGrant_one?: Maybe<System_SuperUserPermissionGrant>;
    /** insert a single row into the table: "system.SuperUserPermission" */
    readonly insert_system_SuperUserPermission_one?: Maybe<System_SuperUserPermission>;
    /** insert data into the table: "video.ChannelStack" */
    readonly insert_video_ChannelStack?: Maybe<Video_ChannelStack_Mutation_Response>;
    /** insert a single row into the table: "video.ChannelStack" */
    readonly insert_video_ChannelStack_one?: Maybe<Video_ChannelStack>;
    /** insert data into the table: "video.EventVonageSession" */
    readonly insert_video_EventVonageSession?: Maybe<Video_EventVonageSession_Mutation_Response>;
    /** insert a single row into the table: "video.EventVonageSession" */
    readonly insert_video_EventVonageSession_one?: Maybe<Video_EventVonageSession>;
    /** insert data into the table: "video.ImmediateSwitch" */
    readonly insert_video_ImmediateSwitch?: Maybe<Video_ImmediateSwitch_Mutation_Response>;
    /** insert a single row into the table: "video.ImmediateSwitch" */
    readonly insert_video_ImmediateSwitch_one?: Maybe<Video_ImmediateSwitch>;
    /** insert data into the table: "video.InputType" */
    readonly insert_video_InputType?: Maybe<Video_InputType_Mutation_Response>;
    /** insert a single row into the table: "video.InputType" */
    readonly insert_video_InputType_one?: Maybe<Video_InputType>;
    /** insert data into the table: "video.MediaLiveChannelStatus" */
    readonly insert_video_MediaLiveChannelStatus?: Maybe<Video_MediaLiveChannelStatus_Mutation_Response>;
    /** insert a single row into the table: "video.MediaLiveChannelStatus" */
    readonly insert_video_MediaLiveChannelStatus_one?: Maybe<Video_MediaLiveChannelStatus>;
    /** insert data into the table: "video.RoomRtmpInput" */
    readonly insert_video_RoomRtmpInput?: Maybe<Video_RoomRtmpInput_Mutation_Response>;
    /** insert a single row into the table: "video.RoomRtmpInput" */
    readonly insert_video_RoomRtmpInput_one?: Maybe<Video_RoomRtmpInput>;
    /** insert data into the table: "video.RoomRtmpOutput" */
    readonly insert_video_RoomRtmpOutput?: Maybe<Video_RoomRtmpOutput_Mutation_Response>;
    /** insert a single row into the table: "video.RoomRtmpOutput" */
    readonly insert_video_RoomRtmpOutput_one?: Maybe<Video_RoomRtmpOutput>;
    /** insert data into the table: "video.RtmpInput" */
    readonly insert_video_RtmpInput?: Maybe<Video_RtmpInput_Mutation_Response>;
    /** insert a single row into the table: "video.RtmpInput" */
    readonly insert_video_RtmpInput_one?: Maybe<Video_RtmpInput>;
    /** insert data into the table: "video.TranscriptionJob" */
    readonly insert_video_TranscriptionJob?: Maybe<Video_TranscriptionJob_Mutation_Response>;
    /** insert a single row into the table: "video.TranscriptionJob" */
    readonly insert_video_TranscriptionJob_one?: Maybe<Video_TranscriptionJob>;
    /** insert data into the table: "video.VideoRenderJob" */
    readonly insert_video_VideoRenderJob?: Maybe<Video_VideoRenderJob_Mutation_Response>;
    /** insert a single row into the table: "video.VideoRenderJob" */
    readonly insert_video_VideoRenderJob_one?: Maybe<Video_VideoRenderJob>;
    /** insert data into the table: "video.VonageParticipantStream" */
    readonly insert_video_VonageParticipantStream?: Maybe<Video_VonageParticipantStream_Mutation_Response>;
    /** insert a single row into the table: "video.VonageParticipantStream" */
    readonly insert_video_VonageParticipantStream_one?: Maybe<Video_VonageParticipantStream>;
    /** insert data into the table: "video.VonageRoomRecording" */
    readonly insert_video_VonageRoomRecording?: Maybe<Video_VonageRoomRecording_Mutation_Response>;
    /** insert a single row into the table: "video.VonageRoomRecording" */
    readonly insert_video_VonageRoomRecording_one?: Maybe<Video_VonageRoomRecording>;
    /** insert data into the table: "video.VonageSessionLayout" */
    readonly insert_video_VonageSessionLayout?: Maybe<Video_VonageSessionLayout_Mutation_Response>;
    /** insert a single row into the table: "video.VonageSessionLayout" */
    readonly insert_video_VonageSessionLayout_one?: Maybe<Video_VonageSessionLayout>;
    /** insert data into the table: "video.VonageVideoPlaybackCommand" */
    readonly insert_video_VonageVideoPlaybackCommand?: Maybe<Video_VonageVideoPlaybackCommand_Mutation_Response>;
    /** insert a single row into the table: "video.VonageVideoPlaybackCommand" */
    readonly insert_video_VonageVideoPlaybackCommand_one?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** insert data into the table: "video.YouTubeUpload" */
    readonly insert_video_YouTubeUpload?: Maybe<Video_YouTubeUpload_Mutation_Response>;
    /** insert a single row into the table: "video.YouTubeUpload" */
    readonly insert_video_YouTubeUpload_one?: Maybe<Video_YouTubeUpload>;
    readonly invitationConfirmCurrent?: Maybe<ConfirmInvitationOutput>;
    readonly joinEventVonageSession?: Maybe<JoinEventVonageSessionOutput>;
    readonly joinRoomChimeSession?: Maybe<JoinRoomChimeSessionOutput>;
    readonly joinRoomVonageSession?: Maybe<JoinRoomVonageSessionOutput>;
    readonly migrateElement?: Maybe<MigrateElementOutput>;
    readonly migrateProfilePhoto?: Maybe<MigrateProfilePhotoResponse>;
    readonly notifyEventEnded: NotifyEventEnded;
    readonly notifyEventStarted: NotifyEventStarted;
    readonly presence_Flush: PresenceFlushOutput;
    readonly refreshYouTubeData?: Maybe<RefreshYouTubeDataOutput>;
    /** execute VOLATILE function "schedule.shiftPresentationTimes" which returns "schedule.Event" */
    readonly schedule_shiftPresentationTimes: ReadonlyArray<Schedule_Event>;
    /** execute VOLATILE function "schedule.shiftTimes" which returns "schedule.Event" */
    readonly schedule_shiftTimes: ReadonlyArray<Schedule_Event>;
    readonly stopEventBroadcast?: Maybe<StopEventBroadcastOutput>;
    readonly submitGoogleOAuthCode?: Maybe<SubmitGoogleOAuthCodeOutput>;
    readonly submitUploadableElement?: Maybe<SubmitUploadableElementOutput>;
    readonly toggleVonageRecordingState?: Maybe<ToggleVonageRecordingStateOutput>;
    readonly updateProfilePhoto?: Maybe<UpdateProfilePhotoResponse>;
    readonly updateSubtitles?: Maybe<SubmitUpdatedSubtitlesOutput>;
    /** update data of the table: "Email" */
    readonly update_Email?: Maybe<Email_Mutation_Response>;
    /** update single row of the table: "Email" */
    readonly update_Email_by_pk?: Maybe<Email>;
    /** update data of the table: "PushNotificationSubscription" */
    readonly update_PushNotificationSubscription?: Maybe<PushNotificationSubscription_Mutation_Response>;
    /** update single row of the table: "PushNotificationSubscription" */
    readonly update_PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
    /** update data of the table: "User" */
    readonly update_User?: Maybe<User_Mutation_Response>;
    /** update single row of the table: "User" */
    readonly update_User_by_pk?: Maybe<User>;
    /** update data of the table: "analytics.AppStats" */
    readonly update_analytics_AppStats?: Maybe<Analytics_AppStats_Mutation_Response>;
    /** update single row of the table: "analytics.AppStats" */
    readonly update_analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
    /** update data of the table: "analytics.ContentElementStats" */
    readonly update_analytics_ContentElementStats?: Maybe<Analytics_ContentElementStats_Mutation_Response>;
    /** update single row of the table: "analytics.ContentElementStats" */
    readonly update_analytics_ContentElementStats_by_pk?: Maybe<Analytics_ContentElementStats>;
    /** update data of the table: "analytics.ContentItemStats" */
    readonly update_analytics_ContentItemStats?: Maybe<Analytics_ContentItemStats_Mutation_Response>;
    /** update single row of the table: "analytics.ContentItemStats" */
    readonly update_analytics_ContentItemStats_by_pk?: Maybe<Analytics_ContentItemStats>;
    /** update data of the table: "analytics.ElementTotalViews" */
    readonly update_analytics_ElementTotalViews?: Maybe<Analytics_ElementTotalViews_Mutation_Response>;
    /** update single row of the table: "analytics.ElementTotalViews" */
    readonly update_analytics_ElementTotalViews_by_pk?: Maybe<Analytics_ElementTotalViews>;
    /** update data of the table: "analytics.ItemTotalViews" */
    readonly update_analytics_ItemTotalViews?: Maybe<Analytics_ItemTotalViews_Mutation_Response>;
    /** update single row of the table: "analytics.ItemTotalViews" */
    readonly update_analytics_ItemTotalViews_by_pk?: Maybe<Analytics_ItemTotalViews>;
    /** update data of the table: "analytics.RoomPresence" */
    readonly update_analytics_RoomPresence?: Maybe<Analytics_RoomPresence_Mutation_Response>;
    /** update single row of the table: "analytics.RoomPresence" */
    readonly update_analytics_RoomPresence_by_pk?: Maybe<Analytics_RoomPresence>;
    /** update data of the table: "analytics.RoomStats" */
    readonly update_analytics_RoomStats?: Maybe<Analytics_RoomStats_Mutation_Response>;
    /** update single row of the table: "analytics.RoomStats" */
    readonly update_analytics_RoomStats_by_pk?: Maybe<Analytics_RoomStats>;
    /** update data of the table: "chat.Chat" */
    readonly update_chat_Chat?: Maybe<Chat_Chat_Mutation_Response>;
    /** update single row of the table: "chat.Chat" */
    readonly update_chat_Chat_by_pk?: Maybe<Chat_Chat>;
    /** update data of the table: "chat.Flag" */
    readonly update_chat_Flag?: Maybe<Chat_Flag_Mutation_Response>;
    /** update data of the table: "chat.FlagType" */
    readonly update_chat_FlagType?: Maybe<Chat_FlagType_Mutation_Response>;
    /** update single row of the table: "chat.FlagType" */
    readonly update_chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
    /** update single row of the table: "chat.Flag" */
    readonly update_chat_Flag_by_pk?: Maybe<Chat_Flag>;
    /** update data of the table: "chat.Message" */
    readonly update_chat_Message?: Maybe<Chat_Message_Mutation_Response>;
    /** update data of the table: "chat.MessageType" */
    readonly update_chat_MessageType?: Maybe<Chat_MessageType_Mutation_Response>;
    /** update single row of the table: "chat.MessageType" */
    readonly update_chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
    /** update single row of the table: "chat.Message" */
    readonly update_chat_Message_by_pk?: Maybe<Chat_Message>;
    /** update data of the table: "chat.Pin" */
    readonly update_chat_Pin?: Maybe<Chat_Pin_Mutation_Response>;
    /** update single row of the table: "chat.Pin" */
    readonly update_chat_Pin_by_pk?: Maybe<Chat_Pin>;
    /** update data of the table: "chat.Reaction" */
    readonly update_chat_Reaction?: Maybe<Chat_Reaction_Mutation_Response>;
    /** update data of the table: "chat.ReactionType" */
    readonly update_chat_ReactionType?: Maybe<Chat_ReactionType_Mutation_Response>;
    /** update single row of the table: "chat.ReactionType" */
    readonly update_chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
    /** update single row of the table: "chat.Reaction" */
    readonly update_chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
    /** update data of the table: "chat.ReadUpToIndex" */
    readonly update_chat_ReadUpToIndex?: Maybe<Chat_ReadUpToIndex_Mutation_Response>;
    /** update single row of the table: "chat.ReadUpToIndex" */
    readonly update_chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
    /** update data of the table: "chat.Subscription" */
    readonly update_chat_Subscription?: Maybe<Chat_Subscription_Mutation_Response>;
    /** update single row of the table: "chat.Subscription" */
    readonly update_chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
    /** update data of the table: "collection.Exhibition" */
    readonly update_collection_Exhibition?: Maybe<Collection_Exhibition_Mutation_Response>;
    /** update single row of the table: "collection.Exhibition" */
    readonly update_collection_Exhibition_by_pk?: Maybe<Collection_Exhibition>;
    /** update data of the table: "collection.ProgramPerson" */
    readonly update_collection_ProgramPerson?: Maybe<Collection_ProgramPerson_Mutation_Response>;
    /** update single row of the table: "collection.ProgramPerson" */
    readonly update_collection_ProgramPerson_by_pk?: Maybe<Collection_ProgramPerson>;
    /** update data of the table: "collection.Tag" */
    readonly update_collection_Tag?: Maybe<Collection_Tag_Mutation_Response>;
    /** update single row of the table: "collection.Tag" */
    readonly update_collection_Tag_by_pk?: Maybe<Collection_Tag>;
    /** update data of the table: "conference.Conference" */
    readonly update_conference_Conference?: Maybe<Conference_Conference_Mutation_Response>;
    /** update single row of the table: "conference.Conference" */
    readonly update_conference_Conference_by_pk?: Maybe<Conference_Conference>;
    /** update data of the table: "conference.Configuration" */
    readonly update_conference_Configuration?: Maybe<Conference_Configuration_Mutation_Response>;
    /** update data of the table: "conference.ConfigurationKey" */
    readonly update_conference_ConfigurationKey?: Maybe<Conference_ConfigurationKey_Mutation_Response>;
    /** update single row of the table: "conference.ConfigurationKey" */
    readonly update_conference_ConfigurationKey_by_pk?: Maybe<Conference_ConfigurationKey>;
    /** update single row of the table: "conference.Configuration" */
    readonly update_conference_Configuration_by_pk?: Maybe<Conference_Configuration>;
    /** update data of the table: "conference.DemoCode" */
    readonly update_conference_DemoCode?: Maybe<Conference_DemoCode_Mutation_Response>;
    /** update single row of the table: "conference.DemoCode" */
    readonly update_conference_DemoCode_by_pk?: Maybe<Conference_DemoCode>;
    /** update data of the table: "conference.Quota" */
    readonly update_conference_Quota?: Maybe<Conference_Quota_Mutation_Response>;
    /** update single row of the table: "conference.Quota" */
    readonly update_conference_Quota_by_pk?: Maybe<Conference_Quota>;
    /** update data of the table: "conference.Subconference" */
    readonly update_conference_Subconference?: Maybe<Conference_Subconference_Mutation_Response>;
    /** update single row of the table: "conference.Subconference" */
    readonly update_conference_Subconference_by_pk?: Maybe<Conference_Subconference>;
    /** update data of the table: "conference.Usage" */
    readonly update_conference_Usage?: Maybe<Conference_Usage_Mutation_Response>;
    /** update single row of the table: "conference.Usage" */
    readonly update_conference_Usage_by_pk?: Maybe<Conference_Usage>;
    /** update data of the table: "conference.VisibilityLevel" */
    readonly update_conference_VisibilityLevel?: Maybe<Conference_VisibilityLevel_Mutation_Response>;
    /** update single row of the table: "conference.VisibilityLevel" */
    readonly update_conference_VisibilityLevel_by_pk?: Maybe<Conference_VisibilityLevel>;
    /** update data of the table: "content.Element" */
    readonly update_content_Element?: Maybe<Content_Element_Mutation_Response>;
    /** update data of the table: "content.ElementType" */
    readonly update_content_ElementType?: Maybe<Content_ElementType_Mutation_Response>;
    /** update single row of the table: "content.ElementType" */
    readonly update_content_ElementType_by_pk?: Maybe<Content_ElementType>;
    /** update single row of the table: "content.Element" */
    readonly update_content_Element_by_pk?: Maybe<Content_Element>;
    /** update data of the table: "content.Item" */
    readonly update_content_Item?: Maybe<Content_Item_Mutation_Response>;
    /** update data of the table: "content.ItemExhibition" */
    readonly update_content_ItemExhibition?: Maybe<Content_ItemExhibition_Mutation_Response>;
    /** update single row of the table: "content.ItemExhibition" */
    readonly update_content_ItemExhibition_by_pk?: Maybe<Content_ItemExhibition>;
    /** update data of the table: "content.ItemProgramPerson" */
    readonly update_content_ItemProgramPerson?: Maybe<Content_ItemProgramPerson_Mutation_Response>;
    /** update single row of the table: "content.ItemProgramPerson" */
    readonly update_content_ItemProgramPerson_by_pk?: Maybe<Content_ItemProgramPerson>;
    /** update data of the table: "content.ItemTag" */
    readonly update_content_ItemTag?: Maybe<Content_ItemTag_Mutation_Response>;
    /** update single row of the table: "content.ItemTag" */
    readonly update_content_ItemTag_by_pk?: Maybe<Content_ItemTag>;
    /** update data of the table: "content.ItemType" */
    readonly update_content_ItemType?: Maybe<Content_ItemType_Mutation_Response>;
    /** update single row of the table: "content.ItemType" */
    readonly update_content_ItemType_by_pk?: Maybe<Content_ItemType>;
    /** update single row of the table: "content.Item" */
    readonly update_content_Item_by_pk?: Maybe<Content_Item>;
    /** update data of the table: "job_queues.ChannelStackCreateJob" */
    readonly update_job_queues_ChannelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Mutation_Response>;
    /** update single row of the table: "job_queues.ChannelStackCreateJob" */
    readonly update_job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** update data of the table: "job_queues.ChannelStackDeleteJob" */
    readonly update_job_queues_ChannelStackDeleteJob?: Maybe<Job_Queues_ChannelStackDeleteJob_Mutation_Response>;
    /** update single row of the table: "job_queues.ChannelStackDeleteJob" */
    readonly update_job_queues_ChannelStackDeleteJob_by_pk?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** update data of the table: "job_queues.ChannelStackUpdateJob" */
    readonly update_job_queues_ChannelStackUpdateJob?: Maybe<Job_Queues_ChannelStackUpdateJob_Mutation_Response>;
    /** update single row of the table: "job_queues.ChannelStackUpdateJob" */
    readonly update_job_queues_ChannelStackUpdateJob_by_pk?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** update data of the table: "job_queues.CombineVideosJob" */
    readonly update_job_queues_CombineVideosJob?: Maybe<Job_Queues_CombineVideosJob_Mutation_Response>;
    /** update single row of the table: "job_queues.CombineVideosJob" */
    readonly update_job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
    /** update data of the table: "job_queues.CustomEmailJob" */
    readonly update_job_queues_CustomEmailJob?: Maybe<Job_Queues_CustomEmailJob_Mutation_Response>;
    /** update single row of the table: "job_queues.CustomEmailJob" */
    readonly update_job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
    /** update data of the table: "job_queues.ImportJob" */
    readonly update_job_queues_ImportJob?: Maybe<Job_Queues_ImportJob_Mutation_Response>;
    /** update data of the table: "job_queues.ImportJobOutput" */
    readonly update_job_queues_ImportJobOutput?: Maybe<Job_Queues_ImportJobOutput_Mutation_Response>;
    /** update single row of the table: "job_queues.ImportJobOutput" */
    readonly update_job_queues_ImportJobOutput_by_pk?: Maybe<Job_Queues_ImportJobOutput>;
    /** update single row of the table: "job_queues.ImportJob" */
    readonly update_job_queues_ImportJob_by_pk?: Maybe<Job_Queues_ImportJob>;
    /** update data of the table: "job_queues.InvitationEmailJob" */
    readonly update_job_queues_InvitationEmailJob?: Maybe<Job_Queues_InvitationEmailJob_Mutation_Response>;
    /** update single row of the table: "job_queues.InvitationEmailJob" */
    readonly update_job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
    /** update data of the table: "job_queues.JobStatus" */
    readonly update_job_queues_JobStatus?: Maybe<Job_Queues_JobStatus_Mutation_Response>;
    /** update single row of the table: "job_queues.JobStatus" */
    readonly update_job_queues_JobStatus_by_pk?: Maybe<Job_Queues_JobStatus>;
    /** update data of the table: "job_queues.MediaPackageHarvestJob" */
    readonly update_job_queues_MediaPackageHarvestJob?: Maybe<Job_Queues_MediaPackageHarvestJob_Mutation_Response>;
    /** update single row of the table: "job_queues.MediaPackageHarvestJob" */
    readonly update_job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** update data of the table: "job_queues.PrepareJob" */
    readonly update_job_queues_PrepareJob?: Maybe<Job_Queues_PrepareJob_Mutation_Response>;
    /** update single row of the table: "job_queues.PrepareJob" */
    readonly update_job_queues_PrepareJob_by_pk?: Maybe<Job_Queues_PrepareJob>;
    /** update data of the table: "job_queues.PublishVideoJob" */
    readonly update_job_queues_PublishVideoJob?: Maybe<Job_Queues_PublishVideoJob_Mutation_Response>;
    /** update single row of the table: "job_queues.PublishVideoJob" */
    readonly update_job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
    /** update data of the table: "job_queues.SubmissionRequestEmailJob" */
    readonly update_job_queues_SubmissionRequestEmailJob?: Maybe<Job_Queues_SubmissionRequestEmailJob_Mutation_Response>;
    /** update single row of the table: "job_queues.SubmissionRequestEmailJob" */
    readonly update_job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** update data of the table: "job_queues.UploadYouTubeVideoJob" */
    readonly update_job_queues_UploadYouTubeVideoJob?: Maybe<Job_Queues_UploadYouTubeVideoJob_Mutation_Response>;
    /** update single row of the table: "job_queues.UploadYouTubeVideoJob" */
    readonly update_job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    /** update data of the table: "registrant.GoogleAccount" */
    readonly update_registrant_GoogleAccount?: Maybe<Registrant_GoogleAccount_Mutation_Response>;
    /** update single row of the table: "registrant.GoogleAccount" */
    readonly update_registrant_GoogleAccount_by_pk?: Maybe<Registrant_GoogleAccount>;
    /** update data of the table: "registrant.Group" */
    readonly update_registrant_Group?: Maybe<Registrant_Group_Mutation_Response>;
    /** update data of the table: "registrant.GroupRegistrant" */
    readonly update_registrant_GroupRegistrant?: Maybe<Registrant_GroupRegistrant_Mutation_Response>;
    /** update single row of the table: "registrant.GroupRegistrant" */
    readonly update_registrant_GroupRegistrant_by_pk?: Maybe<Registrant_GroupRegistrant>;
    /** update single row of the table: "registrant.Group" */
    readonly update_registrant_Group_by_pk?: Maybe<Registrant_Group>;
    /** update data of the table: "registrant.Invitation" */
    readonly update_registrant_Invitation?: Maybe<Registrant_Invitation_Mutation_Response>;
    /** update single row of the table: "registrant.Invitation" */
    readonly update_registrant_Invitation_by_pk?: Maybe<Registrant_Invitation>;
    /** update data of the table: "registrant.Profile" */
    readonly update_registrant_Profile?: Maybe<Registrant_Profile_Mutation_Response>;
    /** update single row of the table: "registrant.Profile" */
    readonly update_registrant_Profile_by_pk?: Maybe<Registrant_Profile>;
    /** update data of the table: "registrant.Registrant" */
    readonly update_registrant_Registrant?: Maybe<Registrant_Registrant_Mutation_Response>;
    /** update data of the table: "registrant.RegistrantRole" */
    readonly update_registrant_RegistrantRole?: Maybe<Registrant_RegistrantRole_Mutation_Response>;
    /** update single row of the table: "registrant.RegistrantRole" */
    readonly update_registrant_RegistrantRole_by_pk?: Maybe<Registrant_RegistrantRole>;
    /** update single row of the table: "registrant.Registrant" */
    readonly update_registrant_Registrant_by_pk?: Maybe<Registrant_Registrant>;
    /** update data of the table: "registrant.SavedVonageRoomRecording" */
    readonly update_registrant_SavedVonageRoomRecording?: Maybe<Registrant_SavedVonageRoomRecording_Mutation_Response>;
    /** update single row of the table: "registrant.SavedVonageRoomRecording" */
    readonly update_registrant_SavedVonageRoomRecording_by_pk?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** update data of the table: "registrant.SubconferenceMembership" */
    readonly update_registrant_SubconferenceMembership?: Maybe<Registrant_SubconferenceMembership_Mutation_Response>;
    /** update single row of the table: "registrant.SubconferenceMembership" */
    readonly update_registrant_SubconferenceMembership_by_pk?: Maybe<Registrant_SubconferenceMembership>;
    /** update data of the table: "room.Backend" */
    readonly update_room_Backend?: Maybe<Room_Backend_Mutation_Response>;
    /** update single row of the table: "room.Backend" */
    readonly update_room_Backend_by_pk?: Maybe<Room_Backend>;
    /** update data of the table: "room.ChimeMeeting" */
    readonly update_room_ChimeMeeting?: Maybe<Room_ChimeMeeting_Mutation_Response>;
    /** update single row of the table: "room.ChimeMeeting" */
    readonly update_room_ChimeMeeting_by_pk?: Maybe<Room_ChimeMeeting>;
    /** update data of the table: "room.ManagementMode" */
    readonly update_room_ManagementMode?: Maybe<Room_ManagementMode_Mutation_Response>;
    /** update single row of the table: "room.ManagementMode" */
    readonly update_room_ManagementMode_by_pk?: Maybe<Room_ManagementMode>;
    /** update data of the table: "room.PersonRole" */
    readonly update_room_PersonRole?: Maybe<Room_PersonRole_Mutation_Response>;
    /** update single row of the table: "room.PersonRole" */
    readonly update_room_PersonRole_by_pk?: Maybe<Room_PersonRole>;
    /** update data of the table: "room.Room" */
    readonly update_room_Room?: Maybe<Room_Room_Mutation_Response>;
    /** update data of the table: "room.RoomGroupMembership" */
    readonly update_room_RoomGroupMembership?: Maybe<Room_RoomGroupMembership_Mutation_Response>;
    /** update single row of the table: "room.RoomGroupMembership" */
    readonly update_room_RoomGroupMembership_by_pk?: Maybe<Room_RoomGroupMembership>;
    /** update data of the table: "room.RoomMembership" */
    readonly update_room_RoomMembership?: Maybe<Room_RoomMembership_Mutation_Response>;
    /** update single row of the table: "room.RoomMembership" */
    readonly update_room_RoomMembership_by_pk?: Maybe<Room_RoomMembership>;
    /** update single row of the table: "room.Room" */
    readonly update_room_Room_by_pk?: Maybe<Room_Room>;
    /** update data of the table: "room.ShuffleAlgorithm" */
    readonly update_room_ShuffleAlgorithm?: Maybe<Room_ShuffleAlgorithm_Mutation_Response>;
    /** update single row of the table: "room.ShuffleAlgorithm" */
    readonly update_room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
    /** update data of the table: "room.ShufflePeriod" */
    readonly update_room_ShufflePeriod?: Maybe<Room_ShufflePeriod_Mutation_Response>;
    /** update single row of the table: "room.ShufflePeriod" */
    readonly update_room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
    /** update data of the table: "room.ShuffleQueueEntry" */
    readonly update_room_ShuffleQueueEntry?: Maybe<Room_ShuffleQueueEntry_Mutation_Response>;
    /** update single row of the table: "room.ShuffleQueueEntry" */
    readonly update_room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
    /** update data of the table: "room.ShuffleRoom" */
    readonly update_room_ShuffleRoom?: Maybe<Room_ShuffleRoom_Mutation_Response>;
    /** update single row of the table: "room.ShuffleRoom" */
    readonly update_room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
    /** update data of the table: "schedule.Continuation" */
    readonly update_schedule_Continuation?: Maybe<Schedule_Continuation_Mutation_Response>;
    /** update single row of the table: "schedule.Continuation" */
    readonly update_schedule_Continuation_by_pk?: Maybe<Schedule_Continuation>;
    /** update data of the table: "schedule.CurrentEvents" */
    readonly update_schedule_CurrentEvents?: Maybe<Schedule_CurrentEvents_Mutation_Response>;
    /** update data of the table: "schedule.Event" */
    readonly update_schedule_Event?: Maybe<Schedule_Event_Mutation_Response>;
    /** update data of the table: "schedule.EventProgramPerson" */
    readonly update_schedule_EventProgramPerson?: Maybe<Schedule_EventProgramPerson_Mutation_Response>;
    /** update data of the table: "schedule.EventProgramPersonRole" */
    readonly update_schedule_EventProgramPersonRole?: Maybe<Schedule_EventProgramPersonRole_Mutation_Response>;
    /** update single row of the table: "schedule.EventProgramPersonRole" */
    readonly update_schedule_EventProgramPersonRole_by_pk?: Maybe<Schedule_EventProgramPersonRole>;
    /** update single row of the table: "schedule.EventProgramPerson" */
    readonly update_schedule_EventProgramPerson_by_pk?: Maybe<Schedule_EventProgramPerson>;
    /** update single row of the table: "schedule.Event" */
    readonly update_schedule_Event_by_pk?: Maybe<Schedule_Event>;
    /** update data of the table: "schedule.Mode" */
    readonly update_schedule_Mode?: Maybe<Schedule_Mode_Mutation_Response>;
    /** update single row of the table: "schedule.Mode" */
    readonly update_schedule_Mode_by_pk?: Maybe<Schedule_Mode>;
    /** update data of the table: "schedule.StarredEvent" */
    readonly update_schedule_StarredEvent?: Maybe<Schedule_StarredEvent_Mutation_Response>;
    /** update single row of the table: "schedule.StarredEvent" */
    readonly update_schedule_StarredEvent_by_pk?: Maybe<Schedule_StarredEvent>;
    /** update data of the table: "sponsor.Tier" */
    readonly update_sponsor_Tier?: Maybe<Sponsor_Tier_Mutation_Response>;
    /** update data of the table: "sponsor.TierMember" */
    readonly update_sponsor_TierMember?: Maybe<Sponsor_TierMember_Mutation_Response>;
    /** update single row of the table: "sponsor.TierMember" */
    readonly update_sponsor_TierMember_by_pk?: Maybe<Sponsor_TierMember>;
    /** update single row of the table: "sponsor.Tier" */
    readonly update_sponsor_Tier_by_pk?: Maybe<Sponsor_Tier>;
    /** update data of the table: "system.Configuration" */
    readonly update_system_Configuration?: Maybe<System_Configuration_Mutation_Response>;
    /** update data of the table: "system.ConfigurationKey" */
    readonly update_system_ConfigurationKey?: Maybe<System_ConfigurationKey_Mutation_Response>;
    /** update single row of the table: "system.ConfigurationKey" */
    readonly update_system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
    /** update data of the table: "system.ConfigurationPermissionGrant" */
    readonly update_system_ConfigurationPermissionGrant?: Maybe<System_ConfigurationPermissionGrant_Mutation_Response>;
    /** update single row of the table: "system.ConfigurationPermissionGrant" */
    readonly update_system_ConfigurationPermissionGrant_by_pk?: Maybe<System_ConfigurationPermissionGrant>;
    /** update single row of the table: "system.Configuration" */
    readonly update_system_Configuration_by_pk?: Maybe<System_Configuration>;
    /** update data of the table: "system.SuperUserPermission" */
    readonly update_system_SuperUserPermission?: Maybe<System_SuperUserPermission_Mutation_Response>;
    /** update data of the table: "system.SuperUserPermissionGrant" */
    readonly update_system_SuperUserPermissionGrant?: Maybe<System_SuperUserPermissionGrant_Mutation_Response>;
    /** update single row of the table: "system.SuperUserPermissionGrant" */
    readonly update_system_SuperUserPermissionGrant_by_pk?: Maybe<System_SuperUserPermissionGrant>;
    /** update single row of the table: "system.SuperUserPermission" */
    readonly update_system_SuperUserPermission_by_pk?: Maybe<System_SuperUserPermission>;
    /** update data of the table: "video.ChannelStack" */
    readonly update_video_ChannelStack?: Maybe<Video_ChannelStack_Mutation_Response>;
    /** update single row of the table: "video.ChannelStack" */
    readonly update_video_ChannelStack_by_pk?: Maybe<Video_ChannelStack>;
    /** update data of the table: "video.EventVonageSession" */
    readonly update_video_EventVonageSession?: Maybe<Video_EventVonageSession_Mutation_Response>;
    /** update single row of the table: "video.EventVonageSession" */
    readonly update_video_EventVonageSession_by_pk?: Maybe<Video_EventVonageSession>;
    /** update data of the table: "video.ImmediateSwitch" */
    readonly update_video_ImmediateSwitch?: Maybe<Video_ImmediateSwitch_Mutation_Response>;
    /** update single row of the table: "video.ImmediateSwitch" */
    readonly update_video_ImmediateSwitch_by_pk?: Maybe<Video_ImmediateSwitch>;
    /** update data of the table: "video.InputType" */
    readonly update_video_InputType?: Maybe<Video_InputType_Mutation_Response>;
    /** update single row of the table: "video.InputType" */
    readonly update_video_InputType_by_pk?: Maybe<Video_InputType>;
    /** update data of the table: "video.MediaLiveChannelStatus" */
    readonly update_video_MediaLiveChannelStatus?: Maybe<Video_MediaLiveChannelStatus_Mutation_Response>;
    /** update single row of the table: "video.MediaLiveChannelStatus" */
    readonly update_video_MediaLiveChannelStatus_by_pk?: Maybe<Video_MediaLiveChannelStatus>;
    /** update data of the table: "video.RoomRtmpInput" */
    readonly update_video_RoomRtmpInput?: Maybe<Video_RoomRtmpInput_Mutation_Response>;
    /** update single row of the table: "video.RoomRtmpInput" */
    readonly update_video_RoomRtmpInput_by_pk?: Maybe<Video_RoomRtmpInput>;
    /** update data of the table: "video.RoomRtmpOutput" */
    readonly update_video_RoomRtmpOutput?: Maybe<Video_RoomRtmpOutput_Mutation_Response>;
    /** update single row of the table: "video.RoomRtmpOutput" */
    readonly update_video_RoomRtmpOutput_by_pk?: Maybe<Video_RoomRtmpOutput>;
    /** update data of the table: "video.RtmpInput" */
    readonly update_video_RtmpInput?: Maybe<Video_RtmpInput_Mutation_Response>;
    /** update single row of the table: "video.RtmpInput" */
    readonly update_video_RtmpInput_by_pk?: Maybe<Video_RtmpInput>;
    /** update data of the table: "video.TranscriptionJob" */
    readonly update_video_TranscriptionJob?: Maybe<Video_TranscriptionJob_Mutation_Response>;
    /** update single row of the table: "video.TranscriptionJob" */
    readonly update_video_TranscriptionJob_by_pk?: Maybe<Video_TranscriptionJob>;
    /** update data of the table: "video.VideoRenderJob" */
    readonly update_video_VideoRenderJob?: Maybe<Video_VideoRenderJob_Mutation_Response>;
    /** update single row of the table: "video.VideoRenderJob" */
    readonly update_video_VideoRenderJob_by_pk?: Maybe<Video_VideoRenderJob>;
    /** update data of the table: "video.VonageParticipantStream" */
    readonly update_video_VonageParticipantStream?: Maybe<Video_VonageParticipantStream_Mutation_Response>;
    /** update single row of the table: "video.VonageParticipantStream" */
    readonly update_video_VonageParticipantStream_by_pk?: Maybe<Video_VonageParticipantStream>;
    /** update data of the table: "video.VonageRoomRecording" */
    readonly update_video_VonageRoomRecording?: Maybe<Video_VonageRoomRecording_Mutation_Response>;
    /** update single row of the table: "video.VonageRoomRecording" */
    readonly update_video_VonageRoomRecording_by_pk?: Maybe<Video_VonageRoomRecording>;
    /** update data of the table: "video.VonageSessionLayout" */
    readonly update_video_VonageSessionLayout?: Maybe<Video_VonageSessionLayout_Mutation_Response>;
    /** update single row of the table: "video.VonageSessionLayout" */
    readonly update_video_VonageSessionLayout_by_pk?: Maybe<Video_VonageSessionLayout>;
    /** update data of the table: "video.VonageVideoPlaybackCommand" */
    readonly update_video_VonageVideoPlaybackCommand?: Maybe<Video_VonageVideoPlaybackCommand_Mutation_Response>;
    /** update single row of the table: "video.VonageVideoPlaybackCommand" */
    readonly update_video_VonageVideoPlaybackCommand_by_pk?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** update data of the table: "video.YouTubeUpload" */
    readonly update_video_YouTubeUpload?: Maybe<Video_YouTubeUpload_Mutation_Response>;
    /** update single row of the table: "video.YouTubeUpload" */
    readonly update_video_YouTubeUpload_by_pk?: Maybe<Video_YouTubeUpload>;
};

/** mutation root */
export type Mutation_RootConference_UpdateEventUsageArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

/** mutation root */
export type Mutation_RootCreateItemRoomArgs = {
    conferenceId: Scalars["uuid"];
    itemId: Scalars["uuid"];
    subconferenceId?: InputMaybe<Scalars["uuid"]>;
};

/** mutation root */
export type Mutation_RootCreateRoomDmArgs = {
    conferenceId: Scalars["uuid"];
    registrantIds: ReadonlyArray<InputMaybe<Scalars["uuid"]>>;
};

/** mutation root */
export type Mutation_RootDelete_EmailArgs = {
    where: Email_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Email_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_PushNotificationSubscriptionArgs = {
    where: PushNotificationSubscription_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_PushNotificationSubscription_By_PkArgs = {
    endpoint: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_UserArgs = {
    where: User_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_User_By_PkArgs = {
    id: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_AppStatsArgs = {
    where: Analytics_AppStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_AppStats_By_PkArgs = {
    id: Scalars["Int"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ContentElementStatsArgs = {
    where: Analytics_ContentElementStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ContentElementStats_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ContentItemStatsArgs = {
    where: Analytics_ContentItemStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ContentItemStats_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ElementTotalViewsArgs = {
    where: Analytics_ElementTotalViews_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ElementTotalViews_By_PkArgs = {
    elementId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ItemTotalViewsArgs = {
    where: Analytics_ItemTotalViews_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_ItemTotalViews_By_PkArgs = {
    itemId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_RoomPresenceArgs = {
    where: Analytics_RoomPresence_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_RoomPresence_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Analytics_RoomStatsArgs = {
    where: Analytics_RoomStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Analytics_RoomStats_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_ChatArgs = {
    where: Chat_Chat_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_Chat_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_FlagArgs = {
    where: Chat_Flag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_FlagTypeArgs = {
    where: Chat_FlagType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_FlagType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_Flag_By_PkArgs = {
    id: Scalars["Int"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_MessageArgs = {
    where: Chat_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_MessageTypeArgs = {
    where: Chat_MessageType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_MessageType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_Message_By_PkArgs = {
    id: Scalars["Int"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_PinArgs = {
    where: Chat_Pin_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_Pin_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReactionArgs = {
    where: Chat_Reaction_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReactionTypeArgs = {
    where: Chat_ReactionType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReactionType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_Reaction_By_PkArgs = {
    sId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReadUpToIndexArgs = {
    where: Chat_ReadUpToIndex_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_ReadUpToIndex_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Chat_SubscriptionArgs = {
    where: Chat_Subscription_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Chat_Subscription_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Collection_ExhibitionArgs = {
    where: Collection_Exhibition_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Collection_Exhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Collection_ProgramPersonArgs = {
    where: Collection_ProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Collection_ProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Collection_TagArgs = {
    where: Collection_Tag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Collection_Tag_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_ConferenceArgs = {
    where: Conference_Conference_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_Conference_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_ConfigurationArgs = {
    where: Conference_Configuration_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_ConfigurationKeyArgs = {
    where: Conference_ConfigurationKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_Configuration_By_PkArgs = {
    conferenceId: Scalars["uuid"];
    key: Conference_ConfigurationKey_Enum;
};

/** mutation root */
export type Mutation_RootDelete_Conference_DemoCodeArgs = {
    where: Conference_DemoCode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_DemoCode_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_QuotaArgs = {
    where: Conference_Quota_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_Quota_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_SubconferenceArgs = {
    where: Conference_Subconference_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_Subconference_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_UsageArgs = {
    where: Conference_Usage_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_Usage_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Conference_VisibilityLevelArgs = {
    where: Conference_VisibilityLevel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Conference_VisibilityLevel_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ElementArgs = {
    where: Content_Element_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ElementTypeArgs = {
    where: Content_ElementType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ElementType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Content_Element_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemArgs = {
    where: Content_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemExhibitionArgs = {
    where: Content_ItemExhibition_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemExhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemProgramPersonArgs = {
    where: Content_ItemProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemTagArgs = {
    where: Content_ItemTag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemTag_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemTypeArgs = {
    where: Content_ItemType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Content_ItemType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Content_Item_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackCreateJobArgs = {
    where: Job_Queues_ChannelStackCreateJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackCreateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackDeleteJobArgs = {
    where: Job_Queues_ChannelStackDeleteJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackDeleteJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackUpdateJobArgs = {
    where: Job_Queues_ChannelStackUpdateJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackUpdateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_CombineVideosJobArgs = {
    where: Job_Queues_CombineVideosJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_CombineVideosJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_CustomEmailJobArgs = {
    where: Job_Queues_CustomEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_CustomEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ImportJobArgs = {
    where: Job_Queues_ImportJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ImportJobOutputArgs = {
    where: Job_Queues_ImportJobOutput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ImportJobOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_ImportJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_InvitationEmailJobArgs = {
    where: Job_Queues_InvitationEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_InvitationEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_JobStatusArgs = {
    where: Job_Queues_JobStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_JobStatus_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_MediaPackageHarvestJobArgs = {
    where: Job_Queues_MediaPackageHarvestJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_MediaPackageHarvestJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_PrepareJobArgs = {
    where: Job_Queues_PrepareJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_PrepareJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_PublishVideoJobArgs = {
    where: Job_Queues_PublishVideoJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_PublishVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_SubmissionRequestEmailJobArgs = {
    where: Job_Queues_SubmissionRequestEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_SubmissionRequestEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_UploadYouTubeVideoJobArgs = {
    where: Job_Queues_UploadYouTubeVideoJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Job_Queues_UploadYouTubeVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GoogleAccountArgs = {
    where: Registrant_GoogleAccount_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GoogleAccount_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GroupArgs = {
    where: Registrant_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GroupRegistrantArgs = {
    where: Registrant_GroupRegistrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_GroupRegistrant_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_Group_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_InvitationArgs = {
    where: Registrant_Invitation_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_Invitation_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_ProfileArgs = {
    where: Registrant_Profile_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_Profile_By_PkArgs = {
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_RegistrantArgs = {
    where: Registrant_Registrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_RegistrantRoleArgs = {
    where: Registrant_RegistrantRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_RegistrantRole_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_Registrant_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_SavedVonageRoomRecordingArgs = {
    where: Registrant_SavedVonageRoomRecording_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_SavedVonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Registrant_SubconferenceMembershipArgs = {
    where: Registrant_SubconferenceMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Registrant_SubconferenceMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_BackendArgs = {
    where: Room_Backend_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_Backend_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ChimeMeetingArgs = {
    where: Room_ChimeMeeting_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ChimeMeeting_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ManagementModeArgs = {
    where: Room_ManagementMode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ManagementMode_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Room_PersonRoleArgs = {
    where: Room_PersonRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_PersonRole_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomArgs = {
    where: Room_Room_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomGroupMembershipArgs = {
    where: Room_RoomGroupMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomGroupMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomMembershipArgs = {
    where: Room_RoomMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_RoomMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_Room_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleAlgorithmArgs = {
    where: Room_ShuffleAlgorithm_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleAlgorithm_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ShufflePeriodArgs = {
    where: Room_ShufflePeriod_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ShufflePeriod_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleQueueEntryArgs = {
    where: Room_ShuffleQueueEntry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleQueueEntry_By_PkArgs = {
    id: Scalars["bigint"];
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleRoomArgs = {
    where: Room_ShuffleRoom_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Room_ShuffleRoom_By_PkArgs = {
    id: Scalars["bigint"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_ContinuationArgs = {
    where: Schedule_Continuation_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_Continuation_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_CurrentEventsArgs = {
    where: Schedule_CurrentEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventArgs = {
    where: Schedule_Event_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventProgramPersonArgs = {
    where: Schedule_EventProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventProgramPersonRoleArgs = {
    where: Schedule_EventProgramPersonRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventProgramPersonRole_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_EventProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_Event_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_ModeArgs = {
    where: Schedule_Mode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_Mode_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Schedule_StarredEventArgs = {
    where: Schedule_StarredEvent_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Schedule_StarredEvent_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Sponsor_TierArgs = {
    where: Sponsor_Tier_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Sponsor_TierMemberArgs = {
    where: Sponsor_TierMember_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Sponsor_TierMember_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Sponsor_Tier_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationArgs = {
    where: System_Configuration_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationKeyArgs = {
    where: System_ConfigurationKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationPermissionGrantArgs = {
    where: System_ConfigurationPermissionGrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_ConfigurationPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_System_Configuration_By_PkArgs = {
    key: System_ConfigurationKey_Enum;
};

/** mutation root */
export type Mutation_RootDelete_System_SuperUserPermissionArgs = {
    where: System_SuperUserPermission_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_SuperUserPermissionGrantArgs = {
    where: System_SuperUserPermissionGrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_System_SuperUserPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_System_SuperUserPermission_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Video_ChannelStackArgs = {
    where: Video_ChannelStack_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_ChannelStack_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_EventVonageSessionArgs = {
    where: Video_EventVonageSession_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_EventVonageSession_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_ImmediateSwitchArgs = {
    where: Video_ImmediateSwitch_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_ImmediateSwitch_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_InputTypeArgs = {
    where: Video_InputType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_InputType_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Video_MediaLiveChannelStatusArgs = {
    where: Video_MediaLiveChannelStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_MediaLiveChannelStatus_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_RoomRtmpInputArgs = {
    where: Video_RoomRtmpInput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_RoomRtmpInput_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_RoomRtmpOutputArgs = {
    where: Video_RoomRtmpOutput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_RoomRtmpOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_RtmpInputArgs = {
    where: Video_RtmpInput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_RtmpInput_By_PkArgs = {
    name: Scalars["String"];
};

/** mutation root */
export type Mutation_RootDelete_Video_TranscriptionJobArgs = {
    where: Video_TranscriptionJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_TranscriptionJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VideoRenderJobArgs = {
    where: Video_VideoRenderJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VideoRenderJob_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageParticipantStreamArgs = {
    where: Video_VonageParticipantStream_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageParticipantStream_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageRoomRecordingArgs = {
    where: Video_VonageRoomRecording_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageSessionLayoutArgs = {
    where: Video_VonageSessionLayout_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageSessionLayout_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageVideoPlaybackCommandArgs = {
    where: Video_VonageVideoPlaybackCommand_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_VonageVideoPlaybackCommand_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootDelete_Video_YouTubeUploadArgs = {
    where: Video_YouTubeUpload_Bool_Exp;
};

/** mutation root */
export type Mutation_RootDelete_Video_YouTubeUpload_By_PkArgs = {
    id: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootGetGoogleOAuthUrlArgs = {
    registrantId: Scalars["uuid"];
    scopes: ReadonlyArray<Scalars["String"]>;
};

/** mutation root */
export type Mutation_RootInsert_EmailArgs = {
    objects: ReadonlyArray<Email_Insert_Input>;
    on_conflict?: InputMaybe<Email_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Email_OneArgs = {
    object: Email_Insert_Input;
    on_conflict?: InputMaybe<Email_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_PushNotificationSubscriptionArgs = {
    objects: ReadonlyArray<PushNotificationSubscription_Insert_Input>;
    on_conflict?: InputMaybe<PushNotificationSubscription_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_PushNotificationSubscription_OneArgs = {
    object: PushNotificationSubscription_Insert_Input;
    on_conflict?: InputMaybe<PushNotificationSubscription_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_UserArgs = {
    objects: ReadonlyArray<User_Insert_Input>;
    on_conflict?: InputMaybe<User_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_User_OneArgs = {
    object: User_Insert_Input;
    on_conflict?: InputMaybe<User_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_AppStatsArgs = {
    objects: ReadonlyArray<Analytics_AppStats_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_AppStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_AppStats_OneArgs = {
    object: Analytics_AppStats_Insert_Input;
    on_conflict?: InputMaybe<Analytics_AppStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ContentElementStatsArgs = {
    objects: ReadonlyArray<Analytics_ContentElementStats_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_ContentElementStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ContentElementStats_OneArgs = {
    object: Analytics_ContentElementStats_Insert_Input;
    on_conflict?: InputMaybe<Analytics_ContentElementStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ContentItemStatsArgs = {
    objects: ReadonlyArray<Analytics_ContentItemStats_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_ContentItemStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ContentItemStats_OneArgs = {
    object: Analytics_ContentItemStats_Insert_Input;
    on_conflict?: InputMaybe<Analytics_ContentItemStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ElementTotalViewsArgs = {
    objects: ReadonlyArray<Analytics_ElementTotalViews_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_ElementTotalViews_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ElementTotalViews_OneArgs = {
    object: Analytics_ElementTotalViews_Insert_Input;
    on_conflict?: InputMaybe<Analytics_ElementTotalViews_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ItemTotalViewsArgs = {
    objects: ReadonlyArray<Analytics_ItemTotalViews_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_ItemTotalViews_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_ItemTotalViews_OneArgs = {
    object: Analytics_ItemTotalViews_Insert_Input;
    on_conflict?: InputMaybe<Analytics_ItemTotalViews_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_RoomPresenceArgs = {
    objects: ReadonlyArray<Analytics_RoomPresence_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_RoomPresence_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_RoomPresence_OneArgs = {
    object: Analytics_RoomPresence_Insert_Input;
    on_conflict?: InputMaybe<Analytics_RoomPresence_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_RoomStatsArgs = {
    objects: ReadonlyArray<Analytics_RoomStats_Insert_Input>;
    on_conflict?: InputMaybe<Analytics_RoomStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Analytics_RoomStats_OneArgs = {
    object: Analytics_RoomStats_Insert_Input;
    on_conflict?: InputMaybe<Analytics_RoomStats_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ChatArgs = {
    objects: ReadonlyArray<Chat_Chat_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Chat_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Chat_OneArgs = {
    object: Chat_Chat_Insert_Input;
    on_conflict?: InputMaybe<Chat_Chat_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_FlagArgs = {
    objects: ReadonlyArray<Chat_Flag_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Flag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_FlagTypeArgs = {
    objects: ReadonlyArray<Chat_FlagType_Insert_Input>;
    on_conflict?: InputMaybe<Chat_FlagType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_FlagType_OneArgs = {
    object: Chat_FlagType_Insert_Input;
    on_conflict?: InputMaybe<Chat_FlagType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Flag_OneArgs = {
    object: Chat_Flag_Insert_Input;
    on_conflict?: InputMaybe<Chat_Flag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_MessageArgs = {
    objects: ReadonlyArray<Chat_Message_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_MessageTypeArgs = {
    objects: ReadonlyArray<Chat_MessageType_Insert_Input>;
    on_conflict?: InputMaybe<Chat_MessageType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_MessageType_OneArgs = {
    object: Chat_MessageType_Insert_Input;
    on_conflict?: InputMaybe<Chat_MessageType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Message_OneArgs = {
    object: Chat_Message_Insert_Input;
    on_conflict?: InputMaybe<Chat_Message_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_PinArgs = {
    objects: ReadonlyArray<Chat_Pin_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Pin_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Pin_OneArgs = {
    object: Chat_Pin_Insert_Input;
    on_conflict?: InputMaybe<Chat_Pin_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReactionArgs = {
    objects: ReadonlyArray<Chat_Reaction_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Reaction_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReactionTypeArgs = {
    objects: ReadonlyArray<Chat_ReactionType_Insert_Input>;
    on_conflict?: InputMaybe<Chat_ReactionType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReactionType_OneArgs = {
    object: Chat_ReactionType_Insert_Input;
    on_conflict?: InputMaybe<Chat_ReactionType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Reaction_OneArgs = {
    object: Chat_Reaction_Insert_Input;
    on_conflict?: InputMaybe<Chat_Reaction_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReadUpToIndexArgs = {
    objects: ReadonlyArray<Chat_ReadUpToIndex_Insert_Input>;
    on_conflict?: InputMaybe<Chat_ReadUpToIndex_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_ReadUpToIndex_OneArgs = {
    object: Chat_ReadUpToIndex_Insert_Input;
    on_conflict?: InputMaybe<Chat_ReadUpToIndex_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_SubscriptionArgs = {
    objects: ReadonlyArray<Chat_Subscription_Insert_Input>;
    on_conflict?: InputMaybe<Chat_Subscription_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Chat_Subscription_OneArgs = {
    object: Chat_Subscription_Insert_Input;
    on_conflict?: InputMaybe<Chat_Subscription_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_ExhibitionArgs = {
    objects: ReadonlyArray<Collection_Exhibition_Insert_Input>;
    on_conflict?: InputMaybe<Collection_Exhibition_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_Exhibition_OneArgs = {
    object: Collection_Exhibition_Insert_Input;
    on_conflict?: InputMaybe<Collection_Exhibition_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_ProgramPersonArgs = {
    objects: ReadonlyArray<Collection_ProgramPerson_Insert_Input>;
    on_conflict?: InputMaybe<Collection_ProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_ProgramPerson_OneArgs = {
    object: Collection_ProgramPerson_Insert_Input;
    on_conflict?: InputMaybe<Collection_ProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_TagArgs = {
    objects: ReadonlyArray<Collection_Tag_Insert_Input>;
    on_conflict?: InputMaybe<Collection_Tag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Collection_Tag_OneArgs = {
    object: Collection_Tag_Insert_Input;
    on_conflict?: InputMaybe<Collection_Tag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_ConferenceArgs = {
    objects: ReadonlyArray<Conference_Conference_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Conference_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Conference_OneArgs = {
    object: Conference_Conference_Insert_Input;
    on_conflict?: InputMaybe<Conference_Conference_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_ConfigurationArgs = {
    objects: ReadonlyArray<Conference_Configuration_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Configuration_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_ConfigurationKeyArgs = {
    objects: ReadonlyArray<Conference_ConfigurationKey_Insert_Input>;
    on_conflict?: InputMaybe<Conference_ConfigurationKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_ConfigurationKey_OneArgs = {
    object: Conference_ConfigurationKey_Insert_Input;
    on_conflict?: InputMaybe<Conference_ConfigurationKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Configuration_OneArgs = {
    object: Conference_Configuration_Insert_Input;
    on_conflict?: InputMaybe<Conference_Configuration_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_DemoCodeArgs = {
    objects: ReadonlyArray<Conference_DemoCode_Insert_Input>;
    on_conflict?: InputMaybe<Conference_DemoCode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_DemoCode_OneArgs = {
    object: Conference_DemoCode_Insert_Input;
    on_conflict?: InputMaybe<Conference_DemoCode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_QuotaArgs = {
    objects: ReadonlyArray<Conference_Quota_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Quota_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Quota_OneArgs = {
    object: Conference_Quota_Insert_Input;
    on_conflict?: InputMaybe<Conference_Quota_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_SubconferenceArgs = {
    objects: ReadonlyArray<Conference_Subconference_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Subconference_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Subconference_OneArgs = {
    object: Conference_Subconference_Insert_Input;
    on_conflict?: InputMaybe<Conference_Subconference_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_UsageArgs = {
    objects: ReadonlyArray<Conference_Usage_Insert_Input>;
    on_conflict?: InputMaybe<Conference_Usage_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_Usage_OneArgs = {
    object: Conference_Usage_Insert_Input;
    on_conflict?: InputMaybe<Conference_Usage_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_VisibilityLevelArgs = {
    objects: ReadonlyArray<Conference_VisibilityLevel_Insert_Input>;
    on_conflict?: InputMaybe<Conference_VisibilityLevel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Conference_VisibilityLevel_OneArgs = {
    object: Conference_VisibilityLevel_Insert_Input;
    on_conflict?: InputMaybe<Conference_VisibilityLevel_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ElementArgs = {
    objects: ReadonlyArray<Content_Element_Insert_Input>;
    on_conflict?: InputMaybe<Content_Element_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ElementTypeArgs = {
    objects: ReadonlyArray<Content_ElementType_Insert_Input>;
    on_conflict?: InputMaybe<Content_ElementType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ElementType_OneArgs = {
    object: Content_ElementType_Insert_Input;
    on_conflict?: InputMaybe<Content_ElementType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_Element_OneArgs = {
    object: Content_Element_Insert_Input;
    on_conflict?: InputMaybe<Content_Element_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemArgs = {
    objects: ReadonlyArray<Content_Item_Insert_Input>;
    on_conflict?: InputMaybe<Content_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemExhibitionArgs = {
    objects: ReadonlyArray<Content_ItemExhibition_Insert_Input>;
    on_conflict?: InputMaybe<Content_ItemExhibition_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemExhibition_OneArgs = {
    object: Content_ItemExhibition_Insert_Input;
    on_conflict?: InputMaybe<Content_ItemExhibition_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemProgramPersonArgs = {
    objects: ReadonlyArray<Content_ItemProgramPerson_Insert_Input>;
    on_conflict?: InputMaybe<Content_ItemProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemProgramPerson_OneArgs = {
    object: Content_ItemProgramPerson_Insert_Input;
    on_conflict?: InputMaybe<Content_ItemProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemTagArgs = {
    objects: ReadonlyArray<Content_ItemTag_Insert_Input>;
    on_conflict?: InputMaybe<Content_ItemTag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemTag_OneArgs = {
    object: Content_ItemTag_Insert_Input;
    on_conflict?: InputMaybe<Content_ItemTag_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemTypeArgs = {
    objects: ReadonlyArray<Content_ItemType_Insert_Input>;
    on_conflict?: InputMaybe<Content_ItemType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_ItemType_OneArgs = {
    object: Content_ItemType_Insert_Input;
    on_conflict?: InputMaybe<Content_ItemType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Content_Item_OneArgs = {
    object: Content_Item_Insert_Input;
    on_conflict?: InputMaybe<Content_Item_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackCreateJobArgs = {
    objects: ReadonlyArray<Job_Queues_ChannelStackCreateJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackCreateJob_OneArgs = {
    object: Job_Queues_ChannelStackCreateJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackDeleteJobArgs = {
    objects: ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackDeleteJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackDeleteJob_OneArgs = {
    object: Job_Queues_ChannelStackDeleteJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackDeleteJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackUpdateJobArgs = {
    objects: ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackUpdateJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackUpdateJob_OneArgs = {
    object: Job_Queues_ChannelStackUpdateJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ChannelStackUpdateJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_CombineVideosJobArgs = {
    objects: ReadonlyArray<Job_Queues_CombineVideosJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_CombineVideosJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_CombineVideosJob_OneArgs = {
    object: Job_Queues_CombineVideosJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_CombineVideosJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_CustomEmailJobArgs = {
    objects: ReadonlyArray<Job_Queues_CustomEmailJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_CustomEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_CustomEmailJob_OneArgs = {
    object: Job_Queues_CustomEmailJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_CustomEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ImportJobArgs = {
    objects: ReadonlyArray<Job_Queues_ImportJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ImportJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ImportJobOutputArgs = {
    objects: ReadonlyArray<Job_Queues_ImportJobOutput_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_ImportJobOutput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ImportJobOutput_OneArgs = {
    object: Job_Queues_ImportJobOutput_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ImportJobOutput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_ImportJob_OneArgs = {
    object: Job_Queues_ImportJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_ImportJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_InvitationEmailJobArgs = {
    objects: ReadonlyArray<Job_Queues_InvitationEmailJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_InvitationEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_InvitationEmailJob_OneArgs = {
    object: Job_Queues_InvitationEmailJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_InvitationEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_JobStatusArgs = {
    objects: ReadonlyArray<Job_Queues_JobStatus_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_JobStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_JobStatus_OneArgs = {
    object: Job_Queues_JobStatus_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_JobStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_MediaPackageHarvestJobArgs = {
    objects: ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_MediaPackageHarvestJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_MediaPackageHarvestJob_OneArgs = {
    object: Job_Queues_MediaPackageHarvestJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_MediaPackageHarvestJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_PrepareJobArgs = {
    objects: ReadonlyArray<Job_Queues_PrepareJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_PrepareJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_PrepareJob_OneArgs = {
    object: Job_Queues_PrepareJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_PrepareJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_PublishVideoJobArgs = {
    objects: ReadonlyArray<Job_Queues_PublishVideoJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_PublishVideoJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_PublishVideoJob_OneArgs = {
    object: Job_Queues_PublishVideoJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_PublishVideoJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_SubmissionRequestEmailJobArgs = {
    objects: ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_SubmissionRequestEmailJob_OneArgs = {
    object: Job_Queues_SubmissionRequestEmailJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_UploadYouTubeVideoJobArgs = {
    objects: ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Insert_Input>;
    on_conflict?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Job_Queues_UploadYouTubeVideoJob_OneArgs = {
    object: Job_Queues_UploadYouTubeVideoJob_Insert_Input;
    on_conflict?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GoogleAccountArgs = {
    objects: ReadonlyArray<Registrant_GoogleAccount_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_GoogleAccount_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GoogleAccount_OneArgs = {
    object: Registrant_GoogleAccount_Insert_Input;
    on_conflict?: InputMaybe<Registrant_GoogleAccount_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GroupArgs = {
    objects: ReadonlyArray<Registrant_Group_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GroupRegistrantArgs = {
    objects: ReadonlyArray<Registrant_GroupRegistrant_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_GroupRegistrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_GroupRegistrant_OneArgs = {
    object: Registrant_GroupRegistrant_Insert_Input;
    on_conflict?: InputMaybe<Registrant_GroupRegistrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_Group_OneArgs = {
    object: Registrant_Group_Insert_Input;
    on_conflict?: InputMaybe<Registrant_Group_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_InvitationArgs = {
    objects: ReadonlyArray<Registrant_Invitation_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_Invitation_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_Invitation_OneArgs = {
    object: Registrant_Invitation_Insert_Input;
    on_conflict?: InputMaybe<Registrant_Invitation_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_ProfileArgs = {
    objects: ReadonlyArray<Registrant_Profile_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_Profile_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_Profile_OneArgs = {
    object: Registrant_Profile_Insert_Input;
    on_conflict?: InputMaybe<Registrant_Profile_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_RegistrantArgs = {
    objects: ReadonlyArray<Registrant_Registrant_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_Registrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_RegistrantRoleArgs = {
    objects: ReadonlyArray<Registrant_RegistrantRole_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_RegistrantRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_RegistrantRole_OneArgs = {
    object: Registrant_RegistrantRole_Insert_Input;
    on_conflict?: InputMaybe<Registrant_RegistrantRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_Registrant_OneArgs = {
    object: Registrant_Registrant_Insert_Input;
    on_conflict?: InputMaybe<Registrant_Registrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_SavedVonageRoomRecordingArgs = {
    objects: ReadonlyArray<Registrant_SavedVonageRoomRecording_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_SavedVonageRoomRecording_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_SavedVonageRoomRecording_OneArgs = {
    object: Registrant_SavedVonageRoomRecording_Insert_Input;
    on_conflict?: InputMaybe<Registrant_SavedVonageRoomRecording_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_SubconferenceMembershipArgs = {
    objects: ReadonlyArray<Registrant_SubconferenceMembership_Insert_Input>;
    on_conflict?: InputMaybe<Registrant_SubconferenceMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Registrant_SubconferenceMembership_OneArgs = {
    object: Registrant_SubconferenceMembership_Insert_Input;
    on_conflict?: InputMaybe<Registrant_SubconferenceMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_BackendArgs = {
    objects: ReadonlyArray<Room_Backend_Insert_Input>;
    on_conflict?: InputMaybe<Room_Backend_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_Backend_OneArgs = {
    object: Room_Backend_Insert_Input;
    on_conflict?: InputMaybe<Room_Backend_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ChimeMeetingArgs = {
    objects: ReadonlyArray<Room_ChimeMeeting_Insert_Input>;
    on_conflict?: InputMaybe<Room_ChimeMeeting_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ChimeMeeting_OneArgs = {
    object: Room_ChimeMeeting_Insert_Input;
    on_conflict?: InputMaybe<Room_ChimeMeeting_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ManagementModeArgs = {
    objects: ReadonlyArray<Room_ManagementMode_Insert_Input>;
    on_conflict?: InputMaybe<Room_ManagementMode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ManagementMode_OneArgs = {
    object: Room_ManagementMode_Insert_Input;
    on_conflict?: InputMaybe<Room_ManagementMode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_PersonRoleArgs = {
    objects: ReadonlyArray<Room_PersonRole_Insert_Input>;
    on_conflict?: InputMaybe<Room_PersonRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_PersonRole_OneArgs = {
    object: Room_PersonRole_Insert_Input;
    on_conflict?: InputMaybe<Room_PersonRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomArgs = {
    objects: ReadonlyArray<Room_Room_Insert_Input>;
    on_conflict?: InputMaybe<Room_Room_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomGroupMembershipArgs = {
    objects: ReadonlyArray<Room_RoomGroupMembership_Insert_Input>;
    on_conflict?: InputMaybe<Room_RoomGroupMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomGroupMembership_OneArgs = {
    object: Room_RoomGroupMembership_Insert_Input;
    on_conflict?: InputMaybe<Room_RoomGroupMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomMembershipArgs = {
    objects: ReadonlyArray<Room_RoomMembership_Insert_Input>;
    on_conflict?: InputMaybe<Room_RoomMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_RoomMembership_OneArgs = {
    object: Room_RoomMembership_Insert_Input;
    on_conflict?: InputMaybe<Room_RoomMembership_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_Room_OneArgs = {
    object: Room_Room_Insert_Input;
    on_conflict?: InputMaybe<Room_Room_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleAlgorithmArgs = {
    objects: ReadonlyArray<Room_ShuffleAlgorithm_Insert_Input>;
    on_conflict?: InputMaybe<Room_ShuffleAlgorithm_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleAlgorithm_OneArgs = {
    object: Room_ShuffleAlgorithm_Insert_Input;
    on_conflict?: InputMaybe<Room_ShuffleAlgorithm_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShufflePeriodArgs = {
    objects: ReadonlyArray<Room_ShufflePeriod_Insert_Input>;
    on_conflict?: InputMaybe<Room_ShufflePeriod_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShufflePeriod_OneArgs = {
    object: Room_ShufflePeriod_Insert_Input;
    on_conflict?: InputMaybe<Room_ShufflePeriod_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleQueueEntryArgs = {
    objects: ReadonlyArray<Room_ShuffleQueueEntry_Insert_Input>;
    on_conflict?: InputMaybe<Room_ShuffleQueueEntry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleQueueEntry_OneArgs = {
    object: Room_ShuffleQueueEntry_Insert_Input;
    on_conflict?: InputMaybe<Room_ShuffleQueueEntry_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleRoomArgs = {
    objects: ReadonlyArray<Room_ShuffleRoom_Insert_Input>;
    on_conflict?: InputMaybe<Room_ShuffleRoom_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Room_ShuffleRoom_OneArgs = {
    object: Room_ShuffleRoom_Insert_Input;
    on_conflict?: InputMaybe<Room_ShuffleRoom_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_ContinuationArgs = {
    objects: ReadonlyArray<Schedule_Continuation_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_Continuation_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_Continuation_OneArgs = {
    object: Schedule_Continuation_Insert_Input;
    on_conflict?: InputMaybe<Schedule_Continuation_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_CurrentEventsArgs = {
    objects: ReadonlyArray<Schedule_CurrentEvents_Insert_Input>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_CurrentEvents_OneArgs = {
    object: Schedule_CurrentEvents_Insert_Input;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventArgs = {
    objects: ReadonlyArray<Schedule_Event_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_Event_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventProgramPersonArgs = {
    objects: ReadonlyArray<Schedule_EventProgramPerson_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_EventProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventProgramPersonRoleArgs = {
    objects: ReadonlyArray<Schedule_EventProgramPersonRole_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_EventProgramPersonRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventProgramPersonRole_OneArgs = {
    object: Schedule_EventProgramPersonRole_Insert_Input;
    on_conflict?: InputMaybe<Schedule_EventProgramPersonRole_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_EventProgramPerson_OneArgs = {
    object: Schedule_EventProgramPerson_Insert_Input;
    on_conflict?: InputMaybe<Schedule_EventProgramPerson_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_Event_OneArgs = {
    object: Schedule_Event_Insert_Input;
    on_conflict?: InputMaybe<Schedule_Event_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_ModeArgs = {
    objects: ReadonlyArray<Schedule_Mode_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_Mode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_Mode_OneArgs = {
    object: Schedule_Mode_Insert_Input;
    on_conflict?: InputMaybe<Schedule_Mode_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_StarredEventArgs = {
    objects: ReadonlyArray<Schedule_StarredEvent_Insert_Input>;
    on_conflict?: InputMaybe<Schedule_StarredEvent_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Schedule_StarredEvent_OneArgs = {
    object: Schedule_StarredEvent_Insert_Input;
    on_conflict?: InputMaybe<Schedule_StarredEvent_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Sponsor_TierArgs = {
    objects: ReadonlyArray<Sponsor_Tier_Insert_Input>;
    on_conflict?: InputMaybe<Sponsor_Tier_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Sponsor_TierMemberArgs = {
    objects: ReadonlyArray<Sponsor_TierMember_Insert_Input>;
    on_conflict?: InputMaybe<Sponsor_TierMember_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Sponsor_TierMember_OneArgs = {
    object: Sponsor_TierMember_Insert_Input;
    on_conflict?: InputMaybe<Sponsor_TierMember_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Sponsor_Tier_OneArgs = {
    object: Sponsor_Tier_Insert_Input;
    on_conflict?: InputMaybe<Sponsor_Tier_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationArgs = {
    objects: ReadonlyArray<System_Configuration_Insert_Input>;
    on_conflict?: InputMaybe<System_Configuration_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationKeyArgs = {
    objects: ReadonlyArray<System_ConfigurationKey_Insert_Input>;
    on_conflict?: InputMaybe<System_ConfigurationKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationKey_OneArgs = {
    object: System_ConfigurationKey_Insert_Input;
    on_conflict?: InputMaybe<System_ConfigurationKey_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationPermissionGrantArgs = {
    objects: ReadonlyArray<System_ConfigurationPermissionGrant_Insert_Input>;
    on_conflict?: InputMaybe<System_ConfigurationPermissionGrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_ConfigurationPermissionGrant_OneArgs = {
    object: System_ConfigurationPermissionGrant_Insert_Input;
    on_conflict?: InputMaybe<System_ConfigurationPermissionGrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_Configuration_OneArgs = {
    object: System_Configuration_Insert_Input;
    on_conflict?: InputMaybe<System_Configuration_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_SuperUserPermissionArgs = {
    objects: ReadonlyArray<System_SuperUserPermission_Insert_Input>;
    on_conflict?: InputMaybe<System_SuperUserPermission_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_SuperUserPermissionGrantArgs = {
    objects: ReadonlyArray<System_SuperUserPermissionGrant_Insert_Input>;
    on_conflict?: InputMaybe<System_SuperUserPermissionGrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_SuperUserPermissionGrant_OneArgs = {
    object: System_SuperUserPermissionGrant_Insert_Input;
    on_conflict?: InputMaybe<System_SuperUserPermissionGrant_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_System_SuperUserPermission_OneArgs = {
    object: System_SuperUserPermission_Insert_Input;
    on_conflict?: InputMaybe<System_SuperUserPermission_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_ChannelStackArgs = {
    objects: ReadonlyArray<Video_ChannelStack_Insert_Input>;
    on_conflict?: InputMaybe<Video_ChannelStack_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_ChannelStack_OneArgs = {
    object: Video_ChannelStack_Insert_Input;
    on_conflict?: InputMaybe<Video_ChannelStack_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_EventVonageSessionArgs = {
    objects: ReadonlyArray<Video_EventVonageSession_Insert_Input>;
    on_conflict?: InputMaybe<Video_EventVonageSession_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_EventVonageSession_OneArgs = {
    object: Video_EventVonageSession_Insert_Input;
    on_conflict?: InputMaybe<Video_EventVonageSession_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_ImmediateSwitchArgs = {
    objects: ReadonlyArray<Video_ImmediateSwitch_Insert_Input>;
    on_conflict?: InputMaybe<Video_ImmediateSwitch_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_ImmediateSwitch_OneArgs = {
    object: Video_ImmediateSwitch_Insert_Input;
    on_conflict?: InputMaybe<Video_ImmediateSwitch_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_InputTypeArgs = {
    objects: ReadonlyArray<Video_InputType_Insert_Input>;
    on_conflict?: InputMaybe<Video_InputType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_InputType_OneArgs = {
    object: Video_InputType_Insert_Input;
    on_conflict?: InputMaybe<Video_InputType_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_MediaLiveChannelStatusArgs = {
    objects: ReadonlyArray<Video_MediaLiveChannelStatus_Insert_Input>;
    on_conflict?: InputMaybe<Video_MediaLiveChannelStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_MediaLiveChannelStatus_OneArgs = {
    object: Video_MediaLiveChannelStatus_Insert_Input;
    on_conflict?: InputMaybe<Video_MediaLiveChannelStatus_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RoomRtmpInputArgs = {
    objects: ReadonlyArray<Video_RoomRtmpInput_Insert_Input>;
    on_conflict?: InputMaybe<Video_RoomRtmpInput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RoomRtmpInput_OneArgs = {
    object: Video_RoomRtmpInput_Insert_Input;
    on_conflict?: InputMaybe<Video_RoomRtmpInput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RoomRtmpOutputArgs = {
    objects: ReadonlyArray<Video_RoomRtmpOutput_Insert_Input>;
    on_conflict?: InputMaybe<Video_RoomRtmpOutput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RoomRtmpOutput_OneArgs = {
    object: Video_RoomRtmpOutput_Insert_Input;
    on_conflict?: InputMaybe<Video_RoomRtmpOutput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RtmpInputArgs = {
    objects: ReadonlyArray<Video_RtmpInput_Insert_Input>;
    on_conflict?: InputMaybe<Video_RtmpInput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_RtmpInput_OneArgs = {
    object: Video_RtmpInput_Insert_Input;
    on_conflict?: InputMaybe<Video_RtmpInput_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_TranscriptionJobArgs = {
    objects: ReadonlyArray<Video_TranscriptionJob_Insert_Input>;
    on_conflict?: InputMaybe<Video_TranscriptionJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_TranscriptionJob_OneArgs = {
    object: Video_TranscriptionJob_Insert_Input;
    on_conflict?: InputMaybe<Video_TranscriptionJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VideoRenderJobArgs = {
    objects: ReadonlyArray<Video_VideoRenderJob_Insert_Input>;
    on_conflict?: InputMaybe<Video_VideoRenderJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VideoRenderJob_OneArgs = {
    object: Video_VideoRenderJob_Insert_Input;
    on_conflict?: InputMaybe<Video_VideoRenderJob_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageParticipantStreamArgs = {
    objects: ReadonlyArray<Video_VonageParticipantStream_Insert_Input>;
    on_conflict?: InputMaybe<Video_VonageParticipantStream_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageParticipantStream_OneArgs = {
    object: Video_VonageParticipantStream_Insert_Input;
    on_conflict?: InputMaybe<Video_VonageParticipantStream_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageRoomRecordingArgs = {
    objects: ReadonlyArray<Video_VonageRoomRecording_Insert_Input>;
    on_conflict?: InputMaybe<Video_VonageRoomRecording_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageRoomRecording_OneArgs = {
    object: Video_VonageRoomRecording_Insert_Input;
    on_conflict?: InputMaybe<Video_VonageRoomRecording_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageSessionLayoutArgs = {
    objects: ReadonlyArray<Video_VonageSessionLayout_Insert_Input>;
    on_conflict?: InputMaybe<Video_VonageSessionLayout_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageSessionLayout_OneArgs = {
    object: Video_VonageSessionLayout_Insert_Input;
    on_conflict?: InputMaybe<Video_VonageSessionLayout_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageVideoPlaybackCommandArgs = {
    objects: ReadonlyArray<Video_VonageVideoPlaybackCommand_Insert_Input>;
    on_conflict?: InputMaybe<Video_VonageVideoPlaybackCommand_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_VonageVideoPlaybackCommand_OneArgs = {
    object: Video_VonageVideoPlaybackCommand_Insert_Input;
    on_conflict?: InputMaybe<Video_VonageVideoPlaybackCommand_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_YouTubeUploadArgs = {
    objects: ReadonlyArray<Video_YouTubeUpload_Insert_Input>;
    on_conflict?: InputMaybe<Video_YouTubeUpload_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInsert_Video_YouTubeUpload_OneArgs = {
    object: Video_YouTubeUpload_Insert_Input;
    on_conflict?: InputMaybe<Video_YouTubeUpload_On_Conflict>;
};

/** mutation root */
export type Mutation_RootInvitationConfirmCurrentArgs = {
    inviteCode: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootJoinEventVonageSessionArgs = {
    eventId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootJoinRoomChimeSessionArgs = {
    registrantId: Scalars["uuid"];
    roomId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootJoinRoomVonageSessionArgs = {
    registrantId: Scalars["uuid"];
    roomId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootMigrateElementArgs = {
    elementId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootMigrateProfilePhotoArgs = {
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootNotifyEventEndedArgs = {
    eventId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootNotifyEventStartedArgs = {
    eventId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootRefreshYouTubeDataArgs = {
    registrantGoogleAccountId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootSchedule_ShiftPresentationTimesArgs = {
    args: Schedule_ShiftPresentationTimes_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** mutation root */
export type Mutation_RootSchedule_ShiftTimesArgs = {
    args: Schedule_ShiftTimes_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** mutation root */
export type Mutation_RootStopEventBroadcastArgs = {
    eventId: Scalars["uuid"];
};

/** mutation root */
export type Mutation_RootSubmitGoogleOAuthCodeArgs = {
    code: Scalars["String"];
    state: Scalars["String"];
};

/** mutation root */
export type Mutation_RootSubmitUploadableElementArgs = {
    data: Scalars["jsonb"];
    elementId: Scalars["uuid"];
    magicToken: Scalars["String"];
};

/** mutation root */
export type Mutation_RootToggleVonageRecordingStateArgs = {
    recordingActive: Scalars["Boolean"];
    vonageSessionId: Scalars["String"];
};

/** mutation root */
export type Mutation_RootUpdateProfilePhotoArgs = {
    registrantId: Scalars["uuid"];
    s3URL?: InputMaybe<Scalars["String"]>;
};

/** mutation root */
export type Mutation_RootUpdateSubtitlesArgs = {
    elementId: Scalars["String"];
    magicToken: Scalars["String"];
    subtitleText: Scalars["String"];
};

/** mutation root */
export type Mutation_RootUpdate_EmailArgs = {
    _inc?: InputMaybe<Email_Inc_Input>;
    _set?: InputMaybe<Email_Set_Input>;
    where: Email_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Email_By_PkArgs = {
    _inc?: InputMaybe<Email_Inc_Input>;
    _set?: InputMaybe<Email_Set_Input>;
    pk_columns: Email_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_PushNotificationSubscriptionArgs = {
    _set?: InputMaybe<PushNotificationSubscription_Set_Input>;
    where: PushNotificationSubscription_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_PushNotificationSubscription_By_PkArgs = {
    _set?: InputMaybe<PushNotificationSubscription_Set_Input>;
    pk_columns: PushNotificationSubscription_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_UserArgs = {
    _set?: InputMaybe<User_Set_Input>;
    where: User_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_User_By_PkArgs = {
    _set?: InputMaybe<User_Set_Input>;
    pk_columns: User_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_AppStatsArgs = {
    _append?: InputMaybe<Analytics_AppStats_Append_Input>;
    _delete_at_path?: InputMaybe<Analytics_AppStats_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Analytics_AppStats_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Analytics_AppStats_Delete_Key_Input>;
    _inc?: InputMaybe<Analytics_AppStats_Inc_Input>;
    _prepend?: InputMaybe<Analytics_AppStats_Prepend_Input>;
    _set?: InputMaybe<Analytics_AppStats_Set_Input>;
    where: Analytics_AppStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_AppStats_By_PkArgs = {
    _append?: InputMaybe<Analytics_AppStats_Append_Input>;
    _delete_at_path?: InputMaybe<Analytics_AppStats_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Analytics_AppStats_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Analytics_AppStats_Delete_Key_Input>;
    _inc?: InputMaybe<Analytics_AppStats_Inc_Input>;
    _prepend?: InputMaybe<Analytics_AppStats_Prepend_Input>;
    _set?: InputMaybe<Analytics_AppStats_Set_Input>;
    pk_columns: Analytics_AppStats_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ContentElementStatsArgs = {
    _inc?: InputMaybe<Analytics_ContentElementStats_Inc_Input>;
    _set?: InputMaybe<Analytics_ContentElementStats_Set_Input>;
    where: Analytics_ContentElementStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ContentElementStats_By_PkArgs = {
    _inc?: InputMaybe<Analytics_ContentElementStats_Inc_Input>;
    _set?: InputMaybe<Analytics_ContentElementStats_Set_Input>;
    pk_columns: Analytics_ContentElementStats_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ContentItemStatsArgs = {
    _inc?: InputMaybe<Analytics_ContentItemStats_Inc_Input>;
    _set?: InputMaybe<Analytics_ContentItemStats_Set_Input>;
    where: Analytics_ContentItemStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ContentItemStats_By_PkArgs = {
    _inc?: InputMaybe<Analytics_ContentItemStats_Inc_Input>;
    _set?: InputMaybe<Analytics_ContentItemStats_Set_Input>;
    pk_columns: Analytics_ContentItemStats_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ElementTotalViewsArgs = {
    _inc?: InputMaybe<Analytics_ElementTotalViews_Inc_Input>;
    _set?: InputMaybe<Analytics_ElementTotalViews_Set_Input>;
    where: Analytics_ElementTotalViews_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ElementTotalViews_By_PkArgs = {
    _inc?: InputMaybe<Analytics_ElementTotalViews_Inc_Input>;
    _set?: InputMaybe<Analytics_ElementTotalViews_Set_Input>;
    pk_columns: Analytics_ElementTotalViews_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ItemTotalViewsArgs = {
    _inc?: InputMaybe<Analytics_ItemTotalViews_Inc_Input>;
    _set?: InputMaybe<Analytics_ItemTotalViews_Set_Input>;
    where: Analytics_ItemTotalViews_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_ItemTotalViews_By_PkArgs = {
    _inc?: InputMaybe<Analytics_ItemTotalViews_Inc_Input>;
    _set?: InputMaybe<Analytics_ItemTotalViews_Set_Input>;
    pk_columns: Analytics_ItemTotalViews_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_RoomPresenceArgs = {
    _inc?: InputMaybe<Analytics_RoomPresence_Inc_Input>;
    _set?: InputMaybe<Analytics_RoomPresence_Set_Input>;
    where: Analytics_RoomPresence_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_RoomPresence_By_PkArgs = {
    _inc?: InputMaybe<Analytics_RoomPresence_Inc_Input>;
    _set?: InputMaybe<Analytics_RoomPresence_Set_Input>;
    pk_columns: Analytics_RoomPresence_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_RoomStatsArgs = {
    _inc?: InputMaybe<Analytics_RoomStats_Inc_Input>;
    _set?: InputMaybe<Analytics_RoomStats_Set_Input>;
    where: Analytics_RoomStats_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Analytics_RoomStats_By_PkArgs = {
    _inc?: InputMaybe<Analytics_RoomStats_Inc_Input>;
    _set?: InputMaybe<Analytics_RoomStats_Set_Input>;
    pk_columns: Analytics_RoomStats_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ChatArgs = {
    _set?: InputMaybe<Chat_Chat_Set_Input>;
    where: Chat_Chat_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Chat_By_PkArgs = {
    _set?: InputMaybe<Chat_Chat_Set_Input>;
    pk_columns: Chat_Chat_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_FlagArgs = {
    _inc?: InputMaybe<Chat_Flag_Inc_Input>;
    _set?: InputMaybe<Chat_Flag_Set_Input>;
    where: Chat_Flag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_FlagTypeArgs = {
    _set?: InputMaybe<Chat_FlagType_Set_Input>;
    where: Chat_FlagType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_FlagType_By_PkArgs = {
    _set?: InputMaybe<Chat_FlagType_Set_Input>;
    pk_columns: Chat_FlagType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Flag_By_PkArgs = {
    _inc?: InputMaybe<Chat_Flag_Inc_Input>;
    _set?: InputMaybe<Chat_Flag_Set_Input>;
    pk_columns: Chat_Flag_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_MessageArgs = {
    _append?: InputMaybe<Chat_Message_Append_Input>;
    _delete_at_path?: InputMaybe<Chat_Message_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Chat_Message_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Chat_Message_Delete_Key_Input>;
    _inc?: InputMaybe<Chat_Message_Inc_Input>;
    _prepend?: InputMaybe<Chat_Message_Prepend_Input>;
    _set?: InputMaybe<Chat_Message_Set_Input>;
    where: Chat_Message_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_MessageTypeArgs = {
    _set?: InputMaybe<Chat_MessageType_Set_Input>;
    where: Chat_MessageType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_MessageType_By_PkArgs = {
    _set?: InputMaybe<Chat_MessageType_Set_Input>;
    pk_columns: Chat_MessageType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Message_By_PkArgs = {
    _append?: InputMaybe<Chat_Message_Append_Input>;
    _delete_at_path?: InputMaybe<Chat_Message_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Chat_Message_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Chat_Message_Delete_Key_Input>;
    _inc?: InputMaybe<Chat_Message_Inc_Input>;
    _prepend?: InputMaybe<Chat_Message_Prepend_Input>;
    _set?: InputMaybe<Chat_Message_Set_Input>;
    pk_columns: Chat_Message_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_PinArgs = {
    _set?: InputMaybe<Chat_Pin_Set_Input>;
    where: Chat_Pin_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Pin_By_PkArgs = {
    _set?: InputMaybe<Chat_Pin_Set_Input>;
    pk_columns: Chat_Pin_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReactionArgs = {
    _append?: InputMaybe<Chat_Reaction_Append_Input>;
    _delete_at_path?: InputMaybe<Chat_Reaction_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Chat_Reaction_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Chat_Reaction_Delete_Key_Input>;
    _prepend?: InputMaybe<Chat_Reaction_Prepend_Input>;
    _set?: InputMaybe<Chat_Reaction_Set_Input>;
    where: Chat_Reaction_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReactionTypeArgs = {
    _set?: InputMaybe<Chat_ReactionType_Set_Input>;
    where: Chat_ReactionType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReactionType_By_PkArgs = {
    _set?: InputMaybe<Chat_ReactionType_Set_Input>;
    pk_columns: Chat_ReactionType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Reaction_By_PkArgs = {
    _append?: InputMaybe<Chat_Reaction_Append_Input>;
    _delete_at_path?: InputMaybe<Chat_Reaction_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Chat_Reaction_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Chat_Reaction_Delete_Key_Input>;
    _prepend?: InputMaybe<Chat_Reaction_Prepend_Input>;
    _set?: InputMaybe<Chat_Reaction_Set_Input>;
    pk_columns: Chat_Reaction_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReadUpToIndexArgs = {
    _set?: InputMaybe<Chat_ReadUpToIndex_Set_Input>;
    where: Chat_ReadUpToIndex_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_ReadUpToIndex_By_PkArgs = {
    _set?: InputMaybe<Chat_ReadUpToIndex_Set_Input>;
    pk_columns: Chat_ReadUpToIndex_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_SubscriptionArgs = {
    _set?: InputMaybe<Chat_Subscription_Set_Input>;
    where: Chat_Subscription_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Chat_Subscription_By_PkArgs = {
    _set?: InputMaybe<Chat_Subscription_Set_Input>;
    pk_columns: Chat_Subscription_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_ExhibitionArgs = {
    _inc?: InputMaybe<Collection_Exhibition_Inc_Input>;
    _set?: InputMaybe<Collection_Exhibition_Set_Input>;
    where: Collection_Exhibition_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_Exhibition_By_PkArgs = {
    _inc?: InputMaybe<Collection_Exhibition_Inc_Input>;
    _set?: InputMaybe<Collection_Exhibition_Set_Input>;
    pk_columns: Collection_Exhibition_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_ProgramPersonArgs = {
    _inc?: InputMaybe<Collection_ProgramPerson_Inc_Input>;
    _set?: InputMaybe<Collection_ProgramPerson_Set_Input>;
    where: Collection_ProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_ProgramPerson_By_PkArgs = {
    _inc?: InputMaybe<Collection_ProgramPerson_Inc_Input>;
    _set?: InputMaybe<Collection_ProgramPerson_Set_Input>;
    pk_columns: Collection_ProgramPerson_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_TagArgs = {
    _inc?: InputMaybe<Collection_Tag_Inc_Input>;
    _set?: InputMaybe<Collection_Tag_Set_Input>;
    where: Collection_Tag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Collection_Tag_By_PkArgs = {
    _inc?: InputMaybe<Collection_Tag_Inc_Input>;
    _set?: InputMaybe<Collection_Tag_Set_Input>;
    pk_columns: Collection_Tag_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_ConferenceArgs = {
    _set?: InputMaybe<Conference_Conference_Set_Input>;
    where: Conference_Conference_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Conference_By_PkArgs = {
    _set?: InputMaybe<Conference_Conference_Set_Input>;
    pk_columns: Conference_Conference_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_ConfigurationArgs = {
    _append?: InputMaybe<Conference_Configuration_Append_Input>;
    _delete_at_path?: InputMaybe<Conference_Configuration_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Conference_Configuration_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Conference_Configuration_Delete_Key_Input>;
    _prepend?: InputMaybe<Conference_Configuration_Prepend_Input>;
    _set?: InputMaybe<Conference_Configuration_Set_Input>;
    where: Conference_Configuration_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_ConfigurationKeyArgs = {
    _set?: InputMaybe<Conference_ConfigurationKey_Set_Input>;
    where: Conference_ConfigurationKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_ConfigurationKey_By_PkArgs = {
    _set?: InputMaybe<Conference_ConfigurationKey_Set_Input>;
    pk_columns: Conference_ConfigurationKey_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Configuration_By_PkArgs = {
    _append?: InputMaybe<Conference_Configuration_Append_Input>;
    _delete_at_path?: InputMaybe<Conference_Configuration_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Conference_Configuration_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Conference_Configuration_Delete_Key_Input>;
    _prepend?: InputMaybe<Conference_Configuration_Prepend_Input>;
    _set?: InputMaybe<Conference_Configuration_Set_Input>;
    pk_columns: Conference_Configuration_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_DemoCodeArgs = {
    _set?: InputMaybe<Conference_DemoCode_Set_Input>;
    where: Conference_DemoCode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_DemoCode_By_PkArgs = {
    _set?: InputMaybe<Conference_DemoCode_Set_Input>;
    pk_columns: Conference_DemoCode_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_QuotaArgs = {
    _inc?: InputMaybe<Conference_Quota_Inc_Input>;
    _set?: InputMaybe<Conference_Quota_Set_Input>;
    where: Conference_Quota_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Quota_By_PkArgs = {
    _inc?: InputMaybe<Conference_Quota_Inc_Input>;
    _set?: InputMaybe<Conference_Quota_Set_Input>;
    pk_columns: Conference_Quota_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_SubconferenceArgs = {
    _set?: InputMaybe<Conference_Subconference_Set_Input>;
    where: Conference_Subconference_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Subconference_By_PkArgs = {
    _set?: InputMaybe<Conference_Subconference_Set_Input>;
    pk_columns: Conference_Subconference_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_UsageArgs = {
    _inc?: InputMaybe<Conference_Usage_Inc_Input>;
    _set?: InputMaybe<Conference_Usage_Set_Input>;
    where: Conference_Usage_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_Usage_By_PkArgs = {
    _inc?: InputMaybe<Conference_Usage_Inc_Input>;
    _set?: InputMaybe<Conference_Usage_Set_Input>;
    pk_columns: Conference_Usage_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_VisibilityLevelArgs = {
    _set?: InputMaybe<Conference_VisibilityLevel_Set_Input>;
    where: Conference_VisibilityLevel_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Conference_VisibilityLevel_By_PkArgs = {
    _set?: InputMaybe<Conference_VisibilityLevel_Set_Input>;
    pk_columns: Conference_VisibilityLevel_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ElementArgs = {
    _append?: InputMaybe<Content_Element_Append_Input>;
    _delete_at_path?: InputMaybe<Content_Element_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Content_Element_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Content_Element_Delete_Key_Input>;
    _inc?: InputMaybe<Content_Element_Inc_Input>;
    _prepend?: InputMaybe<Content_Element_Prepend_Input>;
    _set?: InputMaybe<Content_Element_Set_Input>;
    where: Content_Element_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ElementTypeArgs = {
    _set?: InputMaybe<Content_ElementType_Set_Input>;
    where: Content_ElementType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ElementType_By_PkArgs = {
    _set?: InputMaybe<Content_ElementType_Set_Input>;
    pk_columns: Content_ElementType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_Element_By_PkArgs = {
    _append?: InputMaybe<Content_Element_Append_Input>;
    _delete_at_path?: InputMaybe<Content_Element_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Content_Element_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Content_Element_Delete_Key_Input>;
    _inc?: InputMaybe<Content_Element_Inc_Input>;
    _prepend?: InputMaybe<Content_Element_Prepend_Input>;
    _set?: InputMaybe<Content_Element_Set_Input>;
    pk_columns: Content_Element_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemArgs = {
    _set?: InputMaybe<Content_Item_Set_Input>;
    where: Content_Item_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemExhibitionArgs = {
    _append?: InputMaybe<Content_ItemExhibition_Append_Input>;
    _delete_at_path?: InputMaybe<Content_ItemExhibition_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Content_ItemExhibition_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Content_ItemExhibition_Delete_Key_Input>;
    _inc?: InputMaybe<Content_ItemExhibition_Inc_Input>;
    _prepend?: InputMaybe<Content_ItemExhibition_Prepend_Input>;
    _set?: InputMaybe<Content_ItemExhibition_Set_Input>;
    where: Content_ItemExhibition_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemExhibition_By_PkArgs = {
    _append?: InputMaybe<Content_ItemExhibition_Append_Input>;
    _delete_at_path?: InputMaybe<Content_ItemExhibition_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Content_ItemExhibition_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Content_ItemExhibition_Delete_Key_Input>;
    _inc?: InputMaybe<Content_ItemExhibition_Inc_Input>;
    _prepend?: InputMaybe<Content_ItemExhibition_Prepend_Input>;
    _set?: InputMaybe<Content_ItemExhibition_Set_Input>;
    pk_columns: Content_ItemExhibition_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemProgramPersonArgs = {
    _inc?: InputMaybe<Content_ItemProgramPerson_Inc_Input>;
    _set?: InputMaybe<Content_ItemProgramPerson_Set_Input>;
    where: Content_ItemProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemProgramPerson_By_PkArgs = {
    _inc?: InputMaybe<Content_ItemProgramPerson_Inc_Input>;
    _set?: InputMaybe<Content_ItemProgramPerson_Set_Input>;
    pk_columns: Content_ItemProgramPerson_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemTagArgs = {
    _set?: InputMaybe<Content_ItemTag_Set_Input>;
    where: Content_ItemTag_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemTag_By_PkArgs = {
    _set?: InputMaybe<Content_ItemTag_Set_Input>;
    pk_columns: Content_ItemTag_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemTypeArgs = {
    _set?: InputMaybe<Content_ItemType_Set_Input>;
    where: Content_ItemType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Content_ItemType_By_PkArgs = {
    _set?: InputMaybe<Content_ItemType_Set_Input>;
    pk_columns: Content_ItemType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Content_Item_By_PkArgs = {
    _set?: InputMaybe<Content_Item_Set_Input>;
    pk_columns: Content_Item_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackCreateJobArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackCreateJob_Set_Input>;
    where: Job_Queues_ChannelStackCreateJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackCreateJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackCreateJob_Set_Input>;
    pk_columns: Job_Queues_ChannelStackCreateJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackDeleteJobArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Set_Input>;
    where: Job_Queues_ChannelStackDeleteJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackDeleteJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Set_Input>;
    pk_columns: Job_Queues_ChannelStackDeleteJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackUpdateJobArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Set_Input>;
    where: Job_Queues_ChannelStackUpdateJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackUpdateJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Set_Input>;
    pk_columns: Job_Queues_ChannelStackUpdateJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CombineVideosJobArgs = {
    _append?: InputMaybe<Job_Queues_CombineVideosJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_CombineVideosJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_CombineVideosJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_CombineVideosJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_CombineVideosJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_CombineVideosJob_Set_Input>;
    where: Job_Queues_CombineVideosJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CombineVideosJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_CombineVideosJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_CombineVideosJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_CombineVideosJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_CombineVideosJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_CombineVideosJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_CombineVideosJob_Set_Input>;
    pk_columns: Job_Queues_CombineVideosJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CustomEmailJobArgs = {
    _append?: InputMaybe<Job_Queues_CustomEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_CustomEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_CustomEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_CustomEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_CustomEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_CustomEmailJob_Set_Input>;
    where: Job_Queues_CustomEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CustomEmailJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_CustomEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_CustomEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_CustomEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_CustomEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_CustomEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_CustomEmailJob_Set_Input>;
    pk_columns: Job_Queues_CustomEmailJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ImportJobArgs = {
    _append?: InputMaybe<Job_Queues_ImportJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_ImportJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_ImportJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_ImportJob_Delete_Key_Input>;
    _inc?: InputMaybe<Job_Queues_ImportJob_Inc_Input>;
    _prepend?: InputMaybe<Job_Queues_ImportJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_ImportJob_Set_Input>;
    where: Job_Queues_ImportJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ImportJobOutputArgs = {
    _append?: InputMaybe<Job_Queues_ImportJobOutput_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_ImportJobOutput_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_ImportJobOutput_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_ImportJobOutput_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_ImportJobOutput_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_ImportJobOutput_Set_Input>;
    where: Job_Queues_ImportJobOutput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ImportJobOutput_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_ImportJobOutput_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_ImportJobOutput_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_ImportJobOutput_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_ImportJobOutput_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_ImportJobOutput_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_ImportJobOutput_Set_Input>;
    pk_columns: Job_Queues_ImportJobOutput_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ImportJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_ImportJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_ImportJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_ImportJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_ImportJob_Delete_Key_Input>;
    _inc?: InputMaybe<Job_Queues_ImportJob_Inc_Input>;
    _prepend?: InputMaybe<Job_Queues_ImportJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_ImportJob_Set_Input>;
    pk_columns: Job_Queues_ImportJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_InvitationEmailJobArgs = {
    _append?: InputMaybe<Job_Queues_InvitationEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_InvitationEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_InvitationEmailJob_Set_Input>;
    where: Job_Queues_InvitationEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_InvitationEmailJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_InvitationEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_InvitationEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_InvitationEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_InvitationEmailJob_Set_Input>;
    pk_columns: Job_Queues_InvitationEmailJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_JobStatusArgs = {
    _set?: InputMaybe<Job_Queues_JobStatus_Set_Input>;
    where: Job_Queues_JobStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_JobStatus_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_JobStatus_Set_Input>;
    pk_columns: Job_Queues_JobStatus_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_MediaPackageHarvestJobArgs = {
    _set?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Set_Input>;
    where: Job_Queues_MediaPackageHarvestJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_MediaPackageHarvestJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Set_Input>;
    pk_columns: Job_Queues_MediaPackageHarvestJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PrepareJobArgs = {
    _set?: InputMaybe<Job_Queues_PrepareJob_Set_Input>;
    where: Job_Queues_PrepareJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PrepareJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_PrepareJob_Set_Input>;
    pk_columns: Job_Queues_PrepareJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PublishVideoJobArgs = {
    _set?: InputMaybe<Job_Queues_PublishVideoJob_Set_Input>;
    where: Job_Queues_PublishVideoJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PublishVideoJob_By_PkArgs = {
    _set?: InputMaybe<Job_Queues_PublishVideoJob_Set_Input>;
    pk_columns: Job_Queues_PublishVideoJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_SubmissionRequestEmailJobArgs = {
    _append?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Set_Input>;
    where: Job_Queues_SubmissionRequestEmailJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_SubmissionRequestEmailJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Delete_Key_Input>;
    _prepend?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Set_Input>;
    pk_columns: Job_Queues_SubmissionRequestEmailJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_UploadYouTubeVideoJobArgs = {
    _append?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_Key_Input>;
    _inc?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Inc_Input>;
    _prepend?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Set_Input>;
    where: Job_Queues_UploadYouTubeVideoJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Job_Queues_UploadYouTubeVideoJob_By_PkArgs = {
    _append?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Append_Input>;
    _delete_at_path?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Delete_Key_Input>;
    _inc?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Inc_Input>;
    _prepend?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Prepend_Input>;
    _set?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Set_Input>;
    pk_columns: Job_Queues_UploadYouTubeVideoJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GoogleAccountArgs = {
    _append?: InputMaybe<Registrant_GoogleAccount_Append_Input>;
    _delete_at_path?: InputMaybe<Registrant_GoogleAccount_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Registrant_GoogleAccount_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Registrant_GoogleAccount_Delete_Key_Input>;
    _prepend?: InputMaybe<Registrant_GoogleAccount_Prepend_Input>;
    _set?: InputMaybe<Registrant_GoogleAccount_Set_Input>;
    where: Registrant_GoogleAccount_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GoogleAccount_By_PkArgs = {
    _append?: InputMaybe<Registrant_GoogleAccount_Append_Input>;
    _delete_at_path?: InputMaybe<Registrant_GoogleAccount_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Registrant_GoogleAccount_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Registrant_GoogleAccount_Delete_Key_Input>;
    _prepend?: InputMaybe<Registrant_GoogleAccount_Prepend_Input>;
    _set?: InputMaybe<Registrant_GoogleAccount_Set_Input>;
    pk_columns: Registrant_GoogleAccount_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GroupArgs = {
    _set?: InputMaybe<Registrant_Group_Set_Input>;
    where: Registrant_Group_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GroupRegistrantArgs = {
    _set?: InputMaybe<Registrant_GroupRegistrant_Set_Input>;
    where: Registrant_GroupRegistrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_GroupRegistrant_By_PkArgs = {
    _set?: InputMaybe<Registrant_GroupRegistrant_Set_Input>;
    pk_columns: Registrant_GroupRegistrant_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_Group_By_PkArgs = {
    _set?: InputMaybe<Registrant_Group_Set_Input>;
    pk_columns: Registrant_Group_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_InvitationArgs = {
    _set?: InputMaybe<Registrant_Invitation_Set_Input>;
    where: Registrant_Invitation_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_Invitation_By_PkArgs = {
    _set?: InputMaybe<Registrant_Invitation_Set_Input>;
    pk_columns: Registrant_Invitation_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_ProfileArgs = {
    _append?: InputMaybe<Registrant_Profile_Append_Input>;
    _delete_at_path?: InputMaybe<Registrant_Profile_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Registrant_Profile_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Registrant_Profile_Delete_Key_Input>;
    _inc?: InputMaybe<Registrant_Profile_Inc_Input>;
    _prepend?: InputMaybe<Registrant_Profile_Prepend_Input>;
    _set?: InputMaybe<Registrant_Profile_Set_Input>;
    where: Registrant_Profile_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_Profile_By_PkArgs = {
    _append?: InputMaybe<Registrant_Profile_Append_Input>;
    _delete_at_path?: InputMaybe<Registrant_Profile_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Registrant_Profile_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Registrant_Profile_Delete_Key_Input>;
    _inc?: InputMaybe<Registrant_Profile_Inc_Input>;
    _prepend?: InputMaybe<Registrant_Profile_Prepend_Input>;
    _set?: InputMaybe<Registrant_Profile_Set_Input>;
    pk_columns: Registrant_Profile_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_RegistrantArgs = {
    _set?: InputMaybe<Registrant_Registrant_Set_Input>;
    where: Registrant_Registrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_RegistrantRoleArgs = {
    _set?: InputMaybe<Registrant_RegistrantRole_Set_Input>;
    where: Registrant_RegistrantRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_RegistrantRole_By_PkArgs = {
    _set?: InputMaybe<Registrant_RegistrantRole_Set_Input>;
    pk_columns: Registrant_RegistrantRole_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_Registrant_By_PkArgs = {
    _set?: InputMaybe<Registrant_Registrant_Set_Input>;
    pk_columns: Registrant_Registrant_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_SavedVonageRoomRecordingArgs = {
    _set?: InputMaybe<Registrant_SavedVonageRoomRecording_Set_Input>;
    where: Registrant_SavedVonageRoomRecording_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_SavedVonageRoomRecording_By_PkArgs = {
    _set?: InputMaybe<Registrant_SavedVonageRoomRecording_Set_Input>;
    pk_columns: Registrant_SavedVonageRoomRecording_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_SubconferenceMembershipArgs = {
    _set?: InputMaybe<Registrant_SubconferenceMembership_Set_Input>;
    where: Registrant_SubconferenceMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Registrant_SubconferenceMembership_By_PkArgs = {
    _set?: InputMaybe<Registrant_SubconferenceMembership_Set_Input>;
    pk_columns: Registrant_SubconferenceMembership_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_BackendArgs = {
    _set?: InputMaybe<Room_Backend_Set_Input>;
    where: Room_Backend_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_Backend_By_PkArgs = {
    _set?: InputMaybe<Room_Backend_Set_Input>;
    pk_columns: Room_Backend_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ChimeMeetingArgs = {
    _append?: InputMaybe<Room_ChimeMeeting_Append_Input>;
    _delete_at_path?: InputMaybe<Room_ChimeMeeting_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Room_ChimeMeeting_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Room_ChimeMeeting_Delete_Key_Input>;
    _prepend?: InputMaybe<Room_ChimeMeeting_Prepend_Input>;
    _set?: InputMaybe<Room_ChimeMeeting_Set_Input>;
    where: Room_ChimeMeeting_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ChimeMeeting_By_PkArgs = {
    _append?: InputMaybe<Room_ChimeMeeting_Append_Input>;
    _delete_at_path?: InputMaybe<Room_ChimeMeeting_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Room_ChimeMeeting_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Room_ChimeMeeting_Delete_Key_Input>;
    _prepend?: InputMaybe<Room_ChimeMeeting_Prepend_Input>;
    _set?: InputMaybe<Room_ChimeMeeting_Set_Input>;
    pk_columns: Room_ChimeMeeting_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ManagementModeArgs = {
    _set?: InputMaybe<Room_ManagementMode_Set_Input>;
    where: Room_ManagementMode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ManagementMode_By_PkArgs = {
    _set?: InputMaybe<Room_ManagementMode_Set_Input>;
    pk_columns: Room_ManagementMode_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_PersonRoleArgs = {
    _set?: InputMaybe<Room_PersonRole_Set_Input>;
    where: Room_PersonRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_PersonRole_By_PkArgs = {
    _set?: InputMaybe<Room_PersonRole_Set_Input>;
    pk_columns: Room_PersonRole_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomArgs = {
    _inc?: InputMaybe<Room_Room_Inc_Input>;
    _set?: InputMaybe<Room_Room_Set_Input>;
    where: Room_Room_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomGroupMembershipArgs = {
    _set?: InputMaybe<Room_RoomGroupMembership_Set_Input>;
    where: Room_RoomGroupMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomGroupMembership_By_PkArgs = {
    _set?: InputMaybe<Room_RoomGroupMembership_Set_Input>;
    pk_columns: Room_RoomGroupMembership_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomMembershipArgs = {
    _set?: InputMaybe<Room_RoomMembership_Set_Input>;
    where: Room_RoomMembership_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_RoomMembership_By_PkArgs = {
    _set?: InputMaybe<Room_RoomMembership_Set_Input>;
    pk_columns: Room_RoomMembership_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_Room_By_PkArgs = {
    _inc?: InputMaybe<Room_Room_Inc_Input>;
    _set?: InputMaybe<Room_Room_Set_Input>;
    pk_columns: Room_Room_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleAlgorithmArgs = {
    _set?: InputMaybe<Room_ShuffleAlgorithm_Set_Input>;
    where: Room_ShuffleAlgorithm_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleAlgorithm_By_PkArgs = {
    _set?: InputMaybe<Room_ShuffleAlgorithm_Set_Input>;
    pk_columns: Room_ShuffleAlgorithm_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShufflePeriodArgs = {
    _inc?: InputMaybe<Room_ShufflePeriod_Inc_Input>;
    _set?: InputMaybe<Room_ShufflePeriod_Set_Input>;
    where: Room_ShufflePeriod_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShufflePeriod_By_PkArgs = {
    _inc?: InputMaybe<Room_ShufflePeriod_Inc_Input>;
    _set?: InputMaybe<Room_ShufflePeriod_Set_Input>;
    pk_columns: Room_ShufflePeriod_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleQueueEntryArgs = {
    _inc?: InputMaybe<Room_ShuffleQueueEntry_Inc_Input>;
    _set?: InputMaybe<Room_ShuffleQueueEntry_Set_Input>;
    where: Room_ShuffleQueueEntry_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleQueueEntry_By_PkArgs = {
    _inc?: InputMaybe<Room_ShuffleQueueEntry_Inc_Input>;
    _set?: InputMaybe<Room_ShuffleQueueEntry_Set_Input>;
    pk_columns: Room_ShuffleQueueEntry_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleRoomArgs = {
    _inc?: InputMaybe<Room_ShuffleRoom_Inc_Input>;
    _set?: InputMaybe<Room_ShuffleRoom_Set_Input>;
    where: Room_ShuffleRoom_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleRoom_By_PkArgs = {
    _inc?: InputMaybe<Room_ShuffleRoom_Inc_Input>;
    _set?: InputMaybe<Room_ShuffleRoom_Set_Input>;
    pk_columns: Room_ShuffleRoom_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_ContinuationArgs = {
    _append?: InputMaybe<Schedule_Continuation_Append_Input>;
    _delete_at_path?: InputMaybe<Schedule_Continuation_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Schedule_Continuation_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Schedule_Continuation_Delete_Key_Input>;
    _inc?: InputMaybe<Schedule_Continuation_Inc_Input>;
    _prepend?: InputMaybe<Schedule_Continuation_Prepend_Input>;
    _set?: InputMaybe<Schedule_Continuation_Set_Input>;
    where: Schedule_Continuation_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_Continuation_By_PkArgs = {
    _append?: InputMaybe<Schedule_Continuation_Append_Input>;
    _delete_at_path?: InputMaybe<Schedule_Continuation_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Schedule_Continuation_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Schedule_Continuation_Delete_Key_Input>;
    _inc?: InputMaybe<Schedule_Continuation_Inc_Input>;
    _prepend?: InputMaybe<Schedule_Continuation_Prepend_Input>;
    _set?: InputMaybe<Schedule_Continuation_Set_Input>;
    pk_columns: Schedule_Continuation_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_CurrentEventsArgs = {
    _set?: InputMaybe<Schedule_CurrentEvents_Set_Input>;
    where: Schedule_CurrentEvents_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventArgs = {
    _set?: InputMaybe<Schedule_Event_Set_Input>;
    where: Schedule_Event_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventProgramPersonArgs = {
    _set?: InputMaybe<Schedule_EventProgramPerson_Set_Input>;
    where: Schedule_EventProgramPerson_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventProgramPersonRoleArgs = {
    _set?: InputMaybe<Schedule_EventProgramPersonRole_Set_Input>;
    where: Schedule_EventProgramPersonRole_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventProgramPersonRole_By_PkArgs = {
    _set?: InputMaybe<Schedule_EventProgramPersonRole_Set_Input>;
    pk_columns: Schedule_EventProgramPersonRole_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_EventProgramPerson_By_PkArgs = {
    _set?: InputMaybe<Schedule_EventProgramPerson_Set_Input>;
    pk_columns: Schedule_EventProgramPerson_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_Event_By_PkArgs = {
    _set?: InputMaybe<Schedule_Event_Set_Input>;
    pk_columns: Schedule_Event_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_ModeArgs = {
    _set?: InputMaybe<Schedule_Mode_Set_Input>;
    where: Schedule_Mode_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_Mode_By_PkArgs = {
    _set?: InputMaybe<Schedule_Mode_Set_Input>;
    pk_columns: Schedule_Mode_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_StarredEventArgs = {
    _set?: InputMaybe<Schedule_StarredEvent_Set_Input>;
    where: Schedule_StarredEvent_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Schedule_StarredEvent_By_PkArgs = {
    _set?: InputMaybe<Schedule_StarredEvent_Set_Input>;
    pk_columns: Schedule_StarredEvent_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Sponsor_TierArgs = {
    _inc?: InputMaybe<Sponsor_Tier_Inc_Input>;
    _set?: InputMaybe<Sponsor_Tier_Set_Input>;
    where: Sponsor_Tier_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Sponsor_TierMemberArgs = {
    _inc?: InputMaybe<Sponsor_TierMember_Inc_Input>;
    _set?: InputMaybe<Sponsor_TierMember_Set_Input>;
    where: Sponsor_TierMember_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Sponsor_TierMember_By_PkArgs = {
    _inc?: InputMaybe<Sponsor_TierMember_Inc_Input>;
    _set?: InputMaybe<Sponsor_TierMember_Set_Input>;
    pk_columns: Sponsor_TierMember_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Sponsor_Tier_By_PkArgs = {
    _inc?: InputMaybe<Sponsor_Tier_Inc_Input>;
    _set?: InputMaybe<Sponsor_Tier_Set_Input>;
    pk_columns: Sponsor_Tier_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationArgs = {
    _append?: InputMaybe<System_Configuration_Append_Input>;
    _delete_at_path?: InputMaybe<System_Configuration_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<System_Configuration_Delete_Elem_Input>;
    _delete_key?: InputMaybe<System_Configuration_Delete_Key_Input>;
    _prepend?: InputMaybe<System_Configuration_Prepend_Input>;
    _set?: InputMaybe<System_Configuration_Set_Input>;
    where: System_Configuration_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationKeyArgs = {
    _set?: InputMaybe<System_ConfigurationKey_Set_Input>;
    where: System_ConfigurationKey_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationKey_By_PkArgs = {
    _set?: InputMaybe<System_ConfigurationKey_Set_Input>;
    pk_columns: System_ConfigurationKey_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationPermissionGrantArgs = {
    _set?: InputMaybe<System_ConfigurationPermissionGrant_Set_Input>;
    where: System_ConfigurationPermissionGrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationPermissionGrant_By_PkArgs = {
    _set?: InputMaybe<System_ConfigurationPermissionGrant_Set_Input>;
    pk_columns: System_ConfigurationPermissionGrant_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_Configuration_By_PkArgs = {
    _append?: InputMaybe<System_Configuration_Append_Input>;
    _delete_at_path?: InputMaybe<System_Configuration_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<System_Configuration_Delete_Elem_Input>;
    _delete_key?: InputMaybe<System_Configuration_Delete_Key_Input>;
    _prepend?: InputMaybe<System_Configuration_Prepend_Input>;
    _set?: InputMaybe<System_Configuration_Set_Input>;
    pk_columns: System_Configuration_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_SuperUserPermissionArgs = {
    _set?: InputMaybe<System_SuperUserPermission_Set_Input>;
    where: System_SuperUserPermission_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_SuperUserPermissionGrantArgs = {
    _set?: InputMaybe<System_SuperUserPermissionGrant_Set_Input>;
    where: System_SuperUserPermissionGrant_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_System_SuperUserPermissionGrant_By_PkArgs = {
    _set?: InputMaybe<System_SuperUserPermissionGrant_Set_Input>;
    pk_columns: System_SuperUserPermissionGrant_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_System_SuperUserPermission_By_PkArgs = {
    _set?: InputMaybe<System_SuperUserPermission_Set_Input>;
    pk_columns: System_SuperUserPermission_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_ChannelStackArgs = {
    _set?: InputMaybe<Video_ChannelStack_Set_Input>;
    where: Video_ChannelStack_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_ChannelStack_By_PkArgs = {
    _set?: InputMaybe<Video_ChannelStack_Set_Input>;
    pk_columns: Video_ChannelStack_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_EventVonageSessionArgs = {
    _set?: InputMaybe<Video_EventVonageSession_Set_Input>;
    where: Video_EventVonageSession_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_EventVonageSession_By_PkArgs = {
    _set?: InputMaybe<Video_EventVonageSession_Set_Input>;
    pk_columns: Video_EventVonageSession_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_ImmediateSwitchArgs = {
    _append?: InputMaybe<Video_ImmediateSwitch_Append_Input>;
    _delete_at_path?: InputMaybe<Video_ImmediateSwitch_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_ImmediateSwitch_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_ImmediateSwitch_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_ImmediateSwitch_Prepend_Input>;
    _set?: InputMaybe<Video_ImmediateSwitch_Set_Input>;
    where: Video_ImmediateSwitch_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_ImmediateSwitch_By_PkArgs = {
    _append?: InputMaybe<Video_ImmediateSwitch_Append_Input>;
    _delete_at_path?: InputMaybe<Video_ImmediateSwitch_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_ImmediateSwitch_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_ImmediateSwitch_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_ImmediateSwitch_Prepend_Input>;
    _set?: InputMaybe<Video_ImmediateSwitch_Set_Input>;
    pk_columns: Video_ImmediateSwitch_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_InputTypeArgs = {
    _set?: InputMaybe<Video_InputType_Set_Input>;
    where: Video_InputType_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_InputType_By_PkArgs = {
    _set?: InputMaybe<Video_InputType_Set_Input>;
    pk_columns: Video_InputType_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_MediaLiveChannelStatusArgs = {
    _inc?: InputMaybe<Video_MediaLiveChannelStatus_Inc_Input>;
    _set?: InputMaybe<Video_MediaLiveChannelStatus_Set_Input>;
    where: Video_MediaLiveChannelStatus_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_MediaLiveChannelStatus_By_PkArgs = {
    _inc?: InputMaybe<Video_MediaLiveChannelStatus_Inc_Input>;
    _set?: InputMaybe<Video_MediaLiveChannelStatus_Set_Input>;
    pk_columns: Video_MediaLiveChannelStatus_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RoomRtmpInputArgs = {
    _set?: InputMaybe<Video_RoomRtmpInput_Set_Input>;
    where: Video_RoomRtmpInput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RoomRtmpInput_By_PkArgs = {
    _set?: InputMaybe<Video_RoomRtmpInput_Set_Input>;
    pk_columns: Video_RoomRtmpInput_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RoomRtmpOutputArgs = {
    _set?: InputMaybe<Video_RoomRtmpOutput_Set_Input>;
    where: Video_RoomRtmpOutput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RoomRtmpOutput_By_PkArgs = {
    _set?: InputMaybe<Video_RoomRtmpOutput_Set_Input>;
    pk_columns: Video_RoomRtmpOutput_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RtmpInputArgs = {
    _set?: InputMaybe<Video_RtmpInput_Set_Input>;
    where: Video_RtmpInput_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_RtmpInput_By_PkArgs = {
    _set?: InputMaybe<Video_RtmpInput_Set_Input>;
    pk_columns: Video_RtmpInput_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_TranscriptionJobArgs = {
    _set?: InputMaybe<Video_TranscriptionJob_Set_Input>;
    where: Video_TranscriptionJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_TranscriptionJob_By_PkArgs = {
    _set?: InputMaybe<Video_TranscriptionJob_Set_Input>;
    pk_columns: Video_TranscriptionJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VideoRenderJobArgs = {
    _append?: InputMaybe<Video_VideoRenderJob_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VideoRenderJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VideoRenderJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VideoRenderJob_Delete_Key_Input>;
    _inc?: InputMaybe<Video_VideoRenderJob_Inc_Input>;
    _prepend?: InputMaybe<Video_VideoRenderJob_Prepend_Input>;
    _set?: InputMaybe<Video_VideoRenderJob_Set_Input>;
    where: Video_VideoRenderJob_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VideoRenderJob_By_PkArgs = {
    _append?: InputMaybe<Video_VideoRenderJob_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VideoRenderJob_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VideoRenderJob_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VideoRenderJob_Delete_Key_Input>;
    _inc?: InputMaybe<Video_VideoRenderJob_Inc_Input>;
    _prepend?: InputMaybe<Video_VideoRenderJob_Prepend_Input>;
    _set?: InputMaybe<Video_VideoRenderJob_Set_Input>;
    pk_columns: Video_VideoRenderJob_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageParticipantStreamArgs = {
    _set?: InputMaybe<Video_VonageParticipantStream_Set_Input>;
    where: Video_VonageParticipantStream_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageParticipantStream_By_PkArgs = {
    _set?: InputMaybe<Video_VonageParticipantStream_Set_Input>;
    pk_columns: Video_VonageParticipantStream_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageRoomRecordingArgs = {
    _set?: InputMaybe<Video_VonageRoomRecording_Set_Input>;
    where: Video_VonageRoomRecording_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageRoomRecording_By_PkArgs = {
    _set?: InputMaybe<Video_VonageRoomRecording_Set_Input>;
    pk_columns: Video_VonageRoomRecording_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageSessionLayoutArgs = {
    _append?: InputMaybe<Video_VonageSessionLayout_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VonageSessionLayout_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VonageSessionLayout_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VonageSessionLayout_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_VonageSessionLayout_Prepend_Input>;
    _set?: InputMaybe<Video_VonageSessionLayout_Set_Input>;
    where: Video_VonageSessionLayout_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageSessionLayout_By_PkArgs = {
    _append?: InputMaybe<Video_VonageSessionLayout_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VonageSessionLayout_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VonageSessionLayout_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VonageSessionLayout_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_VonageSessionLayout_Prepend_Input>;
    _set?: InputMaybe<Video_VonageSessionLayout_Set_Input>;
    pk_columns: Video_VonageSessionLayout_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageVideoPlaybackCommandArgs = {
    _append?: InputMaybe<Video_VonageVideoPlaybackCommand_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_VonageVideoPlaybackCommand_Prepend_Input>;
    _set?: InputMaybe<Video_VonageVideoPlaybackCommand_Set_Input>;
    where: Video_VonageVideoPlaybackCommand_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_VonageVideoPlaybackCommand_By_PkArgs = {
    _append?: InputMaybe<Video_VonageVideoPlaybackCommand_Append_Input>;
    _delete_at_path?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_At_Path_Input>;
    _delete_elem?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_Elem_Input>;
    _delete_key?: InputMaybe<Video_VonageVideoPlaybackCommand_Delete_Key_Input>;
    _prepend?: InputMaybe<Video_VonageVideoPlaybackCommand_Prepend_Input>;
    _set?: InputMaybe<Video_VonageVideoPlaybackCommand_Set_Input>;
    pk_columns: Video_VonageVideoPlaybackCommand_Pk_Columns_Input;
};

/** mutation root */
export type Mutation_RootUpdate_Video_YouTubeUploadArgs = {
    _set?: InputMaybe<Video_YouTubeUpload_Set_Input>;
    where: Video_YouTubeUpload_Bool_Exp;
};

/** mutation root */
export type Mutation_RootUpdate_Video_YouTubeUpload_By_PkArgs = {
    _set?: InputMaybe<Video_YouTubeUpload_Set_Input>;
    pk_columns: Video_YouTubeUpload_Pk_Columns_Input;
};

/** Boolean expression to compare columns of type "name". All fields are combined with logical 'AND'. */
export type Name_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["name"]>;
    readonly _gt?: InputMaybe<Scalars["name"]>;
    readonly _gte?: InputMaybe<Scalars["name"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["name"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["name"]>;
    readonly _lte?: InputMaybe<Scalars["name"]>;
    readonly _neq?: InputMaybe<Scalars["name"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["name"]>>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["numeric"]>;
    readonly _gt?: InputMaybe<Scalars["numeric"]>;
    readonly _gte?: InputMaybe<Scalars["numeric"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["numeric"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["numeric"]>;
    readonly _lte?: InputMaybe<Scalars["numeric"]>;
    readonly _neq?: InputMaybe<Scalars["numeric"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["numeric"]>>;
};

/** column ordering options */
export enum Order_By {
    /** in ascending order, nulls last */
    Asc = "asc",
    /** in ascending order, nulls first */
    AscNullsFirst = "asc_nulls_first",
    /** in ascending order, nulls last */
    AscNullsLast = "asc_nulls_last",
    /** in descending order, nulls first */
    Desc = "desc",
    /** in descending order, nulls first */
    DescNullsFirst = "desc_nulls_first",
    /** in descending order, nulls last */
    DescNullsLast = "desc_nulls_last",
}

export type Query_Root = {
    readonly __typename?: "query_root";
    /** fetch data from the table: "Email" */
    readonly Email: ReadonlyArray<Email>;
    /** fetch aggregated fields from the table: "Email" */
    readonly Email_aggregate: Email_Aggregate;
    /** fetch data from the table: "Email" using primary key columns */
    readonly Email_by_pk?: Maybe<Email>;
    /** fetch data from the table: "ForeignKeyIntrospection" */
    readonly ForeignKeyIntrospection: ReadonlyArray<ForeignKeyIntrospection>;
    /** fetch aggregated fields from the table: "ForeignKeyIntrospection" */
    readonly ForeignKeyIntrospection_aggregate: ForeignKeyIntrospection_Aggregate;
    /** fetch data from the table: "PushNotificationSubscription" */
    readonly PushNotificationSubscription: ReadonlyArray<PushNotificationSubscription>;
    /** fetch aggregated fields from the table: "PushNotificationSubscription" */
    readonly PushNotificationSubscription_aggregate: PushNotificationSubscription_Aggregate;
    /** fetch data from the table: "PushNotificationSubscription" using primary key columns */
    readonly PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
    /** fetch data from the table: "User" */
    readonly User: ReadonlyArray<User>;
    /** fetch aggregated fields from the table: "User" */
    readonly User_aggregate: User_Aggregate;
    /** fetch data from the table: "User" using primary key columns */
    readonly User_by_pk?: Maybe<User>;
    /** fetch data from the table: "analytics.AppStats" */
    readonly analytics_AppStats: ReadonlyArray<Analytics_AppStats>;
    /** fetch aggregated fields from the table: "analytics.AppStats" */
    readonly analytics_AppStats_aggregate: Analytics_AppStats_Aggregate;
    /** fetch data from the table: "analytics.AppStats" using primary key columns */
    readonly analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
    /** fetch data from the table: "analytics.CompletedRegistrations" */
    readonly analytics_CompletedRegistrations: ReadonlyArray<Analytics_CompletedRegistrations>;
    /** fetch aggregated fields from the table: "analytics.CompletedRegistrations" */
    readonly analytics_CompletedRegistrations_aggregate: Analytics_CompletedRegistrations_Aggregate;
    /** fetch data from the table: "analytics.ContentElementStats" */
    readonly analytics_ContentElementStats: ReadonlyArray<Analytics_ContentElementStats>;
    /** fetch aggregated fields from the table: "analytics.ContentElementStats" */
    readonly analytics_ContentElementStats_aggregate: Analytics_ContentElementStats_Aggregate;
    /** fetch data from the table: "analytics.ContentElementStats" using primary key columns */
    readonly analytics_ContentElementStats_by_pk?: Maybe<Analytics_ContentElementStats>;
    /** fetch data from the table: "analytics.ContentItemStats" */
    readonly analytics_ContentItemStats: ReadonlyArray<Analytics_ContentItemStats>;
    /** fetch aggregated fields from the table: "analytics.ContentItemStats" */
    readonly analytics_ContentItemStats_aggregate: Analytics_ContentItemStats_Aggregate;
    /** fetch data from the table: "analytics.ContentItemStats" using primary key columns */
    readonly analytics_ContentItemStats_by_pk?: Maybe<Analytics_ContentItemStats>;
    /** fetch data from the table: "analytics.ElementTotalViews" */
    readonly analytics_ElementTotalViews: ReadonlyArray<Analytics_ElementTotalViews>;
    /** fetch aggregated fields from the table: "analytics.ElementTotalViews" */
    readonly analytics_ElementTotalViews_aggregate: Analytics_ElementTotalViews_Aggregate;
    /** fetch data from the table: "analytics.ElementTotalViews" using primary key columns */
    readonly analytics_ElementTotalViews_by_pk?: Maybe<Analytics_ElementTotalViews>;
    /** fetch data from the table: "analytics.ItemTotalViews" */
    readonly analytics_ItemTotalViews: ReadonlyArray<Analytics_ItemTotalViews>;
    /** fetch aggregated fields from the table: "analytics.ItemTotalViews" */
    readonly analytics_ItemTotalViews_aggregate: Analytics_ItemTotalViews_Aggregate;
    /** fetch data from the table: "analytics.ItemTotalViews" using primary key columns */
    readonly analytics_ItemTotalViews_by_pk?: Maybe<Analytics_ItemTotalViews>;
    /** fetch data from the table: "analytics.RoomPresence" */
    readonly analytics_RoomPresence: ReadonlyArray<Analytics_RoomPresence>;
    /** fetch aggregated fields from the table: "analytics.RoomPresence" */
    readonly analytics_RoomPresence_aggregate: Analytics_RoomPresence_Aggregate;
    /** fetch data from the table: "analytics.RoomPresence" using primary key columns */
    readonly analytics_RoomPresence_by_pk?: Maybe<Analytics_RoomPresence>;
    /** fetch data from the table: "analytics.RoomStats" */
    readonly analytics_RoomStats: ReadonlyArray<Analytics_RoomStats>;
    /** fetch aggregated fields from the table: "analytics.RoomStats" */
    readonly analytics_RoomStats_aggregate: Analytics_RoomStats_Aggregate;
    /** fetch data from the table: "analytics.RoomStats" using primary key columns */
    readonly analytics_RoomStats_by_pk?: Maybe<Analytics_RoomStats>;
    /** fetch data from the table: "chat.Chat" */
    readonly chat_Chat: ReadonlyArray<Chat_Chat>;
    /** fetch aggregated fields from the table: "chat.Chat" */
    readonly chat_Chat_aggregate: Chat_Chat_Aggregate;
    /** fetch data from the table: "chat.Chat" using primary key columns */
    readonly chat_Chat_by_pk?: Maybe<Chat_Chat>;
    /** fetch data from the table: "chat.Flag" */
    readonly chat_Flag: ReadonlyArray<Chat_Flag>;
    /** fetch data from the table: "chat.FlagType" */
    readonly chat_FlagType: ReadonlyArray<Chat_FlagType>;
    /** fetch aggregated fields from the table: "chat.FlagType" */
    readonly chat_FlagType_aggregate: Chat_FlagType_Aggregate;
    /** fetch data from the table: "chat.FlagType" using primary key columns */
    readonly chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
    /** fetch aggregated fields from the table: "chat.Flag" */
    readonly chat_Flag_aggregate: Chat_Flag_Aggregate;
    /** fetch data from the table: "chat.Flag" using primary key columns */
    readonly chat_Flag_by_pk?: Maybe<Chat_Flag>;
    /** fetch data from the table: "chat.Message" */
    readonly chat_Message: ReadonlyArray<Chat_Message>;
    /** fetch data from the table: "chat.MessageType" */
    readonly chat_MessageType: ReadonlyArray<Chat_MessageType>;
    /** fetch aggregated fields from the table: "chat.MessageType" */
    readonly chat_MessageType_aggregate: Chat_MessageType_Aggregate;
    /** fetch data from the table: "chat.MessageType" using primary key columns */
    readonly chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
    /** fetch aggregated fields from the table: "chat.Message" */
    readonly chat_Message_aggregate: Chat_Message_Aggregate;
    /** fetch data from the table: "chat.Message" using primary key columns */
    readonly chat_Message_by_pk?: Maybe<Chat_Message>;
    /** fetch data from the table: "chat.Pin" */
    readonly chat_Pin: ReadonlyArray<Chat_Pin>;
    /** fetch aggregated fields from the table: "chat.Pin" */
    readonly chat_Pin_aggregate: Chat_Pin_Aggregate;
    /** fetch data from the table: "chat.Pin" using primary key columns */
    readonly chat_Pin_by_pk?: Maybe<Chat_Pin>;
    /** fetch data from the table: "chat.Reaction" */
    readonly chat_Reaction: ReadonlyArray<Chat_Reaction>;
    /** fetch data from the table: "chat.ReactionType" */
    readonly chat_ReactionType: ReadonlyArray<Chat_ReactionType>;
    /** fetch aggregated fields from the table: "chat.ReactionType" */
    readonly chat_ReactionType_aggregate: Chat_ReactionType_Aggregate;
    /** fetch data from the table: "chat.ReactionType" using primary key columns */
    readonly chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
    /** fetch aggregated fields from the table: "chat.Reaction" */
    readonly chat_Reaction_aggregate: Chat_Reaction_Aggregate;
    /** fetch data from the table: "chat.Reaction" using primary key columns */
    readonly chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
    /** fetch data from the table: "chat.ReadUpToIndex" */
    readonly chat_ReadUpToIndex: ReadonlyArray<Chat_ReadUpToIndex>;
    /** fetch aggregated fields from the table: "chat.ReadUpToIndex" */
    readonly chat_ReadUpToIndex_aggregate: Chat_ReadUpToIndex_Aggregate;
    /** fetch data from the table: "chat.ReadUpToIndex" using primary key columns */
    readonly chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
    /** fetch data from the table: "chat.Subscription" */
    readonly chat_Subscription: ReadonlyArray<Chat_Subscription>;
    /** fetch aggregated fields from the table: "chat.Subscription" */
    readonly chat_Subscription_aggregate: Chat_Subscription_Aggregate;
    /** fetch data from the table: "chat.Subscription" using primary key columns */
    readonly chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
    /** fetch data from the table: "collection.Exhibition" */
    readonly collection_Exhibition: ReadonlyArray<Collection_Exhibition>;
    /** fetch aggregated fields from the table: "collection.Exhibition" */
    readonly collection_Exhibition_aggregate: Collection_Exhibition_Aggregate;
    /** fetch data from the table: "collection.Exhibition" using primary key columns */
    readonly collection_Exhibition_by_pk?: Maybe<Collection_Exhibition>;
    /** fetch data from the table: "collection.ProgramPerson" */
    readonly collection_ProgramPerson: ReadonlyArray<Collection_ProgramPerson>;
    /** fetch aggregated fields from the table: "collection.ProgramPerson" */
    readonly collection_ProgramPerson_aggregate: Collection_ProgramPerson_Aggregate;
    /** fetch data from the table: "collection.ProgramPerson" using primary key columns */
    readonly collection_ProgramPerson_by_pk?: Maybe<Collection_ProgramPerson>;
    /** fetch data from the table: "collection.Tag" */
    readonly collection_Tag: ReadonlyArray<Collection_Tag>;
    /** fetch aggregated fields from the table: "collection.Tag" */
    readonly collection_Tag_aggregate: Collection_Tag_Aggregate;
    /** fetch data from the table: "collection.Tag" using primary key columns */
    readonly collection_Tag_by_pk?: Maybe<Collection_Tag>;
    /** execute function "collection.searchProgramPerson" which returns "collection.ProgramPerson" */
    readonly collection_searchProgramPerson: ReadonlyArray<Collection_ProgramPerson>;
    /** execute function "collection.searchProgramPerson" and query aggregates on result of table type "collection.ProgramPerson" */
    readonly collection_searchProgramPerson_aggregate: Collection_ProgramPerson_Aggregate;
    /** fetch data from the table: "conference.Conference" */
    readonly conference_Conference: ReadonlyArray<Conference_Conference>;
    /** fetch aggregated fields from the table: "conference.Conference" */
    readonly conference_Conference_aggregate: Conference_Conference_Aggregate;
    /** fetch data from the table: "conference.Conference" using primary key columns */
    readonly conference_Conference_by_pk?: Maybe<Conference_Conference>;
    /** fetch data from the table: "conference.Configuration" */
    readonly conference_Configuration: ReadonlyArray<Conference_Configuration>;
    /** fetch data from the table: "conference.ConfigurationKey" */
    readonly conference_ConfigurationKey: ReadonlyArray<Conference_ConfigurationKey>;
    /** fetch aggregated fields from the table: "conference.ConfigurationKey" */
    readonly conference_ConfigurationKey_aggregate: Conference_ConfigurationKey_Aggregate;
    /** fetch data from the table: "conference.ConfigurationKey" using primary key columns */
    readonly conference_ConfigurationKey_by_pk?: Maybe<Conference_ConfigurationKey>;
    /** fetch aggregated fields from the table: "conference.Configuration" */
    readonly conference_Configuration_aggregate: Conference_Configuration_Aggregate;
    /** fetch data from the table: "conference.Configuration" using primary key columns */
    readonly conference_Configuration_by_pk?: Maybe<Conference_Configuration>;
    /** fetch data from the table: "conference.DemoCode" */
    readonly conference_DemoCode: ReadonlyArray<Conference_DemoCode>;
    /** fetch aggregated fields from the table: "conference.DemoCode" */
    readonly conference_DemoCode_aggregate: Conference_DemoCode_Aggregate;
    /** fetch data from the table: "conference.DemoCode" using primary key columns */
    readonly conference_DemoCode_by_pk?: Maybe<Conference_DemoCode>;
    /** fetch data from the table: "conference.Quota" */
    readonly conference_Quota: ReadonlyArray<Conference_Quota>;
    /** fetch aggregated fields from the table: "conference.Quota" */
    readonly conference_Quota_aggregate: Conference_Quota_Aggregate;
    /** fetch data from the table: "conference.Quota" using primary key columns */
    readonly conference_Quota_by_pk?: Maybe<Conference_Quota>;
    /** fetch data from the table: "conference.RemainingQuota" */
    readonly conference_RemainingQuota: ReadonlyArray<Conference_RemainingQuota>;
    /** fetch aggregated fields from the table: "conference.RemainingQuota" */
    readonly conference_RemainingQuota_aggregate: Conference_RemainingQuota_Aggregate;
    /** fetch data from the table: "conference.Subconference" */
    readonly conference_Subconference: ReadonlyArray<Conference_Subconference>;
    /** fetch aggregated fields from the table: "conference.Subconference" */
    readonly conference_Subconference_aggregate: Conference_Subconference_Aggregate;
    /** fetch data from the table: "conference.Subconference" using primary key columns */
    readonly conference_Subconference_by_pk?: Maybe<Conference_Subconference>;
    /** fetch data from the table: "conference.Usage" */
    readonly conference_Usage: ReadonlyArray<Conference_Usage>;
    /** fetch aggregated fields from the table: "conference.Usage" */
    readonly conference_Usage_aggregate: Conference_Usage_Aggregate;
    /** fetch data from the table: "conference.Usage" using primary key columns */
    readonly conference_Usage_by_pk?: Maybe<Conference_Usage>;
    /** fetch data from the table: "conference.VisibilityLevel" */
    readonly conference_VisibilityLevel: ReadonlyArray<Conference_VisibilityLevel>;
    /** fetch aggregated fields from the table: "conference.VisibilityLevel" */
    readonly conference_VisibilityLevel_aggregate: Conference_VisibilityLevel_Aggregate;
    /** fetch data from the table: "conference.VisibilityLevel" using primary key columns */
    readonly conference_VisibilityLevel_by_pk?: Maybe<Conference_VisibilityLevel>;
    /** fetch data from the table: "content.Element" */
    readonly content_Element: ReadonlyArray<Content_Element>;
    /** fetch data from the table: "content.ElementType" */
    readonly content_ElementType: ReadonlyArray<Content_ElementType>;
    /** fetch aggregated fields from the table: "content.ElementType" */
    readonly content_ElementType_aggregate: Content_ElementType_Aggregate;
    /** fetch data from the table: "content.ElementType" using primary key columns */
    readonly content_ElementType_by_pk?: Maybe<Content_ElementType>;
    /** fetch aggregated fields from the table: "content.Element" */
    readonly content_Element_aggregate: Content_Element_Aggregate;
    /** fetch data from the table: "content.Element" using primary key columns */
    readonly content_Element_by_pk?: Maybe<Content_Element>;
    /** fetch data from the table: "content.Item" */
    readonly content_Item: ReadonlyArray<Content_Item>;
    /** fetch data from the table: "content.ItemExhibition" */
    readonly content_ItemExhibition: ReadonlyArray<Content_ItemExhibition>;
    /** fetch aggregated fields from the table: "content.ItemExhibition" */
    readonly content_ItemExhibition_aggregate: Content_ItemExhibition_Aggregate;
    /** fetch data from the table: "content.ItemExhibition" using primary key columns */
    readonly content_ItemExhibition_by_pk?: Maybe<Content_ItemExhibition>;
    /** fetch data from the table: "content.ItemProgramPerson" */
    readonly content_ItemProgramPerson: ReadonlyArray<Content_ItemProgramPerson>;
    /** fetch aggregated fields from the table: "content.ItemProgramPerson" */
    readonly content_ItemProgramPerson_aggregate: Content_ItemProgramPerson_Aggregate;
    /** fetch data from the table: "content.ItemProgramPerson" using primary key columns */
    readonly content_ItemProgramPerson_by_pk?: Maybe<Content_ItemProgramPerson>;
    /** fetch data from the table: "content.ItemTag" */
    readonly content_ItemTag: ReadonlyArray<Content_ItemTag>;
    /** fetch aggregated fields from the table: "content.ItemTag" */
    readonly content_ItemTag_aggregate: Content_ItemTag_Aggregate;
    /** fetch data from the table: "content.ItemTag" using primary key columns */
    readonly content_ItemTag_by_pk?: Maybe<Content_ItemTag>;
    /** fetch data from the table: "content.ItemType" */
    readonly content_ItemType: ReadonlyArray<Content_ItemType>;
    /** fetch aggregated fields from the table: "content.ItemType" */
    readonly content_ItemType_aggregate: Content_ItemType_Aggregate;
    /** fetch data from the table: "content.ItemType" using primary key columns */
    readonly content_ItemType_by_pk?: Maybe<Content_ItemType>;
    /** fetch aggregated fields from the table: "content.Item" */
    readonly content_Item_aggregate: Content_Item_Aggregate;
    /** fetch data from the table: "content.Item" using primary key columns */
    readonly content_Item_by_pk?: Maybe<Content_Item>;
    /** execute function "content.searchItems" which returns "content.Item" */
    readonly content_searchItems: ReadonlyArray<Content_Item>;
    /** execute function "content.searchItems" and query aggregates on result of table type "content.Item" */
    readonly content_searchItems_aggregate: Content_Item_Aggregate;
    readonly getSlug: GetSlugOutput;
    readonly getUploadAgreement?: Maybe<GetUploadAgreementOutput>;
    /** fetch data from the table: "job_queues.ChannelStackCreateJob" */
    readonly job_queues_ChannelStackCreateJob: ReadonlyArray<Job_Queues_ChannelStackCreateJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackCreateJob" */
    readonly job_queues_ChannelStackCreateJob_aggregate: Job_Queues_ChannelStackCreateJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackCreateJob" using primary key columns */
    readonly job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** fetch data from the table: "job_queues.ChannelStackDeleteJob" */
    readonly job_queues_ChannelStackDeleteJob: ReadonlyArray<Job_Queues_ChannelStackDeleteJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackDeleteJob" */
    readonly job_queues_ChannelStackDeleteJob_aggregate: Job_Queues_ChannelStackDeleteJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackDeleteJob" using primary key columns */
    readonly job_queues_ChannelStackDeleteJob_by_pk?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** fetch data from the table: "job_queues.ChannelStackUpdateJob" */
    readonly job_queues_ChannelStackUpdateJob: ReadonlyArray<Job_Queues_ChannelStackUpdateJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackUpdateJob" */
    readonly job_queues_ChannelStackUpdateJob_aggregate: Job_Queues_ChannelStackUpdateJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackUpdateJob" using primary key columns */
    readonly job_queues_ChannelStackUpdateJob_by_pk?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** fetch data from the table: "job_queues.CombineVideosJob" */
    readonly job_queues_CombineVideosJob: ReadonlyArray<Job_Queues_CombineVideosJob>;
    /** fetch aggregated fields from the table: "job_queues.CombineVideosJob" */
    readonly job_queues_CombineVideosJob_aggregate: Job_Queues_CombineVideosJob_Aggregate;
    /** fetch data from the table: "job_queues.CombineVideosJob" using primary key columns */
    readonly job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
    /** fetch data from the table: "job_queues.CustomEmailJob" */
    readonly job_queues_CustomEmailJob: ReadonlyArray<Job_Queues_CustomEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.CustomEmailJob" */
    readonly job_queues_CustomEmailJob_aggregate: Job_Queues_CustomEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.CustomEmailJob" using primary key columns */
    readonly job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
    /** fetch data from the table: "job_queues.ImportJob" */
    readonly job_queues_ImportJob: ReadonlyArray<Job_Queues_ImportJob>;
    /** fetch data from the table: "job_queues.ImportJobOutput" */
    readonly job_queues_ImportJobOutput: ReadonlyArray<Job_Queues_ImportJobOutput>;
    /** fetch aggregated fields from the table: "job_queues.ImportJobOutput" */
    readonly job_queues_ImportJobOutput_aggregate: Job_Queues_ImportJobOutput_Aggregate;
    /** fetch data from the table: "job_queues.ImportJobOutput" using primary key columns */
    readonly job_queues_ImportJobOutput_by_pk?: Maybe<Job_Queues_ImportJobOutput>;
    /** fetch aggregated fields from the table: "job_queues.ImportJob" */
    readonly job_queues_ImportJob_aggregate: Job_Queues_ImportJob_Aggregate;
    /** fetch data from the table: "job_queues.ImportJob" using primary key columns */
    readonly job_queues_ImportJob_by_pk?: Maybe<Job_Queues_ImportJob>;
    /** fetch data from the table: "job_queues.InvitationEmailJob" */
    readonly job_queues_InvitationEmailJob: ReadonlyArray<Job_Queues_InvitationEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.InvitationEmailJob" */
    readonly job_queues_InvitationEmailJob_aggregate: Job_Queues_InvitationEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.InvitationEmailJob" using primary key columns */
    readonly job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
    /** fetch data from the table: "job_queues.JobStatus" */
    readonly job_queues_JobStatus: ReadonlyArray<Job_Queues_JobStatus>;
    /** fetch aggregated fields from the table: "job_queues.JobStatus" */
    readonly job_queues_JobStatus_aggregate: Job_Queues_JobStatus_Aggregate;
    /** fetch data from the table: "job_queues.JobStatus" using primary key columns */
    readonly job_queues_JobStatus_by_pk?: Maybe<Job_Queues_JobStatus>;
    /** fetch data from the table: "job_queues.MediaPackageHarvestJob" */
    readonly job_queues_MediaPackageHarvestJob: ReadonlyArray<Job_Queues_MediaPackageHarvestJob>;
    /** fetch aggregated fields from the table: "job_queues.MediaPackageHarvestJob" */
    readonly job_queues_MediaPackageHarvestJob_aggregate: Job_Queues_MediaPackageHarvestJob_Aggregate;
    /** fetch data from the table: "job_queues.MediaPackageHarvestJob" using primary key columns */
    readonly job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** fetch data from the table: "job_queues.PrepareJob" */
    readonly job_queues_PrepareJob: ReadonlyArray<Job_Queues_PrepareJob>;
    /** fetch aggregated fields from the table: "job_queues.PrepareJob" */
    readonly job_queues_PrepareJob_aggregate: Job_Queues_PrepareJob_Aggregate;
    /** fetch data from the table: "job_queues.PrepareJob" using primary key columns */
    readonly job_queues_PrepareJob_by_pk?: Maybe<Job_Queues_PrepareJob>;
    /** fetch data from the table: "job_queues.PublishVideoJob" */
    readonly job_queues_PublishVideoJob: ReadonlyArray<Job_Queues_PublishVideoJob>;
    /** fetch aggregated fields from the table: "job_queues.PublishVideoJob" */
    readonly job_queues_PublishVideoJob_aggregate: Job_Queues_PublishVideoJob_Aggregate;
    /** fetch data from the table: "job_queues.PublishVideoJob" using primary key columns */
    readonly job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
    /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" */
    readonly job_queues_SubmissionRequestEmailJob: ReadonlyArray<Job_Queues_SubmissionRequestEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.SubmissionRequestEmailJob" */
    readonly job_queues_SubmissionRequestEmailJob_aggregate: Job_Queues_SubmissionRequestEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" using primary key columns */
    readonly job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" */
    readonly job_queues_UploadYouTubeVideoJob: ReadonlyArray<Job_Queues_UploadYouTubeVideoJob>;
    /** fetch aggregated fields from the table: "job_queues.UploadYouTubeVideoJob" */
    readonly job_queues_UploadYouTubeVideoJob_aggregate: Job_Queues_UploadYouTubeVideoJob_Aggregate;
    /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" using primary key columns */
    readonly job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    readonly presence_Summary?: Maybe<PresenceSummaryOutput>;
    /** fetch data from the table: "registrant.GoogleAccount" */
    readonly registrant_GoogleAccount: ReadonlyArray<Registrant_GoogleAccount>;
    /** fetch aggregated fields from the table: "registrant.GoogleAccount" */
    readonly registrant_GoogleAccount_aggregate: Registrant_GoogleAccount_Aggregate;
    /** fetch data from the table: "registrant.GoogleAccount" using primary key columns */
    readonly registrant_GoogleAccount_by_pk?: Maybe<Registrant_GoogleAccount>;
    /** fetch data from the table: "registrant.Group" */
    readonly registrant_Group: ReadonlyArray<Registrant_Group>;
    /** fetch data from the table: "registrant.GroupRegistrant" */
    readonly registrant_GroupRegistrant: ReadonlyArray<Registrant_GroupRegistrant>;
    /** fetch aggregated fields from the table: "registrant.GroupRegistrant" */
    readonly registrant_GroupRegistrant_aggregate: Registrant_GroupRegistrant_Aggregate;
    /** fetch data from the table: "registrant.GroupRegistrant" using primary key columns */
    readonly registrant_GroupRegistrant_by_pk?: Maybe<Registrant_GroupRegistrant>;
    /** fetch aggregated fields from the table: "registrant.Group" */
    readonly registrant_Group_aggregate: Registrant_Group_Aggregate;
    /** fetch data from the table: "registrant.Group" using primary key columns */
    readonly registrant_Group_by_pk?: Maybe<Registrant_Group>;
    /** fetch data from the table: "registrant.Invitation" */
    readonly registrant_Invitation: ReadonlyArray<Registrant_Invitation>;
    /** fetch aggregated fields from the table: "registrant.Invitation" */
    readonly registrant_Invitation_aggregate: Registrant_Invitation_Aggregate;
    /** fetch data from the table: "registrant.Invitation" using primary key columns */
    readonly registrant_Invitation_by_pk?: Maybe<Registrant_Invitation>;
    /** fetch data from the table: "registrant.Profile" */
    readonly registrant_Profile: ReadonlyArray<Registrant_Profile>;
    /** fetch data from the table: "registrant.ProfileBadges" */
    readonly registrant_ProfileBadges: ReadonlyArray<Registrant_ProfileBadges>;
    /** fetch aggregated fields from the table: "registrant.ProfileBadges" */
    readonly registrant_ProfileBadges_aggregate: Registrant_ProfileBadges_Aggregate;
    /** fetch aggregated fields from the table: "registrant.Profile" */
    readonly registrant_Profile_aggregate: Registrant_Profile_Aggregate;
    /** fetch data from the table: "registrant.Profile" using primary key columns */
    readonly registrant_Profile_by_pk?: Maybe<Registrant_Profile>;
    /** fetch data from the table: "registrant.Registrant" */
    readonly registrant_Registrant: ReadonlyArray<Registrant_Registrant>;
    /** fetch data from the table: "registrant.RegistrantRole" */
    readonly registrant_RegistrantRole: ReadonlyArray<Registrant_RegistrantRole>;
    /** fetch aggregated fields from the table: "registrant.RegistrantRole" */
    readonly registrant_RegistrantRole_aggregate: Registrant_RegistrantRole_Aggregate;
    /** fetch data from the table: "registrant.RegistrantRole" using primary key columns */
    readonly registrant_RegistrantRole_by_pk?: Maybe<Registrant_RegistrantRole>;
    /** fetch aggregated fields from the table: "registrant.Registrant" */
    readonly registrant_Registrant_aggregate: Registrant_Registrant_Aggregate;
    /** fetch data from the table: "registrant.Registrant" using primary key columns */
    readonly registrant_Registrant_by_pk?: Maybe<Registrant_Registrant>;
    /** fetch data from the table: "registrant.SavedVonageRoomRecording" */
    readonly registrant_SavedVonageRoomRecording: ReadonlyArray<Registrant_SavedVonageRoomRecording>;
    /** fetch aggregated fields from the table: "registrant.SavedVonageRoomRecording" */
    readonly registrant_SavedVonageRoomRecording_aggregate: Registrant_SavedVonageRoomRecording_Aggregate;
    /** fetch data from the table: "registrant.SavedVonageRoomRecording" using primary key columns */
    readonly registrant_SavedVonageRoomRecording_by_pk?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** fetch data from the table: "registrant.SubconferenceMembership" */
    readonly registrant_SubconferenceMembership: ReadonlyArray<Registrant_SubconferenceMembership>;
    /** fetch aggregated fields from the table: "registrant.SubconferenceMembership" */
    readonly registrant_SubconferenceMembership_aggregate: Registrant_SubconferenceMembership_Aggregate;
    /** fetch data from the table: "registrant.SubconferenceMembership" using primary key columns */
    readonly registrant_SubconferenceMembership_by_pk?: Maybe<Registrant_SubconferenceMembership>;
    /** execute function "registrant.searchRegistrants" which returns "registrant.Registrant" */
    readonly registrant_searchRegistrants: ReadonlyArray<Registrant_Registrant>;
    /** execute function "registrant.searchRegistrants" and query aggregates on result of table type "registrant.Registrant" */
    readonly registrant_searchRegistrants_aggregate: Registrant_Registrant_Aggregate;
    /** fetch data from the table: "room.Backend" */
    readonly room_Backend: ReadonlyArray<Room_Backend>;
    /** fetch aggregated fields from the table: "room.Backend" */
    readonly room_Backend_aggregate: Room_Backend_Aggregate;
    /** fetch data from the table: "room.Backend" using primary key columns */
    readonly room_Backend_by_pk?: Maybe<Room_Backend>;
    /** fetch data from the table: "room.ChimeMeeting" */
    readonly room_ChimeMeeting: ReadonlyArray<Room_ChimeMeeting>;
    /** fetch aggregated fields from the table: "room.ChimeMeeting" */
    readonly room_ChimeMeeting_aggregate: Room_ChimeMeeting_Aggregate;
    /** fetch data from the table: "room.ChimeMeeting" using primary key columns */
    readonly room_ChimeMeeting_by_pk?: Maybe<Room_ChimeMeeting>;
    /** fetch data from the table: "room.LivestreamDurations" */
    readonly room_LivestreamDurations: ReadonlyArray<Room_LivestreamDurations>;
    /** fetch aggregated fields from the table: "room.LivestreamDurations" */
    readonly room_LivestreamDurations_aggregate: Room_LivestreamDurations_Aggregate;
    /** fetch data from the table: "room.ManagementMode" */
    readonly room_ManagementMode: ReadonlyArray<Room_ManagementMode>;
    /** fetch aggregated fields from the table: "room.ManagementMode" */
    readonly room_ManagementMode_aggregate: Room_ManagementMode_Aggregate;
    /** fetch data from the table: "room.ManagementMode" using primary key columns */
    readonly room_ManagementMode_by_pk?: Maybe<Room_ManagementMode>;
    /** fetch data from the table: "room.PersonRole" */
    readonly room_PersonRole: ReadonlyArray<Room_PersonRole>;
    /** fetch aggregated fields from the table: "room.PersonRole" */
    readonly room_PersonRole_aggregate: Room_PersonRole_Aggregate;
    /** fetch data from the table: "room.PersonRole" using primary key columns */
    readonly room_PersonRole_by_pk?: Maybe<Room_PersonRole>;
    /** fetch data from the table: "room.Room" */
    readonly room_Room: ReadonlyArray<Room_Room>;
    /** fetch data from the table: "room.RoomGroupMembership" */
    readonly room_RoomGroupMembership: ReadonlyArray<Room_RoomGroupMembership>;
    /** fetch aggregated fields from the table: "room.RoomGroupMembership" */
    readonly room_RoomGroupMembership_aggregate: Room_RoomGroupMembership_Aggregate;
    /** fetch data from the table: "room.RoomGroupMembership" using primary key columns */
    readonly room_RoomGroupMembership_by_pk?: Maybe<Room_RoomGroupMembership>;
    /** fetch data from the table: "room.RoomMembership" */
    readonly room_RoomMembership: ReadonlyArray<Room_RoomMembership>;
    /** fetch aggregated fields from the table: "room.RoomMembership" */
    readonly room_RoomMembership_aggregate: Room_RoomMembership_Aggregate;
    /** fetch data from the table: "room.RoomMembership" using primary key columns */
    readonly room_RoomMembership_by_pk?: Maybe<Room_RoomMembership>;
    /** fetch aggregated fields from the table: "room.Room" */
    readonly room_Room_aggregate: Room_Room_Aggregate;
    /** fetch data from the table: "room.Room" using primary key columns */
    readonly room_Room_by_pk?: Maybe<Room_Room>;
    /** fetch data from the table: "room.ShuffleAlgorithm" */
    readonly room_ShuffleAlgorithm: ReadonlyArray<Room_ShuffleAlgorithm>;
    /** fetch aggregated fields from the table: "room.ShuffleAlgorithm" */
    readonly room_ShuffleAlgorithm_aggregate: Room_ShuffleAlgorithm_Aggregate;
    /** fetch data from the table: "room.ShuffleAlgorithm" using primary key columns */
    readonly room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
    /** fetch data from the table: "room.ShufflePeriod" */
    readonly room_ShufflePeriod: ReadonlyArray<Room_ShufflePeriod>;
    /** fetch aggregated fields from the table: "room.ShufflePeriod" */
    readonly room_ShufflePeriod_aggregate: Room_ShufflePeriod_Aggregate;
    /** fetch data from the table: "room.ShufflePeriod" using primary key columns */
    readonly room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
    /** fetch data from the table: "room.ShuffleQueueEntry" */
    readonly room_ShuffleQueueEntry: ReadonlyArray<Room_ShuffleQueueEntry>;
    /** fetch aggregated fields from the table: "room.ShuffleQueueEntry" */
    readonly room_ShuffleQueueEntry_aggregate: Room_ShuffleQueueEntry_Aggregate;
    /** fetch data from the table: "room.ShuffleQueueEntry" using primary key columns */
    readonly room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
    /** fetch data from the table: "room.ShuffleRoom" */
    readonly room_ShuffleRoom: ReadonlyArray<Room_ShuffleRoom>;
    /** fetch aggregated fields from the table: "room.ShuffleRoom" */
    readonly room_ShuffleRoom_aggregate: Room_ShuffleRoom_Aggregate;
    /** fetch data from the table: "room.ShuffleRoom" using primary key columns */
    readonly room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
    /** fetch data from the table: "schedule.Continuation" */
    readonly schedule_Continuation: ReadonlyArray<Schedule_Continuation>;
    /** fetch aggregated fields from the table: "schedule.Continuation" */
    readonly schedule_Continuation_aggregate: Schedule_Continuation_Aggregate;
    /** fetch data from the table: "schedule.Continuation" using primary key columns */
    readonly schedule_Continuation_by_pk?: Maybe<Schedule_Continuation>;
    /** fetch data from the table: "schedule.CurrentEvents" */
    readonly schedule_CurrentEvents: ReadonlyArray<Schedule_CurrentEvents>;
    /** fetch aggregated fields from the table: "schedule.CurrentEvents" */
    readonly schedule_CurrentEvents_aggregate: Schedule_CurrentEvents_Aggregate;
    /** fetch data from the table: "schedule.Event" */
    readonly schedule_Event: ReadonlyArray<Schedule_Event>;
    /** fetch data from the table: "schedule.EventProgramPerson" */
    readonly schedule_EventProgramPerson: ReadonlyArray<Schedule_EventProgramPerson>;
    /** fetch data from the table: "schedule.EventProgramPersonRole" */
    readonly schedule_EventProgramPersonRole: ReadonlyArray<Schedule_EventProgramPersonRole>;
    /** fetch aggregated fields from the table: "schedule.EventProgramPersonRole" */
    readonly schedule_EventProgramPersonRole_aggregate: Schedule_EventProgramPersonRole_Aggregate;
    /** fetch data from the table: "schedule.EventProgramPersonRole" using primary key columns */
    readonly schedule_EventProgramPersonRole_by_pk?: Maybe<Schedule_EventProgramPersonRole>;
    /** fetch aggregated fields from the table: "schedule.EventProgramPerson" */
    readonly schedule_EventProgramPerson_aggregate: Schedule_EventProgramPerson_Aggregate;
    /** fetch data from the table: "schedule.EventProgramPerson" using primary key columns */
    readonly schedule_EventProgramPerson_by_pk?: Maybe<Schedule_EventProgramPerson>;
    /** fetch aggregated fields from the table: "schedule.Event" */
    readonly schedule_Event_aggregate: Schedule_Event_Aggregate;
    /** fetch data from the table: "schedule.Event" using primary key columns */
    readonly schedule_Event_by_pk?: Maybe<Schedule_Event>;
    /** fetch data from the table: "schedule.Mode" */
    readonly schedule_Mode: ReadonlyArray<Schedule_Mode>;
    /** fetch aggregated fields from the table: "schedule.Mode" */
    readonly schedule_Mode_aggregate: Schedule_Mode_Aggregate;
    /** fetch data from the table: "schedule.Mode" using primary key columns */
    readonly schedule_Mode_by_pk?: Maybe<Schedule_Mode>;
    /** fetch data from the table: "schedule.OverlappingEvents" */
    readonly schedule_OverlappingEvents: ReadonlyArray<Schedule_OverlappingEvents>;
    /** fetch aggregated fields from the table: "schedule.OverlappingEvents" */
    readonly schedule_OverlappingEvents_aggregate: Schedule_OverlappingEvents_Aggregate;
    /** fetch data from the table: "schedule.StarredEvent" */
    readonly schedule_StarredEvent: ReadonlyArray<Schedule_StarredEvent>;
    /** fetch aggregated fields from the table: "schedule.StarredEvent" */
    readonly schedule_StarredEvent_aggregate: Schedule_StarredEvent_Aggregate;
    /** fetch data from the table: "schedule.StarredEvent" using primary key columns */
    readonly schedule_StarredEvent_by_pk?: Maybe<Schedule_StarredEvent>;
    /** execute function "schedule.searchEvents" which returns "schedule.Event" */
    readonly schedule_searchEvents: ReadonlyArray<Schedule_Event>;
    /** execute function "schedule.searchEvents" and query aggregates on result of table type "schedule.Event" */
    readonly schedule_searchEvents_aggregate: Schedule_Event_Aggregate;
    /** fetch data from the table: "sponsor.Tier" */
    readonly sponsor_Tier: ReadonlyArray<Sponsor_Tier>;
    /** fetch data from the table: "sponsor.TierMember" */
    readonly sponsor_TierMember: ReadonlyArray<Sponsor_TierMember>;
    /** fetch aggregated fields from the table: "sponsor.TierMember" */
    readonly sponsor_TierMember_aggregate: Sponsor_TierMember_Aggregate;
    /** fetch data from the table: "sponsor.TierMember" using primary key columns */
    readonly sponsor_TierMember_by_pk?: Maybe<Sponsor_TierMember>;
    /** fetch aggregated fields from the table: "sponsor.Tier" */
    readonly sponsor_Tier_aggregate: Sponsor_Tier_Aggregate;
    /** fetch data from the table: "sponsor.Tier" using primary key columns */
    readonly sponsor_Tier_by_pk?: Maybe<Sponsor_Tier>;
    /** fetch data from the table: "system.Configuration" */
    readonly system_Configuration: ReadonlyArray<System_Configuration>;
    /** fetch data from the table: "system.ConfigurationKey" */
    readonly system_ConfigurationKey: ReadonlyArray<System_ConfigurationKey>;
    /** fetch aggregated fields from the table: "system.ConfigurationKey" */
    readonly system_ConfigurationKey_aggregate: System_ConfigurationKey_Aggregate;
    /** fetch data from the table: "system.ConfigurationKey" using primary key columns */
    readonly system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
    /** fetch data from the table: "system.ConfigurationPermissionGrant" */
    readonly system_ConfigurationPermissionGrant: ReadonlyArray<System_ConfigurationPermissionGrant>;
    /** fetch aggregated fields from the table: "system.ConfigurationPermissionGrant" */
    readonly system_ConfigurationPermissionGrant_aggregate: System_ConfigurationPermissionGrant_Aggregate;
    /** fetch data from the table: "system.ConfigurationPermissionGrant" using primary key columns */
    readonly system_ConfigurationPermissionGrant_by_pk?: Maybe<System_ConfigurationPermissionGrant>;
    /** fetch aggregated fields from the table: "system.Configuration" */
    readonly system_Configuration_aggregate: System_Configuration_Aggregate;
    /** fetch data from the table: "system.Configuration" using primary key columns */
    readonly system_Configuration_by_pk?: Maybe<System_Configuration>;
    /** fetch data from the table: "system.SuperUserPermission" */
    readonly system_SuperUserPermission: ReadonlyArray<System_SuperUserPermission>;
    /** fetch data from the table: "system.SuperUserPermissionGrant" */
    readonly system_SuperUserPermissionGrant: ReadonlyArray<System_SuperUserPermissionGrant>;
    /** fetch aggregated fields from the table: "system.SuperUserPermissionGrant" */
    readonly system_SuperUserPermissionGrant_aggregate: System_SuperUserPermissionGrant_Aggregate;
    /** fetch data from the table: "system.SuperUserPermissionGrant" using primary key columns */
    readonly system_SuperUserPermissionGrant_by_pk?: Maybe<System_SuperUserPermissionGrant>;
    /** fetch aggregated fields from the table: "system.SuperUserPermission" */
    readonly system_SuperUserPermission_aggregate: System_SuperUserPermission_Aggregate;
    /** fetch data from the table: "system.SuperUserPermission" using primary key columns */
    readonly system_SuperUserPermission_by_pk?: Maybe<System_SuperUserPermission>;
    /** fetch data from the table: "system.SuperUserState" */
    readonly system_SuperUserState: ReadonlyArray<System_SuperUserState>;
    /** fetch aggregated fields from the table: "system.SuperUserState" */
    readonly system_SuperUserState_aggregate: System_SuperUserState_Aggregate;
    readonly transcribeGeneratePresignedUrl: TranscribeGeneratePresignedUrlOutput;
    readonly vapidPublicKey: VapidPublicKeyOutput;
    /** fetch data from the table: "video.ChannelStack" */
    readonly video_ChannelStack: ReadonlyArray<Video_ChannelStack>;
    /** fetch aggregated fields from the table: "video.ChannelStack" */
    readonly video_ChannelStack_aggregate: Video_ChannelStack_Aggregate;
    /** fetch data from the table: "video.ChannelStack" using primary key columns */
    readonly video_ChannelStack_by_pk?: Maybe<Video_ChannelStack>;
    /** fetch data from the table: "video.EventVonageSession" */
    readonly video_EventVonageSession: ReadonlyArray<Video_EventVonageSession>;
    /** fetch aggregated fields from the table: "video.EventVonageSession" */
    readonly video_EventVonageSession_aggregate: Video_EventVonageSession_Aggregate;
    /** fetch data from the table: "video.EventVonageSession" using primary key columns */
    readonly video_EventVonageSession_by_pk?: Maybe<Video_EventVonageSession>;
    /** fetch data from the table: "video.ImmediateSwitch" */
    readonly video_ImmediateSwitch: ReadonlyArray<Video_ImmediateSwitch>;
    /** fetch aggregated fields from the table: "video.ImmediateSwitch" */
    readonly video_ImmediateSwitch_aggregate: Video_ImmediateSwitch_Aggregate;
    /** fetch data from the table: "video.ImmediateSwitch" using primary key columns */
    readonly video_ImmediateSwitch_by_pk?: Maybe<Video_ImmediateSwitch>;
    /** fetch data from the table: "video.InputType" */
    readonly video_InputType: ReadonlyArray<Video_InputType>;
    /** fetch aggregated fields from the table: "video.InputType" */
    readonly video_InputType_aggregate: Video_InputType_Aggregate;
    /** fetch data from the table: "video.InputType" using primary key columns */
    readonly video_InputType_by_pk?: Maybe<Video_InputType>;
    /** fetch data from the table: "video.MediaLiveChannelStatus" */
    readonly video_MediaLiveChannelStatus: ReadonlyArray<Video_MediaLiveChannelStatus>;
    /** fetch aggregated fields from the table: "video.MediaLiveChannelStatus" */
    readonly video_MediaLiveChannelStatus_aggregate: Video_MediaLiveChannelStatus_Aggregate;
    /** fetch data from the table: "video.MediaLiveChannelStatus" using primary key columns */
    readonly video_MediaLiveChannelStatus_by_pk?: Maybe<Video_MediaLiveChannelStatus>;
    /** fetch data from the table: "video.RoomRtmpInput" */
    readonly video_RoomRtmpInput: ReadonlyArray<Video_RoomRtmpInput>;
    /** fetch aggregated fields from the table: "video.RoomRtmpInput" */
    readonly video_RoomRtmpInput_aggregate: Video_RoomRtmpInput_Aggregate;
    /** fetch data from the table: "video.RoomRtmpInput" using primary key columns */
    readonly video_RoomRtmpInput_by_pk?: Maybe<Video_RoomRtmpInput>;
    /** fetch data from the table: "video.RoomRtmpOutput" */
    readonly video_RoomRtmpOutput: ReadonlyArray<Video_RoomRtmpOutput>;
    /** fetch aggregated fields from the table: "video.RoomRtmpOutput" */
    readonly video_RoomRtmpOutput_aggregate: Video_RoomRtmpOutput_Aggregate;
    /** fetch data from the table: "video.RoomRtmpOutput" using primary key columns */
    readonly video_RoomRtmpOutput_by_pk?: Maybe<Video_RoomRtmpOutput>;
    /** fetch data from the table: "video.RtmpInput" */
    readonly video_RtmpInput: ReadonlyArray<Video_RtmpInput>;
    /** fetch aggregated fields from the table: "video.RtmpInput" */
    readonly video_RtmpInput_aggregate: Video_RtmpInput_Aggregate;
    /** fetch data from the table: "video.RtmpInput" using primary key columns */
    readonly video_RtmpInput_by_pk?: Maybe<Video_RtmpInput>;
    /** fetch data from the table: "video.TranscriptionJob" */
    readonly video_TranscriptionJob: ReadonlyArray<Video_TranscriptionJob>;
    /** fetch aggregated fields from the table: "video.TranscriptionJob" */
    readonly video_TranscriptionJob_aggregate: Video_TranscriptionJob_Aggregate;
    /** fetch data from the table: "video.TranscriptionJob" using primary key columns */
    readonly video_TranscriptionJob_by_pk?: Maybe<Video_TranscriptionJob>;
    /** fetch data from the table: "video.VideoRenderJob" */
    readonly video_VideoRenderJob: ReadonlyArray<Video_VideoRenderJob>;
    /** fetch aggregated fields from the table: "video.VideoRenderJob" */
    readonly video_VideoRenderJob_aggregate: Video_VideoRenderJob_Aggregate;
    /** fetch data from the table: "video.VideoRenderJob" using primary key columns */
    readonly video_VideoRenderJob_by_pk?: Maybe<Video_VideoRenderJob>;
    /** fetch data from the table: "video.VonageParticipantStream" */
    readonly video_VonageParticipantStream: ReadonlyArray<Video_VonageParticipantStream>;
    /** fetch aggregated fields from the table: "video.VonageParticipantStream" */
    readonly video_VonageParticipantStream_aggregate: Video_VonageParticipantStream_Aggregate;
    /** fetch data from the table: "video.VonageParticipantStream" using primary key columns */
    readonly video_VonageParticipantStream_by_pk?: Maybe<Video_VonageParticipantStream>;
    /** fetch data from the table: "video.VonageRoomRecording" */
    readonly video_VonageRoomRecording: ReadonlyArray<Video_VonageRoomRecording>;
    /** fetch aggregated fields from the table: "video.VonageRoomRecording" */
    readonly video_VonageRoomRecording_aggregate: Video_VonageRoomRecording_Aggregate;
    /** fetch data from the table: "video.VonageRoomRecording" using primary key columns */
    readonly video_VonageRoomRecording_by_pk?: Maybe<Video_VonageRoomRecording>;
    /** fetch data from the table: "video.VonageSessionLayout" */
    readonly video_VonageSessionLayout: ReadonlyArray<Video_VonageSessionLayout>;
    /** fetch aggregated fields from the table: "video.VonageSessionLayout" */
    readonly video_VonageSessionLayout_aggregate: Video_VonageSessionLayout_Aggregate;
    /** fetch data from the table: "video.VonageSessionLayout" using primary key columns */
    readonly video_VonageSessionLayout_by_pk?: Maybe<Video_VonageSessionLayout>;
    /** fetch data from the table: "video.VonageVideoPlaybackCommand" */
    readonly video_VonageVideoPlaybackCommand: ReadonlyArray<Video_VonageVideoPlaybackCommand>;
    /** fetch aggregated fields from the table: "video.VonageVideoPlaybackCommand" */
    readonly video_VonageVideoPlaybackCommand_aggregate: Video_VonageVideoPlaybackCommand_Aggregate;
    /** fetch data from the table: "video.VonageVideoPlaybackCommand" using primary key columns */
    readonly video_VonageVideoPlaybackCommand_by_pk?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** fetch data from the table: "video.YouTubeUpload" */
    readonly video_YouTubeUpload: ReadonlyArray<Video_YouTubeUpload>;
    /** fetch aggregated fields from the table: "video.YouTubeUpload" */
    readonly video_YouTubeUpload_aggregate: Video_YouTubeUpload_Aggregate;
    /** fetch data from the table: "video.YouTubeUpload" using primary key columns */
    readonly video_YouTubeUpload_by_pk?: Maybe<Video_YouTubeUpload>;
};

export type Query_RootEmailArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

export type Query_RootEmail_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

export type Query_RootEmail_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootForeignKeyIntrospectionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Order_By>>;
    where?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
};

export type Query_RootForeignKeyIntrospection_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Order_By>>;
    where?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
};

export type Query_RootPushNotificationSubscriptionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

export type Query_RootPushNotificationSubscription_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

export type Query_RootPushNotificationSubscription_By_PkArgs = {
    endpoint: Scalars["String"];
};

export type Query_RootUserArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<User_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<User_Order_By>>;
    where?: InputMaybe<User_Bool_Exp>;
};

export type Query_RootUser_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<User_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<User_Order_By>>;
    where?: InputMaybe<User_Bool_Exp>;
};

export type Query_RootUser_By_PkArgs = {
    id: Scalars["String"];
};

export type Query_RootAnalytics_AppStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_AppStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_AppStats_Order_By>>;
    where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

export type Query_RootAnalytics_AppStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_AppStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_AppStats_Order_By>>;
    where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

export type Query_RootAnalytics_AppStats_By_PkArgs = {
    id: Scalars["Int"];
};

export type Query_RootAnalytics_CompletedRegistrationsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Order_By>>;
    where?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
};

export type Query_RootAnalytics_CompletedRegistrations_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Order_By>>;
    where?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
};

export type Query_RootAnalytics_ContentElementStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

export type Query_RootAnalytics_ContentElementStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

export type Query_RootAnalytics_ContentElementStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootAnalytics_ContentItemStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

export type Query_RootAnalytics_ContentItemStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

export type Query_RootAnalytics_ContentItemStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootAnalytics_ElementTotalViewsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

export type Query_RootAnalytics_ElementTotalViews_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

export type Query_RootAnalytics_ElementTotalViews_By_PkArgs = {
    elementId: Scalars["uuid"];
};

export type Query_RootAnalytics_ItemTotalViewsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

export type Query_RootAnalytics_ItemTotalViews_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

export type Query_RootAnalytics_ItemTotalViews_By_PkArgs = {
    itemId: Scalars["uuid"];
};

export type Query_RootAnalytics_RoomPresenceArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

export type Query_RootAnalytics_RoomPresence_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

export type Query_RootAnalytics_RoomPresence_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootAnalytics_RoomStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

export type Query_RootAnalytics_RoomStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

export type Query_RootAnalytics_RoomStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootChat_ChatArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

export type Query_RootChat_Chat_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

export type Query_RootChat_Chat_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootChat_FlagArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

export type Query_RootChat_FlagTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_FlagType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_FlagType_Order_By>>;
    where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

export type Query_RootChat_FlagType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_FlagType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_FlagType_Order_By>>;
    where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

export type Query_RootChat_FlagType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootChat_Flag_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

export type Query_RootChat_Flag_By_PkArgs = {
    id: Scalars["Int"];
};

export type Query_RootChat_MessageArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

export type Query_RootChat_MessageTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_MessageType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_MessageType_Order_By>>;
    where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

export type Query_RootChat_MessageType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_MessageType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_MessageType_Order_By>>;
    where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

export type Query_RootChat_MessageType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootChat_Message_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

export type Query_RootChat_Message_By_PkArgs = {
    id: Scalars["Int"];
};

export type Query_RootChat_PinArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

export type Query_RootChat_Pin_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

export type Query_RootChat_Pin_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Query_RootChat_ReactionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

export type Query_RootChat_ReactionTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReactionType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReactionType_Order_By>>;
    where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

export type Query_RootChat_ReactionType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReactionType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReactionType_Order_By>>;
    where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

export type Query_RootChat_ReactionType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootChat_Reaction_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

export type Query_RootChat_Reaction_By_PkArgs = {
    sId: Scalars["uuid"];
};

export type Query_RootChat_ReadUpToIndexArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

export type Query_RootChat_ReadUpToIndex_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

export type Query_RootChat_ReadUpToIndex_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Query_RootChat_SubscriptionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

export type Query_RootChat_Subscription_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

export type Query_RootChat_Subscription_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Query_RootCollection_ExhibitionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

export type Query_RootCollection_Exhibition_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

export type Query_RootCollection_Exhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootCollection_ProgramPersonArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Query_RootCollection_ProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Query_RootCollection_ProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootCollection_TagArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

export type Query_RootCollection_Tag_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

export type Query_RootCollection_Tag_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootCollection_SearchProgramPersonArgs = {
    args: Collection_SearchProgramPerson_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Query_RootCollection_SearchProgramPerson_AggregateArgs = {
    args: Collection_SearchProgramPerson_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Query_RootConference_ConferenceArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

export type Query_RootConference_Conference_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

export type Query_RootConference_Conference_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_ConfigurationArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

export type Query_RootConference_ConfigurationKeyArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Order_By>>;
    where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

export type Query_RootConference_ConfigurationKey_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Order_By>>;
    where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

export type Query_RootConference_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootConference_Configuration_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

export type Query_RootConference_Configuration_By_PkArgs = {
    conferenceId: Scalars["uuid"];
    key: Conference_ConfigurationKey_Enum;
};

export type Query_RootConference_DemoCodeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

export type Query_RootConference_DemoCode_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

export type Query_RootConference_DemoCode_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_QuotaArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Quota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Quota_Order_By>>;
    where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

export type Query_RootConference_Quota_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Quota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Quota_Order_By>>;
    where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

export type Query_RootConference_Quota_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_RemainingQuotaArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Order_By>>;
    where?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
};

export type Query_RootConference_RemainingQuota_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Order_By>>;
    where?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
};

export type Query_RootConference_SubconferenceArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

export type Query_RootConference_Subconference_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

export type Query_RootConference_Subconference_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_UsageArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

export type Query_RootConference_Usage_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

export type Query_RootConference_Usage_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootConference_VisibilityLevelArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Order_By>>;
    where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

export type Query_RootConference_VisibilityLevel_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Order_By>>;
    where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

export type Query_RootConference_VisibilityLevel_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootContent_ElementArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

export type Query_RootContent_ElementTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ElementType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ElementType_Order_By>>;
    where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

export type Query_RootContent_ElementType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ElementType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ElementType_Order_By>>;
    where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

export type Query_RootContent_ElementType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootContent_Element_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

export type Query_RootContent_Element_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_ItemArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Query_RootContent_ItemExhibitionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

export type Query_RootContent_ItemExhibition_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

export type Query_RootContent_ItemExhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_ItemProgramPersonArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

export type Query_RootContent_ItemProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

export type Query_RootContent_ItemProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_ItemTagArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

export type Query_RootContent_ItemTag_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

export type Query_RootContent_ItemTag_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_ItemTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemType_Order_By>>;
    where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

export type Query_RootContent_ItemType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemType_Order_By>>;
    where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

export type Query_RootContent_ItemType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootContent_Item_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Query_RootContent_Item_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootContent_SearchItemsArgs = {
    args: Content_SearchItems_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Query_RootContent_SearchItems_AggregateArgs = {
    args: Content_SearchItems_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Query_RootGetSlugArgs = {
    url: Scalars["String"];
};

export type Query_RootJob_Queues_ChannelStackCreateJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackCreateJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackCreateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_ChannelStackDeleteJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackDeleteJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackDeleteJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_ChannelStackUpdateJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackUpdateJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ChannelStackUpdateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_CombineVideosJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

export type Query_RootJob_Queues_CombineVideosJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

export type Query_RootJob_Queues_CombineVideosJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_CustomEmailJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_CustomEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_CustomEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_ImportJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ImportJobOutputArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

export type Query_RootJob_Queues_ImportJobOutput_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

export type Query_RootJob_Queues_ImportJobOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_ImportJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

export type Query_RootJob_Queues_ImportJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_InvitationEmailJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_InvitationEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_InvitationEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_JobStatusArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Order_By>>;
    where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

export type Query_RootJob_Queues_JobStatus_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Order_By>>;
    where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

export type Query_RootJob_Queues_JobStatus_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootJob_Queues_MediaPackageHarvestJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Order_By>>;
    where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

export type Query_RootJob_Queues_MediaPackageHarvestJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Order_By>>;
    where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

export type Query_RootJob_Queues_MediaPackageHarvestJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_PrepareJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

export type Query_RootJob_Queues_PrepareJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

export type Query_RootJob_Queues_PrepareJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_PublishVideoJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

export type Query_RootJob_Queues_PublishVideoJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

export type Query_RootJob_Queues_PublishVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_SubmissionRequestEmailJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_SubmissionRequestEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

export type Query_RootJob_Queues_SubmissionRequestEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootJob_Queues_UploadYouTubeVideoJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

export type Query_RootJob_Queues_UploadYouTubeVideoJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

export type Query_RootJob_Queues_UploadYouTubeVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_GoogleAccountArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Order_By>>;
    where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

export type Query_RootRegistrant_GoogleAccount_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Order_By>>;
    where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

export type Query_RootRegistrant_GoogleAccount_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_GroupArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Group_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Group_Order_By>>;
    where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

export type Query_RootRegistrant_GroupRegistrantArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

export type Query_RootRegistrant_GroupRegistrant_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

export type Query_RootRegistrant_GroupRegistrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_Group_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Group_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Group_Order_By>>;
    where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

export type Query_RootRegistrant_Group_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_InvitationArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

export type Query_RootRegistrant_Invitation_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

export type Query_RootRegistrant_Invitation_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_ProfileArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Profile_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Profile_Order_By>>;
    where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

export type Query_RootRegistrant_ProfileBadgesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

export type Query_RootRegistrant_ProfileBadges_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

export type Query_RootRegistrant_Profile_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Profile_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Profile_Order_By>>;
    where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

export type Query_RootRegistrant_Profile_By_PkArgs = {
    registrantId: Scalars["uuid"];
};

export type Query_RootRegistrant_RegistrantArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Query_RootRegistrant_RegistrantRoleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Order_By>>;
    where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

export type Query_RootRegistrant_RegistrantRole_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Order_By>>;
    where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

export type Query_RootRegistrant_RegistrantRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRegistrant_Registrant_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Query_RootRegistrant_Registrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_SavedVonageRoomRecordingArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

export type Query_RootRegistrant_SavedVonageRoomRecording_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

export type Query_RootRegistrant_SavedVonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_SubconferenceMembershipArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

export type Query_RootRegistrant_SubconferenceMembership_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

export type Query_RootRegistrant_SubconferenceMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRegistrant_SearchRegistrantsArgs = {
    args: Registrant_SearchRegistrants_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Query_RootRegistrant_SearchRegistrants_AggregateArgs = {
    args: Registrant_SearchRegistrants_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Query_RootRoom_BackendArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Backend_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Backend_Order_By>>;
    where?: InputMaybe<Room_Backend_Bool_Exp>;
};

export type Query_RootRoom_Backend_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Backend_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Backend_Order_By>>;
    where?: InputMaybe<Room_Backend_Bool_Exp>;
};

export type Query_RootRoom_Backend_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRoom_ChimeMeetingArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Order_By>>;
    where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

export type Query_RootRoom_ChimeMeeting_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Order_By>>;
    where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

export type Query_RootRoom_ChimeMeeting_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_LivestreamDurationsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Order_By>>;
    where?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
};

export type Query_RootRoom_LivestreamDurations_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Order_By>>;
    where?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
};

export type Query_RootRoom_ManagementModeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ManagementMode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ManagementMode_Order_By>>;
    where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

export type Query_RootRoom_ManagementMode_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ManagementMode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ManagementMode_Order_By>>;
    where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

export type Query_RootRoom_ManagementMode_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRoom_PersonRoleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_PersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_PersonRole_Order_By>>;
    where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

export type Query_RootRoom_PersonRole_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_PersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_PersonRole_Order_By>>;
    where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

export type Query_RootRoom_PersonRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRoom_RoomArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

export type Query_RootRoom_RoomGroupMembershipArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Order_By>>;
    where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

export type Query_RootRoom_RoomGroupMembership_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Order_By>>;
    where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

export type Query_RootRoom_RoomGroupMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_RoomMembershipArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

export type Query_RootRoom_RoomMembership_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

export type Query_RootRoom_RoomMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_Room_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

export type Query_RootRoom_Room_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_ShuffleAlgorithmArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Order_By>>;
    where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

export type Query_RootRoom_ShuffleAlgorithm_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Order_By>>;
    where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

export type Query_RootRoom_ShuffleAlgorithm_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootRoom_ShufflePeriodArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

export type Query_RootRoom_ShufflePeriod_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

export type Query_RootRoom_ShufflePeriod_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootRoom_ShuffleQueueEntryArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

export type Query_RootRoom_ShuffleQueueEntry_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

export type Query_RootRoom_ShuffleQueueEntry_By_PkArgs = {
    id: Scalars["bigint"];
};

export type Query_RootRoom_ShuffleRoomArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

export type Query_RootRoom_ShuffleRoom_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

export type Query_RootRoom_ShuffleRoom_By_PkArgs = {
    id: Scalars["bigint"];
};

export type Query_RootSchedule_ContinuationArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

export type Query_RootSchedule_Continuation_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

export type Query_RootSchedule_Continuation_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSchedule_CurrentEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

export type Query_RootSchedule_CurrentEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

export type Query_RootSchedule_EventArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPersonArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPersonRoleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPersonRole_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPersonRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootSchedule_EventProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

export type Query_RootSchedule_EventProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSchedule_Event_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Query_RootSchedule_Event_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSchedule_ModeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Mode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Mode_Order_By>>;
    where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

export type Query_RootSchedule_Mode_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Mode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Mode_Order_By>>;
    where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

export type Query_RootSchedule_Mode_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootSchedule_OverlappingEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Order_By>>;
    where?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
};

export type Query_RootSchedule_OverlappingEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Order_By>>;
    where?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
};

export type Query_RootSchedule_StarredEventArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Order_By>>;
    where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

export type Query_RootSchedule_StarredEvent_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Order_By>>;
    where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

export type Query_RootSchedule_StarredEvent_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSchedule_SearchEventsArgs = {
    args: Schedule_SearchEvents_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Query_RootSchedule_SearchEvents_AggregateArgs = {
    args: Schedule_SearchEvents_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Query_RootSponsor_TierArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

export type Query_RootSponsor_TierMemberArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

export type Query_RootSponsor_TierMember_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

export type Query_RootSponsor_TierMember_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSponsor_Tier_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

export type Query_RootSponsor_Tier_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSystem_ConfigurationArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_Configuration_Order_By>>;
    where?: InputMaybe<System_Configuration_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationKeyArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Order_By>>;
    where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationKey_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Order_By>>;
    where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootSystem_ConfigurationPermissionGrantArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationPermissionGrant_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

export type Query_RootSystem_ConfigurationPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSystem_Configuration_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_Configuration_Order_By>>;
    where?: InputMaybe<System_Configuration_Bool_Exp>;
};

export type Query_RootSystem_Configuration_By_PkArgs = {
    key: System_ConfigurationKey_Enum;
};

export type Query_RootSystem_SuperUserPermissionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Order_By>>;
    where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

export type Query_RootSystem_SuperUserPermissionGrantArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

export type Query_RootSystem_SuperUserPermissionGrant_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

export type Query_RootSystem_SuperUserPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootSystem_SuperUserPermission_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Order_By>>;
    where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

export type Query_RootSystem_SuperUserPermission_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootSystem_SuperUserStateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserState_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserState_Order_By>>;
    where?: InputMaybe<System_SuperUserState_Bool_Exp>;
};

export type Query_RootSystem_SuperUserState_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserState_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserState_Order_By>>;
    where?: InputMaybe<System_SuperUserState_Bool_Exp>;
};

export type Query_RootTranscribeGeneratePresignedUrlArgs = {
    languageCode: Scalars["String"];
    sampleRate: Scalars["String"];
};

export type Query_RootVideo_ChannelStackArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_ChannelStack_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_ChannelStack_Order_By>>;
    where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

export type Query_RootVideo_ChannelStack_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_ChannelStack_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_ChannelStack_Order_By>>;
    where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

export type Query_RootVideo_ChannelStack_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_EventVonageSessionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Order_By>>;
    where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

export type Query_RootVideo_EventVonageSession_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Order_By>>;
    where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

export type Query_RootVideo_EventVonageSession_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_ImmediateSwitchArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Order_By>>;
    where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

export type Query_RootVideo_ImmediateSwitch_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Order_By>>;
    where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

export type Query_RootVideo_ImmediateSwitch_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_InputTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_InputType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_InputType_Order_By>>;
    where?: InputMaybe<Video_InputType_Bool_Exp>;
};

export type Query_RootVideo_InputType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_InputType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_InputType_Order_By>>;
    where?: InputMaybe<Video_InputType_Bool_Exp>;
};

export type Query_RootVideo_InputType_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootVideo_MediaLiveChannelStatusArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Order_By>>;
    where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

export type Query_RootVideo_MediaLiveChannelStatus_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Order_By>>;
    where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

export type Query_RootVideo_MediaLiveChannelStatus_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_RoomRtmpInputArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

export type Query_RootVideo_RoomRtmpInput_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

export type Query_RootVideo_RoomRtmpInput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_RoomRtmpOutputArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

export type Query_RootVideo_RoomRtmpOutput_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

export type Query_RootVideo_RoomRtmpOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_RtmpInputArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RtmpInput_Order_By>>;
    where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

export type Query_RootVideo_RtmpInput_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RtmpInput_Order_By>>;
    where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

export type Query_RootVideo_RtmpInput_By_PkArgs = {
    name: Scalars["String"];
};

export type Query_RootVideo_TranscriptionJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Order_By>>;
    where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

export type Query_RootVideo_TranscriptionJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Order_By>>;
    where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

export type Query_RootVideo_TranscriptionJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VideoRenderJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

export type Query_RootVideo_VideoRenderJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

export type Query_RootVideo_VideoRenderJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VonageParticipantStreamArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

export type Query_RootVideo_VonageParticipantStream_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

export type Query_RootVideo_VonageParticipantStream_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VonageRoomRecordingArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

export type Query_RootVideo_VonageRoomRecording_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

export type Query_RootVideo_VonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VonageSessionLayoutArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

export type Query_RootVideo_VonageSessionLayout_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

export type Query_RootVideo_VonageSessionLayout_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_VonageVideoPlaybackCommandArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Order_By>>;
    where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

export type Query_RootVideo_VonageVideoPlaybackCommand_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Order_By>>;
    where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

export type Query_RootVideo_VonageVideoPlaybackCommand_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Query_RootVideo_YouTubeUploadArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

export type Query_RootVideo_YouTubeUpload_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

export type Query_RootVideo_YouTubeUpload_By_PkArgs = {
    id: Scalars["uuid"];
};

/** columns and relationships of "registrant.GoogleAccount" */
export type Registrant_GoogleAccount = {
    readonly __typename?: "registrant_GoogleAccount";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly googleAccountEmail: Scalars["String"];
    readonly id: Scalars["uuid"];
    readonly isDeleted: Scalars["Boolean"];
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    readonly tokenData: Scalars["jsonb"];
    readonly updatedAt: Scalars["timestamptz"];
    readonly youTubeData?: Maybe<Scalars["jsonb"]>;
};

/** columns and relationships of "registrant.GoogleAccount" */
export type Registrant_GoogleAccountTokenDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.GoogleAccount" */
export type Registrant_GoogleAccountYouTubeDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Aggregate = {
    readonly __typename?: "registrant_GoogleAccount_aggregate";
    readonly aggregate?: Maybe<Registrant_GoogleAccount_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_GoogleAccount>;
};

/** aggregate fields of "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Aggregate_Fields = {
    readonly __typename?: "registrant_GoogleAccount_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_GoogleAccount_Max_Fields>;
    readonly min?: Maybe<Registrant_GoogleAccount_Min_Fields>;
};

/** aggregate fields of "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Registrant_GoogleAccount_Append_Input = {
    readonly tokenData?: InputMaybe<Scalars["jsonb"]>;
    readonly youTubeData?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "registrant.GoogleAccount". All fields are combined with a logical 'AND'. */
export type Registrant_GoogleAccount_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly googleAccountEmail?: InputMaybe<String_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly isDeleted?: InputMaybe<Boolean_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly tokenData?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly youTubeData?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.GoogleAccount" */
export enum Registrant_GoogleAccount_Constraint {
    /** unique or primary key constraint */
    GoogleAccountPkey = "GoogleAccount_pkey",
    /** unique or primary key constraint */
    GoogleAccountRegistrantIdGoogleAccountEmailKey = "GoogleAccount_registrantId_googleAccountEmail_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Registrant_GoogleAccount_Delete_At_Path_Input = {
    readonly tokenData?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    readonly youTubeData?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Registrant_GoogleAccount_Delete_Elem_Input = {
    readonly tokenData?: InputMaybe<Scalars["Int"]>;
    readonly youTubeData?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Registrant_GoogleAccount_Delete_Key_Input = {
    readonly tokenData?: InputMaybe<Scalars["String"]>;
    readonly youTubeData?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly googleAccountEmail?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isDeleted?: InputMaybe<Scalars["Boolean"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly tokenData?: InputMaybe<Scalars["jsonb"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly youTubeData?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type Registrant_GoogleAccount_Max_Fields = {
    readonly __typename?: "registrant_GoogleAccount_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly googleAccountEmail?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Registrant_GoogleAccount_Min_Fields = {
    readonly __typename?: "registrant_GoogleAccount_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly googleAccountEmail?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Mutation_Response = {
    readonly __typename?: "registrant_GoogleAccount_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Registrant_GoogleAccount>;
};

/** input type for inserting object relation for remote table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Obj_Rel_Insert_Input = {
    readonly data: Registrant_GoogleAccount_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_GoogleAccount_On_Conflict>;
};

/** on_conflict condition type for table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_On_Conflict = {
    readonly constraint: Registrant_GoogleAccount_Constraint;
    readonly update_columns?: ReadonlyArray<Registrant_GoogleAccount_Update_Column>;
    readonly where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.GoogleAccount". */
export type Registrant_GoogleAccount_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly googleAccountEmail?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly isDeleted?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly tokenData?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly youTubeData?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_GoogleAccount */
export type Registrant_GoogleAccount_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Registrant_GoogleAccount_Prepend_Input = {
    readonly tokenData?: InputMaybe<Scalars["jsonb"]>;
    readonly youTubeData?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "registrant.GoogleAccount" */
export enum Registrant_GoogleAccount_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    GoogleAccountEmail = "googleAccountEmail",
    /** column name */
    Id = "id",
    /** column name */
    IsDeleted = "isDeleted",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    TokenData = "tokenData",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    YouTubeData = "youTubeData",
}

/** input type for updating data in table "registrant.GoogleAccount" */
export type Registrant_GoogleAccount_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly googleAccountEmail?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isDeleted?: InputMaybe<Scalars["Boolean"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly tokenData?: InputMaybe<Scalars["jsonb"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly youTubeData?: InputMaybe<Scalars["jsonb"]>;
};

/** update columns of table "registrant.GoogleAccount" */
export enum Registrant_GoogleAccount_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    GoogleAccountEmail = "googleAccountEmail",
    /** column name */
    Id = "id",
    /** column name */
    IsDeleted = "isDeleted",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    TokenData = "tokenData",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    YouTubeData = "youTubeData",
}

/** columns and relationships of "registrant.Group" */
export type Registrant_Group = {
    readonly __typename?: "registrant_Group";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    /** An array relationship */
    readonly groupRegistrants: ReadonlyArray<Registrant_GroupRegistrant>;
    /** An aggregate relationship */
    readonly groupRegistrants_aggregate: Registrant_GroupRegistrant_Aggregate;
    readonly id: Scalars["uuid"];
    readonly name: Scalars["String"];
    /** An object relationship */
    readonly subconference?: Maybe<Conference_Subconference>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "registrant.Group" */
export type Registrant_GroupGroupRegistrantsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** columns and relationships of "registrant.Group" */
export type Registrant_GroupGroupRegistrants_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** columns and relationships of "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant = {
    readonly __typename?: "registrant_GroupRegistrant";
    readonly createdAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly group: Registrant_Group;
    readonly groupId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    readonly updatedAt: Scalars["timestamptz"];
};

/** aggregated selection of "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Aggregate = {
    readonly __typename?: "registrant_GroupRegistrant_aggregate";
    readonly aggregate?: Maybe<Registrant_GroupRegistrant_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_GroupRegistrant>;
};

/** aggregate fields of "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Aggregate_Fields = {
    readonly __typename?: "registrant_GroupRegistrant_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_GroupRegistrant_Max_Fields>;
    readonly min?: Maybe<Registrant_GroupRegistrant_Min_Fields>;
};

/** aggregate fields of "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Registrant_GroupRegistrant_Max_Order_By>;
    readonly min?: InputMaybe<Registrant_GroupRegistrant_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Registrant_GroupRegistrant_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_GroupRegistrant_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.GroupRegistrant". All fields are combined with a logical 'AND'. */
export type Registrant_GroupRegistrant_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Bool_Exp>>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly group?: InputMaybe<Registrant_Group_Bool_Exp>;
    readonly groupId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.GroupRegistrant" */
export enum Registrant_GroupRegistrant_Constraint {
    /** unique or primary key constraint */
    GroupRegistrantGroupIdRegistrantIdKey = "GroupRegistrant_groupId_registrantId_key",
    /** unique or primary key constraint */
    GroupRegistrantPkey = "GroupRegistrant_pkey",
}

/** input type for inserting data into table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Insert_Input = {
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly group?: InputMaybe<Registrant_Group_Obj_Rel_Insert_Input>;
    readonly groupId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Registrant_GroupRegistrant_Max_Fields = {
    readonly __typename?: "registrant_GroupRegistrant_max_fields";
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly groupId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Max_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly groupId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_GroupRegistrant_Min_Fields = {
    readonly __typename?: "registrant_GroupRegistrant_min_fields";
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly groupId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Min_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly groupId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Mutation_Response = {
    readonly __typename?: "registrant_GroupRegistrant_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Registrant_GroupRegistrant>;
};

/** on_conflict condition type for table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_On_Conflict = {
    readonly constraint: Registrant_GroupRegistrant_Constraint;
    readonly update_columns?: ReadonlyArray<Registrant_GroupRegistrant_Update_Column>;
    readonly where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.GroupRegistrant". */
export type Registrant_GroupRegistrant_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly group?: InputMaybe<Registrant_Group_Order_By>;
    readonly groupId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_GroupRegistrant */
export type Registrant_GroupRegistrant_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "registrant.GroupRegistrant" */
export enum Registrant_GroupRegistrant_Select_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    GroupId = "groupId",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "registrant.GroupRegistrant" */
export type Registrant_GroupRegistrant_Set_Input = {
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly groupId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.GroupRegistrant" */
export enum Registrant_GroupRegistrant_Update_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    GroupId = "groupId",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** aggregated selection of "registrant.Group" */
export type Registrant_Group_Aggregate = {
    readonly __typename?: "registrant_Group_aggregate";
    readonly aggregate?: Maybe<Registrant_Group_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_Group>;
};

/** aggregate fields of "registrant.Group" */
export type Registrant_Group_Aggregate_Fields = {
    readonly __typename?: "registrant_Group_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_Group_Max_Fields>;
    readonly min?: Maybe<Registrant_Group_Min_Fields>;
};

/** aggregate fields of "registrant.Group" */
export type Registrant_Group_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_Group_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "registrant.Group". All fields are combined with a logical 'AND'. */
export type Registrant_Group_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_Group_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_Group_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_Group_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly groupRegistrants?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.Group" */
export enum Registrant_Group_Constraint {
    /** unique or primary key constraint */
    GroupPkey = "Group_pkey",
    /** unique or primary key constraint */
    RegistrantGroupConferenceIdName = "registrant_Group_conferenceId_name",
    /** unique or primary key constraint */
    RegistrantGroupSubconferenceIdName = "registrant_Group_subconferenceId_name",
}

/** input type for inserting data into table "registrant.Group" */
export type Registrant_Group_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly groupRegistrants?: InputMaybe<Registrant_GroupRegistrant_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Registrant_Group_Max_Fields = {
    readonly __typename?: "registrant_Group_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Registrant_Group_Min_Fields = {
    readonly __typename?: "registrant_Group_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "registrant.Group" */
export type Registrant_Group_Mutation_Response = {
    readonly __typename?: "registrant_Group_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Registrant_Group>;
};

/** input type for inserting object relation for remote table "registrant.Group" */
export type Registrant_Group_Obj_Rel_Insert_Input = {
    readonly data: Registrant_Group_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_Group_On_Conflict>;
};

/** on_conflict condition type for table "registrant.Group" */
export type Registrant_Group_On_Conflict = {
    readonly constraint: Registrant_Group_Constraint;
    readonly update_columns?: ReadonlyArray<Registrant_Group_Update_Column>;
    readonly where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.Group". */
export type Registrant_Group_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly groupRegistrants_aggregate?: InputMaybe<Registrant_GroupRegistrant_Aggregate_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly subconference?: InputMaybe<Conference_Subconference_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_Group */
export type Registrant_Group_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "registrant.Group" */
export enum Registrant_Group_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "registrant.Group" */
export type Registrant_Group_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.Group" */
export enum Registrant_Group_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "registrant.Invitation" */
export type Registrant_Invitation = {
    readonly __typename?: "registrant_Invitation";
    readonly conferenceId: Scalars["uuid"];
    readonly confirmationCode?: Maybe<Scalars["uuid"]>;
    readonly createdAt: Scalars["timestamptz"];
    /** An array relationship */
    readonly emails: ReadonlyArray<Email>;
    /** An aggregate relationship */
    readonly emails_aggregate: Email_Aggregate;
    readonly hash?: Maybe<Scalars["String"]>;
    readonly id: Scalars["uuid"];
    readonly inviteCode: Scalars["uuid"];
    readonly invitedEmailAddress: Scalars["String"];
    readonly linkToUserId?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly registrant?: Maybe<Registrant_Registrant>;
    readonly registrantId: Scalars["uuid"];
    readonly updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly user?: Maybe<User>;
};

/** columns and relationships of "registrant.Invitation" */
export type Registrant_InvitationEmailsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

/** columns and relationships of "registrant.Invitation" */
export type Registrant_InvitationEmails_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

/** aggregated selection of "registrant.Invitation" */
export type Registrant_Invitation_Aggregate = {
    readonly __typename?: "registrant_Invitation_aggregate";
    readonly aggregate?: Maybe<Registrant_Invitation_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_Invitation>;
};

/** aggregate fields of "registrant.Invitation" */
export type Registrant_Invitation_Aggregate_Fields = {
    readonly __typename?: "registrant_Invitation_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_Invitation_Max_Fields>;
    readonly min?: Maybe<Registrant_Invitation_Min_Fields>;
};

/** aggregate fields of "registrant.Invitation" */
export type Registrant_Invitation_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_Invitation_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.Invitation" */
export type Registrant_Invitation_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Registrant_Invitation_Max_Order_By>;
    readonly min?: InputMaybe<Registrant_Invitation_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.Invitation" */
export type Registrant_Invitation_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Registrant_Invitation_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_Invitation_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.Invitation". All fields are combined with a logical 'AND'. */
export type Registrant_Invitation_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_Invitation_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_Invitation_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_Invitation_Bool_Exp>>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly confirmationCode?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly emails?: InputMaybe<Email_Bool_Exp>;
    readonly hash?: InputMaybe<String_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly inviteCode?: InputMaybe<Uuid_Comparison_Exp>;
    readonly invitedEmailAddress?: InputMaybe<String_Comparison_Exp>;
    readonly linkToUserId?: InputMaybe<String_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "registrant.Invitation" */
export enum Registrant_Invitation_Constraint {
    /** unique or primary key constraint */
    InvitationConfirmationCodeKey = "Invitation_confirmationCode_key",
    /** unique or primary key constraint */
    InvitationInviteCodeKey = "Invitation_inviteCode_key",
    /** unique or primary key constraint */
    InvitationInvitedEmailAddressConferenceIdKey = "Invitation_invitedEmailAddress_conferenceId_key",
    /** unique or primary key constraint */
    InvitationPkey = "Invitation_pkey",
    /** unique or primary key constraint */
    InvitationRegistrantIdKey = "Invitation_registrantId_key",
}

/** input type for inserting data into table "registrant.Invitation" */
export type Registrant_Invitation_Insert_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly confirmationCode?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly emails?: InputMaybe<Email_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly inviteCode?: InputMaybe<Scalars["uuid"]>;
    readonly invitedEmailAddress?: InputMaybe<Scalars["String"]>;
    readonly linkToUserId?: InputMaybe<Scalars["String"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Registrant_Invitation_Max_Fields = {
    readonly __typename?: "registrant_Invitation_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly confirmationCode?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly inviteCode?: Maybe<Scalars["uuid"]>;
    readonly invitedEmailAddress?: Maybe<Scalars["String"]>;
    readonly linkToUserId?: Maybe<Scalars["String"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "registrant.Invitation" */
export type Registrant_Invitation_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly confirmationCode?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly inviteCode?: InputMaybe<Order_By>;
    readonly invitedEmailAddress?: InputMaybe<Order_By>;
    readonly linkToUserId?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_Invitation_Min_Fields = {
    readonly __typename?: "registrant_Invitation_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly confirmationCode?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly inviteCode?: Maybe<Scalars["uuid"]>;
    readonly invitedEmailAddress?: Maybe<Scalars["String"]>;
    readonly linkToUserId?: Maybe<Scalars["String"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "registrant.Invitation" */
export type Registrant_Invitation_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly confirmationCode?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly inviteCode?: InputMaybe<Order_By>;
    readonly invitedEmailAddress?: InputMaybe<Order_By>;
    readonly linkToUserId?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.Invitation" */
export type Registrant_Invitation_Mutation_Response = {
    readonly __typename?: "registrant_Invitation_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Registrant_Invitation>;
};

/** input type for inserting object relation for remote table "registrant.Invitation" */
export type Registrant_Invitation_Obj_Rel_Insert_Input = {
    readonly data: Registrant_Invitation_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_Invitation_On_Conflict>;
};

/** on_conflict condition type for table "registrant.Invitation" */
export type Registrant_Invitation_On_Conflict = {
    readonly constraint: Registrant_Invitation_Constraint;
    readonly update_columns?: ReadonlyArray<Registrant_Invitation_Update_Column>;
    readonly where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.Invitation". */
export type Registrant_Invitation_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly confirmationCode?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly emails_aggregate?: InputMaybe<Email_Aggregate_Order_By>;
    readonly hash?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly inviteCode?: InputMaybe<Order_By>;
    readonly invitedEmailAddress?: InputMaybe<Order_By>;
    readonly linkToUserId?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: registrant_Invitation */
export type Registrant_Invitation_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "registrant.Invitation" */
export enum Registrant_Invitation_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConfirmationCode = "confirmationCode",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    InviteCode = "inviteCode",
    /** column name */
    InvitedEmailAddress = "invitedEmailAddress",
    /** column name */
    LinkToUserId = "linkToUserId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "registrant.Invitation" */
export type Registrant_Invitation_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly confirmationCode?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly inviteCode?: InputMaybe<Scalars["uuid"]>;
    readonly invitedEmailAddress?: InputMaybe<Scalars["String"]>;
    readonly linkToUserId?: InputMaybe<Scalars["String"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.Invitation" */
export enum Registrant_Invitation_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConfirmationCode = "confirmationCode",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    InviteCode = "inviteCode",
    /** column name */
    InvitedEmailAddress = "invitedEmailAddress",
    /** column name */
    LinkToUserId = "linkToUserId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "registrant.Profile" */
export type Registrant_Profile = {
    readonly __typename?: "registrant_Profile";
    readonly affiliation?: Maybe<Scalars["String"]>;
    readonly affiliationURL?: Maybe<Scalars["String"]>;
    readonly badges?: Maybe<Scalars["jsonb"]>;
    readonly bio?: Maybe<Scalars["String"]>;
    readonly country?: Maybe<Scalars["String"]>;
    readonly created_at: Scalars["timestamptz"];
    readonly github?: Maybe<Scalars["String"]>;
    readonly hasBeenEdited: Scalars["Boolean"];
    readonly photoS3BucketName?: Maybe<Scalars["String"]>;
    readonly photoS3BucketRegion?: Maybe<Scalars["String"]>;
    readonly photoS3ObjectName?: Maybe<Scalars["String"]>;
    readonly photoURL_50x50?: Maybe<Scalars["String"]>;
    readonly photoURL_350x350?: Maybe<Scalars["String"]>;
    readonly pronouns?: Maybe<Scalars["jsonb"]>;
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
    readonly twitter?: Maybe<Scalars["String"]>;
    readonly updated_at: Scalars["timestamptz"];
    readonly website?: Maybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.Profile" */
export type Registrant_ProfileBadgesArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.Profile" */
export type Registrant_ProfilePronounsArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.ProfileBadges" */
export type Registrant_ProfileBadges = {
    readonly __typename?: "registrant_ProfileBadges";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly registrant?: Maybe<Registrant_Registrant>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
};

/** aggregated selection of "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Aggregate = {
    readonly __typename?: "registrant_ProfileBadges_aggregate";
    readonly aggregate?: Maybe<Registrant_ProfileBadges_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_ProfileBadges>;
};

/** aggregate fields of "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Aggregate_Fields = {
    readonly __typename?: "registrant_ProfileBadges_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_ProfileBadges_Max_Fields>;
    readonly min?: Maybe<Registrant_ProfileBadges_Min_Fields>;
};

/** aggregate fields of "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Registrant_ProfileBadges_Max_Order_By>;
    readonly min?: InputMaybe<Registrant_ProfileBadges_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Registrant_ProfileBadges_Insert_Input>;
};

/** Boolean expression to filter rows from the table "registrant.ProfileBadges". All fields are combined with a logical 'AND'. */
export type Registrant_ProfileBadges_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Bool_Exp>>;
    readonly colour?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** input type for inserting data into table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Insert_Input = {
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
};

/** aggregate max on columns */
export type Registrant_ProfileBadges_Max_Fields = {
    readonly __typename?: "registrant_ProfileBadges_max_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by max() on columns of table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Max_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_ProfileBadges_Min_Fields = {
    readonly __typename?: "registrant_ProfileBadges_min_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
};

/** order by min() on columns of table "registrant.ProfileBadges" */
export type Registrant_ProfileBadges_Min_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
};

/** Ordering options when selecting data from "registrant.ProfileBadges". */
export type Registrant_ProfileBadges_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
};

/** select columns of table "registrant.ProfileBadges" */
export enum Registrant_ProfileBadges_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    Name = "name",
    /** column name */
    RegistrantId = "registrantId",
}

/** aggregated selection of "registrant.Profile" */
export type Registrant_Profile_Aggregate = {
    readonly __typename?: "registrant_Profile_aggregate";
    readonly aggregate?: Maybe<Registrant_Profile_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_Profile>;
};

/** aggregate fields of "registrant.Profile" */
export type Registrant_Profile_Aggregate_Fields = {
    readonly __typename?: "registrant_Profile_aggregate_fields";
    readonly avg?: Maybe<Registrant_Profile_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_Profile_Max_Fields>;
    readonly min?: Maybe<Registrant_Profile_Min_Fields>;
    readonly stddev?: Maybe<Registrant_Profile_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Registrant_Profile_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Registrant_Profile_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Registrant_Profile_Sum_Fields>;
    readonly var_pop?: Maybe<Registrant_Profile_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Registrant_Profile_Var_Samp_Fields>;
    readonly variance?: Maybe<Registrant_Profile_Variance_Fields>;
};

/** aggregate fields of "registrant.Profile" */
export type Registrant_Profile_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_Profile_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Registrant_Profile_Append_Input = {
    readonly badges?: InputMaybe<Scalars["jsonb"]>;
    readonly pronouns?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate avg on columns */
export type Registrant_Profile_Avg_Fields = {
    readonly __typename?: "registrant_Profile_avg_fields";
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "registrant.Profile". All fields are combined with a logical 'AND'. */
export type Registrant_Profile_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_Profile_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_Profile_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_Profile_Bool_Exp>>;
    readonly affiliation?: InputMaybe<String_Comparison_Exp>;
    readonly affiliationURL?: InputMaybe<String_Comparison_Exp>;
    readonly badges?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly bio?: InputMaybe<String_Comparison_Exp>;
    readonly country?: InputMaybe<String_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly github?: InputMaybe<String_Comparison_Exp>;
    readonly hasBeenEdited?: InputMaybe<Boolean_Comparison_Exp>;
    readonly photoS3BucketName?: InputMaybe<String_Comparison_Exp>;
    readonly photoS3BucketRegion?: InputMaybe<String_Comparison_Exp>;
    readonly photoS3ObjectName?: InputMaybe<String_Comparison_Exp>;
    readonly photoURL_50x50?: InputMaybe<String_Comparison_Exp>;
    readonly photoURL_350x350?: InputMaybe<String_Comparison_Exp>;
    readonly pronouns?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly timezoneUTCOffset?: InputMaybe<Float_Comparison_Exp>;
    readonly twitter?: InputMaybe<String_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly website?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.Profile" */
export enum Registrant_Profile_Constraint {
    /** unique or primary key constraint */
    ProfilePkey = "Profile_pkey",
    /** unique or primary key constraint */
    ProfileRegistrantIdKey = "Profile_registrantId_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Registrant_Profile_Delete_At_Path_Input = {
    readonly badges?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
    readonly pronouns?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Registrant_Profile_Delete_Elem_Input = {
    readonly badges?: InputMaybe<Scalars["Int"]>;
    readonly pronouns?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Registrant_Profile_Delete_Key_Input = {
    readonly badges?: InputMaybe<Scalars["String"]>;
    readonly pronouns?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "registrant.Profile" */
export type Registrant_Profile_Inc_Input = {
    readonly timezoneUTCOffset?: InputMaybe<Scalars["Float"]>;
};

/** input type for inserting data into table "registrant.Profile" */
export type Registrant_Profile_Insert_Input = {
    readonly affiliation?: InputMaybe<Scalars["String"]>;
    readonly affiliationURL?: InputMaybe<Scalars["String"]>;
    readonly badges?: InputMaybe<Scalars["jsonb"]>;
    readonly bio?: InputMaybe<Scalars["String"]>;
    readonly country?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly github?: InputMaybe<Scalars["String"]>;
    readonly hasBeenEdited?: InputMaybe<Scalars["Boolean"]>;
    readonly photoS3BucketName?: InputMaybe<Scalars["String"]>;
    readonly photoS3BucketRegion?: InputMaybe<Scalars["String"]>;
    readonly photoS3ObjectName?: InputMaybe<Scalars["String"]>;
    readonly photoURL_50x50?: InputMaybe<Scalars["String"]>;
    readonly photoURL_350x350?: InputMaybe<Scalars["String"]>;
    readonly pronouns?: InputMaybe<Scalars["jsonb"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly timezoneUTCOffset?: InputMaybe<Scalars["Float"]>;
    readonly twitter?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly website?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Registrant_Profile_Max_Fields = {
    readonly __typename?: "registrant_Profile_max_fields";
    readonly affiliation?: Maybe<Scalars["String"]>;
    readonly affiliationURL?: Maybe<Scalars["String"]>;
    readonly bio?: Maybe<Scalars["String"]>;
    readonly country?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly github?: Maybe<Scalars["String"]>;
    readonly photoS3BucketName?: Maybe<Scalars["String"]>;
    readonly photoS3BucketRegion?: Maybe<Scalars["String"]>;
    readonly photoS3ObjectName?: Maybe<Scalars["String"]>;
    readonly photoURL_50x50?: Maybe<Scalars["String"]>;
    readonly photoURL_350x350?: Maybe<Scalars["String"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
    readonly twitter?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly website?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Registrant_Profile_Min_Fields = {
    readonly __typename?: "registrant_Profile_min_fields";
    readonly affiliation?: Maybe<Scalars["String"]>;
    readonly affiliationURL?: Maybe<Scalars["String"]>;
    readonly bio?: Maybe<Scalars["String"]>;
    readonly country?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly github?: Maybe<Scalars["String"]>;
    readonly photoS3BucketName?: Maybe<Scalars["String"]>;
    readonly photoS3BucketRegion?: Maybe<Scalars["String"]>;
    readonly photoS3ObjectName?: Maybe<Scalars["String"]>;
    readonly photoURL_50x50?: Maybe<Scalars["String"]>;
    readonly photoURL_350x350?: Maybe<Scalars["String"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
    readonly twitter?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly website?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "registrant.Profile" */
export type Registrant_Profile_Mutation_Response = {
    readonly __typename?: "registrant_Profile_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Registrant_Profile>;
};

/** input type for inserting object relation for remote table "registrant.Profile" */
export type Registrant_Profile_Obj_Rel_Insert_Input = {
    readonly data: Registrant_Profile_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_Profile_On_Conflict>;
};

/** on_conflict condition type for table "registrant.Profile" */
export type Registrant_Profile_On_Conflict = {
    readonly constraint: Registrant_Profile_Constraint;
    readonly update_columns?: ReadonlyArray<Registrant_Profile_Update_Column>;
    readonly where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.Profile". */
export type Registrant_Profile_Order_By = {
    readonly affiliation?: InputMaybe<Order_By>;
    readonly affiliationURL?: InputMaybe<Order_By>;
    readonly badges?: InputMaybe<Order_By>;
    readonly bio?: InputMaybe<Order_By>;
    readonly country?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly github?: InputMaybe<Order_By>;
    readonly hasBeenEdited?: InputMaybe<Order_By>;
    readonly photoS3BucketName?: InputMaybe<Order_By>;
    readonly photoS3BucketRegion?: InputMaybe<Order_By>;
    readonly photoS3ObjectName?: InputMaybe<Order_By>;
    readonly photoURL_50x50?: InputMaybe<Order_By>;
    readonly photoURL_350x350?: InputMaybe<Order_By>;
    readonly pronouns?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly timezoneUTCOffset?: InputMaybe<Order_By>;
    readonly twitter?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly website?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_Profile */
export type Registrant_Profile_Pk_Columns_Input = {
    readonly registrantId: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Registrant_Profile_Prepend_Input = {
    readonly badges?: InputMaybe<Scalars["jsonb"]>;
    readonly pronouns?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "registrant.Profile" */
export enum Registrant_Profile_Select_Column {
    /** column name */
    Affiliation = "affiliation",
    /** column name */
    AffiliationUrl = "affiliationURL",
    /** column name */
    Badges = "badges",
    /** column name */
    Bio = "bio",
    /** column name */
    Country = "country",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Github = "github",
    /** column name */
    HasBeenEdited = "hasBeenEdited",
    /** column name */
    PhotoS3BucketName = "photoS3BucketName",
    /** column name */
    PhotoS3BucketRegion = "photoS3BucketRegion",
    /** column name */
    PhotoS3ObjectName = "photoS3ObjectName",
    /** column name */
    PhotoUrl_50x50 = "photoURL_50x50",
    /** column name */
    PhotoUrl_350x350 = "photoURL_350x350",
    /** column name */
    Pronouns = "pronouns",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    TimezoneUtcOffset = "timezoneUTCOffset",
    /** column name */
    Twitter = "twitter",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Website = "website",
}

/** input type for updating data in table "registrant.Profile" */
export type Registrant_Profile_Set_Input = {
    readonly affiliation?: InputMaybe<Scalars["String"]>;
    readonly affiliationURL?: InputMaybe<Scalars["String"]>;
    readonly badges?: InputMaybe<Scalars["jsonb"]>;
    readonly bio?: InputMaybe<Scalars["String"]>;
    readonly country?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly github?: InputMaybe<Scalars["String"]>;
    readonly hasBeenEdited?: InputMaybe<Scalars["Boolean"]>;
    readonly photoS3BucketName?: InputMaybe<Scalars["String"]>;
    readonly photoS3BucketRegion?: InputMaybe<Scalars["String"]>;
    readonly photoS3ObjectName?: InputMaybe<Scalars["String"]>;
    readonly photoURL_50x50?: InputMaybe<Scalars["String"]>;
    readonly photoURL_350x350?: InputMaybe<Scalars["String"]>;
    readonly pronouns?: InputMaybe<Scalars["jsonb"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly timezoneUTCOffset?: InputMaybe<Scalars["Float"]>;
    readonly twitter?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly website?: InputMaybe<Scalars["String"]>;
};

/** aggregate stddev on columns */
export type Registrant_Profile_Stddev_Fields = {
    readonly __typename?: "registrant_Profile_stddev_fields";
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Registrant_Profile_Stddev_Pop_Fields = {
    readonly __typename?: "registrant_Profile_stddev_pop_fields";
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Registrant_Profile_Stddev_Samp_Fields = {
    readonly __typename?: "registrant_Profile_stddev_samp_fields";
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Registrant_Profile_Sum_Fields = {
    readonly __typename?: "registrant_Profile_sum_fields";
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** update columns of table "registrant.Profile" */
export enum Registrant_Profile_Update_Column {
    /** column name */
    Affiliation = "affiliation",
    /** column name */
    AffiliationUrl = "affiliationURL",
    /** column name */
    Badges = "badges",
    /** column name */
    Bio = "bio",
    /** column name */
    Country = "country",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Github = "github",
    /** column name */
    HasBeenEdited = "hasBeenEdited",
    /** column name */
    PhotoS3BucketName = "photoS3BucketName",
    /** column name */
    PhotoS3BucketRegion = "photoS3BucketRegion",
    /** column name */
    PhotoS3ObjectName = "photoS3ObjectName",
    /** column name */
    PhotoUrl_50x50 = "photoURL_50x50",
    /** column name */
    PhotoUrl_350x350 = "photoURL_350x350",
    /** column name */
    Pronouns = "pronouns",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    TimezoneUtcOffset = "timezoneUTCOffset",
    /** column name */
    Twitter = "twitter",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Website = "website",
}

/** aggregate var_pop on columns */
export type Registrant_Profile_Var_Pop_Fields = {
    readonly __typename?: "registrant_Profile_var_pop_fields";
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Registrant_Profile_Var_Samp_Fields = {
    readonly __typename?: "registrant_Profile_var_samp_fields";
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Registrant_Profile_Variance_Fields = {
    readonly __typename?: "registrant_Profile_variance_fields";
    readonly timezoneUTCOffset?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_Registrant = {
    readonly __typename?: "registrant_Registrant";
    /** An array relationship */
    readonly badges: ReadonlyArray<Registrant_ProfileBadges>;
    /** An aggregate relationship */
    readonly badges_aggregate: Registrant_ProfileBadges_Aggregate;
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly conferenceRole: Registrant_RegistrantRole_Enum;
    readonly createdAt: Scalars["timestamptz"];
    readonly displayName: Scalars["String"];
    /** An array relationship */
    readonly groupRegistrants: ReadonlyArray<Registrant_GroupRegistrant>;
    /** An aggregate relationship */
    readonly groupRegistrants_aggregate: Registrant_GroupRegistrant_Aggregate;
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly invitation?: Maybe<Registrant_Invitation>;
    /** A computed field, executes function "registrant.InvitationEmailStatus" */
    readonly invitationStatus?: Maybe<Scalars["jsonb"]>;
    readonly inviteSent?: Maybe<Scalars["Boolean"]>;
    /** A computed field, executes function "registrant.isProgramPerson" */
    readonly isProgramPerson?: Maybe<Scalars["Boolean"]>;
    /** An object relationship */
    readonly profile?: Maybe<Registrant_Profile>;
    /** An array relationship */
    readonly programPeople: ReadonlyArray<Collection_ProgramPerson>;
    /** An aggregate relationship */
    readonly programPeople_aggregate: Collection_ProgramPerson_Aggregate;
    /** An array relationship */
    readonly subconferenceMemberships: ReadonlyArray<Registrant_SubconferenceMembership>;
    /** An aggregate relationship */
    readonly subconferenceMemberships_aggregate: Registrant_SubconferenceMembership_Aggregate;
    readonly updatedAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly user?: Maybe<User>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantBadgesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantBadges_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantGroupRegistrantsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantGroupRegistrants_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantInvitationStatusArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantProgramPeopleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantProgramPeople_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantSubconferenceMembershipsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** columns and relationships of "registrant.Registrant" */
export type Registrant_RegistrantSubconferenceMemberships_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** columns and relationships of "registrant.RegistrantRole" */
export type Registrant_RegistrantRole = {
    readonly __typename?: "registrant_RegistrantRole";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name: Scalars["String"];
};

/** aggregated selection of "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Aggregate = {
    readonly __typename?: "registrant_RegistrantRole_aggregate";
    readonly aggregate?: Maybe<Registrant_RegistrantRole_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_RegistrantRole>;
};

/** aggregate fields of "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Aggregate_Fields = {
    readonly __typename?: "registrant_RegistrantRole_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_RegistrantRole_Max_Fields>;
    readonly min?: Maybe<Registrant_RegistrantRole_Min_Fields>;
};

/** aggregate fields of "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "registrant.RegistrantRole". All fields are combined with a logical 'AND'. */
export type Registrant_RegistrantRole_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.RegistrantRole" */
export enum Registrant_RegistrantRole_Constraint {
    /** unique or primary key constraint */
    RegistrantRolePkey = "RegistrantRole_pkey",
}

export enum Registrant_RegistrantRole_Enum {
    Attendee = "ATTENDEE",
    Moderator = "MODERATOR",
    Organizer = "ORGANIZER",
}

/** Boolean expression to compare columns of type "registrant_RegistrantRole_enum". All fields are combined with logical 'AND'. */
export type Registrant_RegistrantRole_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Registrant_RegistrantRole_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Registrant_RegistrantRole_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Enum>>;
};

/** input type for inserting data into table "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Registrant_RegistrantRole_Max_Fields = {
    readonly __typename?: "registrant_RegistrantRole_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Registrant_RegistrantRole_Min_Fields = {
    readonly __typename?: "registrant_RegistrantRole_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Mutation_Response = {
    readonly __typename?: "registrant_RegistrantRole_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Registrant_RegistrantRole>;
};

/** on_conflict condition type for table "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_On_Conflict = {
    readonly constraint: Registrant_RegistrantRole_Constraint;
    readonly update_columns?: ReadonlyArray<Registrant_RegistrantRole_Update_Column>;
    readonly where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.RegistrantRole". */
export type Registrant_RegistrantRole_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_RegistrantRole */
export type Registrant_RegistrantRole_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "registrant.RegistrantRole" */
export enum Registrant_RegistrantRole_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "registrant.RegistrantRole" */
export type Registrant_RegistrantRole_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "registrant.RegistrantRole" */
export enum Registrant_RegistrantRole_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "registrant.Registrant" */
export type Registrant_Registrant_Aggregate = {
    readonly __typename?: "registrant_Registrant_aggregate";
    readonly aggregate?: Maybe<Registrant_Registrant_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_Registrant>;
};

/** aggregate fields of "registrant.Registrant" */
export type Registrant_Registrant_Aggregate_Fields = {
    readonly __typename?: "registrant_Registrant_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_Registrant_Max_Fields>;
    readonly min?: Maybe<Registrant_Registrant_Min_Fields>;
};

/** aggregate fields of "registrant.Registrant" */
export type Registrant_Registrant_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.Registrant" */
export type Registrant_Registrant_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Registrant_Registrant_Max_Order_By>;
    readonly min?: InputMaybe<Registrant_Registrant_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.Registrant" */
export type Registrant_Registrant_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Registrant_Registrant_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_Registrant_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.Registrant". All fields are combined with a logical 'AND'. */
export type Registrant_Registrant_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_Registrant_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_Registrant_Bool_Exp>>;
    readonly badges?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly conferenceRole?: InputMaybe<Registrant_RegistrantRole_Enum_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly displayName?: InputMaybe<String_Comparison_Exp>;
    readonly groupRegistrants?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly invitation?: InputMaybe<Registrant_Invitation_Bool_Exp>;
    readonly invitationStatus?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly inviteSent?: InputMaybe<Boolean_Comparison_Exp>;
    readonly isProgramPerson?: InputMaybe<Boolean_Comparison_Exp>;
    readonly profile?: InputMaybe<Registrant_Profile_Bool_Exp>;
    readonly programPeople?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    readonly subconferenceMemberships?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly user?: InputMaybe<User_Bool_Exp>;
    readonly userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.Registrant" */
export enum Registrant_Registrant_Constraint {
    /** unique or primary key constraint */
    RegistrantConferenceIdUserIdKey = "Registrant_conferenceId_userId_key",
    /** unique or primary key constraint */
    RegistrantPkey = "Registrant_pkey",
}

/** input type for inserting data into table "registrant.Registrant" */
export type Registrant_Registrant_Insert_Input = {
    readonly badges?: InputMaybe<Registrant_ProfileBadges_Arr_Rel_Insert_Input>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly conferenceRole?: InputMaybe<Registrant_RegistrantRole_Enum>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly displayName?: InputMaybe<Scalars["String"]>;
    readonly groupRegistrants?: InputMaybe<Registrant_GroupRegistrant_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly invitation?: InputMaybe<Registrant_Invitation_Obj_Rel_Insert_Input>;
    readonly profile?: InputMaybe<Registrant_Profile_Obj_Rel_Insert_Input>;
    readonly programPeople?: InputMaybe<Collection_ProgramPerson_Arr_Rel_Insert_Input>;
    readonly subconferenceMemberships?: InputMaybe<Registrant_SubconferenceMembership_Arr_Rel_Insert_Input>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Registrant_Registrant_Max_Fields = {
    readonly __typename?: "registrant_Registrant_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly displayName?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "registrant.Registrant" */
export type Registrant_Registrant_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly displayName?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_Registrant_Min_Fields = {
    readonly __typename?: "registrant_Registrant_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly displayName?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "registrant.Registrant" */
export type Registrant_Registrant_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly displayName?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.Registrant" */
export type Registrant_Registrant_Mutation_Response = {
    readonly __typename?: "registrant_Registrant_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Registrant_Registrant>;
};

/** input type for inserting object relation for remote table "registrant.Registrant" */
export type Registrant_Registrant_Obj_Rel_Insert_Input = {
    readonly data: Registrant_Registrant_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_Registrant_On_Conflict>;
};

/** on_conflict condition type for table "registrant.Registrant" */
export type Registrant_Registrant_On_Conflict = {
    readonly constraint: Registrant_Registrant_Constraint;
    readonly update_columns?: ReadonlyArray<Registrant_Registrant_Update_Column>;
    readonly where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.Registrant". */
export type Registrant_Registrant_Order_By = {
    readonly badges_aggregate?: InputMaybe<Registrant_ProfileBadges_Aggregate_Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly conferenceRole?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly displayName?: InputMaybe<Order_By>;
    readonly groupRegistrants_aggregate?: InputMaybe<Registrant_GroupRegistrant_Aggregate_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly invitation?: InputMaybe<Registrant_Invitation_Order_By>;
    readonly invitationStatus?: InputMaybe<Order_By>;
    readonly inviteSent?: InputMaybe<Order_By>;
    readonly isProgramPerson?: InputMaybe<Order_By>;
    readonly profile?: InputMaybe<Registrant_Profile_Order_By>;
    readonly programPeople_aggregate?: InputMaybe<Collection_ProgramPerson_Aggregate_Order_By>;
    readonly subconferenceMemberships_aggregate?: InputMaybe<Registrant_SubconferenceMembership_Aggregate_Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly user?: InputMaybe<User_Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_Registrant */
export type Registrant_Registrant_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "registrant.Registrant" */
export enum Registrant_Registrant_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferenceRole = "conferenceRole",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    DisplayName = "displayName",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "registrant.Registrant" */
export type Registrant_Registrant_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly conferenceRole?: InputMaybe<Registrant_RegistrantRole_Enum>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly displayName?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "registrant.Registrant" */
export enum Registrant_Registrant_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferenceRole = "conferenceRole",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    DisplayName = "displayName",
    /** column name */
    Id = "id",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UserId = "userId",
}

/** columns and relationships of "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording = {
    readonly __typename?: "registrant_SavedVonageRoomRecording";
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly isHidden: Scalars["Boolean"];
    /** An object relationship */
    readonly recording: Video_VonageRoomRecording;
    readonly recordingId: Scalars["uuid"];
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Aggregate = {
    readonly __typename?: "registrant_SavedVonageRoomRecording_aggregate";
    readonly aggregate?: Maybe<Registrant_SavedVonageRoomRecording_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_SavedVonageRoomRecording>;
};

/** aggregate fields of "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Aggregate_Fields = {
    readonly __typename?: "registrant_SavedVonageRoomRecording_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_SavedVonageRoomRecording_Max_Fields>;
    readonly min?: Maybe<Registrant_SavedVonageRoomRecording_Min_Fields>;
};

/** aggregate fields of "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Registrant_SavedVonageRoomRecording_Max_Order_By>;
    readonly min?: InputMaybe<Registrant_SavedVonageRoomRecording_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Registrant_SavedVonageRoomRecording_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_SavedVonageRoomRecording_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.SavedVonageRoomRecording". All fields are combined with a logical 'AND'. */
export type Registrant_SavedVonageRoomRecording_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly isHidden?: InputMaybe<Boolean_Comparison_Exp>;
    readonly recording?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
    readonly recordingId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.SavedVonageRoomRecording" */
export enum Registrant_SavedVonageRoomRecording_Constraint {
    /** unique or primary key constraint */
    SavedVonageRoomRecordingPkey = "SavedVonageRoomRecording_pkey",
    /** unique or primary key constraint */
    SavedVonageRoomRecordingRecordingIdRegistrantIdKey = "SavedVonageRoomRecording_recordingId_registrantId_key",
}

/** input type for inserting data into table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isHidden?: InputMaybe<Scalars["Boolean"]>;
    readonly recording?: InputMaybe<Video_VonageRoomRecording_Obj_Rel_Insert_Input>;
    readonly recordingId?: InputMaybe<Scalars["uuid"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Registrant_SavedVonageRoomRecording_Max_Fields = {
    readonly __typename?: "registrant_SavedVonageRoomRecording_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly recordingId?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly recordingId?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_SavedVonageRoomRecording_Min_Fields = {
    readonly __typename?: "registrant_SavedVonageRoomRecording_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly recordingId?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly recordingId?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Mutation_Response = {
    readonly __typename?: "registrant_SavedVonageRoomRecording_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Registrant_SavedVonageRoomRecording>;
};

/** on_conflict condition type for table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_On_Conflict = {
    readonly constraint: Registrant_SavedVonageRoomRecording_Constraint;
    readonly update_columns?: ReadonlyArray<Registrant_SavedVonageRoomRecording_Update_Column>;
    readonly where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.SavedVonageRoomRecording". */
export type Registrant_SavedVonageRoomRecording_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly isHidden?: InputMaybe<Order_By>;
    readonly recording?: InputMaybe<Video_VonageRoomRecording_Order_By>;
    readonly recordingId?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_SavedVonageRoomRecording */
export type Registrant_SavedVonageRoomRecording_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "registrant.SavedVonageRoomRecording" */
export enum Registrant_SavedVonageRoomRecording_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    RecordingId = "recordingId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "registrant.SavedVonageRoomRecording" */
export type Registrant_SavedVonageRoomRecording_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isHidden?: InputMaybe<Scalars["Boolean"]>;
    readonly recordingId?: InputMaybe<Scalars["uuid"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.SavedVonageRoomRecording" */
export enum Registrant_SavedVonageRoomRecording_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    IsHidden = "isHidden",
    /** column name */
    RecordingId = "recordingId",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership = {
    readonly __typename?: "registrant_SubconferenceMembership";
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    readonly role: Registrant_RegistrantRole_Enum;
    /** An object relationship */
    readonly subconference: Conference_Subconference;
    readonly subconferenceId: Scalars["uuid"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Aggregate = {
    readonly __typename?: "registrant_SubconferenceMembership_aggregate";
    readonly aggregate?: Maybe<Registrant_SubconferenceMembership_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Registrant_SubconferenceMembership>;
};

/** aggregate fields of "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Aggregate_Fields = {
    readonly __typename?: "registrant_SubconferenceMembership_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Registrant_SubconferenceMembership_Max_Fields>;
    readonly min?: Maybe<Registrant_SubconferenceMembership_Min_Fields>;
};

/** aggregate fields of "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Registrant_SubconferenceMembership_Max_Order_By>;
    readonly min?: InputMaybe<Registrant_SubconferenceMembership_Min_Order_By>;
};

/** input type for inserting array relation for remote table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Registrant_SubconferenceMembership_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Registrant_SubconferenceMembership_On_Conflict>;
};

/** Boolean expression to filter rows from the table "registrant.SubconferenceMembership". All fields are combined with a logical 'AND'. */
export type Registrant_SubconferenceMembership_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Bool_Exp>>;
    readonly _not?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly role?: InputMaybe<Registrant_RegistrantRole_Enum_Comparison_Exp>;
    readonly subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "registrant.SubconferenceMembership" */
export enum Registrant_SubconferenceMembership_Constraint {
    /** unique or primary key constraint */
    SubconferenceMembershipPkey = "SubconferenceMembership_pkey",
    /** unique or primary key constraint */
    SubconferenceMembershipSubconferenceIdRegistrantIdKey = "SubconferenceMembership_subconferenceId_registrantId_key",
}

/** input type for inserting data into table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly role?: InputMaybe<Registrant_RegistrantRole_Enum>;
    readonly subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Registrant_SubconferenceMembership_Max_Fields = {
    readonly __typename?: "registrant_SubconferenceMembership_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Registrant_SubconferenceMembership_Min_Fields = {
    readonly __typename?: "registrant_SubconferenceMembership_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Mutation_Response = {
    readonly __typename?: "registrant_SubconferenceMembership_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Registrant_SubconferenceMembership>;
};

/** on_conflict condition type for table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_On_Conflict = {
    readonly constraint: Registrant_SubconferenceMembership_Constraint;
    readonly update_columns?: ReadonlyArray<Registrant_SubconferenceMembership_Update_Column>;
    readonly where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

/** Ordering options when selecting data from "registrant.SubconferenceMembership". */
export type Registrant_SubconferenceMembership_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly role?: InputMaybe<Order_By>;
    readonly subconference?: InputMaybe<Conference_Subconference_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: registrant_SubconferenceMembership */
export type Registrant_SubconferenceMembership_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "registrant.SubconferenceMembership" */
export enum Registrant_SubconferenceMembership_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    Role = "role",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "registrant.SubconferenceMembership" */
export type Registrant_SubconferenceMembership_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly role?: InputMaybe<Registrant_RegistrantRole_Enum>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "registrant.SubconferenceMembership" */
export enum Registrant_SubconferenceMembership_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    Role = "role",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

export type Registrant_SearchRegistrants_Args = {
    readonly conferenceid?: InputMaybe<Scalars["uuid"]>;
    readonly search?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "room.Backend" */
export type Room_Backend = {
    readonly __typename?: "room_Backend";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "room.Backend" */
export type Room_Backend_Aggregate = {
    readonly __typename?: "room_Backend_aggregate";
    readonly aggregate?: Maybe<Room_Backend_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_Backend>;
};

/** aggregate fields of "room.Backend" */
export type Room_Backend_Aggregate_Fields = {
    readonly __typename?: "room_Backend_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_Backend_Max_Fields>;
    readonly min?: Maybe<Room_Backend_Min_Fields>;
};

/** aggregate fields of "room.Backend" */
export type Room_Backend_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_Backend_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.Backend". All fields are combined with a logical 'AND'. */
export type Room_Backend_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_Backend_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_Backend_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_Backend_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.Backend" */
export enum Room_Backend_Constraint {
    /** unique or primary key constraint */
    VideoRoomBackendPkey = "VideoRoomBackend_pkey",
}

export enum Room_Backend_Enum {
    /** AWS Chime SDK */
    Chime = "CHIME",
    /** Vonage Video API */
    Vonage = "VONAGE",
}

/** Boolean expression to compare columns of type "room_Backend_enum". All fields are combined with logical 'AND'. */
export type Room_Backend_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Room_Backend_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Room_Backend_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Room_Backend_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Room_Backend_Enum>>;
};

/** input type for inserting data into table "room.Backend" */
export type Room_Backend_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Room_Backend_Max_Fields = {
    readonly __typename?: "room_Backend_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Room_Backend_Min_Fields = {
    readonly __typename?: "room_Backend_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "room.Backend" */
export type Room_Backend_Mutation_Response = {
    readonly __typename?: "room_Backend_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_Backend>;
};

/** on_conflict condition type for table "room.Backend" */
export type Room_Backend_On_Conflict = {
    readonly constraint: Room_Backend_Constraint;
    readonly update_columns?: ReadonlyArray<Room_Backend_Update_Column>;
    readonly where?: InputMaybe<Room_Backend_Bool_Exp>;
};

/** Ordering options when selecting data from "room.Backend". */
export type Room_Backend_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_Backend */
export type Room_Backend_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "room.Backend" */
export enum Room_Backend_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "room.Backend" */
export type Room_Backend_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "room.Backend" */
export enum Room_Backend_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "room.ChimeMeeting" */
export type Room_ChimeMeeting = {
    readonly __typename?: "room_ChimeMeeting";
    readonly chimeMeetingData: Scalars["jsonb"];
    readonly chimeMeetingId: Scalars["String"];
    /** An object relationship */
    readonly conference?: Maybe<Conference_Conference>;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly room?: Maybe<Room_Room>;
    readonly roomId: Scalars["uuid"];
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "room.ChimeMeeting" */
export type Room_ChimeMeetingChimeMeetingDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "room.ChimeMeeting" */
export type Room_ChimeMeeting_Aggregate = {
    readonly __typename?: "room_ChimeMeeting_aggregate";
    readonly aggregate?: Maybe<Room_ChimeMeeting_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_ChimeMeeting>;
};

/** aggregate fields of "room.ChimeMeeting" */
export type Room_ChimeMeeting_Aggregate_Fields = {
    readonly __typename?: "room_ChimeMeeting_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_ChimeMeeting_Max_Fields>;
    readonly min?: Maybe<Room_ChimeMeeting_Min_Fields>;
};

/** aggregate fields of "room.ChimeMeeting" */
export type Room_ChimeMeeting_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Room_ChimeMeeting_Append_Input = {
    readonly chimeMeetingData?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "room.ChimeMeeting". All fields are combined with a logical 'AND'. */
export type Room_ChimeMeeting_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Bool_Exp>>;
    readonly chimeMeetingData?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly chimeMeetingId?: InputMaybe<String_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ChimeMeeting" */
export enum Room_ChimeMeeting_Constraint {
    /** unique or primary key constraint */
    ChimeMeetingPkey = "ChimeMeeting_pkey",
    /** unique or primary key constraint */
    ChimeMeetingRoomIdKey = "ChimeMeeting_roomId_key",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Room_ChimeMeeting_Delete_At_Path_Input = {
    readonly chimeMeetingData?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Room_ChimeMeeting_Delete_Elem_Input = {
    readonly chimeMeetingData?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Room_ChimeMeeting_Delete_Key_Input = {
    readonly chimeMeetingData?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "room.ChimeMeeting" */
export type Room_ChimeMeeting_Insert_Input = {
    readonly chimeMeetingData?: InputMaybe<Scalars["jsonb"]>;
    readonly chimeMeetingId?: InputMaybe<Scalars["String"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_ChimeMeeting_Max_Fields = {
    readonly __typename?: "room_ChimeMeeting_max_fields";
    readonly chimeMeetingId?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Room_ChimeMeeting_Min_Fields = {
    readonly __typename?: "room_ChimeMeeting_min_fields";
    readonly chimeMeetingId?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "room.ChimeMeeting" */
export type Room_ChimeMeeting_Mutation_Response = {
    readonly __typename?: "room_ChimeMeeting_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_ChimeMeeting>;
};

/** input type for inserting object relation for remote table "room.ChimeMeeting" */
export type Room_ChimeMeeting_Obj_Rel_Insert_Input = {
    readonly data: Room_ChimeMeeting_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_ChimeMeeting_On_Conflict>;
};

/** on_conflict condition type for table "room.ChimeMeeting" */
export type Room_ChimeMeeting_On_Conflict = {
    readonly constraint: Room_ChimeMeeting_Constraint;
    readonly update_columns?: ReadonlyArray<Room_ChimeMeeting_Update_Column>;
    readonly where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ChimeMeeting". */
export type Room_ChimeMeeting_Order_By = {
    readonly chimeMeetingData?: InputMaybe<Order_By>;
    readonly chimeMeetingId?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ChimeMeeting */
export type Room_ChimeMeeting_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Room_ChimeMeeting_Prepend_Input = {
    readonly chimeMeetingData?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "room.ChimeMeeting" */
export enum Room_ChimeMeeting_Select_Column {
    /** column name */
    ChimeMeetingData = "chimeMeetingData",
    /** column name */
    ChimeMeetingId = "chimeMeetingId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "room.ChimeMeeting" */
export type Room_ChimeMeeting_Set_Input = {
    readonly chimeMeetingData?: InputMaybe<Scalars["jsonb"]>;
    readonly chimeMeetingId?: InputMaybe<Scalars["String"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "room.ChimeMeeting" */
export enum Room_ChimeMeeting_Update_Column {
    /** column name */
    ChimeMeetingData = "chimeMeetingData",
    /** column name */
    ChimeMeetingId = "chimeMeetingId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "room.LivestreamDurations" */
export type Room_LivestreamDurations = {
    readonly __typename?: "room_LivestreamDurations";
    /** An object relationship */
    readonly conference?: Maybe<Conference_Conference>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly room?: Maybe<Room_Room>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly sum?: Maybe<Scalars["float8"]>;
};

/** aggregated selection of "room.LivestreamDurations" */
export type Room_LivestreamDurations_Aggregate = {
    readonly __typename?: "room_LivestreamDurations_aggregate";
    readonly aggregate?: Maybe<Room_LivestreamDurations_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_LivestreamDurations>;
};

/** aggregate fields of "room.LivestreamDurations" */
export type Room_LivestreamDurations_Aggregate_Fields = {
    readonly __typename?: "room_LivestreamDurations_aggregate_fields";
    readonly avg?: Maybe<Room_LivestreamDurations_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_LivestreamDurations_Max_Fields>;
    readonly min?: Maybe<Room_LivestreamDurations_Min_Fields>;
    readonly stddev?: Maybe<Room_LivestreamDurations_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Room_LivestreamDurations_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Room_LivestreamDurations_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Room_LivestreamDurations_Sum_Fields>;
    readonly var_pop?: Maybe<Room_LivestreamDurations_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Room_LivestreamDurations_Var_Samp_Fields>;
    readonly variance?: Maybe<Room_LivestreamDurations_Variance_Fields>;
};

/** aggregate fields of "room.LivestreamDurations" */
export type Room_LivestreamDurations_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Room_LivestreamDurations_Avg_Fields = {
    readonly __typename?: "room_LivestreamDurations_avg_fields";
    readonly sum?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "room.LivestreamDurations". All fields are combined with a logical 'AND'. */
export type Room_LivestreamDurations_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly sum?: InputMaybe<Float8_Comparison_Exp>;
};

/** input type for inserting data into table "room.LivestreamDurations" */
export type Room_LivestreamDurations_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly sum?: InputMaybe<Scalars["float8"]>;
};

/** aggregate max on columns */
export type Room_LivestreamDurations_Max_Fields = {
    readonly __typename?: "room_LivestreamDurations_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly sum?: Maybe<Scalars["float8"]>;
};

/** aggregate min on columns */
export type Room_LivestreamDurations_Min_Fields = {
    readonly __typename?: "room_LivestreamDurations_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly sum?: Maybe<Scalars["float8"]>;
};

/** input type for inserting object relation for remote table "room.LivestreamDurations" */
export type Room_LivestreamDurations_Obj_Rel_Insert_Input = {
    readonly data: Room_LivestreamDurations_Insert_Input;
};

/** Ordering options when selecting data from "room.LivestreamDurations". */
export type Room_LivestreamDurations_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly sum?: InputMaybe<Order_By>;
};

/** select columns of table "room.LivestreamDurations" */
export enum Room_LivestreamDurations_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    Sum = "sum",
}

/** aggregate stddev on columns */
export type Room_LivestreamDurations_Stddev_Fields = {
    readonly __typename?: "room_LivestreamDurations_stddev_fields";
    readonly sum?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Room_LivestreamDurations_Stddev_Pop_Fields = {
    readonly __typename?: "room_LivestreamDurations_stddev_pop_fields";
    readonly sum?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Room_LivestreamDurations_Stddev_Samp_Fields = {
    readonly __typename?: "room_LivestreamDurations_stddev_samp_fields";
    readonly sum?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Room_LivestreamDurations_Sum_Fields = {
    readonly __typename?: "room_LivestreamDurations_sum_fields";
    readonly sum?: Maybe<Scalars["float8"]>;
};

/** aggregate var_pop on columns */
export type Room_LivestreamDurations_Var_Pop_Fields = {
    readonly __typename?: "room_LivestreamDurations_var_pop_fields";
    readonly sum?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Room_LivestreamDurations_Var_Samp_Fields = {
    readonly __typename?: "room_LivestreamDurations_var_samp_fields";
    readonly sum?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Room_LivestreamDurations_Variance_Fields = {
    readonly __typename?: "room_LivestreamDurations_variance_fields";
    readonly sum?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "room.ManagementMode" */
export type Room_ManagementMode = {
    readonly __typename?: "room_ManagementMode";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "room.ManagementMode" */
export type Room_ManagementMode_Aggregate = {
    readonly __typename?: "room_ManagementMode_aggregate";
    readonly aggregate?: Maybe<Room_ManagementMode_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_ManagementMode>;
};

/** aggregate fields of "room.ManagementMode" */
export type Room_ManagementMode_Aggregate_Fields = {
    readonly __typename?: "room_ManagementMode_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_ManagementMode_Max_Fields>;
    readonly min?: Maybe<Room_ManagementMode_Min_Fields>;
};

/** aggregate fields of "room.ManagementMode" */
export type Room_ManagementMode_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_ManagementMode_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.ManagementMode". All fields are combined with a logical 'AND'. */
export type Room_ManagementMode_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_ManagementMode_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_ManagementMode_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_ManagementMode_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ManagementMode" */
export enum Room_ManagementMode_Constraint {
    /** unique or primary key constraint */
    ManagementModePkey = "ManagementMode_pkey",
}

export enum Room_ManagementMode_Enum {
    /** Room is a direct message between two attendees. No new attendees can be added. */
    Dm = "DM",
    /** Room access is automatically controlled by the system. */
    Managed = "MANAGED",
    /** Room is only visible to attendees who have been given access. New attendees can be added. */
    Private = "PRIVATE",
    /** Room is visible to all attendees at the conference. */
    Public = "PUBLIC",
}

/** Boolean expression to compare columns of type "room_ManagementMode_enum". All fields are combined with logical 'AND'. */
export type Room_ManagementMode_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Room_ManagementMode_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Room_ManagementMode_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Room_ManagementMode_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Room_ManagementMode_Enum>>;
};

/** input type for inserting data into table "room.ManagementMode" */
export type Room_ManagementMode_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Room_ManagementMode_Max_Fields = {
    readonly __typename?: "room_ManagementMode_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Room_ManagementMode_Min_Fields = {
    readonly __typename?: "room_ManagementMode_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "room.ManagementMode" */
export type Room_ManagementMode_Mutation_Response = {
    readonly __typename?: "room_ManagementMode_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_ManagementMode>;
};

/** input type for inserting object relation for remote table "room.ManagementMode" */
export type Room_ManagementMode_Obj_Rel_Insert_Input = {
    readonly data: Room_ManagementMode_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_ManagementMode_On_Conflict>;
};

/** on_conflict condition type for table "room.ManagementMode" */
export type Room_ManagementMode_On_Conflict = {
    readonly constraint: Room_ManagementMode_Constraint;
    readonly update_columns?: ReadonlyArray<Room_ManagementMode_Update_Column>;
    readonly where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ManagementMode". */
export type Room_ManagementMode_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ManagementMode */
export type Room_ManagementMode_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "room.ManagementMode" */
export enum Room_ManagementMode_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "room.ManagementMode" */
export type Room_ManagementMode_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "room.ManagementMode" */
export enum Room_ManagementMode_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "room.PersonRole" */
export type Room_PersonRole = {
    readonly __typename?: "room_PersonRole";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "room.PersonRole" */
export type Room_PersonRole_Aggregate = {
    readonly __typename?: "room_PersonRole_aggregate";
    readonly aggregate?: Maybe<Room_PersonRole_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_PersonRole>;
};

/** aggregate fields of "room.PersonRole" */
export type Room_PersonRole_Aggregate_Fields = {
    readonly __typename?: "room_PersonRole_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_PersonRole_Max_Fields>;
    readonly min?: Maybe<Room_PersonRole_Min_Fields>;
};

/** aggregate fields of "room.PersonRole" */
export type Room_PersonRole_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_PersonRole_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.PersonRole". All fields are combined with a logical 'AND'. */
export type Room_PersonRole_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_PersonRole_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_PersonRole_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_PersonRole_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.PersonRole" */
export enum Room_PersonRole_Constraint {
    /** unique or primary key constraint */
    PersonRolePkey = "PersonRole_pkey",
}

export enum Room_PersonRole_Enum {
    /** User has control over the room. */
    Admin = "ADMIN",
    /** User can participate in the room. */
    Participant = "PARTICIPANT",
}

/** Boolean expression to compare columns of type "room_PersonRole_enum". All fields are combined with logical 'AND'. */
export type Room_PersonRole_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Room_PersonRole_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Room_PersonRole_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Room_PersonRole_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Room_PersonRole_Enum>>;
};

/** input type for inserting data into table "room.PersonRole" */
export type Room_PersonRole_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Room_PersonRole_Max_Fields = {
    readonly __typename?: "room_PersonRole_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Room_PersonRole_Min_Fields = {
    readonly __typename?: "room_PersonRole_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "room.PersonRole" */
export type Room_PersonRole_Mutation_Response = {
    readonly __typename?: "room_PersonRole_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_PersonRole>;
};

/** input type for inserting object relation for remote table "room.PersonRole" */
export type Room_PersonRole_Obj_Rel_Insert_Input = {
    readonly data: Room_PersonRole_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_PersonRole_On_Conflict>;
};

/** on_conflict condition type for table "room.PersonRole" */
export type Room_PersonRole_On_Conflict = {
    readonly constraint: Room_PersonRole_Constraint;
    readonly update_columns?: ReadonlyArray<Room_PersonRole_Update_Column>;
    readonly where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

/** Ordering options when selecting data from "room.PersonRole". */
export type Room_PersonRole_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_PersonRole */
export type Room_PersonRole_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "room.PersonRole" */
export enum Room_PersonRole_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "room.PersonRole" */
export type Room_PersonRole_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "room.PersonRole" */
export enum Room_PersonRole_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "room.Room" */
export type Room_Room = {
    readonly __typename?: "room_Room";
    readonly backendName?: Maybe<Room_Backend_Enum>;
    readonly capacity?: Maybe<Scalars["Int"]>;
    /** An object relationship */
    readonly channelStack?: Maybe<Video_ChannelStack>;
    /** An array relationship */
    readonly channelStackCreateJobs: ReadonlyArray<Job_Queues_ChannelStackCreateJob>;
    /** An aggregate relationship */
    readonly channelStackCreateJobs_aggregate: Job_Queues_ChannelStackCreateJob_Aggregate;
    /** An object relationship */
    readonly chat?: Maybe<Chat_Chat>;
    readonly chatId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly chimeMeeting?: Maybe<Room_ChimeMeeting>;
    readonly colour: Scalars["String"];
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    /** An array relationship */
    readonly currentEvents: ReadonlyArray<Schedule_CurrentEvents>;
    /** An aggregate relationship */
    readonly currentEvents_aggregate: Schedule_CurrentEvents_Aggregate;
    /** An array relationship */
    readonly events: ReadonlyArray<Schedule_Event>;
    /** An aggregate relationship */
    readonly events_aggregate: Schedule_Event_Aggregate;
    readonly id: Scalars["uuid"];
    readonly isProgramRoom?: Maybe<Scalars["Boolean"]>;
    /** A computed field, executes function "room.IsStreamingProgramRoom" */
    readonly isStreamingProgramRoom?: Maybe<Scalars["Boolean"]>;
    /** An object relationship */
    readonly item?: Maybe<Content_Item>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly livestreamDuration?: Maybe<Room_LivestreamDurations>;
    /** An object relationship */
    readonly managementMode: Room_ManagementMode;
    readonly managementModeName: Room_ManagementMode_Enum;
    readonly name: Scalars["String"];
    /** An array relationship */
    readonly presenceCounts: ReadonlyArray<Analytics_RoomPresence>;
    /** An aggregate relationship */
    readonly presenceCounts_aggregate: Analytics_RoomPresence_Aggregate;
    readonly priority: Scalars["Int"];
    readonly publicVonageSessionId?: Maybe<Scalars["String"]>;
    /** An array relationship */
    readonly roomMemberships: ReadonlyArray<Room_RoomMembership>;
    /** An aggregate relationship */
    readonly roomMemberships_aggregate: Room_RoomMembership_Aggregate;
    /** An object relationship */
    readonly rtmpInput?: Maybe<Video_RoomRtmpInput>;
    /** An object relationship */
    readonly rtmpOutput?: Maybe<Video_RoomRtmpOutput>;
    /** An array relationship */
    readonly shuffleRooms: ReadonlyArray<Room_ShuffleRoom>;
    /** An aggregate relationship */
    readonly shuffleRooms_aggregate: Room_ShuffleRoom_Aggregate;
    /** An array relationship */
    readonly stats: ReadonlyArray<Analytics_RoomStats>;
    /** An aggregate relationship */
    readonly stats_aggregate: Analytics_RoomStats_Aggregate;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at: Scalars["timestamptz"];
    /** An array relationship */
    readonly vonageParticipantStreams: ReadonlyArray<Video_VonageParticipantStream>;
    /** An aggregate relationship */
    readonly vonageParticipantStreams_aggregate: Video_VonageParticipantStream_Aggregate;
    /** An array relationship */
    readonly vonageRecordings: ReadonlyArray<Video_VonageRoomRecording>;
    /** An aggregate relationship */
    readonly vonageRecordings_aggregate: Video_VonageRoomRecording_Aggregate;
    /** An object relationship */
    readonly vonageSessionLayout?: Maybe<Video_VonageSessionLayout>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomChannelStackCreateJobsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomChannelStackCreateJobs_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomCurrentEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomCurrentEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomPresenceCountsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomPresenceCounts_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomRoomMembershipsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomRoomMemberships_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomShuffleRoomsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomShuffleRooms_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomVonageParticipantStreamsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomVonageParticipantStreams_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomVonageRecordingsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** columns and relationships of "room.Room" */
export type Room_RoomVonageRecordings_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** columns and relationships of "room.RoomGroupMembership" */
export type Room_RoomGroupMembership = {
    readonly __typename?: "room_RoomGroupMembership";
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly group: Registrant_Group;
    readonly groupId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly room: Room_Room;
    readonly roomId: Scalars["uuid"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Aggregate = {
    readonly __typename?: "room_RoomGroupMembership_aggregate";
    readonly aggregate?: Maybe<Room_RoomGroupMembership_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_RoomGroupMembership>;
};

/** aggregate fields of "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Aggregate_Fields = {
    readonly __typename?: "room_RoomGroupMembership_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_RoomGroupMembership_Max_Fields>;
    readonly min?: Maybe<Room_RoomGroupMembership_Min_Fields>;
};

/** aggregate fields of "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.RoomGroupMembership". All fields are combined with a logical 'AND'. */
export type Room_RoomGroupMembership_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly group?: InputMaybe<Registrant_Group_Bool_Exp>;
    readonly groupId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.RoomGroupMembership" */
export enum Room_RoomGroupMembership_Constraint {
    /** unique or primary key constraint */
    RoomGroupMembershipPkey = "RoomGroupMembership_pkey",
    /** unique or primary key constraint */
    RoomGroupMembershipRoomIdGroupIdKey = "RoomGroupMembership_roomId_groupId_key",
}

/** input type for inserting data into table "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly group?: InputMaybe<Registrant_Group_Obj_Rel_Insert_Input>;
    readonly groupId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_RoomGroupMembership_Max_Fields = {
    readonly __typename?: "room_RoomGroupMembership_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly groupId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Room_RoomGroupMembership_Min_Fields = {
    readonly __typename?: "room_RoomGroupMembership_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly groupId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Mutation_Response = {
    readonly __typename?: "room_RoomGroupMembership_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_RoomGroupMembership>;
};

/** on_conflict condition type for table "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_On_Conflict = {
    readonly constraint: Room_RoomGroupMembership_Constraint;
    readonly update_columns?: ReadonlyArray<Room_RoomGroupMembership_Update_Column>;
    readonly where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

/** Ordering options when selecting data from "room.RoomGroupMembership". */
export type Room_RoomGroupMembership_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly group?: InputMaybe<Registrant_Group_Order_By>;
    readonly groupId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_RoomGroupMembership */
export type Room_RoomGroupMembership_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "room.RoomGroupMembership" */
export enum Room_RoomGroupMembership_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    GroupId = "groupId",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "room.RoomGroupMembership" */
export type Room_RoomGroupMembership_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly groupId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "room.RoomGroupMembership" */
export enum Room_RoomGroupMembership_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    GroupId = "groupId",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** columns and relationships of "room.RoomMembership" */
export type Room_RoomMembership = {
    readonly __typename?: "room_RoomMembership";
    readonly createdAt: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly personRole: Room_PersonRole;
    readonly personRoleName: Room_PersonRole_Enum;
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    /** An object relationship */
    readonly room: Room_Room;
    readonly roomId: Scalars["uuid"];
    readonly updatedAt: Scalars["timestamptz"];
};

/** aggregated selection of "room.RoomMembership" */
export type Room_RoomMembership_Aggregate = {
    readonly __typename?: "room_RoomMembership_aggregate";
    readonly aggregate?: Maybe<Room_RoomMembership_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_RoomMembership>;
};

/** aggregate fields of "room.RoomMembership" */
export type Room_RoomMembership_Aggregate_Fields = {
    readonly __typename?: "room_RoomMembership_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_RoomMembership_Max_Fields>;
    readonly min?: Maybe<Room_RoomMembership_Min_Fields>;
};

/** aggregate fields of "room.RoomMembership" */
export type Room_RoomMembership_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_RoomMembership_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.RoomMembership" */
export type Room_RoomMembership_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Room_RoomMembership_Max_Order_By>;
    readonly min?: InputMaybe<Room_RoomMembership_Min_Order_By>;
};

/** input type for inserting array relation for remote table "room.RoomMembership" */
export type Room_RoomMembership_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Room_RoomMembership_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_RoomMembership_On_Conflict>;
};

/** Boolean expression to filter rows from the table "room.RoomMembership". All fields are combined with a logical 'AND'. */
export type Room_RoomMembership_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_RoomMembership_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_RoomMembership_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_RoomMembership_Bool_Exp>>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly personRole?: InputMaybe<Room_PersonRole_Bool_Exp>;
    readonly personRoleName?: InputMaybe<Room_PersonRole_Enum_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.RoomMembership" */
export enum Room_RoomMembership_Constraint {
    /** unique or primary key constraint */
    RoomPersonPkey = "RoomPerson_pkey",
    /** unique or primary key constraint */
    RoomPersonRegistrantIdRoomIdKey = "RoomPerson_registrantId_roomId_key",
}

/** input type for inserting data into table "room.RoomMembership" */
export type Room_RoomMembership_Insert_Input = {
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly personRole?: InputMaybe<Room_PersonRole_Obj_Rel_Insert_Input>;
    readonly personRoleName?: InputMaybe<Room_PersonRole_Enum>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_RoomMembership_Max_Fields = {
    readonly __typename?: "room_RoomMembership_max_fields";
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "room.RoomMembership" */
export type Room_RoomMembership_Max_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_RoomMembership_Min_Fields = {
    readonly __typename?: "room_RoomMembership_min_fields";
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "room.RoomMembership" */
export type Room_RoomMembership_Min_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.RoomMembership" */
export type Room_RoomMembership_Mutation_Response = {
    readonly __typename?: "room_RoomMembership_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_RoomMembership>;
};

/** on_conflict condition type for table "room.RoomMembership" */
export type Room_RoomMembership_On_Conflict = {
    readonly constraint: Room_RoomMembership_Constraint;
    readonly update_columns?: ReadonlyArray<Room_RoomMembership_Update_Column>;
    readonly where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

/** Ordering options when selecting data from "room.RoomMembership". */
export type Room_RoomMembership_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly personRole?: InputMaybe<Room_PersonRole_Order_By>;
    readonly personRoleName?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_RoomMembership */
export type Room_RoomMembership_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "room.RoomMembership" */
export enum Room_RoomMembership_Select_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    PersonRoleName = "personRoleName",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "room.RoomMembership" */
export type Room_RoomMembership_Set_Input = {
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly personRoleName?: InputMaybe<Room_PersonRole_Enum>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "room.RoomMembership" */
export enum Room_RoomMembership_Update_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    PersonRoleName = "personRoleName",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** aggregated selection of "room.Room" */
export type Room_Room_Aggregate = {
    readonly __typename?: "room_Room_aggregate";
    readonly aggregate?: Maybe<Room_Room_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_Room>;
};

/** aggregate fields of "room.Room" */
export type Room_Room_Aggregate_Fields = {
    readonly __typename?: "room_Room_aggregate_fields";
    readonly avg?: Maybe<Room_Room_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_Room_Max_Fields>;
    readonly min?: Maybe<Room_Room_Min_Fields>;
    readonly stddev?: Maybe<Room_Room_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Room_Room_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Room_Room_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Room_Room_Sum_Fields>;
    readonly var_pop?: Maybe<Room_Room_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Room_Room_Var_Samp_Fields>;
    readonly variance?: Maybe<Room_Room_Variance_Fields>;
};

/** aggregate fields of "room.Room" */
export type Room_Room_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.Room" */
export type Room_Room_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Room_Room_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Room_Room_Max_Order_By>;
    readonly min?: InputMaybe<Room_Room_Min_Order_By>;
    readonly stddev?: InputMaybe<Room_Room_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Room_Room_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Room_Room_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Room_Room_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Room_Room_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Room_Room_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Room_Room_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.Room" */
export type Room_Room_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Room_Room_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_Room_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_Room_Avg_Fields = {
    readonly __typename?: "room_Room_avg_fields";
    readonly capacity?: Maybe<Scalars["Float"]>;
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "room.Room" */
export type Room_Room_Avg_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.Room". All fields are combined with a logical 'AND'. */
export type Room_Room_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_Room_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_Room_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_Room_Bool_Exp>>;
    readonly backendName?: InputMaybe<Room_Backend_Enum_Comparison_Exp>;
    readonly capacity?: InputMaybe<Int_Comparison_Exp>;
    readonly channelStack?: InputMaybe<Video_ChannelStack_Bool_Exp>;
    readonly channelStackCreateJobs?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
    readonly chat?: InputMaybe<Chat_Chat_Bool_Exp>;
    readonly chatId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly chimeMeeting?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
    readonly colour?: InputMaybe<String_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly currentEvents?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
    readonly events?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly isProgramRoom?: InputMaybe<Boolean_Comparison_Exp>;
    readonly isStreamingProgramRoom?: InputMaybe<Boolean_Comparison_Exp>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly livestreamDuration?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
    readonly managementMode?: InputMaybe<Room_ManagementMode_Bool_Exp>;
    readonly managementModeName?: InputMaybe<Room_ManagementMode_Enum_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly presenceCounts?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
    readonly priority?: InputMaybe<Int_Comparison_Exp>;
    readonly publicVonageSessionId?: InputMaybe<String_Comparison_Exp>;
    readonly roomMemberships?: InputMaybe<Room_RoomMembership_Bool_Exp>;
    readonly rtmpInput?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
    readonly rtmpOutput?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
    readonly shuffleRooms?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
    readonly stats?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly vonageParticipantStreams?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
    readonly vonageRecordings?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
    readonly vonageSessionLayout?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

/** unique or primary key constraints on table "room.Room" */
export enum Room_Room_Constraint {
    /** unique or primary key constraint */
    RoomChatIdKey = "Room_chatId_key",
    /** unique or primary key constraint */
    RoomItemIdKey = "Room_itemId_key",
    /** unique or primary key constraint */
    RoomPkey = "Room_pkey",
}

/** input type for incrementing numeric columns in table "room.Room" */
export type Room_Room_Inc_Input = {
    readonly capacity?: InputMaybe<Scalars["Int"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "room.Room" */
export type Room_Room_Insert_Input = {
    readonly backendName?: InputMaybe<Room_Backend_Enum>;
    readonly capacity?: InputMaybe<Scalars["Int"]>;
    readonly channelStack?: InputMaybe<Video_ChannelStack_Obj_Rel_Insert_Input>;
    readonly channelStackCreateJobs?: InputMaybe<Job_Queues_ChannelStackCreateJob_Arr_Rel_Insert_Input>;
    readonly chat?: InputMaybe<Chat_Chat_Obj_Rel_Insert_Input>;
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly chimeMeeting?: InputMaybe<Room_ChimeMeeting_Obj_Rel_Insert_Input>;
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly currentEvents?: InputMaybe<Schedule_CurrentEvents_Arr_Rel_Insert_Input>;
    readonly events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly livestreamDuration?: InputMaybe<Room_LivestreamDurations_Obj_Rel_Insert_Input>;
    readonly managementMode?: InputMaybe<Room_ManagementMode_Obj_Rel_Insert_Input>;
    readonly managementModeName?: InputMaybe<Room_ManagementMode_Enum>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly presenceCounts?: InputMaybe<Analytics_RoomPresence_Arr_Rel_Insert_Input>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly publicVonageSessionId?: InputMaybe<Scalars["String"]>;
    readonly roomMemberships?: InputMaybe<Room_RoomMembership_Arr_Rel_Insert_Input>;
    readonly rtmpInput?: InputMaybe<Video_RoomRtmpInput_Obj_Rel_Insert_Input>;
    readonly rtmpOutput?: InputMaybe<Video_RoomRtmpOutput_Obj_Rel_Insert_Input>;
    readonly shuffleRooms?: InputMaybe<Room_ShuffleRoom_Arr_Rel_Insert_Input>;
    readonly stats?: InputMaybe<Analytics_RoomStats_Arr_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly vonageParticipantStreams?: InputMaybe<Video_VonageParticipantStream_Arr_Rel_Insert_Input>;
    readonly vonageRecordings?: InputMaybe<Video_VonageRoomRecording_Arr_Rel_Insert_Input>;
    readonly vonageSessionLayout?: InputMaybe<Video_VonageSessionLayout_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Room_Room_Max_Fields = {
    readonly __typename?: "room_Room_max_fields";
    readonly capacity?: Maybe<Scalars["Int"]>;
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly colour?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly publicVonageSessionId?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "room.Room" */
export type Room_Room_Max_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly chatId?: InputMaybe<Order_By>;
    readonly colour?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly publicVonageSessionId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_Room_Min_Fields = {
    readonly __typename?: "room_Room_min_fields";
    readonly capacity?: Maybe<Scalars["Int"]>;
    readonly chatId?: Maybe<Scalars["uuid"]>;
    readonly colour?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly publicVonageSessionId?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "room.Room" */
export type Room_Room_Min_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly chatId?: InputMaybe<Order_By>;
    readonly colour?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly publicVonageSessionId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.Room" */
export type Room_Room_Mutation_Response = {
    readonly __typename?: "room_Room_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_Room>;
};

/** input type for inserting object relation for remote table "room.Room" */
export type Room_Room_Obj_Rel_Insert_Input = {
    readonly data: Room_Room_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_Room_On_Conflict>;
};

/** on_conflict condition type for table "room.Room" */
export type Room_Room_On_Conflict = {
    readonly constraint: Room_Room_Constraint;
    readonly update_columns?: ReadonlyArray<Room_Room_Update_Column>;
    readonly where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** Ordering options when selecting data from "room.Room". */
export type Room_Room_Order_By = {
    readonly backendName?: InputMaybe<Order_By>;
    readonly capacity?: InputMaybe<Order_By>;
    readonly channelStack?: InputMaybe<Video_ChannelStack_Order_By>;
    readonly channelStackCreateJobs_aggregate?: InputMaybe<Job_Queues_ChannelStackCreateJob_Aggregate_Order_By>;
    readonly chat?: InputMaybe<Chat_Chat_Order_By>;
    readonly chatId?: InputMaybe<Order_By>;
    readonly chimeMeeting?: InputMaybe<Room_ChimeMeeting_Order_By>;
    readonly colour?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly currentEvents_aggregate?: InputMaybe<Schedule_CurrentEvents_Aggregate_Order_By>;
    readonly events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly isProgramRoom?: InputMaybe<Order_By>;
    readonly isStreamingProgramRoom?: InputMaybe<Order_By>;
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly livestreamDuration?: InputMaybe<Room_LivestreamDurations_Order_By>;
    readonly managementMode?: InputMaybe<Room_ManagementMode_Order_By>;
    readonly managementModeName?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly presenceCounts_aggregate?: InputMaybe<Analytics_RoomPresence_Aggregate_Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly publicVonageSessionId?: InputMaybe<Order_By>;
    readonly roomMemberships_aggregate?: InputMaybe<Room_RoomMembership_Aggregate_Order_By>;
    readonly rtmpInput?: InputMaybe<Video_RoomRtmpInput_Order_By>;
    readonly rtmpOutput?: InputMaybe<Video_RoomRtmpOutput_Order_By>;
    readonly shuffleRooms_aggregate?: InputMaybe<Room_ShuffleRoom_Aggregate_Order_By>;
    readonly stats_aggregate?: InputMaybe<Analytics_RoomStats_Aggregate_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly vonageParticipantStreams_aggregate?: InputMaybe<Video_VonageParticipantStream_Aggregate_Order_By>;
    readonly vonageRecordings_aggregate?: InputMaybe<Video_VonageRoomRecording_Aggregate_Order_By>;
    readonly vonageSessionLayout?: InputMaybe<Video_VonageSessionLayout_Order_By>;
};

/** primary key columns input for table: room_Room */
export type Room_Room_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "room.Room" */
export enum Room_Room_Select_Column {
    /** column name */
    BackendName = "backendName",
    /** column name */
    Capacity = "capacity",
    /** column name */
    ChatId = "chatId",
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ManagementModeName = "managementModeName",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    PublicVonageSessionId = "publicVonageSessionId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "room.Room" */
export type Room_Room_Set_Input = {
    readonly backendName?: InputMaybe<Room_Backend_Enum>;
    readonly capacity?: InputMaybe<Scalars["Int"]>;
    readonly chatId?: InputMaybe<Scalars["uuid"]>;
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly managementModeName?: InputMaybe<Room_ManagementMode_Enum>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly publicVonageSessionId?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Room_Room_Stddev_Fields = {
    readonly __typename?: "room_Room_stddev_fields";
    readonly capacity?: Maybe<Scalars["Float"]>;
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "room.Room" */
export type Room_Room_Stddev_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_Room_Stddev_Pop_Fields = {
    readonly __typename?: "room_Room_stddev_pop_fields";
    readonly capacity?: Maybe<Scalars["Float"]>;
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "room.Room" */
export type Room_Room_Stddev_Pop_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_Room_Stddev_Samp_Fields = {
    readonly __typename?: "room_Room_stddev_samp_fields";
    readonly capacity?: Maybe<Scalars["Float"]>;
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "room.Room" */
export type Room_Room_Stddev_Samp_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_Room_Sum_Fields = {
    readonly __typename?: "room_Room_sum_fields";
    readonly capacity?: Maybe<Scalars["Int"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "room.Room" */
export type Room_Room_Sum_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** update columns of table "room.Room" */
export enum Room_Room_Update_Column {
    /** column name */
    BackendName = "backendName",
    /** column name */
    Capacity = "capacity",
    /** column name */
    ChatId = "chatId",
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ManagementModeName = "managementModeName",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    PublicVonageSessionId = "publicVonageSessionId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Room_Room_Var_Pop_Fields = {
    readonly __typename?: "room_Room_var_pop_fields";
    readonly capacity?: Maybe<Scalars["Float"]>;
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "room.Room" */
export type Room_Room_Var_Pop_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_Room_Var_Samp_Fields = {
    readonly __typename?: "room_Room_var_samp_fields";
    readonly capacity?: Maybe<Scalars["Float"]>;
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "room.Room" */
export type Room_Room_Var_Samp_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_Room_Variance_Fields = {
    readonly __typename?: "room_Room_variance_fields";
    readonly capacity?: Maybe<Scalars["Float"]>;
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "room.Room" */
export type Room_Room_Variance_Order_By = {
    readonly capacity?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm = {
    readonly __typename?: "room_ShuffleAlgorithm";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate = {
    readonly __typename?: "room_ShuffleAlgorithm_aggregate";
    readonly aggregate?: Maybe<Room_ShuffleAlgorithm_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_ShuffleAlgorithm>;
};

/** aggregate fields of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate_Fields = {
    readonly __typename?: "room_ShuffleAlgorithm_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_ShuffleAlgorithm_Max_Fields>;
    readonly min?: Maybe<Room_ShuffleAlgorithm_Min_Fields>;
};

/** aggregate fields of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "room.ShuffleAlgorithm". All fields are combined with a logical 'AND'. */
export type Room_ShuffleAlgorithm_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShuffleAlgorithm" */
export enum Room_ShuffleAlgorithm_Constraint {
    /** unique or primary key constraint */
    ShuffleAlgorithmPkey = "ShuffleAlgorithm_pkey",
}

export enum Room_ShuffleAlgorithm_Enum {
    /** First-come, first-served with auto-created rooms. */
    Fcfs = "fcfs",
    /** First-come, first-served with a fixed set of (manually created) rooms. Limits max participants. */
    FcfsFixedRooms = "fcfs_fixed_rooms",
    /** No automation. Rooms and allocations controlled manually. */
    None = "none",
}

/** Boolean expression to compare columns of type "room_ShuffleAlgorithm_enum". All fields are combined with logical 'AND'. */
export type Room_ShuffleAlgorithm_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Room_ShuffleAlgorithm_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Room_ShuffleAlgorithm_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Enum>>;
};

/** input type for inserting data into table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Room_ShuffleAlgorithm_Max_Fields = {
    readonly __typename?: "room_ShuffleAlgorithm_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Room_ShuffleAlgorithm_Min_Fields = {
    readonly __typename?: "room_ShuffleAlgorithm_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Mutation_Response = {
    readonly __typename?: "room_ShuffleAlgorithm_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_ShuffleAlgorithm>;
};

/** on_conflict condition type for table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_On_Conflict = {
    readonly constraint: Room_ShuffleAlgorithm_Constraint;
    readonly update_columns?: ReadonlyArray<Room_ShuffleAlgorithm_Update_Column>;
    readonly where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ShuffleAlgorithm". */
export type Room_ShuffleAlgorithm_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ShuffleAlgorithm */
export type Room_ShuffleAlgorithm_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "room.ShuffleAlgorithm" */
export enum Room_ShuffleAlgorithm_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "room.ShuffleAlgorithm" */
export enum Room_ShuffleAlgorithm_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriod = {
    readonly __typename?: "room_ShufflePeriod";
    readonly algorithm: Room_ShuffleAlgorithm_Enum;
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    readonly endAt: Scalars["timestamptz"];
    /** An array relationship */
    readonly events: ReadonlyArray<Schedule_Event>;
    /** An aggregate relationship */
    readonly events_aggregate: Schedule_Event_Aggregate;
    readonly id: Scalars["uuid"];
    readonly maxRegistrantsPerRoom: Scalars["Int"];
    readonly name: Scalars["String"];
    /** An object relationship */
    readonly organiser: Registrant_Registrant;
    readonly organiserId: Scalars["uuid"];
    /** An array relationship */
    readonly queueEntries: ReadonlyArray<Room_ShuffleQueueEntry>;
    /** An aggregate relationship */
    readonly queueEntries_aggregate: Room_ShuffleQueueEntry_Aggregate;
    readonly roomDurationMinutes: Scalars["Int"];
    /** An array relationship */
    readonly shuffleRooms: ReadonlyArray<Room_ShuffleRoom>;
    /** An aggregate relationship */
    readonly shuffleRooms_aggregate: Room_ShuffleRoom_Aggregate;
    readonly startAt: Scalars["timestamptz"];
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly targetRegistrantsPerRoom: Scalars["Int"];
    readonly updated_at: Scalars["timestamptz"];
    readonly waitRoomMaxDurationSeconds: Scalars["Int"];
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodQueueEntriesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodQueueEntries_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodShuffleRoomsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodShuffleRooms_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** aggregated selection of "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate = {
    readonly __typename?: "room_ShufflePeriod_aggregate";
    readonly aggregate?: Maybe<Room_ShufflePeriod_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_ShufflePeriod>;
};

/** aggregate fields of "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate_Fields = {
    readonly __typename?: "room_ShufflePeriod_aggregate_fields";
    readonly avg?: Maybe<Room_ShufflePeriod_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_ShufflePeriod_Max_Fields>;
    readonly min?: Maybe<Room_ShufflePeriod_Min_Fields>;
    readonly stddev?: Maybe<Room_ShufflePeriod_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Room_ShufflePeriod_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Room_ShufflePeriod_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Room_ShufflePeriod_Sum_Fields>;
    readonly var_pop?: Maybe<Room_ShufflePeriod_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Room_ShufflePeriod_Var_Samp_Fields>;
    readonly variance?: Maybe<Room_ShufflePeriod_Variance_Fields>;
};

/** aggregate fields of "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Room_ShufflePeriod_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Room_ShufflePeriod_Max_Order_By>;
    readonly min?: InputMaybe<Room_ShufflePeriod_Min_Order_By>;
    readonly stddev?: InputMaybe<Room_ShufflePeriod_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Room_ShufflePeriod_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Room_ShufflePeriod_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Room_ShufflePeriod_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Room_ShufflePeriod_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Room_ShufflePeriod_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Room_ShufflePeriod_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Room_ShufflePeriod_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_ShufflePeriod_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_ShufflePeriod_Avg_Fields = {
    readonly __typename?: "room_ShufflePeriod_avg_fields";
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Float"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Avg_Order_By = {
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.ShufflePeriod". All fields are combined with a logical 'AND'. */
export type Room_ShufflePeriod_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Bool_Exp>>;
    readonly algorithm?: InputMaybe<Room_ShuffleAlgorithm_Enum_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly endAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly events?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly maxRegistrantsPerRoom?: InputMaybe<Int_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly organiser?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly organiserId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly queueEntries?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
    readonly roomDurationMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly shuffleRooms?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
    readonly startAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Int_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShufflePeriod" */
export enum Room_ShufflePeriod_Constraint {
    /** unique or primary key constraint */
    ShufflePeriodPkey = "ShufflePeriod_pkey",
}

/** input type for incrementing numeric columns in table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Inc_Input = {
    readonly maxRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    readonly roomDurationMinutes?: InputMaybe<Scalars["Int"]>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Insert_Input = {
    readonly algorithm?: InputMaybe<Room_ShuffleAlgorithm_Enum>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly endAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly maxRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly organiser?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly organiserId?: InputMaybe<Scalars["uuid"]>;
    readonly queueEntries?: InputMaybe<Room_ShuffleQueueEntry_Arr_Rel_Insert_Input>;
    readonly roomDurationMinutes?: InputMaybe<Scalars["Int"]>;
    readonly shuffleRooms?: InputMaybe<Room_ShuffleRoom_Arr_Rel_Insert_Input>;
    readonly startAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Scalars["Int"]>;
};

/** aggregate max on columns */
export type Room_ShufflePeriod_Max_Fields = {
    readonly __typename?: "room_ShufflePeriod_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly endAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly organiserId?: Maybe<Scalars["uuid"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Int"]>;
    readonly startAt?: Maybe<Scalars["timestamptz"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly endAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly organiserId?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly startAt?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShufflePeriod_Min_Fields = {
    readonly __typename?: "room_ShufflePeriod_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly endAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly organiserId?: Maybe<Scalars["uuid"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Int"]>;
    readonly startAt?: Maybe<Scalars["timestamptz"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly endAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly organiserId?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly startAt?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Mutation_Response = {
    readonly __typename?: "room_ShufflePeriod_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_ShufflePeriod>;
};

/** input type for inserting object relation for remote table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Obj_Rel_Insert_Input = {
    readonly data: Room_ShufflePeriod_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_ShufflePeriod_On_Conflict>;
};

/** on_conflict condition type for table "room.ShufflePeriod" */
export type Room_ShufflePeriod_On_Conflict = {
    readonly constraint: Room_ShufflePeriod_Constraint;
    readonly update_columns?: ReadonlyArray<Room_ShufflePeriod_Update_Column>;
    readonly where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ShufflePeriod". */
export type Room_ShufflePeriod_Order_By = {
    readonly algorithm?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly endAt?: InputMaybe<Order_By>;
    readonly events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly organiser?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly organiserId?: InputMaybe<Order_By>;
    readonly queueEntries_aggregate?: InputMaybe<Room_ShuffleQueueEntry_Aggregate_Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly shuffleRooms_aggregate?: InputMaybe<Room_ShuffleRoom_Aggregate_Order_By>;
    readonly startAt?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ShufflePeriod */
export type Room_ShufflePeriod_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "room.ShufflePeriod" */
export enum Room_ShufflePeriod_Select_Column {
    /** column name */
    Algorithm = "algorithm",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EndAt = "endAt",
    /** column name */
    Id = "id",
    /** column name */
    MaxRegistrantsPerRoom = "maxRegistrantsPerRoom",
    /** column name */
    Name = "name",
    /** column name */
    OrganiserId = "organiserId",
    /** column name */
    RoomDurationMinutes = "roomDurationMinutes",
    /** column name */
    StartAt = "startAt",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TargetRegistrantsPerRoom = "targetRegistrantsPerRoom",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    WaitRoomMaxDurationSeconds = "waitRoomMaxDurationSeconds",
}

/** input type for updating data in table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Set_Input = {
    readonly algorithm?: InputMaybe<Room_ShuffleAlgorithm_Enum>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly endAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly maxRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly organiserId?: InputMaybe<Scalars["uuid"]>;
    readonly roomDurationMinutes?: InputMaybe<Scalars["Int"]>;
    readonly startAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Scalars["Int"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Scalars["Int"]>;
};

/** aggregate stddev on columns */
export type Room_ShufflePeriod_Stddev_Fields = {
    readonly __typename?: "room_ShufflePeriod_stddev_fields";
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Float"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Stddev_Order_By = {
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_ShufflePeriod_Stddev_Pop_Fields = {
    readonly __typename?: "room_ShufflePeriod_stddev_pop_fields";
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Float"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Stddev_Pop_Order_By = {
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_ShufflePeriod_Stddev_Samp_Fields = {
    readonly __typename?: "room_ShufflePeriod_stddev_samp_fields";
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Float"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Stddev_Samp_Order_By = {
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_ShufflePeriod_Sum_Fields = {
    readonly __typename?: "room_ShufflePeriod_sum_fields";
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Int"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Int"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Sum_Order_By = {
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** update columns of table "room.ShufflePeriod" */
export enum Room_ShufflePeriod_Update_Column {
    /** column name */
    Algorithm = "algorithm",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EndAt = "endAt",
    /** column name */
    Id = "id",
    /** column name */
    MaxRegistrantsPerRoom = "maxRegistrantsPerRoom",
    /** column name */
    Name = "name",
    /** column name */
    OrganiserId = "organiserId",
    /** column name */
    RoomDurationMinutes = "roomDurationMinutes",
    /** column name */
    StartAt = "startAt",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TargetRegistrantsPerRoom = "targetRegistrantsPerRoom",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    WaitRoomMaxDurationSeconds = "waitRoomMaxDurationSeconds",
}

/** aggregate var_pop on columns */
export type Room_ShufflePeriod_Var_Pop_Fields = {
    readonly __typename?: "room_ShufflePeriod_var_pop_fields";
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Float"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Var_Pop_Order_By = {
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_ShufflePeriod_Var_Samp_Fields = {
    readonly __typename?: "room_ShufflePeriod_var_samp_fields";
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Float"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Var_Samp_Order_By = {
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_ShufflePeriod_Variance_Fields = {
    readonly __typename?: "room_ShufflePeriod_variance_fields";
    readonly maxRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly roomDurationMinutes?: Maybe<Scalars["Float"]>;
    readonly targetRegistrantsPerRoom?: Maybe<Scalars["Float"]>;
    readonly waitRoomMaxDurationSeconds?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Variance_Order_By = {
    readonly maxRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly roomDurationMinutes?: InputMaybe<Order_By>;
    readonly targetRegistrantsPerRoom?: InputMaybe<Order_By>;
    readonly waitRoomMaxDurationSeconds?: InputMaybe<Order_By>;
};

/** columns and relationships of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry = {
    readonly __typename?: "room_ShuffleQueueEntry";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Int"]>;
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["bigint"];
    readonly isExpired: Scalars["Boolean"];
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    /** An object relationship */
    readonly shufflePeriod: Room_ShufflePeriod;
    readonly shufflePeriodId: Scalars["uuid"];
    /** An object relationship */
    readonly shuffleRoom?: Maybe<Room_ShuffleRoom>;
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate = {
    readonly __typename?: "room_ShuffleQueueEntry_aggregate";
    readonly aggregate?: Maybe<Room_ShuffleQueueEntry_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_ShuffleQueueEntry>;
};

/** aggregate fields of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_aggregate_fields";
    readonly avg?: Maybe<Room_ShuffleQueueEntry_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_ShuffleQueueEntry_Max_Fields>;
    readonly min?: Maybe<Room_ShuffleQueueEntry_Min_Fields>;
    readonly stddev?: Maybe<Room_ShuffleQueueEntry_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Room_ShuffleQueueEntry_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Room_ShuffleQueueEntry_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Room_ShuffleQueueEntry_Sum_Fields>;
    readonly var_pop?: Maybe<Room_ShuffleQueueEntry_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Room_ShuffleQueueEntry_Var_Samp_Fields>;
    readonly variance?: Maybe<Room_ShuffleQueueEntry_Variance_Fields>;
};

/** aggregate fields of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Room_ShuffleQueueEntry_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Room_ShuffleQueueEntry_Max_Order_By>;
    readonly min?: InputMaybe<Room_ShuffleQueueEntry_Min_Order_By>;
    readonly stddev?: InputMaybe<Room_ShuffleQueueEntry_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Room_ShuffleQueueEntry_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Room_ShuffleQueueEntry_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Room_ShuffleQueueEntry_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Room_ShuffleQueueEntry_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Room_ShuffleQueueEntry_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Room_ShuffleQueueEntry_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Room_ShuffleQueueEntry_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_ShuffleQueueEntry_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_ShuffleQueueEntry_Avg_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_avg_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Avg_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.ShuffleQueueEntry". All fields are combined with a logical 'AND'. */
export type Room_ShuffleQueueEntry_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Bool_Exp>>;
    readonly allocatedShuffleRoomId?: InputMaybe<Int_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Bigint_Comparison_Exp>;
    readonly isExpired?: InputMaybe<Boolean_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    readonly shufflePeriodId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly shuffleRoom?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShuffleQueueEntry" */
export enum Room_ShuffleQueueEntry_Constraint {
    /** unique or primary key constraint */
    ShuffleQueueEntryPkey = "ShuffleQueueEntry_pkey",
    /** unique or primary key constraint */
    RoomShuffleQueueEntryIsWaiting = "room_ShuffleQueueEntry_isWaiting",
}

/** input type for incrementing numeric columns in table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Inc_Input = {
    readonly allocatedShuffleRoomId?: InputMaybe<Scalars["Int"]>;
    readonly id?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Insert_Input = {
    readonly allocatedShuffleRoomId?: InputMaybe<Scalars["Int"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["bigint"]>;
    readonly isExpired?: InputMaybe<Scalars["Boolean"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
    readonly shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    readonly shuffleRoom?: InputMaybe<Room_ShuffleRoom_Obj_Rel_Insert_Input>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_ShuffleQueueEntry_Max_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_max_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Int"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["bigint"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Max_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShuffleQueueEntry_Min_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_min_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Int"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["bigint"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Min_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Mutation_Response = {
    readonly __typename?: "room_ShuffleQueueEntry_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_ShuffleQueueEntry>;
};

/** on_conflict condition type for table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_On_Conflict = {
    readonly constraint: Room_ShuffleQueueEntry_Constraint;
    readonly update_columns?: ReadonlyArray<Room_ShuffleQueueEntry_Update_Column>;
    readonly where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ShuffleQueueEntry". */
export type Room_ShuffleQueueEntry_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly isExpired?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly shuffleRoom?: InputMaybe<Room_ShuffleRoom_Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ShuffleQueueEntry */
export type Room_ShuffleQueueEntry_Pk_Columns_Input = {
    readonly id: Scalars["bigint"];
};

/** select columns of table "room.ShuffleQueueEntry" */
export enum Room_ShuffleQueueEntry_Select_Column {
    /** column name */
    AllocatedShuffleRoomId = "allocatedShuffleRoomId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    IsExpired = "isExpired",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Set_Input = {
    readonly allocatedShuffleRoomId?: InputMaybe<Scalars["Int"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["bigint"]>;
    readonly isExpired?: InputMaybe<Scalars["Boolean"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Room_ShuffleQueueEntry_Stddev_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_stddev_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Stddev_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_ShuffleQueueEntry_Stddev_Pop_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_stddev_pop_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Stddev_Pop_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_ShuffleQueueEntry_Stddev_Samp_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_stddev_samp_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Stddev_Samp_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_ShuffleQueueEntry_Sum_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_sum_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Int"]>;
    readonly id?: Maybe<Scalars["bigint"]>;
};

/** order by sum() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Sum_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** update columns of table "room.ShuffleQueueEntry" */
export enum Room_ShuffleQueueEntry_Update_Column {
    /** column name */
    AllocatedShuffleRoomId = "allocatedShuffleRoomId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    IsExpired = "isExpired",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Room_ShuffleQueueEntry_Var_Pop_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_var_pop_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Var_Pop_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_ShuffleQueueEntry_Var_Samp_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_var_samp_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Var_Samp_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_ShuffleQueueEntry_Variance_Fields = {
    readonly __typename?: "room_ShuffleQueueEntry_variance_fields";
    readonly allocatedShuffleRoomId?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Variance_Order_By = {
    readonly allocatedShuffleRoomId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoom = {
    readonly __typename?: "room_ShuffleRoom";
    /** An array relationship */
    readonly continuations: ReadonlyArray<Schedule_Continuation>;
    /** An aggregate relationship */
    readonly continuations_aggregate: Schedule_Continuation_Aggregate;
    readonly created_at: Scalars["timestamptz"];
    readonly durationMinutes: Scalars["Int"];
    readonly id: Scalars["bigint"];
    readonly isEnded: Scalars["Boolean"];
    /** An array relationship */
    readonly queueEntries: ReadonlyArray<Room_ShuffleQueueEntry>;
    /** An aggregate relationship */
    readonly queueEntries_aggregate: Room_ShuffleQueueEntry_Aggregate;
    readonly reshuffleUponEnd: Scalars["Boolean"];
    /** An object relationship */
    readonly room: Room_Room;
    readonly roomId: Scalars["uuid"];
    /** An object relationship */
    readonly shufflePeriod: Room_ShufflePeriod;
    readonly shufflePeriodId: Scalars["uuid"];
    readonly startedAt: Scalars["timestamptz"];
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomContinuationsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomContinuations_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomQueueEntriesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomQueueEntries_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** aggregated selection of "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate = {
    readonly __typename?: "room_ShuffleRoom_aggregate";
    readonly aggregate?: Maybe<Room_ShuffleRoom_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Room_ShuffleRoom>;
};

/** aggregate fields of "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate_Fields = {
    readonly __typename?: "room_ShuffleRoom_aggregate_fields";
    readonly avg?: Maybe<Room_ShuffleRoom_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Room_ShuffleRoom_Max_Fields>;
    readonly min?: Maybe<Room_ShuffleRoom_Min_Fields>;
    readonly stddev?: Maybe<Room_ShuffleRoom_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Room_ShuffleRoom_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Room_ShuffleRoom_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Room_ShuffleRoom_Sum_Fields>;
    readonly var_pop?: Maybe<Room_ShuffleRoom_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Room_ShuffleRoom_Var_Samp_Fields>;
    readonly variance?: Maybe<Room_ShuffleRoom_Variance_Fields>;
};

/** aggregate fields of "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Room_ShuffleRoom_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Room_ShuffleRoom_Max_Order_By>;
    readonly min?: InputMaybe<Room_ShuffleRoom_Min_Order_By>;
    readonly stddev?: InputMaybe<Room_ShuffleRoom_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Room_ShuffleRoom_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Room_ShuffleRoom_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Room_ShuffleRoom_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Room_ShuffleRoom_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Room_ShuffleRoom_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Room_ShuffleRoom_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Room_ShuffleRoom_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_ShuffleRoom_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_ShuffleRoom_Avg_Fields = {
    readonly __typename?: "room_ShuffleRoom_avg_fields";
    readonly durationMinutes?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Avg_Order_By = {
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.ShuffleRoom". All fields are combined with a logical 'AND'. */
export type Room_ShuffleRoom_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Bool_Exp>>;
    readonly _not?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Bool_Exp>>;
    readonly continuations?: InputMaybe<Schedule_Continuation_Bool_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly durationMinutes?: InputMaybe<Int_Comparison_Exp>;
    readonly id?: InputMaybe<Bigint_Comparison_Exp>;
    readonly isEnded?: InputMaybe<Boolean_Comparison_Exp>;
    readonly queueEntries?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
    readonly reshuffleUponEnd?: InputMaybe<Boolean_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    readonly shufflePeriodId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly startedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShuffleRoom" */
export enum Room_ShuffleRoom_Constraint {
    /** unique or primary key constraint */
    ShuffleRoomPkey = "ShuffleRoom_pkey",
}

/** input type for incrementing numeric columns in table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Inc_Input = {
    readonly durationMinutes?: InputMaybe<Scalars["Int"]>;
    readonly id?: InputMaybe<Scalars["bigint"]>;
};

/** input type for inserting data into table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Insert_Input = {
    readonly continuations?: InputMaybe<Schedule_Continuation_Arr_Rel_Insert_Input>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly durationMinutes?: InputMaybe<Scalars["Int"]>;
    readonly id?: InputMaybe<Scalars["bigint"]>;
    readonly isEnded?: InputMaybe<Scalars["Boolean"]>;
    readonly queueEntries?: InputMaybe<Room_ShuffleQueueEntry_Arr_Rel_Insert_Input>;
    readonly reshuffleUponEnd?: InputMaybe<Scalars["Boolean"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
    readonly shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    readonly startedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Room_ShuffleRoom_Max_Fields = {
    readonly __typename?: "room_ShuffleRoom_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly durationMinutes?: Maybe<Scalars["Int"]>;
    readonly id?: Maybe<Scalars["bigint"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly startedAt?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly startedAt?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShuffleRoom_Min_Fields = {
    readonly __typename?: "room_ShuffleRoom_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly durationMinutes?: Maybe<Scalars["Int"]>;
    readonly id?: Maybe<Scalars["bigint"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly startedAt?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly startedAt?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Mutation_Response = {
    readonly __typename?: "room_ShuffleRoom_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Room_ShuffleRoom>;
};

/** input type for inserting object relation for remote table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Obj_Rel_Insert_Input = {
    readonly data: Room_ShuffleRoom_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Room_ShuffleRoom_On_Conflict>;
};

/** on_conflict condition type for table "room.ShuffleRoom" */
export type Room_ShuffleRoom_On_Conflict = {
    readonly constraint: Room_ShuffleRoom_Constraint;
    readonly update_columns?: ReadonlyArray<Room_ShuffleRoom_Update_Column>;
    readonly where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

/** Ordering options when selecting data from "room.ShuffleRoom". */
export type Room_ShuffleRoom_Order_By = {
    readonly continuations_aggregate?: InputMaybe<Schedule_Continuation_Aggregate_Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly isEnded?: InputMaybe<Order_By>;
    readonly queueEntries_aggregate?: InputMaybe<Room_ShuffleQueueEntry_Aggregate_Order_By>;
    readonly reshuffleUponEnd?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly startedAt?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: room_ShuffleRoom */
export type Room_ShuffleRoom_Pk_Columns_Input = {
    readonly id: Scalars["bigint"];
};

/** select columns of table "room.ShuffleRoom" */
export enum Room_ShuffleRoom_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DurationMinutes = "durationMinutes",
    /** column name */
    Id = "id",
    /** column name */
    IsEnded = "isEnded",
    /** column name */
    ReshuffleUponEnd = "reshuffleUponEnd",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StartedAt = "startedAt",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly durationMinutes?: InputMaybe<Scalars["Int"]>;
    readonly id?: InputMaybe<Scalars["bigint"]>;
    readonly isEnded?: InputMaybe<Scalars["Boolean"]>;
    readonly reshuffleUponEnd?: InputMaybe<Scalars["Boolean"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    readonly startedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Room_ShuffleRoom_Stddev_Fields = {
    readonly __typename?: "room_ShuffleRoom_stddev_fields";
    readonly durationMinutes?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Stddev_Order_By = {
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_ShuffleRoom_Stddev_Pop_Fields = {
    readonly __typename?: "room_ShuffleRoom_stddev_pop_fields";
    readonly durationMinutes?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Stddev_Pop_Order_By = {
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_ShuffleRoom_Stddev_Samp_Fields = {
    readonly __typename?: "room_ShuffleRoom_stddev_samp_fields";
    readonly durationMinutes?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Stddev_Samp_Order_By = {
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_ShuffleRoom_Sum_Fields = {
    readonly __typename?: "room_ShuffleRoom_sum_fields";
    readonly durationMinutes?: Maybe<Scalars["Int"]>;
    readonly id?: Maybe<Scalars["bigint"]>;
};

/** order by sum() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Sum_Order_By = {
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** update columns of table "room.ShuffleRoom" */
export enum Room_ShuffleRoom_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    DurationMinutes = "durationMinutes",
    /** column name */
    Id = "id",
    /** column name */
    IsEnded = "isEnded",
    /** column name */
    ReshuffleUponEnd = "reshuffleUponEnd",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StartedAt = "startedAt",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Room_ShuffleRoom_Var_Pop_Fields = {
    readonly __typename?: "room_ShuffleRoom_var_pop_fields";
    readonly durationMinutes?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Var_Pop_Order_By = {
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_ShuffleRoom_Var_Samp_Fields = {
    readonly __typename?: "room_ShuffleRoom_var_samp_fields";
    readonly durationMinutes?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Var_Samp_Order_By = {
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_ShuffleRoom_Variance_Fields = {
    readonly __typename?: "room_ShuffleRoom_variance_fields";
    readonly durationMinutes?: Maybe<Scalars["Float"]>;
    readonly id?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Variance_Order_By = {
    readonly durationMinutes?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
};

/** A continuation from the end of an event or shuffle room to the next thing. Enables organisers to create a guided flow for attendees. It is possible to specify multiple continuations from the same point, giving attendees a choice of where to go. */
export type Schedule_Continuation = {
    readonly __typename?: "schedule_Continuation";
    readonly colour: Scalars["String"];
    readonly defaultFor: Scalars["String"];
    readonly description: Scalars["String"];
    /** An object relationship */
    readonly event?: Maybe<Schedule_Event>;
    readonly fromEvent?: Maybe<Scalars["uuid"]>;
    readonly fromShuffleQueue?: Maybe<Scalars["uuid"]>;
    readonly id: Scalars["uuid"];
    readonly isActiveChoice: Scalars["Boolean"];
    readonly priority: Scalars["Int"];
    /** An object relationship */
    readonly shufflePeriod?: Maybe<Room_ShufflePeriod>;
    readonly to: Scalars["jsonb"];
};

/** A continuation from the end of an event or shuffle room to the next thing. Enables organisers to create a guided flow for attendees. It is possible to specify multiple continuations from the same point, giving attendees a choice of where to go. */
export type Schedule_ContinuationToArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "schedule.Continuation" */
export type Schedule_Continuation_Aggregate = {
    readonly __typename?: "schedule_Continuation_aggregate";
    readonly aggregate?: Maybe<Schedule_Continuation_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Schedule_Continuation>;
};

/** aggregate fields of "schedule.Continuation" */
export type Schedule_Continuation_Aggregate_Fields = {
    readonly __typename?: "schedule_Continuation_aggregate_fields";
    readonly avg?: Maybe<Schedule_Continuation_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Schedule_Continuation_Max_Fields>;
    readonly min?: Maybe<Schedule_Continuation_Min_Fields>;
    readonly stddev?: Maybe<Schedule_Continuation_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Schedule_Continuation_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Schedule_Continuation_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Schedule_Continuation_Sum_Fields>;
    readonly var_pop?: Maybe<Schedule_Continuation_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Schedule_Continuation_Var_Samp_Fields>;
    readonly variance?: Maybe<Schedule_Continuation_Variance_Fields>;
};

/** aggregate fields of "schedule.Continuation" */
export type Schedule_Continuation_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Schedule_Continuation_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "schedule.Continuation" */
export type Schedule_Continuation_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Schedule_Continuation_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Schedule_Continuation_Max_Order_By>;
    readonly min?: InputMaybe<Schedule_Continuation_Min_Order_By>;
    readonly stddev?: InputMaybe<Schedule_Continuation_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Schedule_Continuation_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Schedule_Continuation_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Schedule_Continuation_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Schedule_Continuation_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Schedule_Continuation_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Schedule_Continuation_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Schedule_Continuation_Append_Input = {
    readonly to?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "schedule.Continuation" */
export type Schedule_Continuation_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Schedule_Continuation_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Schedule_Continuation_On_Conflict>;
};

/** aggregate avg on columns */
export type Schedule_Continuation_Avg_Fields = {
    readonly __typename?: "schedule_Continuation_avg_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Avg_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "schedule.Continuation". All fields are combined with a logical 'AND'. */
export type Schedule_Continuation_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Schedule_Continuation_Bool_Exp>>;
    readonly _not?: InputMaybe<Schedule_Continuation_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Schedule_Continuation_Bool_Exp>>;
    readonly colour?: InputMaybe<String_Comparison_Exp>;
    readonly defaultFor?: InputMaybe<String_Comparison_Exp>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly event?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly fromEvent?: InputMaybe<Uuid_Comparison_Exp>;
    readonly fromShuffleQueue?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly isActiveChoice?: InputMaybe<Boolean_Comparison_Exp>;
    readonly priority?: InputMaybe<Int_Comparison_Exp>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    readonly to?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.Continuation" */
export enum Schedule_Continuation_Constraint {
    /** unique or primary key constraint */
    ContinuationPkey = "Continuation_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Schedule_Continuation_Delete_At_Path_Input = {
    readonly to?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Schedule_Continuation_Delete_Elem_Input = {
    readonly to?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Schedule_Continuation_Delete_Key_Input = {
    readonly to?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "schedule.Continuation" */
export type Schedule_Continuation_Inc_Input = {
    readonly priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "schedule.Continuation" */
export type Schedule_Continuation_Insert_Input = {
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly defaultFor?: InputMaybe<Scalars["String"]>;
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    readonly fromEvent?: InputMaybe<Scalars["uuid"]>;
    readonly fromShuffleQueue?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isActiveChoice?: InputMaybe<Scalars["Boolean"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
    readonly to?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type Schedule_Continuation_Max_Fields = {
    readonly __typename?: "schedule_Continuation_max_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly defaultFor?: Maybe<Scalars["String"]>;
    readonly description?: Maybe<Scalars["String"]>;
    readonly fromEvent?: Maybe<Scalars["uuid"]>;
    readonly fromShuffleQueue?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by max() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Max_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly defaultFor?: InputMaybe<Order_By>;
    readonly description?: InputMaybe<Order_By>;
    readonly fromEvent?: InputMaybe<Order_By>;
    readonly fromShuffleQueue?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Schedule_Continuation_Min_Fields = {
    readonly __typename?: "schedule_Continuation_min_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly defaultFor?: Maybe<Scalars["String"]>;
    readonly description?: Maybe<Scalars["String"]>;
    readonly fromEvent?: Maybe<Scalars["uuid"]>;
    readonly fromShuffleQueue?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by min() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Min_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly defaultFor?: InputMaybe<Order_By>;
    readonly description?: InputMaybe<Order_By>;
    readonly fromEvent?: InputMaybe<Order_By>;
    readonly fromShuffleQueue?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "schedule.Continuation" */
export type Schedule_Continuation_Mutation_Response = {
    readonly __typename?: "schedule_Continuation_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Schedule_Continuation>;
};

/** on_conflict condition type for table "schedule.Continuation" */
export type Schedule_Continuation_On_Conflict = {
    readonly constraint: Schedule_Continuation_Constraint;
    readonly update_columns?: ReadonlyArray<Schedule_Continuation_Update_Column>;
    readonly where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.Continuation". */
export type Schedule_Continuation_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly defaultFor?: InputMaybe<Order_By>;
    readonly description?: InputMaybe<Order_By>;
    readonly event?: InputMaybe<Schedule_Event_Order_By>;
    readonly fromEvent?: InputMaybe<Order_By>;
    readonly fromShuffleQueue?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly isActiveChoice?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Order_By>;
    readonly to?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_Continuation */
export type Schedule_Continuation_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Schedule_Continuation_Prepend_Input = {
    readonly to?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "schedule.Continuation" */
export enum Schedule_Continuation_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    DefaultFor = "defaultFor",
    /** column name */
    Description = "description",
    /** column name */
    FromEvent = "fromEvent",
    /** column name */
    FromShuffleQueue = "fromShuffleQueue",
    /** column name */
    Id = "id",
    /** column name */
    IsActiveChoice = "isActiveChoice",
    /** column name */
    Priority = "priority",
    /** column name */
    To = "to",
}

/** input type for updating data in table "schedule.Continuation" */
export type Schedule_Continuation_Set_Input = {
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly defaultFor?: InputMaybe<Scalars["String"]>;
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly fromEvent?: InputMaybe<Scalars["uuid"]>;
    readonly fromShuffleQueue?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly isActiveChoice?: InputMaybe<Scalars["Boolean"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly to?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate stddev on columns */
export type Schedule_Continuation_Stddev_Fields = {
    readonly __typename?: "schedule_Continuation_stddev_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Stddev_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Schedule_Continuation_Stddev_Pop_Fields = {
    readonly __typename?: "schedule_Continuation_stddev_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Stddev_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Schedule_Continuation_Stddev_Samp_Fields = {
    readonly __typename?: "schedule_Continuation_stddev_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Stddev_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Schedule_Continuation_Sum_Fields = {
    readonly __typename?: "schedule_Continuation_sum_fields";
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Sum_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** update columns of table "schedule.Continuation" */
export enum Schedule_Continuation_Update_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    DefaultFor = "defaultFor",
    /** column name */
    Description = "description",
    /** column name */
    FromEvent = "fromEvent",
    /** column name */
    FromShuffleQueue = "fromShuffleQueue",
    /** column name */
    Id = "id",
    /** column name */
    IsActiveChoice = "isActiveChoice",
    /** column name */
    Priority = "priority",
    /** column name */
    To = "to",
}

/** aggregate var_pop on columns */
export type Schedule_Continuation_Var_Pop_Fields = {
    readonly __typename?: "schedule_Continuation_var_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Var_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Schedule_Continuation_Var_Samp_Fields = {
    readonly __typename?: "schedule_Continuation_var_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Var_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Schedule_Continuation_Variance_Fields = {
    readonly __typename?: "schedule_Continuation_variance_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "schedule.Continuation" */
export type Schedule_Continuation_Variance_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** columns and relationships of "schedule.CurrentEvents" */
export type Schedule_CurrentEvents = {
    readonly __typename?: "schedule_CurrentEvents";
    readonly autoPlayElementId?: Maybe<Scalars["uuid"]>;
    readonly automaticParticipationSurvey?: Maybe<Scalars["Boolean"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly enableRecording?: Maybe<Scalars["Boolean"]>;
    /** An array relationship */
    readonly eventPeople: ReadonlyArray<Schedule_EventProgramPerson>;
    /** An aggregate relationship */
    readonly eventPeople_aggregate: Schedule_EventProgramPerson_Aggregate;
    readonly exhibitionId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly modeName?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly room?: Maybe<Room_Room>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly streamTextEventId?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly timings_updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: Maybe<Scalars["String"]>;
};

/** columns and relationships of "schedule.CurrentEvents" */
export type Schedule_CurrentEventsEventPeopleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "schedule.CurrentEvents" */
export type Schedule_CurrentEventsEventPeople_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** aggregated selection of "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Aggregate = {
    readonly __typename?: "schedule_CurrentEvents_aggregate";
    readonly aggregate?: Maybe<Schedule_CurrentEvents_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Schedule_CurrentEvents>;
};

/** aggregate fields of "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Aggregate_Fields = {
    readonly __typename?: "schedule_CurrentEvents_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Schedule_CurrentEvents_Max_Fields>;
    readonly min?: Maybe<Schedule_CurrentEvents_Min_Fields>;
};

/** aggregate fields of "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Schedule_CurrentEvents_Max_Order_By>;
    readonly min?: InputMaybe<Schedule_CurrentEvents_Min_Order_By>;
};

/** input type for inserting array relation for remote table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Schedule_CurrentEvents_Insert_Input>;
};

/** Boolean expression to filter rows from the table "schedule.CurrentEvents". All fields are combined with a logical 'AND'. */
export type Schedule_CurrentEvents_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Bool_Exp>>;
    readonly _not?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Bool_Exp>>;
    readonly autoPlayElementId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly automaticParticipationSurvey?: InputMaybe<Boolean_Comparison_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly enableRecording?: InputMaybe<Boolean_Comparison_Exp>;
    readonly eventPeople?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    readonly exhibitionId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly modeName?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly scheduledEndTime?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly scheduledStartTime?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly shufflePeriodId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly streamTextEventId?: InputMaybe<String_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly timings_updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly visibilityLevel?: InputMaybe<String_Comparison_Exp>;
};

/** input type for inserting data into table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Insert_Input = {
    readonly autoPlayElementId?: InputMaybe<Scalars["uuid"]>;
    readonly automaticParticipationSurvey?: InputMaybe<Scalars["Boolean"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly enableRecording?: InputMaybe<Scalars["Boolean"]>;
    readonly eventPeople?: InputMaybe<Schedule_EventProgramPerson_Arr_Rel_Insert_Input>;
    readonly exhibitionId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly modeName?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly scheduledEndTime?: InputMaybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: InputMaybe<Scalars["timestamptz"]>;
    readonly shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    readonly streamTextEventId?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly timings_updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Schedule_CurrentEvents_Max_Fields = {
    readonly __typename?: "schedule_CurrentEvents_max_fields";
    readonly autoPlayElementId?: Maybe<Scalars["uuid"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly exhibitionId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly modeName?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly streamTextEventId?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly timings_updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Max_Order_By = {
    readonly autoPlayElementId?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly exhibitionId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly modeName?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly scheduledEndTime?: InputMaybe<Order_By>;
    readonly scheduledStartTime?: InputMaybe<Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly streamTextEventId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly timings_updated_at?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly visibilityLevel?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Schedule_CurrentEvents_Min_Fields = {
    readonly __typename?: "schedule_CurrentEvents_min_fields";
    readonly autoPlayElementId?: Maybe<Scalars["uuid"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly exhibitionId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly modeName?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly streamTextEventId?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly timings_updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Min_Order_By = {
    readonly autoPlayElementId?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly exhibitionId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly modeName?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly scheduledEndTime?: InputMaybe<Order_By>;
    readonly scheduledStartTime?: InputMaybe<Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly streamTextEventId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly timings_updated_at?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly visibilityLevel?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Mutation_Response = {
    readonly __typename?: "schedule_CurrentEvents_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Schedule_CurrentEvents>;
};

/** Ordering options when selecting data from "schedule.CurrentEvents". */
export type Schedule_CurrentEvents_Order_By = {
    readonly autoPlayElementId?: InputMaybe<Order_By>;
    readonly automaticParticipationSurvey?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly enableRecording?: InputMaybe<Order_By>;
    readonly eventPeople_aggregate?: InputMaybe<Schedule_EventProgramPerson_Aggregate_Order_By>;
    readonly exhibitionId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly modeName?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly scheduledEndTime?: InputMaybe<Order_By>;
    readonly scheduledStartTime?: InputMaybe<Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly streamTextEventId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly timings_updated_at?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly visibilityLevel?: InputMaybe<Order_By>;
};

/** select columns of table "schedule.CurrentEvents" */
export enum Schedule_CurrentEvents_Select_Column {
    /** column name */
    AutoPlayElementId = "autoPlayElementId",
    /** column name */
    AutomaticParticipationSurvey = "automaticParticipationSurvey",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EnableRecording = "enableRecording",
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ModeName = "modeName",
    /** column name */
    Name = "name",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ScheduledEndTime = "scheduledEndTime",
    /** column name */
    ScheduledStartTime = "scheduledStartTime",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StreamTextEventId = "streamTextEventId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TimingsUpdatedAt = "timings_updated_at",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "schedule.CurrentEvents" */
export type Schedule_CurrentEvents_Set_Input = {
    readonly autoPlayElementId?: InputMaybe<Scalars["uuid"]>;
    readonly automaticParticipationSurvey?: InputMaybe<Scalars["Boolean"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly enableRecording?: InputMaybe<Scalars["Boolean"]>;
    readonly exhibitionId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly modeName?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly scheduledEndTime?: InputMaybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: InputMaybe<Scalars["timestamptz"]>;
    readonly shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    readonly streamTextEventId?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly timings_updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_Event = {
    readonly __typename?: "schedule_Event";
    /** An object relationship */
    readonly autoPlayElement?: Maybe<Content_Element>;
    readonly autoPlayElementId?: Maybe<Scalars["uuid"]>;
    readonly automaticParticipationSurvey: Scalars["Boolean"];
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    /** An array relationship */
    readonly continuations: ReadonlyArray<Schedule_Continuation>;
    /** An aggregate relationship */
    readonly continuations_aggregate: Schedule_Continuation_Aggregate;
    readonly createdAt: Scalars["timestamptz"];
    readonly enableRecording: Scalars["Boolean"];
    /** An array relationship */
    readonly eventPeople: ReadonlyArray<Schedule_EventProgramPerson>;
    /** An aggregate relationship */
    readonly eventPeople_aggregate: Schedule_EventProgramPerson_Aggregate;
    /** An object relationship */
    readonly eventVonageSession?: Maybe<Video_EventVonageSession>;
    /** An object relationship */
    readonly exhibition?: Maybe<Collection_Exhibition>;
    readonly exhibitionId?: Maybe<Scalars["uuid"]>;
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly item?: Maybe<Content_Item>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly mode?: Maybe<Schedule_Mode>;
    readonly modeName?: Maybe<Schedule_Mode_Enum>;
    readonly name: Scalars["String"];
    /** An array relationship */
    readonly presentations: ReadonlyArray<Schedule_Event>;
    /** An aggregate relationship */
    readonly presentations_aggregate: Schedule_Event_Aggregate;
    /** An object relationship */
    readonly room: Room_Room;
    readonly roomId: Scalars["uuid"];
    /** A computed field, executes function "schedule.eventRoomName" */
    readonly roomName?: Maybe<Scalars["String"]>;
    readonly scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    /** An object relationship */
    readonly session?: Maybe<Schedule_Event>;
    readonly sessionEventId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly shufflePeriod?: Maybe<Room_ShufflePeriod>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly streamTextEventId?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly subconference?: Maybe<Conference_Subconference>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly timingsUpdatedAt: Scalars["timestamptz"];
    readonly updatedAt: Scalars["timestamptz"];
    readonly visibilityLevel: Conference_VisibilityLevel_Enum;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventContinuationsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventContinuations_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventEventPeopleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventEventPeople_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventPresentationsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "schedule.Event" */
export type Schedule_EventPresentations_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson = {
    readonly __typename?: "schedule_EventProgramPerson";
    readonly createdAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly event: Schedule_Event;
    readonly eventId: Scalars["uuid"];
    /** An object relationship */
    readonly eventPersonRole: Schedule_EventProgramPersonRole;
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly person: Collection_ProgramPerson;
    readonly personId: Scalars["uuid"];
    readonly roleName: Schedule_EventProgramPersonRole_Enum;
    readonly updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole = {
    readonly __typename?: "schedule_EventProgramPersonRole";
    readonly description: Scalars["String"];
    /** An array relationship */
    readonly eventPeople: ReadonlyArray<Schedule_EventProgramPerson>;
    /** An aggregate relationship */
    readonly eventPeople_aggregate: Schedule_EventProgramPerson_Aggregate;
    readonly name: Scalars["String"];
};

/** columns and relationships of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRoleEventPeopleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** columns and relationships of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRoleEventPeople_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** aggregated selection of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Aggregate = {
    readonly __typename?: "schedule_EventProgramPersonRole_aggregate";
    readonly aggregate?: Maybe<Schedule_EventProgramPersonRole_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Schedule_EventProgramPersonRole>;
};

/** aggregate fields of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Aggregate_Fields = {
    readonly __typename?: "schedule_EventProgramPersonRole_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Schedule_EventProgramPersonRole_Max_Fields>;
    readonly min?: Maybe<Schedule_EventProgramPersonRole_Min_Fields>;
};

/** aggregate fields of "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "schedule.EventProgramPersonRole". All fields are combined with a logical 'AND'. */
export type Schedule_EventProgramPersonRole_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Bool_Exp>>;
    readonly _not?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly eventPeople?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.EventProgramPersonRole" */
export enum Schedule_EventProgramPersonRole_Constraint {
    /** unique or primary key constraint */
    EventProgramPersonRolePkey = "EventProgramPersonRole_pkey",
}

export enum Schedule_EventProgramPersonRole_Enum {
    /** Chair/moderator of the event */
    Chair = "CHAIR",
    /** Viewer who has been given access to the event (e.g. to ask a question). */
    Participant = "PARTICIPANT",
    /** A presenter. */
    Presenter = "PRESENTER",
}

/** Boolean expression to compare columns of type "schedule_EventProgramPersonRole_enum". All fields are combined with logical 'AND'. */
export type Schedule_EventProgramPersonRole_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Schedule_EventProgramPersonRole_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Schedule_EventProgramPersonRole_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Enum>>;
};

/** input type for inserting data into table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly eventPeople?: InputMaybe<Schedule_EventProgramPerson_Arr_Rel_Insert_Input>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Schedule_EventProgramPersonRole_Max_Fields = {
    readonly __typename?: "schedule_EventProgramPersonRole_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Schedule_EventProgramPersonRole_Min_Fields = {
    readonly __typename?: "schedule_EventProgramPersonRole_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Mutation_Response = {
    readonly __typename?: "schedule_EventProgramPersonRole_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Schedule_EventProgramPersonRole>;
};

/** input type for inserting object relation for remote table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Obj_Rel_Insert_Input = {
    readonly data: Schedule_EventProgramPersonRole_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Schedule_EventProgramPersonRole_On_Conflict>;
};

/** on_conflict condition type for table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_On_Conflict = {
    readonly constraint: Schedule_EventProgramPersonRole_Constraint;
    readonly update_columns?: ReadonlyArray<Schedule_EventProgramPersonRole_Update_Column>;
    readonly where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.EventProgramPersonRole". */
export type Schedule_EventProgramPersonRole_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly eventPeople_aggregate?: InputMaybe<Schedule_EventProgramPerson_Aggregate_Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_EventProgramPersonRole */
export type Schedule_EventProgramPersonRole_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "schedule.EventProgramPersonRole" */
export enum Schedule_EventProgramPersonRole_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "schedule.EventProgramPersonRole" */
export type Schedule_EventProgramPersonRole_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "schedule.EventProgramPersonRole" */
export enum Schedule_EventProgramPersonRole_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** aggregated selection of "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Aggregate = {
    readonly __typename?: "schedule_EventProgramPerson_aggregate";
    readonly aggregate?: Maybe<Schedule_EventProgramPerson_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Schedule_EventProgramPerson>;
};

/** aggregate fields of "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Aggregate_Fields = {
    readonly __typename?: "schedule_EventProgramPerson_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Schedule_EventProgramPerson_Max_Fields>;
    readonly min?: Maybe<Schedule_EventProgramPerson_Min_Fields>;
};

/** aggregate fields of "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Schedule_EventProgramPerson_Max_Order_By>;
    readonly min?: InputMaybe<Schedule_EventProgramPerson_Min_Order_By>;
};

/** input type for inserting array relation for remote table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Schedule_EventProgramPerson_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Schedule_EventProgramPerson_On_Conflict>;
};

/** Boolean expression to filter rows from the table "schedule.EventProgramPerson". All fields are combined with a logical 'AND'. */
export type Schedule_EventProgramPerson_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Bool_Exp>>;
    readonly _not?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Bool_Exp>>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly event?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly eventId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly eventPersonRole?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly person?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
    readonly personId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly roleName?: InputMaybe<Schedule_EventProgramPersonRole_Enum_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.EventProgramPerson" */
export enum Schedule_EventProgramPerson_Constraint {
    /** unique or primary key constraint */
    EventProgramPersonEventIdPersonIdRoleNameKey = "EventProgramPerson_eventId_personId_roleName_key",
    /** unique or primary key constraint */
    EventProgramPersonPkey = "EventProgramPerson_pkey",
}

/** input type for inserting data into table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Insert_Input = {
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly eventPersonRole?: InputMaybe<Schedule_EventProgramPersonRole_Obj_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly person?: InputMaybe<Collection_ProgramPerson_Obj_Rel_Insert_Input>;
    readonly personId?: InputMaybe<Scalars["uuid"]>;
    readonly roleName?: InputMaybe<Schedule_EventProgramPersonRole_Enum>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Schedule_EventProgramPerson_Max_Fields = {
    readonly __typename?: "schedule_EventProgramPerson_max_fields";
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly personId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Max_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly eventId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly personId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Schedule_EventProgramPerson_Min_Fields = {
    readonly __typename?: "schedule_EventProgramPerson_min_fields";
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly personId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Min_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly eventId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly personId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Mutation_Response = {
    readonly __typename?: "schedule_EventProgramPerson_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Schedule_EventProgramPerson>;
};

/** on_conflict condition type for table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_On_Conflict = {
    readonly constraint: Schedule_EventProgramPerson_Constraint;
    readonly update_columns?: ReadonlyArray<Schedule_EventProgramPerson_Update_Column>;
    readonly where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.EventProgramPerson". */
export type Schedule_EventProgramPerson_Order_By = {
    readonly createdAt?: InputMaybe<Order_By>;
    readonly event?: InputMaybe<Schedule_Event_Order_By>;
    readonly eventId?: InputMaybe<Order_By>;
    readonly eventPersonRole?: InputMaybe<Schedule_EventProgramPersonRole_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly person?: InputMaybe<Collection_ProgramPerson_Order_By>;
    readonly personId?: InputMaybe<Order_By>;
    readonly roleName?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_EventProgramPerson */
export type Schedule_EventProgramPerson_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "schedule.EventProgramPerson" */
export enum Schedule_EventProgramPerson_Select_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    PersonId = "personId",
    /** column name */
    RoleName = "roleName",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "schedule.EventProgramPerson" */
export type Schedule_EventProgramPerson_Set_Input = {
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly personId?: InputMaybe<Scalars["uuid"]>;
    readonly roleName?: InputMaybe<Schedule_EventProgramPersonRole_Enum>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "schedule.EventProgramPerson" */
export enum Schedule_EventProgramPerson_Update_Column {
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    PersonId = "personId",
    /** column name */
    RoleName = "roleName",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** aggregated selection of "schedule.Event" */
export type Schedule_Event_Aggregate = {
    readonly __typename?: "schedule_Event_aggregate";
    readonly aggregate?: Maybe<Schedule_Event_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Schedule_Event>;
};

/** aggregate fields of "schedule.Event" */
export type Schedule_Event_Aggregate_Fields = {
    readonly __typename?: "schedule_Event_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Schedule_Event_Max_Fields>;
    readonly min?: Maybe<Schedule_Event_Min_Fields>;
};

/** aggregate fields of "schedule.Event" */
export type Schedule_Event_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "schedule.Event" */
export type Schedule_Event_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Schedule_Event_Max_Order_By>;
    readonly min?: InputMaybe<Schedule_Event_Min_Order_By>;
};

/** input type for inserting array relation for remote table "schedule.Event" */
export type Schedule_Event_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Schedule_Event_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Schedule_Event_On_Conflict>;
};

/** Boolean expression to filter rows from the table "schedule.Event". All fields are combined with a logical 'AND'. */
export type Schedule_Event_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Schedule_Event_Bool_Exp>>;
    readonly _not?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Schedule_Event_Bool_Exp>>;
    readonly autoPlayElement?: InputMaybe<Content_Element_Bool_Exp>;
    readonly autoPlayElementId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly automaticParticipationSurvey?: InputMaybe<Boolean_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly continuations?: InputMaybe<Schedule_Continuation_Bool_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly enableRecording?: InputMaybe<Boolean_Comparison_Exp>;
    readonly eventPeople?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    readonly exhibition?: InputMaybe<Collection_Exhibition_Bool_Exp>;
    readonly exhibitionId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly mode?: InputMaybe<Schedule_Mode_Bool_Exp>;
    readonly modeName?: InputMaybe<Schedule_Mode_Enum_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly presentations?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly roomName?: InputMaybe<String_Comparison_Exp>;
    readonly scheduledEndTime?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly scheduledStartTime?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly session?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly sessionEventId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
    readonly shufflePeriodId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly streamTextEventId?: InputMaybe<String_Comparison_Exp>;
    readonly subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly timingsUpdatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.Event" */
export enum Schedule_Event_Constraint {
    /** unique or primary key constraint */
    EventPkey = "Event_pkey",
}

/** input type for inserting data into table "schedule.Event" */
export type Schedule_Event_Insert_Input = {
    readonly autoPlayElement?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    readonly autoPlayElementId?: InputMaybe<Scalars["uuid"]>;
    readonly automaticParticipationSurvey?: InputMaybe<Scalars["Boolean"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly continuations?: InputMaybe<Schedule_Continuation_Arr_Rel_Insert_Input>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly enableRecording?: InputMaybe<Scalars["Boolean"]>;
    readonly eventPeople?: InputMaybe<Schedule_EventProgramPerson_Arr_Rel_Insert_Input>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Obj_Rel_Insert_Input>;
    readonly exhibition?: InputMaybe<Collection_Exhibition_Obj_Rel_Insert_Input>;
    readonly exhibitionId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly mode?: InputMaybe<Schedule_Mode_Obj_Rel_Insert_Input>;
    readonly modeName?: InputMaybe<Schedule_Mode_Enum>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly presentations?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly scheduledEndTime?: InputMaybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: InputMaybe<Scalars["timestamptz"]>;
    readonly session?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    readonly sessionEventId?: InputMaybe<Scalars["uuid"]>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
    readonly shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    readonly streamTextEventId?: InputMaybe<Scalars["String"]>;
    readonly subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly timingsUpdatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** aggregate max on columns */
export type Schedule_Event_Max_Fields = {
    readonly __typename?: "schedule_Event_max_fields";
    readonly autoPlayElementId?: Maybe<Scalars["uuid"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly exhibitionId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    readonly sessionEventId?: Maybe<Scalars["uuid"]>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly streamTextEventId?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly timingsUpdatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "schedule.Event" */
export type Schedule_Event_Max_Order_By = {
    readonly autoPlayElementId?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly exhibitionId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly scheduledEndTime?: InputMaybe<Order_By>;
    readonly scheduledStartTime?: InputMaybe<Order_By>;
    readonly sessionEventId?: InputMaybe<Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly streamTextEventId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly timingsUpdatedAt?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Schedule_Event_Min_Fields = {
    readonly __typename?: "schedule_Event_min_fields";
    readonly autoPlayElementId?: Maybe<Scalars["uuid"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly exhibitionId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly scheduledEndTime?: Maybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: Maybe<Scalars["timestamptz"]>;
    readonly sessionEventId?: Maybe<Scalars["uuid"]>;
    readonly shufflePeriodId?: Maybe<Scalars["uuid"]>;
    readonly streamTextEventId?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly timingsUpdatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "schedule.Event" */
export type Schedule_Event_Min_Order_By = {
    readonly autoPlayElementId?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly exhibitionId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly scheduledEndTime?: InputMaybe<Order_By>;
    readonly scheduledStartTime?: InputMaybe<Order_By>;
    readonly sessionEventId?: InputMaybe<Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly streamTextEventId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly timingsUpdatedAt?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "schedule.Event" */
export type Schedule_Event_Mutation_Response = {
    readonly __typename?: "schedule_Event_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Schedule_Event>;
};

/** input type for inserting object relation for remote table "schedule.Event" */
export type Schedule_Event_Obj_Rel_Insert_Input = {
    readonly data: Schedule_Event_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Schedule_Event_On_Conflict>;
};

/** on_conflict condition type for table "schedule.Event" */
export type Schedule_Event_On_Conflict = {
    readonly constraint: Schedule_Event_Constraint;
    readonly update_columns?: ReadonlyArray<Schedule_Event_Update_Column>;
    readonly where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.Event". */
export type Schedule_Event_Order_By = {
    readonly autoPlayElement?: InputMaybe<Content_Element_Order_By>;
    readonly autoPlayElementId?: InputMaybe<Order_By>;
    readonly automaticParticipationSurvey?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly continuations_aggregate?: InputMaybe<Schedule_Continuation_Aggregate_Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly enableRecording?: InputMaybe<Order_By>;
    readonly eventPeople_aggregate?: InputMaybe<Schedule_EventProgramPerson_Aggregate_Order_By>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Order_By>;
    readonly exhibition?: InputMaybe<Collection_Exhibition_Order_By>;
    readonly exhibitionId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly mode?: InputMaybe<Schedule_Mode_Order_By>;
    readonly modeName?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly presentations_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly roomName?: InputMaybe<Order_By>;
    readonly scheduledEndTime?: InputMaybe<Order_By>;
    readonly scheduledStartTime?: InputMaybe<Order_By>;
    readonly session?: InputMaybe<Schedule_Event_Order_By>;
    readonly sessionEventId?: InputMaybe<Order_By>;
    readonly shufflePeriod?: InputMaybe<Room_ShufflePeriod_Order_By>;
    readonly shufflePeriodId?: InputMaybe<Order_By>;
    readonly streamTextEventId?: InputMaybe<Order_By>;
    readonly subconference?: InputMaybe<Conference_Subconference_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly timingsUpdatedAt?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly visibilityLevel?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_Event */
export type Schedule_Event_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "schedule.Event" */
export enum Schedule_Event_Select_Column {
    /** column name */
    AutoPlayElementId = "autoPlayElementId",
    /** column name */
    AutomaticParticipationSurvey = "automaticParticipationSurvey",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EnableRecording = "enableRecording",
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ModeName = "modeName",
    /** column name */
    Name = "name",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ScheduledEndTime = "scheduledEndTime",
    /** column name */
    ScheduledStartTime = "scheduledStartTime",
    /** column name */
    SessionEventId = "sessionEventId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StreamTextEventId = "streamTextEventId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TimingsUpdatedAt = "timingsUpdatedAt",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** input type for updating data in table "schedule.Event" */
export type Schedule_Event_Set_Input = {
    readonly autoPlayElementId?: InputMaybe<Scalars["uuid"]>;
    readonly automaticParticipationSurvey?: InputMaybe<Scalars["Boolean"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly enableRecording?: InputMaybe<Scalars["Boolean"]>;
    readonly exhibitionId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly modeName?: InputMaybe<Schedule_Mode_Enum>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly scheduledEndTime?: InputMaybe<Scalars["timestamptz"]>;
    readonly scheduledStartTime?: InputMaybe<Scalars["timestamptz"]>;
    readonly sessionEventId?: InputMaybe<Scalars["uuid"]>;
    readonly shufflePeriodId?: InputMaybe<Scalars["uuid"]>;
    readonly streamTextEventId?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly timingsUpdatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly visibilityLevel?: InputMaybe<Conference_VisibilityLevel_Enum>;
};

/** update columns of table "schedule.Event" */
export enum Schedule_Event_Update_Column {
    /** column name */
    AutoPlayElementId = "autoPlayElementId",
    /** column name */
    AutomaticParticipationSurvey = "automaticParticipationSurvey",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EnableRecording = "enableRecording",
    /** column name */
    ExhibitionId = "exhibitionId",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    ModeName = "modeName",
    /** column name */
    Name = "name",
    /** column name */
    RoomId = "roomId",
    /** column name */
    ScheduledEndTime = "scheduledEndTime",
    /** column name */
    ScheduledStartTime = "scheduledStartTime",
    /** column name */
    SessionEventId = "sessionEventId",
    /** column name */
    ShufflePeriodId = "shufflePeriodId",
    /** column name */
    StreamTextEventId = "streamTextEventId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    TimingsUpdatedAt = "timingsUpdatedAt",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VisibilityLevel = "visibilityLevel",
}

/** columns and relationships of "schedule.Mode" */
export type Schedule_Mode = {
    readonly __typename?: "schedule_Mode";
    readonly description: Scalars["String"];
    /** An array relationship */
    readonly events: ReadonlyArray<Schedule_Event>;
    /** An aggregate relationship */
    readonly events_aggregate: Schedule_Event_Aggregate;
    readonly name: Scalars["String"];
};

/** columns and relationships of "schedule.Mode" */
export type Schedule_ModeEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** columns and relationships of "schedule.Mode" */
export type Schedule_ModeEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

/** aggregated selection of "schedule.Mode" */
export type Schedule_Mode_Aggregate = {
    readonly __typename?: "schedule_Mode_aggregate";
    readonly aggregate?: Maybe<Schedule_Mode_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Schedule_Mode>;
};

/** aggregate fields of "schedule.Mode" */
export type Schedule_Mode_Aggregate_Fields = {
    readonly __typename?: "schedule_Mode_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Schedule_Mode_Max_Fields>;
    readonly min?: Maybe<Schedule_Mode_Min_Fields>;
};

/** aggregate fields of "schedule.Mode" */
export type Schedule_Mode_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Schedule_Mode_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "schedule.Mode". All fields are combined with a logical 'AND'. */
export type Schedule_Mode_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Schedule_Mode_Bool_Exp>>;
    readonly _not?: InputMaybe<Schedule_Mode_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Schedule_Mode_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly events?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.Mode" */
export enum Schedule_Mode_Constraint {
    /** unique or primary key constraint */
    ModePkey = "Mode_pkey",
}

export enum Schedule_Mode_Enum {
    /** An exhibition hall. */
    Exhibition = "EXHIBITION",
    /** Event is taking place in a Zoom room. */
    External = "EXTERNAL",
    /** Users watch a live-stream. */
    Livestream = "LIVESTREAM",
    /** An empty room. */
    None = "NONE",
    /** A shuffle queue. */
    Shuffle = "SHUFFLE",
    /** Users may participate in the general video chat. */
    VideoChat = "VIDEO_CHAT",
    /** An ordinary video from either a VIDEO_URL content element or a video uploaded to Clowdr. */
    VideoPlayer = "VIDEO_PLAYER",
}

/** Boolean expression to compare columns of type "schedule_Mode_enum". All fields are combined with logical 'AND'. */
export type Schedule_Mode_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Schedule_Mode_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Schedule_Mode_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Schedule_Mode_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Schedule_Mode_Enum>>;
};

/** input type for inserting data into table "schedule.Mode" */
export type Schedule_Mode_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly events?: InputMaybe<Schedule_Event_Arr_Rel_Insert_Input>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Schedule_Mode_Max_Fields = {
    readonly __typename?: "schedule_Mode_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Schedule_Mode_Min_Fields = {
    readonly __typename?: "schedule_Mode_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "schedule.Mode" */
export type Schedule_Mode_Mutation_Response = {
    readonly __typename?: "schedule_Mode_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Schedule_Mode>;
};

/** input type for inserting object relation for remote table "schedule.Mode" */
export type Schedule_Mode_Obj_Rel_Insert_Input = {
    readonly data: Schedule_Mode_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Schedule_Mode_On_Conflict>;
};

/** on_conflict condition type for table "schedule.Mode" */
export type Schedule_Mode_On_Conflict = {
    readonly constraint: Schedule_Mode_Constraint;
    readonly update_columns?: ReadonlyArray<Schedule_Mode_Update_Column>;
    readonly where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.Mode". */
export type Schedule_Mode_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly events_aggregate?: InputMaybe<Schedule_Event_Aggregate_Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_Mode */
export type Schedule_Mode_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "schedule.Mode" */
export enum Schedule_Mode_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "schedule.Mode" */
export type Schedule_Mode_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "schedule.Mode" */
export enum Schedule_Mode_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "schedule.OverlappingEvents" */
export type Schedule_OverlappingEvents = {
    readonly __typename?: "schedule_OverlappingEvents";
    /** An object relationship */
    readonly conference?: Maybe<Conference_Conference>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly eventX?: Maybe<Schedule_Event>;
    /** An object relationship */
    readonly eventY?: Maybe<Schedule_Event>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly xId?: Maybe<Scalars["uuid"]>;
    readonly yId?: Maybe<Scalars["uuid"]>;
};

/** aggregated selection of "schedule.OverlappingEvents" */
export type Schedule_OverlappingEvents_Aggregate = {
    readonly __typename?: "schedule_OverlappingEvents_aggregate";
    readonly aggregate?: Maybe<Schedule_OverlappingEvents_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Schedule_OverlappingEvents>;
};

/** aggregate fields of "schedule.OverlappingEvents" */
export type Schedule_OverlappingEvents_Aggregate_Fields = {
    readonly __typename?: "schedule_OverlappingEvents_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Schedule_OverlappingEvents_Max_Fields>;
    readonly min?: Maybe<Schedule_OverlappingEvents_Min_Fields>;
};

/** aggregate fields of "schedule.OverlappingEvents" */
export type Schedule_OverlappingEvents_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "schedule.OverlappingEvents". All fields are combined with a logical 'AND'. */
export type Schedule_OverlappingEvents_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Bool_Exp>>;
    readonly _not?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly eventX?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly eventY?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly xId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly yId?: InputMaybe<Uuid_Comparison_Exp>;
};

/** aggregate max on columns */
export type Schedule_OverlappingEvents_Max_Fields = {
    readonly __typename?: "schedule_OverlappingEvents_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly xId?: Maybe<Scalars["uuid"]>;
    readonly yId?: Maybe<Scalars["uuid"]>;
};

/** aggregate min on columns */
export type Schedule_OverlappingEvents_Min_Fields = {
    readonly __typename?: "schedule_OverlappingEvents_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly xId?: Maybe<Scalars["uuid"]>;
    readonly yId?: Maybe<Scalars["uuid"]>;
};

/** Ordering options when selecting data from "schedule.OverlappingEvents". */
export type Schedule_OverlappingEvents_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly eventX?: InputMaybe<Schedule_Event_Order_By>;
    readonly eventY?: InputMaybe<Schedule_Event_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly xId?: InputMaybe<Order_By>;
    readonly yId?: InputMaybe<Order_By>;
};

/** select columns of table "schedule.OverlappingEvents" */
export enum Schedule_OverlappingEvents_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    XId = "xId",
    /** column name */
    YId = "yId",
}

/** columns and relationships of "schedule.StarredEvent" */
export type Schedule_StarredEvent = {
    readonly __typename?: "schedule_StarredEvent";
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly event: Schedule_Event;
    readonly eventId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly registrant?: Maybe<Registrant_Registrant>;
    readonly registrantId: Scalars["uuid"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "schedule.StarredEvent" */
export type Schedule_StarredEvent_Aggregate = {
    readonly __typename?: "schedule_StarredEvent_aggregate";
    readonly aggregate?: Maybe<Schedule_StarredEvent_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Schedule_StarredEvent>;
};

/** aggregate fields of "schedule.StarredEvent" */
export type Schedule_StarredEvent_Aggregate_Fields = {
    readonly __typename?: "schedule_StarredEvent_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Schedule_StarredEvent_Max_Fields>;
    readonly min?: Maybe<Schedule_StarredEvent_Min_Fields>;
};

/** aggregate fields of "schedule.StarredEvent" */
export type Schedule_StarredEvent_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "schedule.StarredEvent". All fields are combined with a logical 'AND'. */
export type Schedule_StarredEvent_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Bool_Exp>>;
    readonly _not?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly event?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly eventId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "schedule.StarredEvent" */
export enum Schedule_StarredEvent_Constraint {
    /** unique or primary key constraint */
    StarredEventEventIdRegistrantIdKey = "StarredEvent_eventId_registrantId_key",
    /** unique or primary key constraint */
    StarredEventPkey = "StarredEvent_pkey",
}

/** input type for inserting data into table "schedule.StarredEvent" */
export type Schedule_StarredEvent_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Schedule_StarredEvent_Max_Fields = {
    readonly __typename?: "schedule_StarredEvent_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Schedule_StarredEvent_Min_Fields = {
    readonly __typename?: "schedule_StarredEvent_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "schedule.StarredEvent" */
export type Schedule_StarredEvent_Mutation_Response = {
    readonly __typename?: "schedule_StarredEvent_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Schedule_StarredEvent>;
};

/** on_conflict condition type for table "schedule.StarredEvent" */
export type Schedule_StarredEvent_On_Conflict = {
    readonly constraint: Schedule_StarredEvent_Constraint;
    readonly update_columns?: ReadonlyArray<Schedule_StarredEvent_Update_Column>;
    readonly where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

/** Ordering options when selecting data from "schedule.StarredEvent". */
export type Schedule_StarredEvent_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly event?: InputMaybe<Schedule_Event_Order_By>;
    readonly eventId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: schedule_StarredEvent */
export type Schedule_StarredEvent_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "schedule.StarredEvent" */
export enum Schedule_StarredEvent_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "schedule.StarredEvent" */
export type Schedule_StarredEvent_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "schedule.StarredEvent" */
export enum Schedule_StarredEvent_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    UpdatedAt = "updated_at",
}

export type Schedule_SearchEvents_Args = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly search?: InputMaybe<Scalars["String"]>;
};

export type Schedule_ShiftPresentationTimes_Args = {
    readonly minutes?: InputMaybe<Scalars["Int"]>;
    readonly sessionId?: InputMaybe<Scalars["uuid"]>;
};

export type Schedule_ShiftTimes_Args = {
    readonly eventIds?: InputMaybe<Scalars["_uuid"]>;
    readonly minutes?: InputMaybe<Scalars["Int"]>;
};

/** columns and relationships of "sponsor.Tier" */
export type Sponsor_Tier = {
    readonly __typename?: "sponsor_Tier";
    readonly colour?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    readonly description: Scalars["String"];
    readonly id: Scalars["uuid"];
    /** An array relationship */
    readonly members: ReadonlyArray<Sponsor_TierMember>;
    /** An aggregate relationship */
    readonly members_aggregate: Sponsor_TierMember_Aggregate;
    readonly name: Scalars["String"];
    readonly priority: Scalars["Int"];
    readonly showLogos: Scalars["Boolean"];
    readonly size: Scalars["numeric"];
    /** An object relationship */
    readonly subconference?: Maybe<Conference_Subconference>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "sponsor.Tier" */
export type Sponsor_TierMembersArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** columns and relationships of "sponsor.Tier" */
export type Sponsor_TierMembers_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** columns and relationships of "sponsor.TierMember" */
export type Sponsor_TierMember = {
    readonly __typename?: "sponsor_TierMember";
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly item: Content_Item;
    readonly itemId: Scalars["uuid"];
    readonly priority?: Maybe<Scalars["Int"]>;
    /** An object relationship */
    readonly tier: Sponsor_Tier;
    readonly tierId: Scalars["uuid"];
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "sponsor.TierMember" */
export type Sponsor_TierMember_Aggregate = {
    readonly __typename?: "sponsor_TierMember_aggregate";
    readonly aggregate?: Maybe<Sponsor_TierMember_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Sponsor_TierMember>;
};

/** aggregate fields of "sponsor.TierMember" */
export type Sponsor_TierMember_Aggregate_Fields = {
    readonly __typename?: "sponsor_TierMember_aggregate_fields";
    readonly avg?: Maybe<Sponsor_TierMember_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Sponsor_TierMember_Max_Fields>;
    readonly min?: Maybe<Sponsor_TierMember_Min_Fields>;
    readonly stddev?: Maybe<Sponsor_TierMember_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Sponsor_TierMember_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Sponsor_TierMember_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Sponsor_TierMember_Sum_Fields>;
    readonly var_pop?: Maybe<Sponsor_TierMember_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Sponsor_TierMember_Var_Samp_Fields>;
    readonly variance?: Maybe<Sponsor_TierMember_Variance_Fields>;
};

/** aggregate fields of "sponsor.TierMember" */
export type Sponsor_TierMember_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "sponsor.TierMember" */
export type Sponsor_TierMember_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Sponsor_TierMember_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Sponsor_TierMember_Max_Order_By>;
    readonly min?: InputMaybe<Sponsor_TierMember_Min_Order_By>;
    readonly stddev?: InputMaybe<Sponsor_TierMember_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Sponsor_TierMember_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Sponsor_TierMember_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Sponsor_TierMember_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Sponsor_TierMember_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Sponsor_TierMember_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Sponsor_TierMember_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sponsor.TierMember" */
export type Sponsor_TierMember_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Sponsor_TierMember_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Sponsor_TierMember_On_Conflict>;
};

/** aggregate avg on columns */
export type Sponsor_TierMember_Avg_Fields = {
    readonly __typename?: "sponsor_TierMember_avg_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Avg_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sponsor.TierMember". All fields are combined with a logical 'AND'. */
export type Sponsor_TierMember_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Bool_Exp>>;
    readonly _not?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly item?: InputMaybe<Content_Item_Bool_Exp>;
    readonly itemId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly priority?: InputMaybe<Int_Comparison_Exp>;
    readonly tier?: InputMaybe<Sponsor_Tier_Bool_Exp>;
    readonly tierId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sponsor.TierMember" */
export enum Sponsor_TierMember_Constraint {
    /** unique or primary key constraint */
    TierMemberPkey = "TierMember_pkey",
    /** unique or primary key constraint */
    TierMemberTierIdItemIdKey = "TierMember_tierId_itemId_key",
}

/** input type for incrementing numeric columns in table "sponsor.TierMember" */
export type Sponsor_TierMember_Inc_Input = {
    readonly priority?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "sponsor.TierMember" */
export type Sponsor_TierMember_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly item?: InputMaybe<Content_Item_Obj_Rel_Insert_Input>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly tier?: InputMaybe<Sponsor_Tier_Obj_Rel_Insert_Input>;
    readonly tierId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Sponsor_TierMember_Max_Fields = {
    readonly __typename?: "sponsor_TierMember_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly tierId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly tierId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Sponsor_TierMember_Min_Fields = {
    readonly __typename?: "sponsor_TierMember_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly itemId?: Maybe<Scalars["uuid"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly tierId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly tierId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "sponsor.TierMember" */
export type Sponsor_TierMember_Mutation_Response = {
    readonly __typename?: "sponsor_TierMember_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Sponsor_TierMember>;
};

/** on_conflict condition type for table "sponsor.TierMember" */
export type Sponsor_TierMember_On_Conflict = {
    readonly constraint: Sponsor_TierMember_Constraint;
    readonly update_columns?: ReadonlyArray<Sponsor_TierMember_Update_Column>;
    readonly where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

/** Ordering options when selecting data from "sponsor.TierMember". */
export type Sponsor_TierMember_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly item?: InputMaybe<Content_Item_Order_By>;
    readonly itemId?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly tier?: InputMaybe<Sponsor_Tier_Order_By>;
    readonly tierId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: sponsor_TierMember */
export type Sponsor_TierMember_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "sponsor.TierMember" */
export enum Sponsor_TierMember_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    Priority = "priority",
    /** column name */
    TierId = "tierId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "sponsor.TierMember" */
export type Sponsor_TierMember_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly itemId?: InputMaybe<Scalars["uuid"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly tierId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Sponsor_TierMember_Stddev_Fields = {
    readonly __typename?: "sponsor_TierMember_stddev_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Stddev_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sponsor_TierMember_Stddev_Pop_Fields = {
    readonly __typename?: "sponsor_TierMember_stddev_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Stddev_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sponsor_TierMember_Stddev_Samp_Fields = {
    readonly __typename?: "sponsor_TierMember_stddev_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Stddev_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Sponsor_TierMember_Sum_Fields = {
    readonly __typename?: "sponsor_TierMember_sum_fields";
    readonly priority?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Sum_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** update columns of table "sponsor.TierMember" */
export enum Sponsor_TierMember_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    ItemId = "itemId",
    /** column name */
    Priority = "priority",
    /** column name */
    TierId = "tierId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Sponsor_TierMember_Var_Pop_Fields = {
    readonly __typename?: "sponsor_TierMember_var_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Var_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sponsor_TierMember_Var_Samp_Fields = {
    readonly __typename?: "sponsor_TierMember_var_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Var_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Sponsor_TierMember_Variance_Fields = {
    readonly __typename?: "sponsor_TierMember_variance_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "sponsor.TierMember" */
export type Sponsor_TierMember_Variance_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
};

/** aggregated selection of "sponsor.Tier" */
export type Sponsor_Tier_Aggregate = {
    readonly __typename?: "sponsor_Tier_aggregate";
    readonly aggregate?: Maybe<Sponsor_Tier_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Sponsor_Tier>;
};

/** aggregate fields of "sponsor.Tier" */
export type Sponsor_Tier_Aggregate_Fields = {
    readonly __typename?: "sponsor_Tier_aggregate_fields";
    readonly avg?: Maybe<Sponsor_Tier_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Sponsor_Tier_Max_Fields>;
    readonly min?: Maybe<Sponsor_Tier_Min_Fields>;
    readonly stddev?: Maybe<Sponsor_Tier_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Sponsor_Tier_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Sponsor_Tier_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Sponsor_Tier_Sum_Fields>;
    readonly var_pop?: Maybe<Sponsor_Tier_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Sponsor_Tier_Var_Samp_Fields>;
    readonly variance?: Maybe<Sponsor_Tier_Variance_Fields>;
};

/** aggregate fields of "sponsor.Tier" */
export type Sponsor_Tier_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Sponsor_Tier_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "sponsor.Tier" */
export type Sponsor_Tier_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Sponsor_Tier_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Sponsor_Tier_Max_Order_By>;
    readonly min?: InputMaybe<Sponsor_Tier_Min_Order_By>;
    readonly stddev?: InputMaybe<Sponsor_Tier_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Sponsor_Tier_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Sponsor_Tier_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Sponsor_Tier_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Sponsor_Tier_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Sponsor_Tier_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Sponsor_Tier_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sponsor.Tier" */
export type Sponsor_Tier_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Sponsor_Tier_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Sponsor_Tier_On_Conflict>;
};

/** aggregate avg on columns */
export type Sponsor_Tier_Avg_Fields = {
    readonly __typename?: "sponsor_Tier_avg_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
    readonly size?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Avg_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sponsor.Tier". All fields are combined with a logical 'AND'. */
export type Sponsor_Tier_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Sponsor_Tier_Bool_Exp>>;
    readonly _not?: InputMaybe<Sponsor_Tier_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Sponsor_Tier_Bool_Exp>>;
    readonly colour?: InputMaybe<String_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly members?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly priority?: InputMaybe<Int_Comparison_Exp>;
    readonly showLogos?: InputMaybe<Boolean_Comparison_Exp>;
    readonly size?: InputMaybe<Numeric_Comparison_Exp>;
    readonly subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sponsor.Tier" */
export enum Sponsor_Tier_Constraint {
    /** unique or primary key constraint */
    TierConferenceIdSubconferenceIdNameKey = "Tier_conferenceId_subconferenceId_name_key",
    /** unique or primary key constraint */
    TierPkey = "Tier_pkey",
}

/** input type for incrementing numeric columns in table "sponsor.Tier" */
export type Sponsor_Tier_Inc_Input = {
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly size?: InputMaybe<Scalars["numeric"]>;
};

/** input type for inserting data into table "sponsor.Tier" */
export type Sponsor_Tier_Insert_Input = {
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly members?: InputMaybe<Sponsor_TierMember_Arr_Rel_Insert_Input>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly showLogos?: InputMaybe<Scalars["Boolean"]>;
    readonly size?: InputMaybe<Scalars["numeric"]>;
    readonly subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Sponsor_Tier_Max_Fields = {
    readonly __typename?: "sponsor_Tier_max_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly description?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly size?: Maybe<Scalars["numeric"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Max_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly description?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Sponsor_Tier_Min_Fields = {
    readonly __typename?: "sponsor_Tier_min_fields";
    readonly colour?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly description?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly name?: Maybe<Scalars["String"]>;
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly size?: Maybe<Scalars["numeric"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Min_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly description?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "sponsor.Tier" */
export type Sponsor_Tier_Mutation_Response = {
    readonly __typename?: "sponsor_Tier_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Sponsor_Tier>;
};

/** input type for inserting object relation for remote table "sponsor.Tier" */
export type Sponsor_Tier_Obj_Rel_Insert_Input = {
    readonly data: Sponsor_Tier_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Sponsor_Tier_On_Conflict>;
};

/** on_conflict condition type for table "sponsor.Tier" */
export type Sponsor_Tier_On_Conflict = {
    readonly constraint: Sponsor_Tier_Constraint;
    readonly update_columns?: ReadonlyArray<Sponsor_Tier_Update_Column>;
    readonly where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

/** Ordering options when selecting data from "sponsor.Tier". */
export type Sponsor_Tier_Order_By = {
    readonly colour?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly description?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly members_aggregate?: InputMaybe<Sponsor_TierMember_Aggregate_Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly priority?: InputMaybe<Order_By>;
    readonly showLogos?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
    readonly subconference?: InputMaybe<Conference_Subconference_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: sponsor_Tier */
export type Sponsor_Tier_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "sponsor.Tier" */
export enum Sponsor_Tier_Select_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Description = "description",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    ShowLogos = "showLogos",
    /** column name */
    Size = "size",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "sponsor.Tier" */
export type Sponsor_Tier_Set_Input = {
    readonly colour?: InputMaybe<Scalars["String"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly priority?: InputMaybe<Scalars["Int"]>;
    readonly showLogos?: InputMaybe<Scalars["Boolean"]>;
    readonly size?: InputMaybe<Scalars["numeric"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Sponsor_Tier_Stddev_Fields = {
    readonly __typename?: "sponsor_Tier_stddev_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
    readonly size?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Stddev_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sponsor_Tier_Stddev_Pop_Fields = {
    readonly __typename?: "sponsor_Tier_stddev_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
    readonly size?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Stddev_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sponsor_Tier_Stddev_Samp_Fields = {
    readonly __typename?: "sponsor_Tier_stddev_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
    readonly size?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Stddev_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Sponsor_Tier_Sum_Fields = {
    readonly __typename?: "sponsor_Tier_sum_fields";
    readonly priority?: Maybe<Scalars["Int"]>;
    readonly size?: Maybe<Scalars["numeric"]>;
};

/** order by sum() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Sum_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
};

/** update columns of table "sponsor.Tier" */
export enum Sponsor_Tier_Update_Column {
    /** column name */
    Colour = "colour",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Description = "description",
    /** column name */
    Id = "id",
    /** column name */
    Name = "name",
    /** column name */
    Priority = "priority",
    /** column name */
    ShowLogos = "showLogos",
    /** column name */
    Size = "size",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Sponsor_Tier_Var_Pop_Fields = {
    readonly __typename?: "sponsor_Tier_var_pop_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
    readonly size?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Var_Pop_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sponsor_Tier_Var_Samp_Fields = {
    readonly __typename?: "sponsor_Tier_var_samp_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
    readonly size?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Var_Samp_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Sponsor_Tier_Variance_Fields = {
    readonly __typename?: "sponsor_Tier_variance_fields";
    readonly priority?: Maybe<Scalars["Float"]>;
    readonly size?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "sponsor.Tier" */
export type Sponsor_Tier_Variance_Order_By = {
    readonly priority?: InputMaybe<Order_By>;
    readonly size?: InputMaybe<Order_By>;
};

export type Subscription_Root = {
    readonly __typename?: "subscription_root";
    /** fetch data from the table: "Email" */
    readonly Email: ReadonlyArray<Email>;
    /** fetch aggregated fields from the table: "Email" */
    readonly Email_aggregate: Email_Aggregate;
    /** fetch data from the table: "Email" using primary key columns */
    readonly Email_by_pk?: Maybe<Email>;
    /** fetch data from the table: "ForeignKeyIntrospection" */
    readonly ForeignKeyIntrospection: ReadonlyArray<ForeignKeyIntrospection>;
    /** fetch aggregated fields from the table: "ForeignKeyIntrospection" */
    readonly ForeignKeyIntrospection_aggregate: ForeignKeyIntrospection_Aggregate;
    /** fetch data from the table: "PushNotificationSubscription" */
    readonly PushNotificationSubscription: ReadonlyArray<PushNotificationSubscription>;
    /** fetch aggregated fields from the table: "PushNotificationSubscription" */
    readonly PushNotificationSubscription_aggregate: PushNotificationSubscription_Aggregate;
    /** fetch data from the table: "PushNotificationSubscription" using primary key columns */
    readonly PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
    /** fetch data from the table: "User" */
    readonly User: ReadonlyArray<User>;
    /** fetch aggregated fields from the table: "User" */
    readonly User_aggregate: User_Aggregate;
    /** fetch data from the table: "User" using primary key columns */
    readonly User_by_pk?: Maybe<User>;
    /** fetch data from the table: "analytics.AppStats" */
    readonly analytics_AppStats: ReadonlyArray<Analytics_AppStats>;
    /** fetch aggregated fields from the table: "analytics.AppStats" */
    readonly analytics_AppStats_aggregate: Analytics_AppStats_Aggregate;
    /** fetch data from the table: "analytics.AppStats" using primary key columns */
    readonly analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
    /** fetch data from the table: "analytics.CompletedRegistrations" */
    readonly analytics_CompletedRegistrations: ReadonlyArray<Analytics_CompletedRegistrations>;
    /** fetch aggregated fields from the table: "analytics.CompletedRegistrations" */
    readonly analytics_CompletedRegistrations_aggregate: Analytics_CompletedRegistrations_Aggregate;
    /** fetch data from the table: "analytics.ContentElementStats" */
    readonly analytics_ContentElementStats: ReadonlyArray<Analytics_ContentElementStats>;
    /** fetch aggregated fields from the table: "analytics.ContentElementStats" */
    readonly analytics_ContentElementStats_aggregate: Analytics_ContentElementStats_Aggregate;
    /** fetch data from the table: "analytics.ContentElementStats" using primary key columns */
    readonly analytics_ContentElementStats_by_pk?: Maybe<Analytics_ContentElementStats>;
    /** fetch data from the table: "analytics.ContentItemStats" */
    readonly analytics_ContentItemStats: ReadonlyArray<Analytics_ContentItemStats>;
    /** fetch aggregated fields from the table: "analytics.ContentItemStats" */
    readonly analytics_ContentItemStats_aggregate: Analytics_ContentItemStats_Aggregate;
    /** fetch data from the table: "analytics.ContentItemStats" using primary key columns */
    readonly analytics_ContentItemStats_by_pk?: Maybe<Analytics_ContentItemStats>;
    /** fetch data from the table: "analytics.ElementTotalViews" */
    readonly analytics_ElementTotalViews: ReadonlyArray<Analytics_ElementTotalViews>;
    /** fetch aggregated fields from the table: "analytics.ElementTotalViews" */
    readonly analytics_ElementTotalViews_aggregate: Analytics_ElementTotalViews_Aggregate;
    /** fetch data from the table: "analytics.ElementTotalViews" using primary key columns */
    readonly analytics_ElementTotalViews_by_pk?: Maybe<Analytics_ElementTotalViews>;
    /** fetch data from the table: "analytics.ItemTotalViews" */
    readonly analytics_ItemTotalViews: ReadonlyArray<Analytics_ItemTotalViews>;
    /** fetch aggregated fields from the table: "analytics.ItemTotalViews" */
    readonly analytics_ItemTotalViews_aggregate: Analytics_ItemTotalViews_Aggregate;
    /** fetch data from the table: "analytics.ItemTotalViews" using primary key columns */
    readonly analytics_ItemTotalViews_by_pk?: Maybe<Analytics_ItemTotalViews>;
    /** fetch data from the table: "analytics.RoomPresence" */
    readonly analytics_RoomPresence: ReadonlyArray<Analytics_RoomPresence>;
    /** fetch aggregated fields from the table: "analytics.RoomPresence" */
    readonly analytics_RoomPresence_aggregate: Analytics_RoomPresence_Aggregate;
    /** fetch data from the table: "analytics.RoomPresence" using primary key columns */
    readonly analytics_RoomPresence_by_pk?: Maybe<Analytics_RoomPresence>;
    /** fetch data from the table: "analytics.RoomStats" */
    readonly analytics_RoomStats: ReadonlyArray<Analytics_RoomStats>;
    /** fetch aggregated fields from the table: "analytics.RoomStats" */
    readonly analytics_RoomStats_aggregate: Analytics_RoomStats_Aggregate;
    /** fetch data from the table: "analytics.RoomStats" using primary key columns */
    readonly analytics_RoomStats_by_pk?: Maybe<Analytics_RoomStats>;
    /** fetch data from the table: "chat.Chat" */
    readonly chat_Chat: ReadonlyArray<Chat_Chat>;
    /** fetch aggregated fields from the table: "chat.Chat" */
    readonly chat_Chat_aggregate: Chat_Chat_Aggregate;
    /** fetch data from the table: "chat.Chat" using primary key columns */
    readonly chat_Chat_by_pk?: Maybe<Chat_Chat>;
    /** fetch data from the table: "chat.Flag" */
    readonly chat_Flag: ReadonlyArray<Chat_Flag>;
    /** fetch data from the table: "chat.FlagType" */
    readonly chat_FlagType: ReadonlyArray<Chat_FlagType>;
    /** fetch aggregated fields from the table: "chat.FlagType" */
    readonly chat_FlagType_aggregate: Chat_FlagType_Aggregate;
    /** fetch data from the table: "chat.FlagType" using primary key columns */
    readonly chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
    /** fetch aggregated fields from the table: "chat.Flag" */
    readonly chat_Flag_aggregate: Chat_Flag_Aggregate;
    /** fetch data from the table: "chat.Flag" using primary key columns */
    readonly chat_Flag_by_pk?: Maybe<Chat_Flag>;
    /** fetch data from the table: "chat.Message" */
    readonly chat_Message: ReadonlyArray<Chat_Message>;
    /** fetch data from the table: "chat.MessageType" */
    readonly chat_MessageType: ReadonlyArray<Chat_MessageType>;
    /** fetch aggregated fields from the table: "chat.MessageType" */
    readonly chat_MessageType_aggregate: Chat_MessageType_Aggregate;
    /** fetch data from the table: "chat.MessageType" using primary key columns */
    readonly chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
    /** fetch aggregated fields from the table: "chat.Message" */
    readonly chat_Message_aggregate: Chat_Message_Aggregate;
    /** fetch data from the table: "chat.Message" using primary key columns */
    readonly chat_Message_by_pk?: Maybe<Chat_Message>;
    /** fetch data from the table: "chat.Pin" */
    readonly chat_Pin: ReadonlyArray<Chat_Pin>;
    /** fetch aggregated fields from the table: "chat.Pin" */
    readonly chat_Pin_aggregate: Chat_Pin_Aggregate;
    /** fetch data from the table: "chat.Pin" using primary key columns */
    readonly chat_Pin_by_pk?: Maybe<Chat_Pin>;
    /** fetch data from the table: "chat.Reaction" */
    readonly chat_Reaction: ReadonlyArray<Chat_Reaction>;
    /** fetch data from the table: "chat.ReactionType" */
    readonly chat_ReactionType: ReadonlyArray<Chat_ReactionType>;
    /** fetch aggregated fields from the table: "chat.ReactionType" */
    readonly chat_ReactionType_aggregate: Chat_ReactionType_Aggregate;
    /** fetch data from the table: "chat.ReactionType" using primary key columns */
    readonly chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
    /** fetch aggregated fields from the table: "chat.Reaction" */
    readonly chat_Reaction_aggregate: Chat_Reaction_Aggregate;
    /** fetch data from the table: "chat.Reaction" using primary key columns */
    readonly chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
    /** fetch data from the table: "chat.ReadUpToIndex" */
    readonly chat_ReadUpToIndex: ReadonlyArray<Chat_ReadUpToIndex>;
    /** fetch aggregated fields from the table: "chat.ReadUpToIndex" */
    readonly chat_ReadUpToIndex_aggregate: Chat_ReadUpToIndex_Aggregate;
    /** fetch data from the table: "chat.ReadUpToIndex" using primary key columns */
    readonly chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
    /** fetch data from the table: "chat.Subscription" */
    readonly chat_Subscription: ReadonlyArray<Chat_Subscription>;
    /** fetch aggregated fields from the table: "chat.Subscription" */
    readonly chat_Subscription_aggregate: Chat_Subscription_Aggregate;
    /** fetch data from the table: "chat.Subscription" using primary key columns */
    readonly chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
    /** fetch data from the table: "collection.Exhibition" */
    readonly collection_Exhibition: ReadonlyArray<Collection_Exhibition>;
    /** fetch aggregated fields from the table: "collection.Exhibition" */
    readonly collection_Exhibition_aggregate: Collection_Exhibition_Aggregate;
    /** fetch data from the table: "collection.Exhibition" using primary key columns */
    readonly collection_Exhibition_by_pk?: Maybe<Collection_Exhibition>;
    /** fetch data from the table: "collection.ProgramPerson" */
    readonly collection_ProgramPerson: ReadonlyArray<Collection_ProgramPerson>;
    /** fetch aggregated fields from the table: "collection.ProgramPerson" */
    readonly collection_ProgramPerson_aggregate: Collection_ProgramPerson_Aggregate;
    /** fetch data from the table: "collection.ProgramPerson" using primary key columns */
    readonly collection_ProgramPerson_by_pk?: Maybe<Collection_ProgramPerson>;
    /** fetch data from the table: "collection.Tag" */
    readonly collection_Tag: ReadonlyArray<Collection_Tag>;
    /** fetch aggregated fields from the table: "collection.Tag" */
    readonly collection_Tag_aggregate: Collection_Tag_Aggregate;
    /** fetch data from the table: "collection.Tag" using primary key columns */
    readonly collection_Tag_by_pk?: Maybe<Collection_Tag>;
    /** execute function "collection.searchProgramPerson" which returns "collection.ProgramPerson" */
    readonly collection_searchProgramPerson: ReadonlyArray<Collection_ProgramPerson>;
    /** execute function "collection.searchProgramPerson" and query aggregates on result of table type "collection.ProgramPerson" */
    readonly collection_searchProgramPerson_aggregate: Collection_ProgramPerson_Aggregate;
    /** fetch data from the table: "conference.Conference" */
    readonly conference_Conference: ReadonlyArray<Conference_Conference>;
    /** fetch aggregated fields from the table: "conference.Conference" */
    readonly conference_Conference_aggregate: Conference_Conference_Aggregate;
    /** fetch data from the table: "conference.Conference" using primary key columns */
    readonly conference_Conference_by_pk?: Maybe<Conference_Conference>;
    /** fetch data from the table: "conference.Configuration" */
    readonly conference_Configuration: ReadonlyArray<Conference_Configuration>;
    /** fetch data from the table: "conference.ConfigurationKey" */
    readonly conference_ConfigurationKey: ReadonlyArray<Conference_ConfigurationKey>;
    /** fetch aggregated fields from the table: "conference.ConfigurationKey" */
    readonly conference_ConfigurationKey_aggregate: Conference_ConfigurationKey_Aggregate;
    /** fetch data from the table: "conference.ConfigurationKey" using primary key columns */
    readonly conference_ConfigurationKey_by_pk?: Maybe<Conference_ConfigurationKey>;
    /** fetch aggregated fields from the table: "conference.Configuration" */
    readonly conference_Configuration_aggregate: Conference_Configuration_Aggregate;
    /** fetch data from the table: "conference.Configuration" using primary key columns */
    readonly conference_Configuration_by_pk?: Maybe<Conference_Configuration>;
    /** fetch data from the table: "conference.DemoCode" */
    readonly conference_DemoCode: ReadonlyArray<Conference_DemoCode>;
    /** fetch aggregated fields from the table: "conference.DemoCode" */
    readonly conference_DemoCode_aggregate: Conference_DemoCode_Aggregate;
    /** fetch data from the table: "conference.DemoCode" using primary key columns */
    readonly conference_DemoCode_by_pk?: Maybe<Conference_DemoCode>;
    /** fetch data from the table: "conference.Quota" */
    readonly conference_Quota: ReadonlyArray<Conference_Quota>;
    /** fetch aggregated fields from the table: "conference.Quota" */
    readonly conference_Quota_aggregate: Conference_Quota_Aggregate;
    /** fetch data from the table: "conference.Quota" using primary key columns */
    readonly conference_Quota_by_pk?: Maybe<Conference_Quota>;
    /** fetch data from the table: "conference.RemainingQuota" */
    readonly conference_RemainingQuota: ReadonlyArray<Conference_RemainingQuota>;
    /** fetch aggregated fields from the table: "conference.RemainingQuota" */
    readonly conference_RemainingQuota_aggregate: Conference_RemainingQuota_Aggregate;
    /** fetch data from the table: "conference.Subconference" */
    readonly conference_Subconference: ReadonlyArray<Conference_Subconference>;
    /** fetch aggregated fields from the table: "conference.Subconference" */
    readonly conference_Subconference_aggregate: Conference_Subconference_Aggregate;
    /** fetch data from the table: "conference.Subconference" using primary key columns */
    readonly conference_Subconference_by_pk?: Maybe<Conference_Subconference>;
    /** fetch data from the table: "conference.Usage" */
    readonly conference_Usage: ReadonlyArray<Conference_Usage>;
    /** fetch aggregated fields from the table: "conference.Usage" */
    readonly conference_Usage_aggregate: Conference_Usage_Aggregate;
    /** fetch data from the table: "conference.Usage" using primary key columns */
    readonly conference_Usage_by_pk?: Maybe<Conference_Usage>;
    /** fetch data from the table: "conference.VisibilityLevel" */
    readonly conference_VisibilityLevel: ReadonlyArray<Conference_VisibilityLevel>;
    /** fetch aggregated fields from the table: "conference.VisibilityLevel" */
    readonly conference_VisibilityLevel_aggregate: Conference_VisibilityLevel_Aggregate;
    /** fetch data from the table: "conference.VisibilityLevel" using primary key columns */
    readonly conference_VisibilityLevel_by_pk?: Maybe<Conference_VisibilityLevel>;
    /** fetch data from the table: "content.Element" */
    readonly content_Element: ReadonlyArray<Content_Element>;
    /** fetch data from the table: "content.ElementType" */
    readonly content_ElementType: ReadonlyArray<Content_ElementType>;
    /** fetch aggregated fields from the table: "content.ElementType" */
    readonly content_ElementType_aggregate: Content_ElementType_Aggregate;
    /** fetch data from the table: "content.ElementType" using primary key columns */
    readonly content_ElementType_by_pk?: Maybe<Content_ElementType>;
    /** fetch aggregated fields from the table: "content.Element" */
    readonly content_Element_aggregate: Content_Element_Aggregate;
    /** fetch data from the table: "content.Element" using primary key columns */
    readonly content_Element_by_pk?: Maybe<Content_Element>;
    /** fetch data from the table: "content.Item" */
    readonly content_Item: ReadonlyArray<Content_Item>;
    /** fetch data from the table: "content.ItemExhibition" */
    readonly content_ItemExhibition: ReadonlyArray<Content_ItemExhibition>;
    /** fetch aggregated fields from the table: "content.ItemExhibition" */
    readonly content_ItemExhibition_aggregate: Content_ItemExhibition_Aggregate;
    /** fetch data from the table: "content.ItemExhibition" using primary key columns */
    readonly content_ItemExhibition_by_pk?: Maybe<Content_ItemExhibition>;
    /** fetch data from the table: "content.ItemProgramPerson" */
    readonly content_ItemProgramPerson: ReadonlyArray<Content_ItemProgramPerson>;
    /** fetch aggregated fields from the table: "content.ItemProgramPerson" */
    readonly content_ItemProgramPerson_aggregate: Content_ItemProgramPerson_Aggregate;
    /** fetch data from the table: "content.ItemProgramPerson" using primary key columns */
    readonly content_ItemProgramPerson_by_pk?: Maybe<Content_ItemProgramPerson>;
    /** fetch data from the table: "content.ItemTag" */
    readonly content_ItemTag: ReadonlyArray<Content_ItemTag>;
    /** fetch aggregated fields from the table: "content.ItemTag" */
    readonly content_ItemTag_aggregate: Content_ItemTag_Aggregate;
    /** fetch data from the table: "content.ItemTag" using primary key columns */
    readonly content_ItemTag_by_pk?: Maybe<Content_ItemTag>;
    /** fetch data from the table: "content.ItemType" */
    readonly content_ItemType: ReadonlyArray<Content_ItemType>;
    /** fetch aggregated fields from the table: "content.ItemType" */
    readonly content_ItemType_aggregate: Content_ItemType_Aggregate;
    /** fetch data from the table: "content.ItemType" using primary key columns */
    readonly content_ItemType_by_pk?: Maybe<Content_ItemType>;
    /** fetch aggregated fields from the table: "content.Item" */
    readonly content_Item_aggregate: Content_Item_Aggregate;
    /** fetch data from the table: "content.Item" using primary key columns */
    readonly content_Item_by_pk?: Maybe<Content_Item>;
    /** execute function "content.searchItems" which returns "content.Item" */
    readonly content_searchItems: ReadonlyArray<Content_Item>;
    /** execute function "content.searchItems" and query aggregates on result of table type "content.Item" */
    readonly content_searchItems_aggregate: Content_Item_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackCreateJob" */
    readonly job_queues_ChannelStackCreateJob: ReadonlyArray<Job_Queues_ChannelStackCreateJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackCreateJob" */
    readonly job_queues_ChannelStackCreateJob_aggregate: Job_Queues_ChannelStackCreateJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackCreateJob" using primary key columns */
    readonly job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
    /** fetch data from the table: "job_queues.ChannelStackDeleteJob" */
    readonly job_queues_ChannelStackDeleteJob: ReadonlyArray<Job_Queues_ChannelStackDeleteJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackDeleteJob" */
    readonly job_queues_ChannelStackDeleteJob_aggregate: Job_Queues_ChannelStackDeleteJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackDeleteJob" using primary key columns */
    readonly job_queues_ChannelStackDeleteJob_by_pk?: Maybe<Job_Queues_ChannelStackDeleteJob>;
    /** fetch data from the table: "job_queues.ChannelStackUpdateJob" */
    readonly job_queues_ChannelStackUpdateJob: ReadonlyArray<Job_Queues_ChannelStackUpdateJob>;
    /** fetch aggregated fields from the table: "job_queues.ChannelStackUpdateJob" */
    readonly job_queues_ChannelStackUpdateJob_aggregate: Job_Queues_ChannelStackUpdateJob_Aggregate;
    /** fetch data from the table: "job_queues.ChannelStackUpdateJob" using primary key columns */
    readonly job_queues_ChannelStackUpdateJob_by_pk?: Maybe<Job_Queues_ChannelStackUpdateJob>;
    /** fetch data from the table: "job_queues.CombineVideosJob" */
    readonly job_queues_CombineVideosJob: ReadonlyArray<Job_Queues_CombineVideosJob>;
    /** fetch aggregated fields from the table: "job_queues.CombineVideosJob" */
    readonly job_queues_CombineVideosJob_aggregate: Job_Queues_CombineVideosJob_Aggregate;
    /** fetch data from the table: "job_queues.CombineVideosJob" using primary key columns */
    readonly job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
    /** fetch data from the table: "job_queues.CustomEmailJob" */
    readonly job_queues_CustomEmailJob: ReadonlyArray<Job_Queues_CustomEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.CustomEmailJob" */
    readonly job_queues_CustomEmailJob_aggregate: Job_Queues_CustomEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.CustomEmailJob" using primary key columns */
    readonly job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
    /** fetch data from the table: "job_queues.ImportJob" */
    readonly job_queues_ImportJob: ReadonlyArray<Job_Queues_ImportJob>;
    /** fetch data from the table: "job_queues.ImportJobOutput" */
    readonly job_queues_ImportJobOutput: ReadonlyArray<Job_Queues_ImportJobOutput>;
    /** fetch aggregated fields from the table: "job_queues.ImportJobOutput" */
    readonly job_queues_ImportJobOutput_aggregate: Job_Queues_ImportJobOutput_Aggregate;
    /** fetch data from the table: "job_queues.ImportJobOutput" using primary key columns */
    readonly job_queues_ImportJobOutput_by_pk?: Maybe<Job_Queues_ImportJobOutput>;
    /** fetch aggregated fields from the table: "job_queues.ImportJob" */
    readonly job_queues_ImportJob_aggregate: Job_Queues_ImportJob_Aggregate;
    /** fetch data from the table: "job_queues.ImportJob" using primary key columns */
    readonly job_queues_ImportJob_by_pk?: Maybe<Job_Queues_ImportJob>;
    /** fetch data from the table: "job_queues.InvitationEmailJob" */
    readonly job_queues_InvitationEmailJob: ReadonlyArray<Job_Queues_InvitationEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.InvitationEmailJob" */
    readonly job_queues_InvitationEmailJob_aggregate: Job_Queues_InvitationEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.InvitationEmailJob" using primary key columns */
    readonly job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
    /** fetch data from the table: "job_queues.JobStatus" */
    readonly job_queues_JobStatus: ReadonlyArray<Job_Queues_JobStatus>;
    /** fetch aggregated fields from the table: "job_queues.JobStatus" */
    readonly job_queues_JobStatus_aggregate: Job_Queues_JobStatus_Aggregate;
    /** fetch data from the table: "job_queues.JobStatus" using primary key columns */
    readonly job_queues_JobStatus_by_pk?: Maybe<Job_Queues_JobStatus>;
    /** fetch data from the table: "job_queues.MediaPackageHarvestJob" */
    readonly job_queues_MediaPackageHarvestJob: ReadonlyArray<Job_Queues_MediaPackageHarvestJob>;
    /** fetch aggregated fields from the table: "job_queues.MediaPackageHarvestJob" */
    readonly job_queues_MediaPackageHarvestJob_aggregate: Job_Queues_MediaPackageHarvestJob_Aggregate;
    /** fetch data from the table: "job_queues.MediaPackageHarvestJob" using primary key columns */
    readonly job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
    /** fetch data from the table: "job_queues.PrepareJob" */
    readonly job_queues_PrepareJob: ReadonlyArray<Job_Queues_PrepareJob>;
    /** fetch aggregated fields from the table: "job_queues.PrepareJob" */
    readonly job_queues_PrepareJob_aggregate: Job_Queues_PrepareJob_Aggregate;
    /** fetch data from the table: "job_queues.PrepareJob" using primary key columns */
    readonly job_queues_PrepareJob_by_pk?: Maybe<Job_Queues_PrepareJob>;
    /** fetch data from the table: "job_queues.PublishVideoJob" */
    readonly job_queues_PublishVideoJob: ReadonlyArray<Job_Queues_PublishVideoJob>;
    /** fetch aggregated fields from the table: "job_queues.PublishVideoJob" */
    readonly job_queues_PublishVideoJob_aggregate: Job_Queues_PublishVideoJob_Aggregate;
    /** fetch data from the table: "job_queues.PublishVideoJob" using primary key columns */
    readonly job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
    /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" */
    readonly job_queues_SubmissionRequestEmailJob: ReadonlyArray<Job_Queues_SubmissionRequestEmailJob>;
    /** fetch aggregated fields from the table: "job_queues.SubmissionRequestEmailJob" */
    readonly job_queues_SubmissionRequestEmailJob_aggregate: Job_Queues_SubmissionRequestEmailJob_Aggregate;
    /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" using primary key columns */
    readonly job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
    /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" */
    readonly job_queues_UploadYouTubeVideoJob: ReadonlyArray<Job_Queues_UploadYouTubeVideoJob>;
    /** fetch aggregated fields from the table: "job_queues.UploadYouTubeVideoJob" */
    readonly job_queues_UploadYouTubeVideoJob_aggregate: Job_Queues_UploadYouTubeVideoJob_Aggregate;
    /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" using primary key columns */
    readonly job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
    /** fetch data from the table: "registrant.GoogleAccount" */
    readonly registrant_GoogleAccount: ReadonlyArray<Registrant_GoogleAccount>;
    /** fetch aggregated fields from the table: "registrant.GoogleAccount" */
    readonly registrant_GoogleAccount_aggregate: Registrant_GoogleAccount_Aggregate;
    /** fetch data from the table: "registrant.GoogleAccount" using primary key columns */
    readonly registrant_GoogleAccount_by_pk?: Maybe<Registrant_GoogleAccount>;
    /** fetch data from the table: "registrant.Group" */
    readonly registrant_Group: ReadonlyArray<Registrant_Group>;
    /** fetch data from the table: "registrant.GroupRegistrant" */
    readonly registrant_GroupRegistrant: ReadonlyArray<Registrant_GroupRegistrant>;
    /** fetch aggregated fields from the table: "registrant.GroupRegistrant" */
    readonly registrant_GroupRegistrant_aggregate: Registrant_GroupRegistrant_Aggregate;
    /** fetch data from the table: "registrant.GroupRegistrant" using primary key columns */
    readonly registrant_GroupRegistrant_by_pk?: Maybe<Registrant_GroupRegistrant>;
    /** fetch aggregated fields from the table: "registrant.Group" */
    readonly registrant_Group_aggregate: Registrant_Group_Aggregate;
    /** fetch data from the table: "registrant.Group" using primary key columns */
    readonly registrant_Group_by_pk?: Maybe<Registrant_Group>;
    /** fetch data from the table: "registrant.Invitation" */
    readonly registrant_Invitation: ReadonlyArray<Registrant_Invitation>;
    /** fetch aggregated fields from the table: "registrant.Invitation" */
    readonly registrant_Invitation_aggregate: Registrant_Invitation_Aggregate;
    /** fetch data from the table: "registrant.Invitation" using primary key columns */
    readonly registrant_Invitation_by_pk?: Maybe<Registrant_Invitation>;
    /** fetch data from the table: "registrant.Profile" */
    readonly registrant_Profile: ReadonlyArray<Registrant_Profile>;
    /** fetch data from the table: "registrant.ProfileBadges" */
    readonly registrant_ProfileBadges: ReadonlyArray<Registrant_ProfileBadges>;
    /** fetch aggregated fields from the table: "registrant.ProfileBadges" */
    readonly registrant_ProfileBadges_aggregate: Registrant_ProfileBadges_Aggregate;
    /** fetch aggregated fields from the table: "registrant.Profile" */
    readonly registrant_Profile_aggregate: Registrant_Profile_Aggregate;
    /** fetch data from the table: "registrant.Profile" using primary key columns */
    readonly registrant_Profile_by_pk?: Maybe<Registrant_Profile>;
    /** fetch data from the table: "registrant.Registrant" */
    readonly registrant_Registrant: ReadonlyArray<Registrant_Registrant>;
    /** fetch data from the table: "registrant.RegistrantRole" */
    readonly registrant_RegistrantRole: ReadonlyArray<Registrant_RegistrantRole>;
    /** fetch aggregated fields from the table: "registrant.RegistrantRole" */
    readonly registrant_RegistrantRole_aggregate: Registrant_RegistrantRole_Aggregate;
    /** fetch data from the table: "registrant.RegistrantRole" using primary key columns */
    readonly registrant_RegistrantRole_by_pk?: Maybe<Registrant_RegistrantRole>;
    /** fetch aggregated fields from the table: "registrant.Registrant" */
    readonly registrant_Registrant_aggregate: Registrant_Registrant_Aggregate;
    /** fetch data from the table: "registrant.Registrant" using primary key columns */
    readonly registrant_Registrant_by_pk?: Maybe<Registrant_Registrant>;
    /** fetch data from the table: "registrant.SavedVonageRoomRecording" */
    readonly registrant_SavedVonageRoomRecording: ReadonlyArray<Registrant_SavedVonageRoomRecording>;
    /** fetch aggregated fields from the table: "registrant.SavedVonageRoomRecording" */
    readonly registrant_SavedVonageRoomRecording_aggregate: Registrant_SavedVonageRoomRecording_Aggregate;
    /** fetch data from the table: "registrant.SavedVonageRoomRecording" using primary key columns */
    readonly registrant_SavedVonageRoomRecording_by_pk?: Maybe<Registrant_SavedVonageRoomRecording>;
    /** fetch data from the table: "registrant.SubconferenceMembership" */
    readonly registrant_SubconferenceMembership: ReadonlyArray<Registrant_SubconferenceMembership>;
    /** fetch aggregated fields from the table: "registrant.SubconferenceMembership" */
    readonly registrant_SubconferenceMembership_aggregate: Registrant_SubconferenceMembership_Aggregate;
    /** fetch data from the table: "registrant.SubconferenceMembership" using primary key columns */
    readonly registrant_SubconferenceMembership_by_pk?: Maybe<Registrant_SubconferenceMembership>;
    /** execute function "registrant.searchRegistrants" which returns "registrant.Registrant" */
    readonly registrant_searchRegistrants: ReadonlyArray<Registrant_Registrant>;
    /** execute function "registrant.searchRegistrants" and query aggregates on result of table type "registrant.Registrant" */
    readonly registrant_searchRegistrants_aggregate: Registrant_Registrant_Aggregate;
    /** fetch data from the table: "room.Backend" */
    readonly room_Backend: ReadonlyArray<Room_Backend>;
    /** fetch aggregated fields from the table: "room.Backend" */
    readonly room_Backend_aggregate: Room_Backend_Aggregate;
    /** fetch data from the table: "room.Backend" using primary key columns */
    readonly room_Backend_by_pk?: Maybe<Room_Backend>;
    /** fetch data from the table: "room.ChimeMeeting" */
    readonly room_ChimeMeeting: ReadonlyArray<Room_ChimeMeeting>;
    /** fetch aggregated fields from the table: "room.ChimeMeeting" */
    readonly room_ChimeMeeting_aggregate: Room_ChimeMeeting_Aggregate;
    /** fetch data from the table: "room.ChimeMeeting" using primary key columns */
    readonly room_ChimeMeeting_by_pk?: Maybe<Room_ChimeMeeting>;
    /** fetch data from the table: "room.LivestreamDurations" */
    readonly room_LivestreamDurations: ReadonlyArray<Room_LivestreamDurations>;
    /** fetch aggregated fields from the table: "room.LivestreamDurations" */
    readonly room_LivestreamDurations_aggregate: Room_LivestreamDurations_Aggregate;
    /** fetch data from the table: "room.ManagementMode" */
    readonly room_ManagementMode: ReadonlyArray<Room_ManagementMode>;
    /** fetch aggregated fields from the table: "room.ManagementMode" */
    readonly room_ManagementMode_aggregate: Room_ManagementMode_Aggregate;
    /** fetch data from the table: "room.ManagementMode" using primary key columns */
    readonly room_ManagementMode_by_pk?: Maybe<Room_ManagementMode>;
    /** fetch data from the table: "room.PersonRole" */
    readonly room_PersonRole: ReadonlyArray<Room_PersonRole>;
    /** fetch aggregated fields from the table: "room.PersonRole" */
    readonly room_PersonRole_aggregate: Room_PersonRole_Aggregate;
    /** fetch data from the table: "room.PersonRole" using primary key columns */
    readonly room_PersonRole_by_pk?: Maybe<Room_PersonRole>;
    /** fetch data from the table: "room.Room" */
    readonly room_Room: ReadonlyArray<Room_Room>;
    /** fetch data from the table: "room.RoomGroupMembership" */
    readonly room_RoomGroupMembership: ReadonlyArray<Room_RoomGroupMembership>;
    /** fetch aggregated fields from the table: "room.RoomGroupMembership" */
    readonly room_RoomGroupMembership_aggregate: Room_RoomGroupMembership_Aggregate;
    /** fetch data from the table: "room.RoomGroupMembership" using primary key columns */
    readonly room_RoomGroupMembership_by_pk?: Maybe<Room_RoomGroupMembership>;
    /** fetch data from the table: "room.RoomMembership" */
    readonly room_RoomMembership: ReadonlyArray<Room_RoomMembership>;
    /** fetch aggregated fields from the table: "room.RoomMembership" */
    readonly room_RoomMembership_aggregate: Room_RoomMembership_Aggregate;
    /** fetch data from the table: "room.RoomMembership" using primary key columns */
    readonly room_RoomMembership_by_pk?: Maybe<Room_RoomMembership>;
    /** fetch aggregated fields from the table: "room.Room" */
    readonly room_Room_aggregate: Room_Room_Aggregate;
    /** fetch data from the table: "room.Room" using primary key columns */
    readonly room_Room_by_pk?: Maybe<Room_Room>;
    /** fetch data from the table: "room.ShuffleAlgorithm" */
    readonly room_ShuffleAlgorithm: ReadonlyArray<Room_ShuffleAlgorithm>;
    /** fetch aggregated fields from the table: "room.ShuffleAlgorithm" */
    readonly room_ShuffleAlgorithm_aggregate: Room_ShuffleAlgorithm_Aggregate;
    /** fetch data from the table: "room.ShuffleAlgorithm" using primary key columns */
    readonly room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
    /** fetch data from the table: "room.ShufflePeriod" */
    readonly room_ShufflePeriod: ReadonlyArray<Room_ShufflePeriod>;
    /** fetch aggregated fields from the table: "room.ShufflePeriod" */
    readonly room_ShufflePeriod_aggregate: Room_ShufflePeriod_Aggregate;
    /** fetch data from the table: "room.ShufflePeriod" using primary key columns */
    readonly room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
    /** fetch data from the table: "room.ShuffleQueueEntry" */
    readonly room_ShuffleQueueEntry: ReadonlyArray<Room_ShuffleQueueEntry>;
    /** fetch aggregated fields from the table: "room.ShuffleQueueEntry" */
    readonly room_ShuffleQueueEntry_aggregate: Room_ShuffleQueueEntry_Aggregate;
    /** fetch data from the table: "room.ShuffleQueueEntry" using primary key columns */
    readonly room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
    /** fetch data from the table: "room.ShuffleRoom" */
    readonly room_ShuffleRoom: ReadonlyArray<Room_ShuffleRoom>;
    /** fetch aggregated fields from the table: "room.ShuffleRoom" */
    readonly room_ShuffleRoom_aggregate: Room_ShuffleRoom_Aggregate;
    /** fetch data from the table: "room.ShuffleRoom" using primary key columns */
    readonly room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
    /** fetch data from the table: "schedule.Continuation" */
    readonly schedule_Continuation: ReadonlyArray<Schedule_Continuation>;
    /** fetch aggregated fields from the table: "schedule.Continuation" */
    readonly schedule_Continuation_aggregate: Schedule_Continuation_Aggregate;
    /** fetch data from the table: "schedule.Continuation" using primary key columns */
    readonly schedule_Continuation_by_pk?: Maybe<Schedule_Continuation>;
    /** fetch data from the table: "schedule.CurrentEvents" */
    readonly schedule_CurrentEvents: ReadonlyArray<Schedule_CurrentEvents>;
    /** fetch aggregated fields from the table: "schedule.CurrentEvents" */
    readonly schedule_CurrentEvents_aggregate: Schedule_CurrentEvents_Aggregate;
    /** fetch data from the table: "schedule.Event" */
    readonly schedule_Event: ReadonlyArray<Schedule_Event>;
    /** fetch data from the table: "schedule.EventProgramPerson" */
    readonly schedule_EventProgramPerson: ReadonlyArray<Schedule_EventProgramPerson>;
    /** fetch data from the table: "schedule.EventProgramPersonRole" */
    readonly schedule_EventProgramPersonRole: ReadonlyArray<Schedule_EventProgramPersonRole>;
    /** fetch aggregated fields from the table: "schedule.EventProgramPersonRole" */
    readonly schedule_EventProgramPersonRole_aggregate: Schedule_EventProgramPersonRole_Aggregate;
    /** fetch data from the table: "schedule.EventProgramPersonRole" using primary key columns */
    readonly schedule_EventProgramPersonRole_by_pk?: Maybe<Schedule_EventProgramPersonRole>;
    /** fetch aggregated fields from the table: "schedule.EventProgramPerson" */
    readonly schedule_EventProgramPerson_aggregate: Schedule_EventProgramPerson_Aggregate;
    /** fetch data from the table: "schedule.EventProgramPerson" using primary key columns */
    readonly schedule_EventProgramPerson_by_pk?: Maybe<Schedule_EventProgramPerson>;
    /** fetch aggregated fields from the table: "schedule.Event" */
    readonly schedule_Event_aggregate: Schedule_Event_Aggregate;
    /** fetch data from the table: "schedule.Event" using primary key columns */
    readonly schedule_Event_by_pk?: Maybe<Schedule_Event>;
    /** fetch data from the table: "schedule.Mode" */
    readonly schedule_Mode: ReadonlyArray<Schedule_Mode>;
    /** fetch aggregated fields from the table: "schedule.Mode" */
    readonly schedule_Mode_aggregate: Schedule_Mode_Aggregate;
    /** fetch data from the table: "schedule.Mode" using primary key columns */
    readonly schedule_Mode_by_pk?: Maybe<Schedule_Mode>;
    /** fetch data from the table: "schedule.OverlappingEvents" */
    readonly schedule_OverlappingEvents: ReadonlyArray<Schedule_OverlappingEvents>;
    /** fetch aggregated fields from the table: "schedule.OverlappingEvents" */
    readonly schedule_OverlappingEvents_aggregate: Schedule_OverlappingEvents_Aggregate;
    /** fetch data from the table: "schedule.StarredEvent" */
    readonly schedule_StarredEvent: ReadonlyArray<Schedule_StarredEvent>;
    /** fetch aggregated fields from the table: "schedule.StarredEvent" */
    readonly schedule_StarredEvent_aggregate: Schedule_StarredEvent_Aggregate;
    /** fetch data from the table: "schedule.StarredEvent" using primary key columns */
    readonly schedule_StarredEvent_by_pk?: Maybe<Schedule_StarredEvent>;
    /** execute function "schedule.searchEvents" which returns "schedule.Event" */
    readonly schedule_searchEvents: ReadonlyArray<Schedule_Event>;
    /** execute function "schedule.searchEvents" and query aggregates on result of table type "schedule.Event" */
    readonly schedule_searchEvents_aggregate: Schedule_Event_Aggregate;
    /** fetch data from the table: "sponsor.Tier" */
    readonly sponsor_Tier: ReadonlyArray<Sponsor_Tier>;
    /** fetch data from the table: "sponsor.TierMember" */
    readonly sponsor_TierMember: ReadonlyArray<Sponsor_TierMember>;
    /** fetch aggregated fields from the table: "sponsor.TierMember" */
    readonly sponsor_TierMember_aggregate: Sponsor_TierMember_Aggregate;
    /** fetch data from the table: "sponsor.TierMember" using primary key columns */
    readonly sponsor_TierMember_by_pk?: Maybe<Sponsor_TierMember>;
    /** fetch aggregated fields from the table: "sponsor.Tier" */
    readonly sponsor_Tier_aggregate: Sponsor_Tier_Aggregate;
    /** fetch data from the table: "sponsor.Tier" using primary key columns */
    readonly sponsor_Tier_by_pk?: Maybe<Sponsor_Tier>;
    /** fetch data from the table: "system.Configuration" */
    readonly system_Configuration: ReadonlyArray<System_Configuration>;
    /** fetch data from the table: "system.ConfigurationKey" */
    readonly system_ConfigurationKey: ReadonlyArray<System_ConfigurationKey>;
    /** fetch aggregated fields from the table: "system.ConfigurationKey" */
    readonly system_ConfigurationKey_aggregate: System_ConfigurationKey_Aggregate;
    /** fetch data from the table: "system.ConfigurationKey" using primary key columns */
    readonly system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
    /** fetch data from the table: "system.ConfigurationPermissionGrant" */
    readonly system_ConfigurationPermissionGrant: ReadonlyArray<System_ConfigurationPermissionGrant>;
    /** fetch aggregated fields from the table: "system.ConfigurationPermissionGrant" */
    readonly system_ConfigurationPermissionGrant_aggregate: System_ConfigurationPermissionGrant_Aggregate;
    /** fetch data from the table: "system.ConfigurationPermissionGrant" using primary key columns */
    readonly system_ConfigurationPermissionGrant_by_pk?: Maybe<System_ConfigurationPermissionGrant>;
    /** fetch aggregated fields from the table: "system.Configuration" */
    readonly system_Configuration_aggregate: System_Configuration_Aggregate;
    /** fetch data from the table: "system.Configuration" using primary key columns */
    readonly system_Configuration_by_pk?: Maybe<System_Configuration>;
    /** fetch data from the table: "system.SuperUserPermission" */
    readonly system_SuperUserPermission: ReadonlyArray<System_SuperUserPermission>;
    /** fetch data from the table: "system.SuperUserPermissionGrant" */
    readonly system_SuperUserPermissionGrant: ReadonlyArray<System_SuperUserPermissionGrant>;
    /** fetch aggregated fields from the table: "system.SuperUserPermissionGrant" */
    readonly system_SuperUserPermissionGrant_aggregate: System_SuperUserPermissionGrant_Aggregate;
    /** fetch data from the table: "system.SuperUserPermissionGrant" using primary key columns */
    readonly system_SuperUserPermissionGrant_by_pk?: Maybe<System_SuperUserPermissionGrant>;
    /** fetch aggregated fields from the table: "system.SuperUserPermission" */
    readonly system_SuperUserPermission_aggregate: System_SuperUserPermission_Aggregate;
    /** fetch data from the table: "system.SuperUserPermission" using primary key columns */
    readonly system_SuperUserPermission_by_pk?: Maybe<System_SuperUserPermission>;
    /** fetch data from the table: "system.SuperUserState" */
    readonly system_SuperUserState: ReadonlyArray<System_SuperUserState>;
    /** fetch aggregated fields from the table: "system.SuperUserState" */
    readonly system_SuperUserState_aggregate: System_SuperUserState_Aggregate;
    /** fetch data from the table: "video.ChannelStack" */
    readonly video_ChannelStack: ReadonlyArray<Video_ChannelStack>;
    /** fetch aggregated fields from the table: "video.ChannelStack" */
    readonly video_ChannelStack_aggregate: Video_ChannelStack_Aggregate;
    /** fetch data from the table: "video.ChannelStack" using primary key columns */
    readonly video_ChannelStack_by_pk?: Maybe<Video_ChannelStack>;
    /** fetch data from the table: "video.EventVonageSession" */
    readonly video_EventVonageSession: ReadonlyArray<Video_EventVonageSession>;
    /** fetch aggregated fields from the table: "video.EventVonageSession" */
    readonly video_EventVonageSession_aggregate: Video_EventVonageSession_Aggregate;
    /** fetch data from the table: "video.EventVonageSession" using primary key columns */
    readonly video_EventVonageSession_by_pk?: Maybe<Video_EventVonageSession>;
    /** fetch data from the table: "video.ImmediateSwitch" */
    readonly video_ImmediateSwitch: ReadonlyArray<Video_ImmediateSwitch>;
    /** fetch aggregated fields from the table: "video.ImmediateSwitch" */
    readonly video_ImmediateSwitch_aggregate: Video_ImmediateSwitch_Aggregate;
    /** fetch data from the table: "video.ImmediateSwitch" using primary key columns */
    readonly video_ImmediateSwitch_by_pk?: Maybe<Video_ImmediateSwitch>;
    /** fetch data from the table: "video.InputType" */
    readonly video_InputType: ReadonlyArray<Video_InputType>;
    /** fetch aggregated fields from the table: "video.InputType" */
    readonly video_InputType_aggregate: Video_InputType_Aggregate;
    /** fetch data from the table: "video.InputType" using primary key columns */
    readonly video_InputType_by_pk?: Maybe<Video_InputType>;
    /** fetch data from the table: "video.MediaLiveChannelStatus" */
    readonly video_MediaLiveChannelStatus: ReadonlyArray<Video_MediaLiveChannelStatus>;
    /** fetch aggregated fields from the table: "video.MediaLiveChannelStatus" */
    readonly video_MediaLiveChannelStatus_aggregate: Video_MediaLiveChannelStatus_Aggregate;
    /** fetch data from the table: "video.MediaLiveChannelStatus" using primary key columns */
    readonly video_MediaLiveChannelStatus_by_pk?: Maybe<Video_MediaLiveChannelStatus>;
    /** fetch data from the table: "video.RoomRtmpInput" */
    readonly video_RoomRtmpInput: ReadonlyArray<Video_RoomRtmpInput>;
    /** fetch aggregated fields from the table: "video.RoomRtmpInput" */
    readonly video_RoomRtmpInput_aggregate: Video_RoomRtmpInput_Aggregate;
    /** fetch data from the table: "video.RoomRtmpInput" using primary key columns */
    readonly video_RoomRtmpInput_by_pk?: Maybe<Video_RoomRtmpInput>;
    /** fetch data from the table: "video.RoomRtmpOutput" */
    readonly video_RoomRtmpOutput: ReadonlyArray<Video_RoomRtmpOutput>;
    /** fetch aggregated fields from the table: "video.RoomRtmpOutput" */
    readonly video_RoomRtmpOutput_aggregate: Video_RoomRtmpOutput_Aggregate;
    /** fetch data from the table: "video.RoomRtmpOutput" using primary key columns */
    readonly video_RoomRtmpOutput_by_pk?: Maybe<Video_RoomRtmpOutput>;
    /** fetch data from the table: "video.RtmpInput" */
    readonly video_RtmpInput: ReadonlyArray<Video_RtmpInput>;
    /** fetch aggregated fields from the table: "video.RtmpInput" */
    readonly video_RtmpInput_aggregate: Video_RtmpInput_Aggregate;
    /** fetch data from the table: "video.RtmpInput" using primary key columns */
    readonly video_RtmpInput_by_pk?: Maybe<Video_RtmpInput>;
    /** fetch data from the table: "video.TranscriptionJob" */
    readonly video_TranscriptionJob: ReadonlyArray<Video_TranscriptionJob>;
    /** fetch aggregated fields from the table: "video.TranscriptionJob" */
    readonly video_TranscriptionJob_aggregate: Video_TranscriptionJob_Aggregate;
    /** fetch data from the table: "video.TranscriptionJob" using primary key columns */
    readonly video_TranscriptionJob_by_pk?: Maybe<Video_TranscriptionJob>;
    /** fetch data from the table: "video.VideoRenderJob" */
    readonly video_VideoRenderJob: ReadonlyArray<Video_VideoRenderJob>;
    /** fetch aggregated fields from the table: "video.VideoRenderJob" */
    readonly video_VideoRenderJob_aggregate: Video_VideoRenderJob_Aggregate;
    /** fetch data from the table: "video.VideoRenderJob" using primary key columns */
    readonly video_VideoRenderJob_by_pk?: Maybe<Video_VideoRenderJob>;
    /** fetch data from the table: "video.VonageParticipantStream" */
    readonly video_VonageParticipantStream: ReadonlyArray<Video_VonageParticipantStream>;
    /** fetch aggregated fields from the table: "video.VonageParticipantStream" */
    readonly video_VonageParticipantStream_aggregate: Video_VonageParticipantStream_Aggregate;
    /** fetch data from the table: "video.VonageParticipantStream" using primary key columns */
    readonly video_VonageParticipantStream_by_pk?: Maybe<Video_VonageParticipantStream>;
    /** fetch data from the table: "video.VonageRoomRecording" */
    readonly video_VonageRoomRecording: ReadonlyArray<Video_VonageRoomRecording>;
    /** fetch aggregated fields from the table: "video.VonageRoomRecording" */
    readonly video_VonageRoomRecording_aggregate: Video_VonageRoomRecording_Aggregate;
    /** fetch data from the table: "video.VonageRoomRecording" using primary key columns */
    readonly video_VonageRoomRecording_by_pk?: Maybe<Video_VonageRoomRecording>;
    /** fetch data from the table: "video.VonageSessionLayout" */
    readonly video_VonageSessionLayout: ReadonlyArray<Video_VonageSessionLayout>;
    /** fetch aggregated fields from the table: "video.VonageSessionLayout" */
    readonly video_VonageSessionLayout_aggregate: Video_VonageSessionLayout_Aggregate;
    /** fetch data from the table: "video.VonageSessionLayout" using primary key columns */
    readonly video_VonageSessionLayout_by_pk?: Maybe<Video_VonageSessionLayout>;
    /** fetch data from the table: "video.VonageVideoPlaybackCommand" */
    readonly video_VonageVideoPlaybackCommand: ReadonlyArray<Video_VonageVideoPlaybackCommand>;
    /** fetch aggregated fields from the table: "video.VonageVideoPlaybackCommand" */
    readonly video_VonageVideoPlaybackCommand_aggregate: Video_VonageVideoPlaybackCommand_Aggregate;
    /** fetch data from the table: "video.VonageVideoPlaybackCommand" using primary key columns */
    readonly video_VonageVideoPlaybackCommand_by_pk?: Maybe<Video_VonageVideoPlaybackCommand>;
    /** fetch data from the table: "video.YouTubeUpload" */
    readonly video_YouTubeUpload: ReadonlyArray<Video_YouTubeUpload>;
    /** fetch aggregated fields from the table: "video.YouTubeUpload" */
    readonly video_YouTubeUpload_aggregate: Video_YouTubeUpload_Aggregate;
    /** fetch data from the table: "video.YouTubeUpload" using primary key columns */
    readonly video_YouTubeUpload_by_pk?: Maybe<Video_YouTubeUpload>;
};

export type Subscription_RootEmailArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

export type Subscription_RootEmail_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Email_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Email_Order_By>>;
    where?: InputMaybe<Email_Bool_Exp>;
};

export type Subscription_RootEmail_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootForeignKeyIntrospectionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Order_By>>;
    where?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
};

export type Subscription_RootForeignKeyIntrospection_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<ForeignKeyIntrospection_Order_By>>;
    where?: InputMaybe<ForeignKeyIntrospection_Bool_Exp>;
};

export type Subscription_RootPushNotificationSubscriptionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

export type Subscription_RootPushNotificationSubscription_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<PushNotificationSubscription_Order_By>>;
    where?: InputMaybe<PushNotificationSubscription_Bool_Exp>;
};

export type Subscription_RootPushNotificationSubscription_By_PkArgs = {
    endpoint: Scalars["String"];
};

export type Subscription_RootUserArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<User_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<User_Order_By>>;
    where?: InputMaybe<User_Bool_Exp>;
};

export type Subscription_RootUser_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<User_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<User_Order_By>>;
    where?: InputMaybe<User_Bool_Exp>;
};

export type Subscription_RootUser_By_PkArgs = {
    id: Scalars["String"];
};

export type Subscription_RootAnalytics_AppStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_AppStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_AppStats_Order_By>>;
    where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_AppStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_AppStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_AppStats_Order_By>>;
    where?: InputMaybe<Analytics_AppStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_AppStats_By_PkArgs = {
    id: Scalars["Int"];
};

export type Subscription_RootAnalytics_CompletedRegistrationsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Order_By>>;
    where?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
};

export type Subscription_RootAnalytics_CompletedRegistrations_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_CompletedRegistrations_Order_By>>;
    where?: InputMaybe<Analytics_CompletedRegistrations_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentElementStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentElementStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentElementStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentElementStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentElementStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootAnalytics_ContentItemStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentItemStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ContentItemStats_Order_By>>;
    where?: InputMaybe<Analytics_ContentItemStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_ContentItemStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootAnalytics_ElementTotalViewsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

export type Subscription_RootAnalytics_ElementTotalViews_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ElementTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ElementTotalViews_Bool_Exp>;
};

export type Subscription_RootAnalytics_ElementTotalViews_By_PkArgs = {
    elementId: Scalars["uuid"];
};

export type Subscription_RootAnalytics_ItemTotalViewsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

export type Subscription_RootAnalytics_ItemTotalViews_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_ItemTotalViews_Order_By>>;
    where?: InputMaybe<Analytics_ItemTotalViews_Bool_Exp>;
};

export type Subscription_RootAnalytics_ItemTotalViews_By_PkArgs = {
    itemId: Scalars["uuid"];
};

export type Subscription_RootAnalytics_RoomPresenceArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

export type Subscription_RootAnalytics_RoomPresence_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomPresence_Order_By>>;
    where?: InputMaybe<Analytics_RoomPresence_Bool_Exp>;
};

export type Subscription_RootAnalytics_RoomPresence_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootAnalytics_RoomStatsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_RoomStats_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Analytics_RoomStats_Order_By>>;
    where?: InputMaybe<Analytics_RoomStats_Bool_Exp>;
};

export type Subscription_RootAnalytics_RoomStats_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootChat_ChatArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

export type Subscription_RootChat_Chat_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Chat_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Chat_Order_By>>;
    where?: InputMaybe<Chat_Chat_Bool_Exp>;
};

export type Subscription_RootChat_Chat_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootChat_FlagArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

export type Subscription_RootChat_FlagTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_FlagType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_FlagType_Order_By>>;
    where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

export type Subscription_RootChat_FlagType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_FlagType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_FlagType_Order_By>>;
    where?: InputMaybe<Chat_FlagType_Bool_Exp>;
};

export type Subscription_RootChat_FlagType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootChat_Flag_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Flag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Flag_Order_By>>;
    where?: InputMaybe<Chat_Flag_Bool_Exp>;
};

export type Subscription_RootChat_Flag_By_PkArgs = {
    id: Scalars["Int"];
};

export type Subscription_RootChat_MessageArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

export type Subscription_RootChat_MessageTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_MessageType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_MessageType_Order_By>>;
    where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

export type Subscription_RootChat_MessageType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_MessageType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_MessageType_Order_By>>;
    where?: InputMaybe<Chat_MessageType_Bool_Exp>;
};

export type Subscription_RootChat_MessageType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootChat_Message_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Message_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Message_Order_By>>;
    where?: InputMaybe<Chat_Message_Bool_Exp>;
};

export type Subscription_RootChat_Message_By_PkArgs = {
    id: Scalars["Int"];
};

export type Subscription_RootChat_PinArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

export type Subscription_RootChat_Pin_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Pin_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Pin_Order_By>>;
    where?: InputMaybe<Chat_Pin_Bool_Exp>;
};

export type Subscription_RootChat_Pin_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Subscription_RootChat_ReactionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

export type Subscription_RootChat_ReactionTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReactionType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReactionType_Order_By>>;
    where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

export type Subscription_RootChat_ReactionType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReactionType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReactionType_Order_By>>;
    where?: InputMaybe<Chat_ReactionType_Bool_Exp>;
};

export type Subscription_RootChat_ReactionType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootChat_Reaction_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Reaction_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Reaction_Order_By>>;
    where?: InputMaybe<Chat_Reaction_Bool_Exp>;
};

export type Subscription_RootChat_Reaction_By_PkArgs = {
    sId: Scalars["uuid"];
};

export type Subscription_RootChat_ReadUpToIndexArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

export type Subscription_RootChat_ReadUpToIndex_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_ReadUpToIndex_Order_By>>;
    where?: InputMaybe<Chat_ReadUpToIndex_Bool_Exp>;
};

export type Subscription_RootChat_ReadUpToIndex_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Subscription_RootChat_SubscriptionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

export type Subscription_RootChat_Subscription_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Chat_Subscription_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Chat_Subscription_Order_By>>;
    where?: InputMaybe<Chat_Subscription_Bool_Exp>;
};

export type Subscription_RootChat_Subscription_By_PkArgs = {
    chatId: Scalars["uuid"];
    registrantId: Scalars["uuid"];
};

export type Subscription_RootCollection_ExhibitionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

export type Subscription_RootCollection_Exhibition_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Exhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Exhibition_Order_By>>;
    where?: InputMaybe<Collection_Exhibition_Bool_Exp>;
};

export type Subscription_RootCollection_Exhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootCollection_ProgramPersonArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Subscription_RootCollection_ProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Subscription_RootCollection_ProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootCollection_TagArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

export type Subscription_RootCollection_Tag_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Collection_Tag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_Tag_Order_By>>;
    where?: InputMaybe<Collection_Tag_Bool_Exp>;
};

export type Subscription_RootCollection_Tag_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootCollection_SearchProgramPersonArgs = {
    args: Collection_SearchProgramPerson_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Subscription_RootCollection_SearchProgramPerson_AggregateArgs = {
    args: Collection_SearchProgramPerson_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Collection_ProgramPerson_Order_By>>;
    where?: InputMaybe<Collection_ProgramPerson_Bool_Exp>;
};

export type Subscription_RootConference_ConferenceArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

export type Subscription_RootConference_Conference_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Conference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Conference_Order_By>>;
    where?: InputMaybe<Conference_Conference_Bool_Exp>;
};

export type Subscription_RootConference_Conference_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_ConfigurationArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

export type Subscription_RootConference_ConfigurationKeyArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Order_By>>;
    where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

export type Subscription_RootConference_ConfigurationKey_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_ConfigurationKey_Order_By>>;
    where?: InputMaybe<Conference_ConfigurationKey_Bool_Exp>;
};

export type Subscription_RootConference_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootConference_Configuration_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Configuration_Order_By>>;
    where?: InputMaybe<Conference_Configuration_Bool_Exp>;
};

export type Subscription_RootConference_Configuration_By_PkArgs = {
    conferenceId: Scalars["uuid"];
    key: Conference_ConfigurationKey_Enum;
};

export type Subscription_RootConference_DemoCodeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

export type Subscription_RootConference_DemoCode_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_DemoCode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_DemoCode_Order_By>>;
    where?: InputMaybe<Conference_DemoCode_Bool_Exp>;
};

export type Subscription_RootConference_DemoCode_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_QuotaArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Quota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Quota_Order_By>>;
    where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

export type Subscription_RootConference_Quota_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Quota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Quota_Order_By>>;
    where?: InputMaybe<Conference_Quota_Bool_Exp>;
};

export type Subscription_RootConference_Quota_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_RemainingQuotaArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Order_By>>;
    where?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
};

export type Subscription_RootConference_RemainingQuota_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_RemainingQuota_Order_By>>;
    where?: InputMaybe<Conference_RemainingQuota_Bool_Exp>;
};

export type Subscription_RootConference_SubconferenceArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

export type Subscription_RootConference_Subconference_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Subconference_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Subconference_Order_By>>;
    where?: InputMaybe<Conference_Subconference_Bool_Exp>;
};

export type Subscription_RootConference_Subconference_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_UsageArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

export type Subscription_RootConference_Usage_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_Usage_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_Usage_Order_By>>;
    where?: InputMaybe<Conference_Usage_Bool_Exp>;
};

export type Subscription_RootConference_Usage_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootConference_VisibilityLevelArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Order_By>>;
    where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

export type Subscription_RootConference_VisibilityLevel_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Conference_VisibilityLevel_Order_By>>;
    where?: InputMaybe<Conference_VisibilityLevel_Bool_Exp>;
};

export type Subscription_RootConference_VisibilityLevel_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootContent_ElementArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

export type Subscription_RootContent_ElementTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ElementType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ElementType_Order_By>>;
    where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

export type Subscription_RootContent_ElementType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ElementType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ElementType_Order_By>>;
    where?: InputMaybe<Content_ElementType_Bool_Exp>;
};

export type Subscription_RootContent_ElementType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootContent_Element_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Element_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Element_Order_By>>;
    where?: InputMaybe<Content_Element_Bool_Exp>;
};

export type Subscription_RootContent_Element_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_ItemArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Subscription_RootContent_ItemExhibitionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

export type Subscription_RootContent_ItemExhibition_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemExhibition_Order_By>>;
    where?: InputMaybe<Content_ItemExhibition_Bool_Exp>;
};

export type Subscription_RootContent_ItemExhibition_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_ItemProgramPersonArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

export type Subscription_RootContent_ItemProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemProgramPerson_Order_By>>;
    where?: InputMaybe<Content_ItemProgramPerson_Bool_Exp>;
};

export type Subscription_RootContent_ItemProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_ItemTagArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

export type Subscription_RootContent_ItemTag_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemTag_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemTag_Order_By>>;
    where?: InputMaybe<Content_ItemTag_Bool_Exp>;
};

export type Subscription_RootContent_ItemTag_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_ItemTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemType_Order_By>>;
    where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

export type Subscription_RootContent_ItemType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_ItemType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_ItemType_Order_By>>;
    where?: InputMaybe<Content_ItemType_Bool_Exp>;
};

export type Subscription_RootContent_ItemType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootContent_Item_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Subscription_RootContent_Item_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootContent_SearchItemsArgs = {
    args: Content_SearchItems_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Subscription_RootContent_SearchItems_AggregateArgs = {
    args: Content_SearchItems_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Content_Item_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Content_Item_Order_By>>;
    where?: InputMaybe<Content_Item_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackCreateJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackCreateJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackCreateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackCreateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_ChannelStackDeleteJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackDeleteJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackDeleteJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackDeleteJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackDeleteJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_ChannelStackUpdateJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackUpdateJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ChannelStackUpdateJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_CombineVideosJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_CombineVideosJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_CombineVideosJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_CombineVideosJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_CustomEmailJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_CustomEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_CustomEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_CustomEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_ImportJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ImportJobOutputArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ImportJobOutput_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJobOutput_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJobOutput_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ImportJobOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_ImportJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ImportJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ImportJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_ImportJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_InvitationEmailJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_InvitationEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_InvitationEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_InvitationEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_JobStatusArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Order_By>>;
    where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

export type Subscription_RootJob_Queues_JobStatus_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_JobStatus_Order_By>>;
    where?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
};

export type Subscription_RootJob_Queues_JobStatus_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootJob_Queues_MediaPackageHarvestJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Order_By>>;
    where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_MediaPackageHarvestJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_MediaPackageHarvestJob_Order_By>>;
    where?: InputMaybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_MediaPackageHarvestJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_PrepareJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_PrepareJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_PrepareJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_PrepareJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_PublishVideoJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_PublishVideoJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_PublishVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_PublishVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_SubmissionRequestEmailJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_SubmissionRequestEmailJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
    where?: InputMaybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_SubmissionRequestEmailJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootJob_Queues_UploadYouTubeVideoJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_UploadYouTubeVideoJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
    where?: InputMaybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

export type Subscription_RootJob_Queues_UploadYouTubeVideoJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_GoogleAccountArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Order_By>>;
    where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

export type Subscription_RootRegistrant_GoogleAccount_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GoogleAccount_Order_By>>;
    where?: InputMaybe<Registrant_GoogleAccount_Bool_Exp>;
};

export type Subscription_RootRegistrant_GoogleAccount_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_GroupArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Group_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Group_Order_By>>;
    where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

export type Subscription_RootRegistrant_GroupRegistrantArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_GroupRegistrant_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_GroupRegistrant_Order_By>>;
    where?: InputMaybe<Registrant_GroupRegistrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_GroupRegistrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_Group_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Group_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Group_Order_By>>;
    where?: InputMaybe<Registrant_Group_Bool_Exp>;
};

export type Subscription_RootRegistrant_Group_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_InvitationArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

export type Subscription_RootRegistrant_Invitation_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Invitation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Invitation_Order_By>>;
    where?: InputMaybe<Registrant_Invitation_Bool_Exp>;
};

export type Subscription_RootRegistrant_Invitation_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_ProfileArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Profile_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Profile_Order_By>>;
    where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

export type Subscription_RootRegistrant_ProfileBadgesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

export type Subscription_RootRegistrant_ProfileBadges_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_ProfileBadges_Order_By>>;
    where?: InputMaybe<Registrant_ProfileBadges_Bool_Exp>;
};

export type Subscription_RootRegistrant_Profile_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Profile_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Profile_Order_By>>;
    where?: InputMaybe<Registrant_Profile_Bool_Exp>;
};

export type Subscription_RootRegistrant_Profile_By_PkArgs = {
    registrantId: Scalars["uuid"];
};

export type Subscription_RootRegistrant_RegistrantArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_RegistrantRoleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Order_By>>;
    where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

export type Subscription_RootRegistrant_RegistrantRole_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_RegistrantRole_Order_By>>;
    where?: InputMaybe<Registrant_RegistrantRole_Bool_Exp>;
};

export type Subscription_RootRegistrant_RegistrantRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRegistrant_Registrant_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_Registrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_SavedVonageRoomRecordingArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

export type Subscription_RootRegistrant_SavedVonageRoomRecording_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

export type Subscription_RootRegistrant_SavedVonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_SubconferenceMembershipArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

export type Subscription_RootRegistrant_SubconferenceMembership_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SubconferenceMembership_Order_By>>;
    where?: InputMaybe<Registrant_SubconferenceMembership_Bool_Exp>;
};

export type Subscription_RootRegistrant_SubconferenceMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRegistrant_SearchRegistrantsArgs = {
    args: Registrant_SearchRegistrants_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Subscription_RootRegistrant_SearchRegistrants_AggregateArgs = {
    args: Registrant_SearchRegistrants_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_Registrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_Registrant_Order_By>>;
    where?: InputMaybe<Registrant_Registrant_Bool_Exp>;
};

export type Subscription_RootRoom_BackendArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Backend_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Backend_Order_By>>;
    where?: InputMaybe<Room_Backend_Bool_Exp>;
};

export type Subscription_RootRoom_Backend_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Backend_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Backend_Order_By>>;
    where?: InputMaybe<Room_Backend_Bool_Exp>;
};

export type Subscription_RootRoom_Backend_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRoom_ChimeMeetingArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Order_By>>;
    where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

export type Subscription_RootRoom_ChimeMeeting_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ChimeMeeting_Order_By>>;
    where?: InputMaybe<Room_ChimeMeeting_Bool_Exp>;
};

export type Subscription_RootRoom_ChimeMeeting_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_LivestreamDurationsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Order_By>>;
    where?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
};

export type Subscription_RootRoom_LivestreamDurations_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_LivestreamDurations_Order_By>>;
    where?: InputMaybe<Room_LivestreamDurations_Bool_Exp>;
};

export type Subscription_RootRoom_ManagementModeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ManagementMode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ManagementMode_Order_By>>;
    where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

export type Subscription_RootRoom_ManagementMode_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ManagementMode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ManagementMode_Order_By>>;
    where?: InputMaybe<Room_ManagementMode_Bool_Exp>;
};

export type Subscription_RootRoom_ManagementMode_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRoom_PersonRoleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_PersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_PersonRole_Order_By>>;
    where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

export type Subscription_RootRoom_PersonRole_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_PersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_PersonRole_Order_By>>;
    where?: InputMaybe<Room_PersonRole_Bool_Exp>;
};

export type Subscription_RootRoom_PersonRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRoom_RoomArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

export type Subscription_RootRoom_RoomGroupMembershipArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Order_By>>;
    where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

export type Subscription_RootRoom_RoomGroupMembership_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomGroupMembership_Order_By>>;
    where?: InputMaybe<Room_RoomGroupMembership_Bool_Exp>;
};

export type Subscription_RootRoom_RoomGroupMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_RoomMembershipArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

export type Subscription_RootRoom_RoomMembership_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_RoomMembership_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_RoomMembership_Order_By>>;
    where?: InputMaybe<Room_RoomMembership_Bool_Exp>;
};

export type Subscription_RootRoom_RoomMembership_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_Room_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

export type Subscription_RootRoom_Room_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_ShuffleAlgorithmArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Order_By>>;
    where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleAlgorithm_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleAlgorithm_Order_By>>;
    where?: InputMaybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleAlgorithm_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootRoom_ShufflePeriodArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

export type Subscription_RootRoom_ShufflePeriod_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShufflePeriod_Order_By>>;
    where?: InputMaybe<Room_ShufflePeriod_Bool_Exp>;
};

export type Subscription_RootRoom_ShufflePeriod_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootRoom_ShuffleQueueEntryArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleQueueEntry_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleQueueEntry_Order_By>>;
    where?: InputMaybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleQueueEntry_By_PkArgs = {
    id: Scalars["bigint"];
};

export type Subscription_RootRoom_ShuffleRoomArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleRoom_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_ShuffleRoom_Order_By>>;
    where?: InputMaybe<Room_ShuffleRoom_Bool_Exp>;
};

export type Subscription_RootRoom_ShuffleRoom_By_PkArgs = {
    id: Scalars["bigint"];
};

export type Subscription_RootSchedule_ContinuationArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

export type Subscription_RootSchedule_Continuation_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Continuation_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Continuation_Order_By>>;
    where?: InputMaybe<Schedule_Continuation_Bool_Exp>;
};

export type Subscription_RootSchedule_Continuation_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSchedule_CurrentEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

export type Subscription_RootSchedule_CurrentEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_CurrentEvents_Order_By>>;
    where?: InputMaybe<Schedule_CurrentEvents_Bool_Exp>;
};

export type Subscription_RootSchedule_EventArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPersonArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPersonRoleArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPersonRole_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPersonRole_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPersonRole_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPersonRole_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootSchedule_EventProgramPerson_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_EventProgramPerson_Order_By>>;
    where?: InputMaybe<Schedule_EventProgramPerson_Bool_Exp>;
};

export type Subscription_RootSchedule_EventProgramPerson_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSchedule_Event_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Subscription_RootSchedule_Event_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSchedule_ModeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Mode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Mode_Order_By>>;
    where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

export type Subscription_RootSchedule_Mode_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Mode_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Mode_Order_By>>;
    where?: InputMaybe<Schedule_Mode_Bool_Exp>;
};

export type Subscription_RootSchedule_Mode_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootSchedule_OverlappingEventsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Order_By>>;
    where?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
};

export type Subscription_RootSchedule_OverlappingEvents_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_OverlappingEvents_Order_By>>;
    where?: InputMaybe<Schedule_OverlappingEvents_Bool_Exp>;
};

export type Subscription_RootSchedule_StarredEventArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Order_By>>;
    where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

export type Subscription_RootSchedule_StarredEvent_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_StarredEvent_Order_By>>;
    where?: InputMaybe<Schedule_StarredEvent_Bool_Exp>;
};

export type Subscription_RootSchedule_StarredEvent_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSchedule_SearchEventsArgs = {
    args: Schedule_SearchEvents_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Subscription_RootSchedule_SearchEvents_AggregateArgs = {
    args: Schedule_SearchEvents_Args;
    distinct_on?: InputMaybe<ReadonlyArray<Schedule_Event_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Schedule_Event_Order_By>>;
    where?: InputMaybe<Schedule_Event_Bool_Exp>;
};

export type Subscription_RootSponsor_TierArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

export type Subscription_RootSponsor_TierMemberArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

export type Subscription_RootSponsor_TierMember_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_TierMember_Order_By>>;
    where?: InputMaybe<Sponsor_TierMember_Bool_Exp>;
};

export type Subscription_RootSponsor_TierMember_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSponsor_Tier_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Sponsor_Tier_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Sponsor_Tier_Order_By>>;
    where?: InputMaybe<Sponsor_Tier_Bool_Exp>;
};

export type Subscription_RootSponsor_Tier_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSystem_ConfigurationArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_Configuration_Order_By>>;
    where?: InputMaybe<System_Configuration_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationKeyArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Order_By>>;
    where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationKey_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Order_By>>;
    where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationKey_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootSystem_ConfigurationPermissionGrantArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationPermissionGrant_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

export type Subscription_RootSystem_ConfigurationPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSystem_Configuration_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_Configuration_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_Configuration_Order_By>>;
    where?: InputMaybe<System_Configuration_Bool_Exp>;
};

export type Subscription_RootSystem_Configuration_By_PkArgs = {
    key: System_ConfigurationKey_Enum;
};

export type Subscription_RootSystem_SuperUserPermissionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Order_By>>;
    where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserPermissionGrantArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserPermissionGrant_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserPermissionGrant_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootSystem_SuperUserPermission_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Order_By>>;
    where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserPermission_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootSystem_SuperUserStateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserState_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserState_Order_By>>;
    where?: InputMaybe<System_SuperUserState_Bool_Exp>;
};

export type Subscription_RootSystem_SuperUserState_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserState_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserState_Order_By>>;
    where?: InputMaybe<System_SuperUserState_Bool_Exp>;
};

export type Subscription_RootVideo_ChannelStackArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_ChannelStack_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_ChannelStack_Order_By>>;
    where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

export type Subscription_RootVideo_ChannelStack_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_ChannelStack_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_ChannelStack_Order_By>>;
    where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

export type Subscription_RootVideo_ChannelStack_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_EventVonageSessionArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Order_By>>;
    where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

export type Subscription_RootVideo_EventVonageSession_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Order_By>>;
    where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

export type Subscription_RootVideo_EventVonageSession_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_ImmediateSwitchArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Order_By>>;
    where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

export type Subscription_RootVideo_ImmediateSwitch_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Order_By>>;
    where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

export type Subscription_RootVideo_ImmediateSwitch_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_InputTypeArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_InputType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_InputType_Order_By>>;
    where?: InputMaybe<Video_InputType_Bool_Exp>;
};

export type Subscription_RootVideo_InputType_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_InputType_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_InputType_Order_By>>;
    where?: InputMaybe<Video_InputType_Bool_Exp>;
};

export type Subscription_RootVideo_InputType_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootVideo_MediaLiveChannelStatusArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Order_By>>;
    where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

export type Subscription_RootVideo_MediaLiveChannelStatus_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Order_By>>;
    where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

export type Subscription_RootVideo_MediaLiveChannelStatus_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_RoomRtmpInputArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

export type Subscription_RootVideo_RoomRtmpInput_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

export type Subscription_RootVideo_RoomRtmpInput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_RoomRtmpOutputArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

export type Subscription_RootVideo_RoomRtmpOutput_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Order_By>>;
    where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

export type Subscription_RootVideo_RoomRtmpOutput_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_RtmpInputArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RtmpInput_Order_By>>;
    where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

export type Subscription_RootVideo_RtmpInput_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_RtmpInput_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_RtmpInput_Order_By>>;
    where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

export type Subscription_RootVideo_RtmpInput_By_PkArgs = {
    name: Scalars["String"];
};

export type Subscription_RootVideo_TranscriptionJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Order_By>>;
    where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

export type Subscription_RootVideo_TranscriptionJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Order_By>>;
    where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

export type Subscription_RootVideo_TranscriptionJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VideoRenderJobArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

export type Subscription_RootVideo_VideoRenderJob_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Order_By>>;
    where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

export type Subscription_RootVideo_VideoRenderJob_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VonageParticipantStreamArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

export type Subscription_RootVideo_VonageParticipantStream_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

export type Subscription_RootVideo_VonageParticipantStream_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VonageRoomRecordingArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

export type Subscription_RootVideo_VonageRoomRecording_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

export type Subscription_RootVideo_VonageRoomRecording_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VonageSessionLayoutArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

export type Subscription_RootVideo_VonageSessionLayout_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

export type Subscription_RootVideo_VonageSessionLayout_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_VonageVideoPlaybackCommandArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Order_By>>;
    where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

export type Subscription_RootVideo_VonageVideoPlaybackCommand_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Order_By>>;
    where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

export type Subscription_RootVideo_VonageVideoPlaybackCommand_By_PkArgs = {
    id: Scalars["uuid"];
};

export type Subscription_RootVideo_YouTubeUploadArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

export type Subscription_RootVideo_YouTubeUpload_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Order_By>>;
    where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

export type Subscription_RootVideo_YouTubeUpload_By_PkArgs = {
    id: Scalars["uuid"];
};

/** columns and relationships of "system.Configuration" */
export type System_Configuration = {
    readonly __typename?: "system_Configuration";
    /** An object relationship */
    readonly configurationKey: System_ConfigurationKey;
    readonly created_at: Scalars["timestamptz"];
    readonly key: System_ConfigurationKey_Enum;
    readonly updated_at: Scalars["timestamptz"];
    readonly value: Scalars["jsonb"];
};

/** columns and relationships of "system.Configuration" */
export type System_ConfigurationValueArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "system.ConfigurationKey" */
export type System_ConfigurationKey = {
    readonly __typename?: "system_ConfigurationKey";
    readonly description?: Maybe<Scalars["String"]>;
    /** An array relationship */
    readonly grantedPermissions: ReadonlyArray<System_ConfigurationPermissionGrant>;
    /** An aggregate relationship */
    readonly grantedPermissions_aggregate: System_ConfigurationPermissionGrant_Aggregate;
    readonly name: Scalars["String"];
};

/** columns and relationships of "system.ConfigurationKey" */
export type System_ConfigurationKeyGrantedPermissionsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.ConfigurationKey" */
export type System_ConfigurationKeyGrantedPermissions_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** aggregated selection of "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate = {
    readonly __typename?: "system_ConfigurationKey_aggregate";
    readonly aggregate?: Maybe<System_ConfigurationKey_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<System_ConfigurationKey>;
};

/** aggregate fields of "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate_Fields = {
    readonly __typename?: "system_ConfigurationKey_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<System_ConfigurationKey_Max_Fields>;
    readonly min?: Maybe<System_ConfigurationKey_Min_Fields>;
};

/** aggregate fields of "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "system.ConfigurationKey". All fields are combined with a logical 'AND'. */
export type System_ConfigurationKey_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Bool_Exp>>;
    readonly _not?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly grantedPermissions?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.ConfigurationKey" */
export enum System_ConfigurationKey_Constraint {
    /** unique or primary key constraint */
    ConfigurationKeyPkey = "ConfigurationKey_pkey",
}

export enum System_ConfigurationKey_Enum {
    /** Allow-list (JSON array) of wildcard-match domains that the system should allow email to be sent to. See also NPM wildcard-match package. */
    AllowEmailsToDomains = "ALLOW_EMAILS_TO_DOMAINS",
    /** The time of the latest revision of the host cookie policy. The value should be a Number representing the milliseconds elapsed since the UNIX epoch. */
    CookiePolicyLatestRevisionTimestamp = "COOKIE_POLICY_LATEST_REVISION_TIMESTAMP",
    /** The URL to the host cookie policy. Note: If self hosting Clowdr, this must be your organisation's cookie policy - you cannot legally reuse, rely on or copy Clowdr's cookie policy. */
    CookiePolicyUrl = "COOKIE_POLICY_URL",
    /** A string representing the full frontend host URL for the app. */
    DefaultFrontendHost = "DEFAULT_FRONTEND_HOST",
    /** Default backend platform for video rooms */
    DefaultVideoRoomBackend = "DEFAULT_VIDEO_ROOM_BACKEND",
    /** Templates for emails sent by the application. */
    EmailTemplates = "EMAIL_TEMPLATES",
    /** The name of the organisation legally responsible for hosting this instance of the Clowdr software. */
    HostOrganisationName = "HOST_ORGANISATION_NAME",
    /** The time of the latest revision of the host Privacy Policy. The value should be a Number representing the milliseconds elapsed since the UNIX epoch. */
    PrivacyPolicyLatestRevisionTimestamp = "PRIVACY_POLICY_LATEST_REVISION_TIMESTAMP",
    /** URL to the host Privacy Policy. Note: If self hosting Clowdr, this must be your organisation's privacy policy - you cannot legally reuse, rely on or copy Clowdr's privacy policy. */
    PrivacyPolicyUrl = "PRIVACY_POLICY_URL",
    /** SendGrid API Key required for sending emails such as invites and submission requests */
    SendgridApiKey = "SENDGRID_API_KEY",
    /** Default SendGrid Reply-To email address. */
    SendgridReplyto = "SENDGRID_REPLYTO",
    /** Default SendGrid Sender email address. */
    SendgridSender = "SENDGRID_SENDER",
    /** The name emails are from when sent via SendGrid. */
    SendgridSenderName = "SENDGRID_SENDER_NAME",
    SendgridWebhookPublicKey = "SENDGRID_WEBHOOK_PUBLIC_KEY",
    /** Contact address for people to request emails never be sent to them again. */
    StopEmailsContactEmailAddress = "STOP_EMAILS_CONTACT_EMAIL_ADDRESS",
    /** The time of the latest revision of the host T&Cs. The value should be a Number representing the milliseconds elapsed since the UNIX epoch. */
    TermsLatestRevisionTimestamp = "TERMS_LATEST_REVISION_TIMESTAMP",
    /** URL to the host T&Cs. Note: If self hosting Clowdr, this must be your organisation's terms - you cannot legally reuse, rely on or copy Clowdr's terms. */
    TermsUrl = "TERMS_URL",
    /** VAPID keys are used for push notifications and are generated automatically by the realtime service on first use. */
    VapidPrivateKey = "VAPID_PRIVATE_KEY",
    /** VAPID keys are used for push notifications and are generated automatically by the realtime service on first use. */
    VapidPublicKey = "VAPID_PUBLIC_KEY",
}

/** Boolean expression to compare columns of type "system_ConfigurationKey_enum". All fields are combined with logical 'AND'. */
export type System_ConfigurationKey_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<System_ConfigurationKey_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<System_ConfigurationKey_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<System_ConfigurationKey_Enum>>;
};

/** input type for inserting data into table "system.ConfigurationKey" */
export type System_ConfigurationKey_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly grantedPermissions?: InputMaybe<System_ConfigurationPermissionGrant_Arr_Rel_Insert_Input>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type System_ConfigurationKey_Max_Fields = {
    readonly __typename?: "system_ConfigurationKey_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type System_ConfigurationKey_Min_Fields = {
    readonly __typename?: "system_ConfigurationKey_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "system.ConfigurationKey" */
export type System_ConfigurationKey_Mutation_Response = {
    readonly __typename?: "system_ConfigurationKey_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<System_ConfigurationKey>;
};

/** input type for inserting object relation for remote table "system.ConfigurationKey" */
export type System_ConfigurationKey_Obj_Rel_Insert_Input = {
    readonly data: System_ConfigurationKey_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<System_ConfigurationKey_On_Conflict>;
};

/** on_conflict condition type for table "system.ConfigurationKey" */
export type System_ConfigurationKey_On_Conflict = {
    readonly constraint: System_ConfigurationKey_Constraint;
    readonly update_columns?: ReadonlyArray<System_ConfigurationKey_Update_Column>;
    readonly where?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
};

/** Ordering options when selecting data from "system.ConfigurationKey". */
export type System_ConfigurationKey_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly grantedPermissions_aggregate?: InputMaybe<System_ConfigurationPermissionGrant_Aggregate_Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: system_ConfigurationKey */
export type System_ConfigurationKey_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "system.ConfigurationKey" */
export enum System_ConfigurationKey_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "system.ConfigurationKey" */
export type System_ConfigurationKey_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "system.ConfigurationKey" */
export enum System_ConfigurationKey_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant = {
    readonly __typename?: "system_ConfigurationPermissionGrant";
    readonly configurationKey: System_ConfigurationKey_Enum;
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly grantedPermission: System_SuperUserPermission;
    readonly id: Scalars["uuid"];
    readonly permissionName: System_SuperUserPermission_Enum;
    /** An object relationship */
    readonly targetConfigurationKey: System_ConfigurationKey;
    readonly updated_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly user: User;
    readonly userId: Scalars["String"];
};

/** aggregated selection of "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Aggregate = {
    readonly __typename?: "system_ConfigurationPermissionGrant_aggregate";
    readonly aggregate?: Maybe<System_ConfigurationPermissionGrant_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<System_ConfigurationPermissionGrant>;
};

/** aggregate fields of "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Aggregate_Fields = {
    readonly __typename?: "system_ConfigurationPermissionGrant_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<System_ConfigurationPermissionGrant_Max_Fields>;
    readonly min?: Maybe<System_ConfigurationPermissionGrant_Min_Fields>;
};

/** aggregate fields of "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<System_ConfigurationPermissionGrant_Max_Order_By>;
    readonly min?: InputMaybe<System_ConfigurationPermissionGrant_Min_Order_By>;
};

/** input type for inserting array relation for remote table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<System_ConfigurationPermissionGrant_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<System_ConfigurationPermissionGrant_On_Conflict>;
};

/** Boolean expression to filter rows from the table "system.ConfigurationPermissionGrant". All fields are combined with a logical 'AND'. */
export type System_ConfigurationPermissionGrant_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Bool_Exp>>;
    readonly _not?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Bool_Exp>>;
    readonly configurationKey?: InputMaybe<System_ConfigurationKey_Enum_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly grantedPermission?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly permissionName?: InputMaybe<System_SuperUserPermission_Enum_Comparison_Exp>;
    readonly targetConfigurationKey?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly user?: InputMaybe<User_Bool_Exp>;
    readonly userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.ConfigurationPermissionGrant" */
export enum System_ConfigurationPermissionGrant_Constraint {
    /** unique or primary key constraint */
    ConfigurationPermissionGrantPermissionNameConfigurationKeyUs = "ConfigurationPermissionGrant_permissionName_configurationKey_us",
    /** unique or primary key constraint */
    ConfigurationPermissionGrantPkey = "ConfigurationPermissionGrant_pkey",
}

/** input type for inserting data into table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Insert_Input = {
    readonly configurationKey?: InputMaybe<System_ConfigurationKey_Enum>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly grantedPermission?: InputMaybe<System_SuperUserPermission_Obj_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly permissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    readonly targetConfigurationKey?: InputMaybe<System_ConfigurationKey_Obj_Rel_Insert_Input>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type System_ConfigurationPermissionGrant_Max_Fields = {
    readonly __typename?: "system_ConfigurationPermissionGrant_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type System_ConfigurationPermissionGrant_Min_Fields = {
    readonly __typename?: "system_ConfigurationPermissionGrant_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Mutation_Response = {
    readonly __typename?: "system_ConfigurationPermissionGrant_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<System_ConfigurationPermissionGrant>;
};

/** on_conflict condition type for table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_On_Conflict = {
    readonly constraint: System_ConfigurationPermissionGrant_Constraint;
    readonly update_columns?: ReadonlyArray<System_ConfigurationPermissionGrant_Update_Column>;
    readonly where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** Ordering options when selecting data from "system.ConfigurationPermissionGrant". */
export type System_ConfigurationPermissionGrant_Order_By = {
    readonly configurationKey?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly grantedPermission?: InputMaybe<System_SuperUserPermission_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly permissionName?: InputMaybe<Order_By>;
    readonly targetConfigurationKey?: InputMaybe<System_ConfigurationKey_Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly user?: InputMaybe<User_Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: system_ConfigurationPermissionGrant */
export type System_ConfigurationPermissionGrant_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "system.ConfigurationPermissionGrant" */
export enum System_ConfigurationPermissionGrant_Select_Column {
    /** column name */
    ConfigurationKey = "configurationKey",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    PermissionName = "permissionName",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "system.ConfigurationPermissionGrant" */
export type System_ConfigurationPermissionGrant_Set_Input = {
    readonly configurationKey?: InputMaybe<System_ConfigurationKey_Enum>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly permissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "system.ConfigurationPermissionGrant" */
export enum System_ConfigurationPermissionGrant_Update_Column {
    /** column name */
    ConfigurationKey = "configurationKey",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    PermissionName = "permissionName",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** aggregated selection of "system.Configuration" */
export type System_Configuration_Aggregate = {
    readonly __typename?: "system_Configuration_aggregate";
    readonly aggregate?: Maybe<System_Configuration_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<System_Configuration>;
};

/** aggregate fields of "system.Configuration" */
export type System_Configuration_Aggregate_Fields = {
    readonly __typename?: "system_Configuration_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<System_Configuration_Max_Fields>;
    readonly min?: Maybe<System_Configuration_Min_Fields>;
};

/** aggregate fields of "system.Configuration" */
export type System_Configuration_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<System_Configuration_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type System_Configuration_Append_Input = {
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "system.Configuration". All fields are combined with a logical 'AND'. */
export type System_Configuration_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<System_Configuration_Bool_Exp>>;
    readonly _not?: InputMaybe<System_Configuration_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<System_Configuration_Bool_Exp>>;
    readonly configurationKey?: InputMaybe<System_ConfigurationKey_Bool_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly key?: InputMaybe<System_ConfigurationKey_Enum_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly value?: InputMaybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.Configuration" */
export enum System_Configuration_Constraint {
    /** unique or primary key constraint */
    ConfigurationPkey = "Configuration_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type System_Configuration_Delete_At_Path_Input = {
    readonly value?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type System_Configuration_Delete_Elem_Input = {
    readonly value?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type System_Configuration_Delete_Key_Input = {
    readonly value?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "system.Configuration" */
export type System_Configuration_Insert_Input = {
    readonly configurationKey?: InputMaybe<System_ConfigurationKey_Obj_Rel_Insert_Input>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly key?: InputMaybe<System_ConfigurationKey_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** aggregate max on columns */
export type System_Configuration_Max_Fields = {
    readonly __typename?: "system_Configuration_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type System_Configuration_Min_Fields = {
    readonly __typename?: "system_Configuration_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "system.Configuration" */
export type System_Configuration_Mutation_Response = {
    readonly __typename?: "system_Configuration_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<System_Configuration>;
};

/** on_conflict condition type for table "system.Configuration" */
export type System_Configuration_On_Conflict = {
    readonly constraint: System_Configuration_Constraint;
    readonly update_columns?: ReadonlyArray<System_Configuration_Update_Column>;
    readonly where?: InputMaybe<System_Configuration_Bool_Exp>;
};

/** Ordering options when selecting data from "system.Configuration". */
export type System_Configuration_Order_By = {
    readonly configurationKey?: InputMaybe<System_ConfigurationKey_Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly key?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: system_Configuration */
export type System_Configuration_Pk_Columns_Input = {
    readonly key: System_ConfigurationKey_Enum;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type System_Configuration_Prepend_Input = {
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "system.Configuration" */
export enum System_Configuration_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Key = "key",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Value = "value",
}

/** input type for updating data in table "system.Configuration" */
export type System_Configuration_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly key?: InputMaybe<System_ConfigurationKey_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly value?: InputMaybe<Scalars["jsonb"]>;
};

/** update columns of table "system.Configuration" */
export enum System_Configuration_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Key = "key",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Value = "value",
}

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermission = {
    readonly __typename?: "system_SuperUserPermission";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
    /** An array relationship */
    readonly superUserGrantTargets: ReadonlyArray<System_SuperUserPermissionGrant>;
    /** An aggregate relationship */
    readonly superUserGrantTargets_aggregate: System_SuperUserPermissionGrant_Aggregate;
    /** An array relationship */
    readonly superUserGrants: ReadonlyArray<System_SuperUserPermissionGrant>;
    /** An aggregate relationship */
    readonly superUserGrants_aggregate: System_SuperUserPermissionGrant_Aggregate;
    /** An array relationship */
    readonly systemConfigurationGrants: ReadonlyArray<System_ConfigurationPermissionGrant>;
    /** An aggregate relationship */
    readonly systemConfigurationGrants_aggregate: System_ConfigurationPermissionGrant_Aggregate;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSuperUserGrantTargetsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSuperUserGrantTargets_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSuperUserGrantsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSuperUserGrants_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Order_By>>;
    where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSystemConfigurationGrantsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermission" */
export type System_SuperUserPermissionSystemConfigurationGrants_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<System_ConfigurationPermissionGrant_Order_By>>;
    where?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** columns and relationships of "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant = {
    readonly __typename?: "system_SuperUserPermissionGrant";
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly grantedPermission: System_SuperUserPermission;
    readonly grantedPermissionName: System_SuperUserPermission_Enum;
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly targetPermission?: Maybe<System_SuperUserPermission>;
    readonly targetPermissionName?: Maybe<System_SuperUserPermission_Enum>;
    readonly updated_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly user: User;
    readonly userId: Scalars["String"];
};

/** aggregated selection of "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Aggregate = {
    readonly __typename?: "system_SuperUserPermissionGrant_aggregate";
    readonly aggregate?: Maybe<System_SuperUserPermissionGrant_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<System_SuperUserPermissionGrant>;
};

/** aggregate fields of "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Aggregate_Fields = {
    readonly __typename?: "system_SuperUserPermissionGrant_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<System_SuperUserPermissionGrant_Max_Fields>;
    readonly min?: Maybe<System_SuperUserPermissionGrant_Min_Fields>;
};

/** aggregate fields of "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<System_SuperUserPermissionGrant_Max_Order_By>;
    readonly min?: InputMaybe<System_SuperUserPermissionGrant_Min_Order_By>;
};

/** input type for inserting array relation for remote table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<System_SuperUserPermissionGrant_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<System_SuperUserPermissionGrant_On_Conflict>;
};

/** Boolean expression to filter rows from the table "system.SuperUserPermissionGrant". All fields are combined with a logical 'AND'. */
export type System_SuperUserPermissionGrant_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Bool_Exp>>;
    readonly _not?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<System_SuperUserPermissionGrant_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly grantedPermission?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
    readonly grantedPermissionName?: InputMaybe<System_SuperUserPermission_Enum_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly targetPermission?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
    readonly targetPermissionName?: InputMaybe<System_SuperUserPermission_Enum_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly user?: InputMaybe<User_Bool_Exp>;
    readonly userId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.SuperUserPermissionGrant" */
export enum System_SuperUserPermissionGrant_Constraint {
    /** unique or primary key constraint */
    SuperUserPermissionGrantGrantedPermissionNameUserIdTargeKey = "SuperUserPermissionGrant_grantedPermissionName_userId_targe_key",
    /** unique or primary key constraint */
    SuperUserPermissionGrantPkey = "SuperUserPermissionGrant_pkey",
}

/** input type for inserting data into table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly grantedPermission?: InputMaybe<System_SuperUserPermission_Obj_Rel_Insert_Input>;
    readonly grantedPermissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly targetPermission?: InputMaybe<System_SuperUserPermission_Obj_Rel_Insert_Input>;
    readonly targetPermissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly user?: InputMaybe<User_Obj_Rel_Insert_Input>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type System_SuperUserPermissionGrant_Max_Fields = {
    readonly __typename?: "system_SuperUserPermissionGrant_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type System_SuperUserPermissionGrant_Min_Fields = {
    readonly __typename?: "system_SuperUserPermissionGrant_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly userId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Mutation_Response = {
    readonly __typename?: "system_SuperUserPermissionGrant_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<System_SuperUserPermissionGrant>;
};

/** on_conflict condition type for table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_On_Conflict = {
    readonly constraint: System_SuperUserPermissionGrant_Constraint;
    readonly update_columns?: ReadonlyArray<System_SuperUserPermissionGrant_Update_Column>;
    readonly where?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
};

/** Ordering options when selecting data from "system.SuperUserPermissionGrant". */
export type System_SuperUserPermissionGrant_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly grantedPermission?: InputMaybe<System_SuperUserPermission_Order_By>;
    readonly grantedPermissionName?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly targetPermission?: InputMaybe<System_SuperUserPermission_Order_By>;
    readonly targetPermissionName?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly user?: InputMaybe<User_Order_By>;
    readonly userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: system_SuperUserPermissionGrant */
export type System_SuperUserPermissionGrant_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "system.SuperUserPermissionGrant" */
export enum System_SuperUserPermissionGrant_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    GrantedPermissionName = "grantedPermissionName",
    /** column name */
    Id = "id",
    /** column name */
    TargetPermissionName = "targetPermissionName",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** input type for updating data in table "system.SuperUserPermissionGrant" */
export type System_SuperUserPermissionGrant_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly grantedPermissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly targetPermissionName?: InputMaybe<System_SuperUserPermission_Enum>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly userId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "system.SuperUserPermissionGrant" */
export enum System_SuperUserPermissionGrant_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    GrantedPermissionName = "grantedPermissionName",
    /** column name */
    Id = "id",
    /** column name */
    TargetPermissionName = "targetPermissionName",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UserId = "userId",
}

/** aggregated selection of "system.SuperUserPermission" */
export type System_SuperUserPermission_Aggregate = {
    readonly __typename?: "system_SuperUserPermission_aggregate";
    readonly aggregate?: Maybe<System_SuperUserPermission_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<System_SuperUserPermission>;
};

/** aggregate fields of "system.SuperUserPermission" */
export type System_SuperUserPermission_Aggregate_Fields = {
    readonly __typename?: "system_SuperUserPermission_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<System_SuperUserPermission_Max_Fields>;
    readonly min?: Maybe<System_SuperUserPermission_Min_Fields>;
};

/** aggregate fields of "system.SuperUserPermission" */
export type System_SuperUserPermission_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "system.SuperUserPermission". All fields are combined with a logical 'AND'. */
export type System_SuperUserPermission_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Bool_Exp>>;
    readonly _not?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
    readonly superUserGrantTargets?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
    readonly superUserGrants?: InputMaybe<System_SuperUserPermissionGrant_Bool_Exp>;
    readonly systemConfigurationGrants?: InputMaybe<System_ConfigurationPermissionGrant_Bool_Exp>;
};

/** unique or primary key constraints on table "system.SuperUserPermission" */
export enum System_SuperUserPermission_Constraint {
    /** unique or primary key constraint */
    SuperUserPermissionPkey = "SuperUserPermission_pkey",
}

export enum System_SuperUserPermission_Enum {
    /** Ability to create a conference demo code. */
    CreateConferenceDemoCode = "CREATE_CONFERENCE_DEMO_CODE",
    /** Ability to delete a super-user permission. */
    DeleteSuPermission = "DELETE_SU_PERMISSION",
    /** Ability to delete users from the system. */
    DeleteUsers = "DELETE_USERS",
    /** Ability to edit the links between users and registrants. */
    EditUserRegistrants = "EDIT_USER_REGISTRANTS",
    /** Ability to insert a super-user permission. */
    InsertSuPermission = "INSERT_SU_PERMISSION",
    /** Ability to list all conference demo codes. */
    ListConferenceDemoCodes = "LIST_CONFERENCE_DEMO_CODES",
    /** Ability to set a specified system configuration. */
    SetSystemConfiguration = "SET_SYSTEM_CONFIGURATION",
    /** Ability to view a super-user permission grant. */
    ViewSuPermissionGrant = "VIEW_SU_PERMISSION_GRANT",
    /** Ability to view a system configuration. */
    ViewSystemConfiguration = "VIEW_SYSTEM_CONFIGURATION",
    /** Ability to view users in the system. */
    ViewUsers = "VIEW_USERS",
}

/** Boolean expression to compare columns of type "system_SuperUserPermission_enum". All fields are combined with logical 'AND'. */
export type System_SuperUserPermission_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<System_SuperUserPermission_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<System_SuperUserPermission_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<System_SuperUserPermission_Enum>>;
};

/** input type for inserting data into table "system.SuperUserPermission" */
export type System_SuperUserPermission_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
    readonly superUserGrantTargets?: InputMaybe<System_SuperUserPermissionGrant_Arr_Rel_Insert_Input>;
    readonly superUserGrants?: InputMaybe<System_SuperUserPermissionGrant_Arr_Rel_Insert_Input>;
    readonly systemConfigurationGrants?: InputMaybe<System_ConfigurationPermissionGrant_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type System_SuperUserPermission_Max_Fields = {
    readonly __typename?: "system_SuperUserPermission_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type System_SuperUserPermission_Min_Fields = {
    readonly __typename?: "system_SuperUserPermission_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "system.SuperUserPermission" */
export type System_SuperUserPermission_Mutation_Response = {
    readonly __typename?: "system_SuperUserPermission_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<System_SuperUserPermission>;
};

/** input type for inserting object relation for remote table "system.SuperUserPermission" */
export type System_SuperUserPermission_Obj_Rel_Insert_Input = {
    readonly data: System_SuperUserPermission_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<System_SuperUserPermission_On_Conflict>;
};

/** on_conflict condition type for table "system.SuperUserPermission" */
export type System_SuperUserPermission_On_Conflict = {
    readonly constraint: System_SuperUserPermission_Constraint;
    readonly update_columns?: ReadonlyArray<System_SuperUserPermission_Update_Column>;
    readonly where?: InputMaybe<System_SuperUserPermission_Bool_Exp>;
};

/** Ordering options when selecting data from "system.SuperUserPermission". */
export type System_SuperUserPermission_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
    readonly superUserGrantTargets_aggregate?: InputMaybe<System_SuperUserPermissionGrant_Aggregate_Order_By>;
    readonly superUserGrants_aggregate?: InputMaybe<System_SuperUserPermissionGrant_Aggregate_Order_By>;
    readonly systemConfigurationGrants_aggregate?: InputMaybe<System_ConfigurationPermissionGrant_Aggregate_Order_By>;
};

/** primary key columns input for table: system_SuperUserPermission */
export type System_SuperUserPermission_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "system.SuperUserPermission" */
export enum System_SuperUserPermission_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "system.SuperUserPermission" */
export type System_SuperUserPermission_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "system.SuperUserPermission" */
export enum System_SuperUserPermission_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "system.SuperUserState" */
export type System_SuperUserState = {
    readonly __typename?: "system_SuperUserState";
    readonly canBeDirectlyInitialised?: Maybe<Scalars["Boolean"]>;
    readonly isInitialised?: Maybe<Scalars["Boolean"]>;
};

/** aggregated selection of "system.SuperUserState" */
export type System_SuperUserState_Aggregate = {
    readonly __typename?: "system_SuperUserState_aggregate";
    readonly aggregate?: Maybe<System_SuperUserState_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<System_SuperUserState>;
};

/** aggregate fields of "system.SuperUserState" */
export type System_SuperUserState_Aggregate_Fields = {
    readonly __typename?: "system_SuperUserState_aggregate_fields";
    readonly count: Scalars["Int"];
};

/** aggregate fields of "system.SuperUserState" */
export type System_SuperUserState_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<System_SuperUserState_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "system.SuperUserState". All fields are combined with a logical 'AND'. */
export type System_SuperUserState_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<System_SuperUserState_Bool_Exp>>;
    readonly _not?: InputMaybe<System_SuperUserState_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<System_SuperUserState_Bool_Exp>>;
    readonly canBeDirectlyInitialised?: InputMaybe<Boolean_Comparison_Exp>;
    readonly isInitialised?: InputMaybe<Boolean_Comparison_Exp>;
};

/** Ordering options when selecting data from "system.SuperUserState". */
export type System_SuperUserState_Order_By = {
    readonly canBeDirectlyInitialised?: InputMaybe<Order_By>;
    readonly isInitialised?: InputMaybe<Order_By>;
};

/** select columns of table "system.SuperUserState" */
export enum System_SuperUserState_Select_Column {
    /** column name */
    CanBeDirectlyInitialised = "canBeDirectlyInitialised",
    /** column name */
    IsInitialised = "isInitialised",
}

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["timestamptz"]>;
    readonly _gt?: InputMaybe<Scalars["timestamptz"]>;
    readonly _gte?: InputMaybe<Scalars["timestamptz"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["timestamptz"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["timestamptz"]>;
    readonly _lte?: InputMaybe<Scalars["timestamptz"]>;
    readonly _neq?: InputMaybe<Scalars["timestamptz"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["timestamptz"]>>;
};

/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export type Uuid_Comparison_Exp = {
    readonly _eq?: InputMaybe<Scalars["uuid"]>;
    readonly _gt?: InputMaybe<Scalars["uuid"]>;
    readonly _gte?: InputMaybe<Scalars["uuid"]>;
    readonly _in?: InputMaybe<ReadonlyArray<Scalars["uuid"]>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _lt?: InputMaybe<Scalars["uuid"]>;
    readonly _lte?: InputMaybe<Scalars["uuid"]>;
    readonly _neq?: InputMaybe<Scalars["uuid"]>;
    readonly _nin?: InputMaybe<ReadonlyArray<Scalars["uuid"]>>;
};

/** columns and relationships of "video.ChannelStack" */
export type Video_ChannelStack = {
    readonly __typename?: "video_ChannelStack";
    /** An object relationship */
    readonly channelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob>;
    readonly channelStackCreateJobId?: Maybe<Scalars["uuid"]>;
    /** An array relationship */
    readonly channelStackUpdateJobs: ReadonlyArray<Job_Queues_ChannelStackUpdateJob>;
    /** An aggregate relationship */
    readonly channelStackUpdateJobs_aggregate: Job_Queues_ChannelStackUpdateJob_Aggregate;
    readonly cloudFormationStackArn?: Maybe<Scalars["String"]>;
    readonly cloudFrontDistributionId: Scalars["String"];
    readonly cloudFrontDomain: Scalars["String"];
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly endpointUri: Scalars["String"];
    readonly id: Scalars["uuid"];
    readonly loopingMp4InputAttachmentName: Scalars["String"];
    readonly mediaLiveChannelId: Scalars["String"];
    /** An object relationship */
    readonly mediaLiveChannelStatus?: Maybe<Video_MediaLiveChannelStatus>;
    readonly mediaPackageChannelId: Scalars["String"];
    readonly mp4InputAttachmentName: Scalars["String"];
    readonly mp4InputId: Scalars["String"];
    /** An object relationship */
    readonly room?: Maybe<Room_Room>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly rtmpAInputAttachmentName: Scalars["String"];
    readonly rtmpAInputId: Scalars["String"];
    readonly rtmpAInputUri: Scalars["String"];
    readonly rtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly rtmpBInputId?: Maybe<Scalars["String"]>;
    readonly rtmpBInputUri?: Maybe<Scalars["String"]>;
    readonly rtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    readonly rtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    readonly rtmpOutputUri?: Maybe<Scalars["String"]>;
    readonly rtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly rtmpRoomInputId?: Maybe<Scalars["String"]>;
    readonly updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "video.ChannelStack" */
export type Video_ChannelStackChannelStackUpdateJobsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

/** columns and relationships of "video.ChannelStack" */
export type Video_ChannelStackChannelStackUpdateJobs_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Job_Queues_ChannelStackUpdateJob_Order_By>>;
    where?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
};

/** aggregated selection of "video.ChannelStack" */
export type Video_ChannelStack_Aggregate = {
    readonly __typename?: "video_ChannelStack_aggregate";
    readonly aggregate?: Maybe<Video_ChannelStack_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_ChannelStack>;
};

/** aggregate fields of "video.ChannelStack" */
export type Video_ChannelStack_Aggregate_Fields = {
    readonly __typename?: "video_ChannelStack_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_ChannelStack_Max_Fields>;
    readonly min?: Maybe<Video_ChannelStack_Min_Fields>;
};

/** aggregate fields of "video.ChannelStack" */
export type Video_ChannelStack_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_ChannelStack_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.ChannelStack". All fields are combined with a logical 'AND'. */
export type Video_ChannelStack_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_ChannelStack_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_ChannelStack_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_ChannelStack_Bool_Exp>>;
    readonly channelStackCreateJob?: InputMaybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
    readonly channelStackCreateJobId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly channelStackUpdateJobs?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Bool_Exp>;
    readonly cloudFormationStackArn?: InputMaybe<String_Comparison_Exp>;
    readonly cloudFrontDistributionId?: InputMaybe<String_Comparison_Exp>;
    readonly cloudFrontDomain?: InputMaybe<String_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly endpointUri?: InputMaybe<String_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly loopingMp4InputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly mediaLiveChannelId?: InputMaybe<String_Comparison_Exp>;
    readonly mediaLiveChannelStatus?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
    readonly mediaPackageChannelId?: InputMaybe<String_Comparison_Exp>;
    readonly mp4InputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly mp4InputId?: InputMaybe<String_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly rtmpAInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpAInputId?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpAInputUri?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpBInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpBInputId?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpBInputUri?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpOutputDestinationId?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpOutputStreamKey?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpOutputUri?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpRoomInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly rtmpRoomInputId?: InputMaybe<String_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.ChannelStack" */
export enum Video_ChannelStack_Constraint {
    /** unique or primary key constraint */
    MediaLiveChannelPkey = "MediaLiveChannel_pkey",
    /** unique or primary key constraint */
    MediaLiveChannelRoomIdKey = "MediaLiveChannel_roomId_key",
}

/** input type for inserting data into table "video.ChannelStack" */
export type Video_ChannelStack_Insert_Input = {
    readonly channelStackCreateJob?: InputMaybe<Job_Queues_ChannelStackCreateJob_Obj_Rel_Insert_Input>;
    readonly channelStackCreateJobId?: InputMaybe<Scalars["uuid"]>;
    readonly channelStackUpdateJobs?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Arr_Rel_Insert_Input>;
    readonly cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    readonly cloudFrontDistributionId?: InputMaybe<Scalars["String"]>;
    readonly cloudFrontDomain?: InputMaybe<Scalars["String"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly endpointUri?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly loopingMp4InputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    readonly mediaLiveChannelStatus?: InputMaybe<Video_MediaLiveChannelStatus_Obj_Rel_Insert_Input>;
    readonly mediaPackageChannelId?: InputMaybe<Scalars["String"]>;
    readonly mp4InputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly mp4InputId?: InputMaybe<Scalars["String"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly rtmpAInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly rtmpAInputId?: InputMaybe<Scalars["String"]>;
    readonly rtmpAInputUri?: InputMaybe<Scalars["String"]>;
    readonly rtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly rtmpBInputId?: InputMaybe<Scalars["String"]>;
    readonly rtmpBInputUri?: InputMaybe<Scalars["String"]>;
    readonly rtmpOutputDestinationId?: InputMaybe<Scalars["String"]>;
    readonly rtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    readonly rtmpOutputUri?: InputMaybe<Scalars["String"]>;
    readonly rtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly rtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_ChannelStack_Max_Fields = {
    readonly __typename?: "video_ChannelStack_max_fields";
    readonly channelStackCreateJobId?: Maybe<Scalars["uuid"]>;
    readonly cloudFormationStackArn?: Maybe<Scalars["String"]>;
    readonly cloudFrontDistributionId?: Maybe<Scalars["String"]>;
    readonly cloudFrontDomain?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly endpointUri?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly loopingMp4InputAttachmentName?: Maybe<Scalars["String"]>;
    readonly mediaLiveChannelId?: Maybe<Scalars["String"]>;
    readonly mediaPackageChannelId?: Maybe<Scalars["String"]>;
    readonly mp4InputAttachmentName?: Maybe<Scalars["String"]>;
    readonly mp4InputId?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly rtmpAInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly rtmpAInputId?: Maybe<Scalars["String"]>;
    readonly rtmpAInputUri?: Maybe<Scalars["String"]>;
    readonly rtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly rtmpBInputId?: Maybe<Scalars["String"]>;
    readonly rtmpBInputUri?: Maybe<Scalars["String"]>;
    readonly rtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    readonly rtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    readonly rtmpOutputUri?: Maybe<Scalars["String"]>;
    readonly rtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly rtmpRoomInputId?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_ChannelStack_Min_Fields = {
    readonly __typename?: "video_ChannelStack_min_fields";
    readonly channelStackCreateJobId?: Maybe<Scalars["uuid"]>;
    readonly cloudFormationStackArn?: Maybe<Scalars["String"]>;
    readonly cloudFrontDistributionId?: Maybe<Scalars["String"]>;
    readonly cloudFrontDomain?: Maybe<Scalars["String"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly endpointUri?: Maybe<Scalars["String"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly loopingMp4InputAttachmentName?: Maybe<Scalars["String"]>;
    readonly mediaLiveChannelId?: Maybe<Scalars["String"]>;
    readonly mediaPackageChannelId?: Maybe<Scalars["String"]>;
    readonly mp4InputAttachmentName?: Maybe<Scalars["String"]>;
    readonly mp4InputId?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly rtmpAInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly rtmpAInputId?: Maybe<Scalars["String"]>;
    readonly rtmpAInputUri?: Maybe<Scalars["String"]>;
    readonly rtmpBInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly rtmpBInputId?: Maybe<Scalars["String"]>;
    readonly rtmpBInputUri?: Maybe<Scalars["String"]>;
    readonly rtmpOutputDestinationId?: Maybe<Scalars["String"]>;
    readonly rtmpOutputStreamKey?: Maybe<Scalars["String"]>;
    readonly rtmpOutputUri?: Maybe<Scalars["String"]>;
    readonly rtmpRoomInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly rtmpRoomInputId?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.ChannelStack" */
export type Video_ChannelStack_Mutation_Response = {
    readonly __typename?: "video_ChannelStack_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_ChannelStack>;
};

/** input type for inserting object relation for remote table "video.ChannelStack" */
export type Video_ChannelStack_Obj_Rel_Insert_Input = {
    readonly data: Video_ChannelStack_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_ChannelStack_On_Conflict>;
};

/** on_conflict condition type for table "video.ChannelStack" */
export type Video_ChannelStack_On_Conflict = {
    readonly constraint: Video_ChannelStack_Constraint;
    readonly update_columns?: ReadonlyArray<Video_ChannelStack_Update_Column>;
    readonly where?: InputMaybe<Video_ChannelStack_Bool_Exp>;
};

/** Ordering options when selecting data from "video.ChannelStack". */
export type Video_ChannelStack_Order_By = {
    readonly channelStackCreateJob?: InputMaybe<Job_Queues_ChannelStackCreateJob_Order_By>;
    readonly channelStackCreateJobId?: InputMaybe<Order_By>;
    readonly channelStackUpdateJobs_aggregate?: InputMaybe<Job_Queues_ChannelStackUpdateJob_Aggregate_Order_By>;
    readonly cloudFormationStackArn?: InputMaybe<Order_By>;
    readonly cloudFrontDistributionId?: InputMaybe<Order_By>;
    readonly cloudFrontDomain?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly endpointUri?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly loopingMp4InputAttachmentName?: InputMaybe<Order_By>;
    readonly mediaLiveChannelId?: InputMaybe<Order_By>;
    readonly mediaLiveChannelStatus?: InputMaybe<Video_MediaLiveChannelStatus_Order_By>;
    readonly mediaPackageChannelId?: InputMaybe<Order_By>;
    readonly mp4InputAttachmentName?: InputMaybe<Order_By>;
    readonly mp4InputId?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly rtmpAInputAttachmentName?: InputMaybe<Order_By>;
    readonly rtmpAInputId?: InputMaybe<Order_By>;
    readonly rtmpAInputUri?: InputMaybe<Order_By>;
    readonly rtmpBInputAttachmentName?: InputMaybe<Order_By>;
    readonly rtmpBInputId?: InputMaybe<Order_By>;
    readonly rtmpBInputUri?: InputMaybe<Order_By>;
    readonly rtmpOutputDestinationId?: InputMaybe<Order_By>;
    readonly rtmpOutputStreamKey?: InputMaybe<Order_By>;
    readonly rtmpOutputUri?: InputMaybe<Order_By>;
    readonly rtmpRoomInputAttachmentName?: InputMaybe<Order_By>;
    readonly rtmpRoomInputId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_ChannelStack */
export type Video_ChannelStack_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "video.ChannelStack" */
export enum Video_ChannelStack_Select_Column {
    /** column name */
    ChannelStackCreateJobId = "channelStackCreateJobId",
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CloudFrontDistributionId = "cloudFrontDistributionId",
    /** column name */
    CloudFrontDomain = "cloudFrontDomain",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EndpointUri = "endpointUri",
    /** column name */
    Id = "id",
    /** column name */
    LoopingMp4InputAttachmentName = "loopingMp4InputAttachmentName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    MediaPackageChannelId = "mediaPackageChannelId",
    /** column name */
    Mp4InputAttachmentName = "mp4InputAttachmentName",
    /** column name */
    Mp4InputId = "mp4InputId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    RtmpAInputAttachmentName = "rtmpAInputAttachmentName",
    /** column name */
    RtmpAInputId = "rtmpAInputId",
    /** column name */
    RtmpAInputUri = "rtmpAInputUri",
    /** column name */
    RtmpBInputAttachmentName = "rtmpBInputAttachmentName",
    /** column name */
    RtmpBInputId = "rtmpBInputId",
    /** column name */
    RtmpBInputUri = "rtmpBInputUri",
    /** column name */
    RtmpOutputDestinationId = "rtmpOutputDestinationId",
    /** column name */
    RtmpOutputStreamKey = "rtmpOutputStreamKey",
    /** column name */
    RtmpOutputUri = "rtmpOutputUri",
    /** column name */
    RtmpRoomInputAttachmentName = "rtmpRoomInputAttachmentName",
    /** column name */
    RtmpRoomInputId = "rtmpRoomInputId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "video.ChannelStack" */
export type Video_ChannelStack_Set_Input = {
    readonly channelStackCreateJobId?: InputMaybe<Scalars["uuid"]>;
    readonly cloudFormationStackArn?: InputMaybe<Scalars["String"]>;
    readonly cloudFrontDistributionId?: InputMaybe<Scalars["String"]>;
    readonly cloudFrontDomain?: InputMaybe<Scalars["String"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly endpointUri?: InputMaybe<Scalars["String"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly loopingMp4InputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly mediaLiveChannelId?: InputMaybe<Scalars["String"]>;
    readonly mediaPackageChannelId?: InputMaybe<Scalars["String"]>;
    readonly mp4InputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly mp4InputId?: InputMaybe<Scalars["String"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly rtmpAInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly rtmpAInputId?: InputMaybe<Scalars["String"]>;
    readonly rtmpAInputUri?: InputMaybe<Scalars["String"]>;
    readonly rtmpBInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly rtmpBInputId?: InputMaybe<Scalars["String"]>;
    readonly rtmpBInputUri?: InputMaybe<Scalars["String"]>;
    readonly rtmpOutputDestinationId?: InputMaybe<Scalars["String"]>;
    readonly rtmpOutputStreamKey?: InputMaybe<Scalars["String"]>;
    readonly rtmpOutputUri?: InputMaybe<Scalars["String"]>;
    readonly rtmpRoomInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly rtmpRoomInputId?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "video.ChannelStack" */
export enum Video_ChannelStack_Update_Column {
    /** column name */
    ChannelStackCreateJobId = "channelStackCreateJobId",
    /** column name */
    CloudFormationStackArn = "cloudFormationStackArn",
    /** column name */
    CloudFrontDistributionId = "cloudFrontDistributionId",
    /** column name */
    CloudFrontDomain = "cloudFrontDomain",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EndpointUri = "endpointUri",
    /** column name */
    Id = "id",
    /** column name */
    LoopingMp4InputAttachmentName = "loopingMp4InputAttachmentName",
    /** column name */
    MediaLiveChannelId = "mediaLiveChannelId",
    /** column name */
    MediaPackageChannelId = "mediaPackageChannelId",
    /** column name */
    Mp4InputAttachmentName = "mp4InputAttachmentName",
    /** column name */
    Mp4InputId = "mp4InputId",
    /** column name */
    RoomId = "roomId",
    /** column name */
    RtmpAInputAttachmentName = "rtmpAInputAttachmentName",
    /** column name */
    RtmpAInputId = "rtmpAInputId",
    /** column name */
    RtmpAInputUri = "rtmpAInputUri",
    /** column name */
    RtmpBInputAttachmentName = "rtmpBInputAttachmentName",
    /** column name */
    RtmpBInputId = "rtmpBInputId",
    /** column name */
    RtmpBInputUri = "rtmpBInputUri",
    /** column name */
    RtmpOutputDestinationId = "rtmpOutputDestinationId",
    /** column name */
    RtmpOutputStreamKey = "rtmpOutputStreamKey",
    /** column name */
    RtmpOutputUri = "rtmpOutputUri",
    /** column name */
    RtmpRoomInputAttachmentName = "rtmpRoomInputAttachmentName",
    /** column name */
    RtmpRoomInputId = "rtmpRoomInputId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSession = {
    readonly __typename?: "video_EventVonageSession";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly event: Schedule_Event;
    readonly eventId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    /** An array relationship */
    readonly layouts: ReadonlyArray<Video_VonageSessionLayout>;
    /** An aggregate relationship */
    readonly layouts_aggregate: Video_VonageSessionLayout_Aggregate;
    /** An array relationship */
    readonly participantStreams: ReadonlyArray<Video_VonageParticipantStream>;
    /** An aggregate relationship */
    readonly participantStreams_aggregate: Video_VonageParticipantStream_Aggregate;
    /** An array relationship */
    readonly recordings: ReadonlyArray<Video_VonageRoomRecording>;
    /** An aggregate relationship */
    readonly recordings_aggregate: Video_VonageRoomRecording_Aggregate;
    readonly rtmpInputName: Video_RtmpInput_Enum;
    readonly sessionId: Scalars["String"];
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionLayoutsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionLayouts_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Order_By>>;
    where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionParticipantStreamsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionParticipantStreams_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Order_By>>;
    where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionRecordingsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** columns and relationships of "video.EventVonageSession" */
export type Video_EventVonageSessionRecordings_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Order_By>>;
    where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** aggregated selection of "video.EventVonageSession" */
export type Video_EventVonageSession_Aggregate = {
    readonly __typename?: "video_EventVonageSession_aggregate";
    readonly aggregate?: Maybe<Video_EventVonageSession_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_EventVonageSession>;
};

/** aggregate fields of "video.EventVonageSession" */
export type Video_EventVonageSession_Aggregate_Fields = {
    readonly __typename?: "video_EventVonageSession_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_EventVonageSession_Max_Fields>;
    readonly min?: Maybe<Video_EventVonageSession_Min_Fields>;
};

/** aggregate fields of "video.EventVonageSession" */
export type Video_EventVonageSession_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.EventVonageSession". All fields are combined with a logical 'AND'. */
export type Video_EventVonageSession_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_EventVonageSession_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly event?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly eventId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly layouts?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
    readonly participantStreams?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
    readonly recordings?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
    readonly rtmpInputName?: InputMaybe<Video_RtmpInput_Enum_Comparison_Exp>;
    readonly sessionId?: InputMaybe<String_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.EventVonageSession" */
export enum Video_EventVonageSession_Constraint {
    /** unique or primary key constraint */
    EventVonageSessionEventIdKey = "EventVonageSession_eventId_key",
    /** unique or primary key constraint */
    EventVonageSessionPkey = "EventVonageSession_pkey",
    /** unique or primary key constraint */
    EventVonageSessionSessionIdKey = "EventVonageSession_sessionId_key",
}

/** input type for inserting data into table "video.EventVonageSession" */
export type Video_EventVonageSession_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly layouts?: InputMaybe<Video_VonageSessionLayout_Arr_Rel_Insert_Input>;
    readonly participantStreams?: InputMaybe<Video_VonageParticipantStream_Arr_Rel_Insert_Input>;
    readonly recordings?: InputMaybe<Video_VonageRoomRecording_Arr_Rel_Insert_Input>;
    readonly rtmpInputName?: InputMaybe<Video_RtmpInput_Enum>;
    readonly sessionId?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_EventVonageSession_Max_Fields = {
    readonly __typename?: "video_EventVonageSession_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly sessionId?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_EventVonageSession_Min_Fields = {
    readonly __typename?: "video_EventVonageSession_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly sessionId?: Maybe<Scalars["String"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.EventVonageSession" */
export type Video_EventVonageSession_Mutation_Response = {
    readonly __typename?: "video_EventVonageSession_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_EventVonageSession>;
};

/** input type for inserting object relation for remote table "video.EventVonageSession" */
export type Video_EventVonageSession_Obj_Rel_Insert_Input = {
    readonly data: Video_EventVonageSession_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_EventVonageSession_On_Conflict>;
};

/** on_conflict condition type for table "video.EventVonageSession" */
export type Video_EventVonageSession_On_Conflict = {
    readonly constraint: Video_EventVonageSession_Constraint;
    readonly update_columns?: ReadonlyArray<Video_EventVonageSession_Update_Column>;
    readonly where?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
};

/** Ordering options when selecting data from "video.EventVonageSession". */
export type Video_EventVonageSession_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly event?: InputMaybe<Schedule_Event_Order_By>;
    readonly eventId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly layouts_aggregate?: InputMaybe<Video_VonageSessionLayout_Aggregate_Order_By>;
    readonly participantStreams_aggregate?: InputMaybe<Video_VonageParticipantStream_Aggregate_Order_By>;
    readonly recordings_aggregate?: InputMaybe<Video_VonageRoomRecording_Aggregate_Order_By>;
    readonly rtmpInputName?: InputMaybe<Order_By>;
    readonly sessionId?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_EventVonageSession */
export type Video_EventVonageSession_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "video.EventVonageSession" */
export enum Video_EventVonageSession_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    RtmpInputName = "rtmpInputName",
    /** column name */
    SessionId = "sessionId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "video.EventVonageSession" */
export type Video_EventVonageSession_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly rtmpInputName?: InputMaybe<Video_RtmpInput_Enum>;
    readonly sessionId?: InputMaybe<Scalars["String"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "video.EventVonageSession" */
export enum Video_EventVonageSession_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    EventId = "eventId",
    /** column name */
    Id = "id",
    /** column name */
    RtmpInputName = "rtmpInputName",
    /** column name */
    SessionId = "sessionId",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "video.ImmediateSwitch" */
export type Video_ImmediateSwitch = {
    readonly __typename?: "video_ImmediateSwitch";
    /** An object relationship */
    readonly conference?: Maybe<Conference_Conference>;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly data: Scalars["jsonb"];
    readonly errorMessage?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly event?: Maybe<Schedule_Event>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly executedAt?: Maybe<Scalars["timestamptz"]>;
    readonly id: Scalars["uuid"];
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt: Scalars["timestamptz"];
};

/** columns and relationships of "video.ImmediateSwitch" */
export type Video_ImmediateSwitchDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Aggregate = {
    readonly __typename?: "video_ImmediateSwitch_aggregate";
    readonly aggregate?: Maybe<Video_ImmediateSwitch_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_ImmediateSwitch>;
};

/** aggregate fields of "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Aggregate_Fields = {
    readonly __typename?: "video_ImmediateSwitch_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_ImmediateSwitch_Max_Fields>;
    readonly min?: Maybe<Video_ImmediateSwitch_Min_Fields>;
};

/** aggregate fields of "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Video_ImmediateSwitch_Append_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "video.ImmediateSwitch". All fields are combined with a logical 'AND'. */
export type Video_ImmediateSwitch_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_ImmediateSwitch_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly data?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly errorMessage?: InputMaybe<String_Comparison_Exp>;
    readonly event?: InputMaybe<Schedule_Event_Bool_Exp>;
    readonly eventId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly executedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.ImmediateSwitch" */
export enum Video_ImmediateSwitch_Constraint {
    /** unique or primary key constraint */
    ImmediateSwitchPkey = "ImmediateSwitch_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Video_ImmediateSwitch_Delete_At_Path_Input = {
    readonly data?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Video_ImmediateSwitch_Delete_Elem_Input = {
    readonly data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Video_ImmediateSwitch_Delete_Key_Input = {
    readonly data?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly errorMessage?: InputMaybe<Scalars["String"]>;
    readonly event?: InputMaybe<Schedule_Event_Obj_Rel_Insert_Input>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly executedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_ImmediateSwitch_Max_Fields = {
    readonly __typename?: "video_ImmediateSwitch_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly errorMessage?: Maybe<Scalars["String"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly executedAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_ImmediateSwitch_Min_Fields = {
    readonly __typename?: "video_ImmediateSwitch_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly errorMessage?: Maybe<Scalars["String"]>;
    readonly eventId?: Maybe<Scalars["uuid"]>;
    readonly executedAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Mutation_Response = {
    readonly __typename?: "video_ImmediateSwitch_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_ImmediateSwitch>;
};

/** on_conflict condition type for table "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_On_Conflict = {
    readonly constraint: Video_ImmediateSwitch_Constraint;
    readonly update_columns?: ReadonlyArray<Video_ImmediateSwitch_Update_Column>;
    readonly where?: InputMaybe<Video_ImmediateSwitch_Bool_Exp>;
};

/** Ordering options when selecting data from "video.ImmediateSwitch". */
export type Video_ImmediateSwitch_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly data?: InputMaybe<Order_By>;
    readonly errorMessage?: InputMaybe<Order_By>;
    readonly event?: InputMaybe<Schedule_Event_Order_By>;
    readonly eventId?: InputMaybe<Order_By>;
    readonly executedAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_ImmediateSwitch */
export type Video_ImmediateSwitch_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Video_ImmediateSwitch_Prepend_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "video.ImmediateSwitch" */
export enum Video_ImmediateSwitch_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Data = "data",
    /** column name */
    ErrorMessage = "errorMessage",
    /** column name */
    EventId = "eventId",
    /** column name */
    ExecutedAt = "executedAt",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "video.ImmediateSwitch" */
export type Video_ImmediateSwitch_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly errorMessage?: InputMaybe<Scalars["String"]>;
    readonly eventId?: InputMaybe<Scalars["uuid"]>;
    readonly executedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "video.ImmediateSwitch" */
export enum Video_ImmediateSwitch_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Data = "data",
    /** column name */
    ErrorMessage = "errorMessage",
    /** column name */
    EventId = "eventId",
    /** column name */
    ExecutedAt = "executedAt",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** columns and relationships of "video.InputType" */
export type Video_InputType = {
    readonly __typename?: "video_InputType";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "video.InputType" */
export type Video_InputType_Aggregate = {
    readonly __typename?: "video_InputType_aggregate";
    readonly aggregate?: Maybe<Video_InputType_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_InputType>;
};

/** aggregate fields of "video.InputType" */
export type Video_InputType_Aggregate_Fields = {
    readonly __typename?: "video_InputType_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_InputType_Max_Fields>;
    readonly min?: Maybe<Video_InputType_Min_Fields>;
};

/** aggregate fields of "video.InputType" */
export type Video_InputType_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_InputType_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.InputType". All fields are combined with a logical 'AND'. */
export type Video_InputType_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_InputType_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_InputType_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_InputType_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.InputType" */
export enum Video_InputType_Constraint {
    /** unique or primary key constraint */
    InputTypeNamePkey = "InputTypeName_pkey",
}

/** input type for inserting data into table "video.InputType" */
export type Video_InputType_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_InputType_Max_Fields = {
    readonly __typename?: "video_InputType_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_InputType_Min_Fields = {
    readonly __typename?: "video_InputType_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.InputType" */
export type Video_InputType_Mutation_Response = {
    readonly __typename?: "video_InputType_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_InputType>;
};

/** on_conflict condition type for table "video.InputType" */
export type Video_InputType_On_Conflict = {
    readonly constraint: Video_InputType_Constraint;
    readonly update_columns?: ReadonlyArray<Video_InputType_Update_Column>;
    readonly where?: InputMaybe<Video_InputType_Bool_Exp>;
};

/** Ordering options when selecting data from "video.InputType". */
export type Video_InputType_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_InputType */
export type Video_InputType_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "video.InputType" */
export enum Video_InputType_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "video.InputType" */
export type Video_InputType_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.InputType" */
export enum Video_InputType_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus = {
    readonly __typename?: "video_MediaLiveChannelStatus";
    readonly activeInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly activeInputSwitchActionName?: Maybe<Scalars["String"]>;
    /** An object relationship */
    readonly channelStack: Video_ChannelStack;
    readonly channelStackId: Scalars["uuid"];
    /** An object relationship */
    readonly conference?: Maybe<Conference_Conference>;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly pipelinesRunningCount?: Maybe<Scalars["numeric"]>;
    readonly state: Scalars["String"];
    readonly updatedAt: Scalars["timestamptz"];
};

/** aggregated selection of "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Aggregate = {
    readonly __typename?: "video_MediaLiveChannelStatus_aggregate";
    readonly aggregate?: Maybe<Video_MediaLiveChannelStatus_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_MediaLiveChannelStatus>;
};

/** aggregate fields of "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Aggregate_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_aggregate_fields";
    readonly avg?: Maybe<Video_MediaLiveChannelStatus_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_MediaLiveChannelStatus_Max_Fields>;
    readonly min?: Maybe<Video_MediaLiveChannelStatus_Min_Fields>;
    readonly stddev?: Maybe<Video_MediaLiveChannelStatus_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Video_MediaLiveChannelStatus_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Video_MediaLiveChannelStatus_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Video_MediaLiveChannelStatus_Sum_Fields>;
    readonly var_pop?: Maybe<Video_MediaLiveChannelStatus_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Video_MediaLiveChannelStatus_Var_Samp_Fields>;
    readonly variance?: Maybe<Video_MediaLiveChannelStatus_Variance_Fields>;
};

/** aggregate fields of "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** aggregate avg on columns */
export type Video_MediaLiveChannelStatus_Avg_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_avg_fields";
    readonly pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** Boolean expression to filter rows from the table "video.MediaLiveChannelStatus". All fields are combined with a logical 'AND'. */
export type Video_MediaLiveChannelStatus_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_MediaLiveChannelStatus_Bool_Exp>>;
    readonly activeInputAttachmentName?: InputMaybe<String_Comparison_Exp>;
    readonly activeInputSwitchActionName?: InputMaybe<String_Comparison_Exp>;
    readonly channelStack?: InputMaybe<Video_ChannelStack_Bool_Exp>;
    readonly channelStackId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly pipelinesRunningCount?: InputMaybe<Numeric_Comparison_Exp>;
    readonly state?: InputMaybe<String_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.MediaLiveChannelStatus" */
export enum Video_MediaLiveChannelStatus_Constraint {
    /** unique or primary key constraint */
    MediaLiveChannelStatusChannelStackIdKey = "MediaLiveChannelStatus_channelStackId_key",
    /** unique or primary key constraint */
    MediaLiveChannelStatusPkey = "MediaLiveChannelStatus_pkey",
}

/** input type for incrementing numeric columns in table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Inc_Input = {
    readonly pipelinesRunningCount?: InputMaybe<Scalars["numeric"]>;
};

/** input type for inserting data into table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Insert_Input = {
    readonly activeInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly activeInputSwitchActionName?: InputMaybe<Scalars["String"]>;
    readonly channelStack?: InputMaybe<Video_ChannelStack_Obj_Rel_Insert_Input>;
    readonly channelStackId?: InputMaybe<Scalars["uuid"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly pipelinesRunningCount?: InputMaybe<Scalars["numeric"]>;
    readonly state?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_MediaLiveChannelStatus_Max_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_max_fields";
    readonly activeInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly activeInputSwitchActionName?: Maybe<Scalars["String"]>;
    readonly channelStackId?: Maybe<Scalars["uuid"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly pipelinesRunningCount?: Maybe<Scalars["numeric"]>;
    readonly state?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_MediaLiveChannelStatus_Min_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_min_fields";
    readonly activeInputAttachmentName?: Maybe<Scalars["String"]>;
    readonly activeInputSwitchActionName?: Maybe<Scalars["String"]>;
    readonly channelStackId?: Maybe<Scalars["uuid"]>;
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly pipelinesRunningCount?: Maybe<Scalars["numeric"]>;
    readonly state?: Maybe<Scalars["String"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Mutation_Response = {
    readonly __typename?: "video_MediaLiveChannelStatus_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_MediaLiveChannelStatus>;
};

/** input type for inserting object relation for remote table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Obj_Rel_Insert_Input = {
    readonly data: Video_MediaLiveChannelStatus_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_MediaLiveChannelStatus_On_Conflict>;
};

/** on_conflict condition type for table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_On_Conflict = {
    readonly constraint: Video_MediaLiveChannelStatus_Constraint;
    readonly update_columns?: ReadonlyArray<Video_MediaLiveChannelStatus_Update_Column>;
    readonly where?: InputMaybe<Video_MediaLiveChannelStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "video.MediaLiveChannelStatus". */
export type Video_MediaLiveChannelStatus_Order_By = {
    readonly activeInputAttachmentName?: InputMaybe<Order_By>;
    readonly activeInputSwitchActionName?: InputMaybe<Order_By>;
    readonly channelStack?: InputMaybe<Video_ChannelStack_Order_By>;
    readonly channelStackId?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly pipelinesRunningCount?: InputMaybe<Order_By>;
    readonly state?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_MediaLiveChannelStatus */
export type Video_MediaLiveChannelStatus_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "video.MediaLiveChannelStatus" */
export enum Video_MediaLiveChannelStatus_Select_Column {
    /** column name */
    ActiveInputAttachmentName = "activeInputAttachmentName",
    /** column name */
    ActiveInputSwitchActionName = "activeInputSwitchActionName",
    /** column name */
    ChannelStackId = "channelStackId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    PipelinesRunningCount = "pipelinesRunningCount",
    /** column name */
    State = "state",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** input type for updating data in table "video.MediaLiveChannelStatus" */
export type Video_MediaLiveChannelStatus_Set_Input = {
    readonly activeInputAttachmentName?: InputMaybe<Scalars["String"]>;
    readonly activeInputSwitchActionName?: InputMaybe<Scalars["String"]>;
    readonly channelStackId?: InputMaybe<Scalars["uuid"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly pipelinesRunningCount?: InputMaybe<Scalars["numeric"]>;
    readonly state?: InputMaybe<Scalars["String"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Video_MediaLiveChannelStatus_Stddev_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_stddev_fields";
    readonly pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_pop on columns */
export type Video_MediaLiveChannelStatus_Stddev_Pop_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_stddev_pop_fields";
    readonly pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate stddev_samp on columns */
export type Video_MediaLiveChannelStatus_Stddev_Samp_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_stddev_samp_fields";
    readonly pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate sum on columns */
export type Video_MediaLiveChannelStatus_Sum_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_sum_fields";
    readonly pipelinesRunningCount?: Maybe<Scalars["numeric"]>;
};

/** update columns of table "video.MediaLiveChannelStatus" */
export enum Video_MediaLiveChannelStatus_Update_Column {
    /** column name */
    ActiveInputAttachmentName = "activeInputAttachmentName",
    /** column name */
    ActiveInputSwitchActionName = "activeInputSwitchActionName",
    /** column name */
    ChannelStackId = "channelStackId",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    PipelinesRunningCount = "pipelinesRunningCount",
    /** column name */
    State = "state",
    /** column name */
    UpdatedAt = "updatedAt",
}

/** aggregate var_pop on columns */
export type Video_MediaLiveChannelStatus_Var_Pop_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_var_pop_fields";
    readonly pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate var_samp on columns */
export type Video_MediaLiveChannelStatus_Var_Samp_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_var_samp_fields";
    readonly pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** aggregate variance on columns */
export type Video_MediaLiveChannelStatus_Variance_Fields = {
    readonly __typename?: "video_MediaLiveChannelStatus_variance_fields";
    readonly pipelinesRunningCount?: Maybe<Scalars["Float"]>;
};

/** columns and relationships of "video.RoomRtmpInput" */
export type Video_RoomRtmpInput = {
    readonly __typename?: "video_RoomRtmpInput";
    readonly address?: Maybe<Scalars["String"]>;
    readonly applicationInstance: Scalars["String"];
    readonly applicationName: Scalars["String"];
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    readonly inputId?: Maybe<Scalars["String"]>;
    readonly inputName: Scalars["String"];
    /** An object relationship */
    readonly room?: Maybe<Room_Room>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly updated_at: Scalars["timestamptz"];
};

/** aggregated selection of "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Aggregate = {
    readonly __typename?: "video_RoomRtmpInput_aggregate";
    readonly aggregate?: Maybe<Video_RoomRtmpInput_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_RoomRtmpInput>;
};

/** aggregate fields of "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Aggregate_Fields = {
    readonly __typename?: "video_RoomRtmpInput_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_RoomRtmpInput_Max_Fields>;
    readonly min?: Maybe<Video_RoomRtmpInput_Min_Fields>;
};

/** aggregate fields of "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.RoomRtmpInput". All fields are combined with a logical 'AND'. */
export type Video_RoomRtmpInput_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_RoomRtmpInput_Bool_Exp>>;
    readonly address?: InputMaybe<String_Comparison_Exp>;
    readonly applicationInstance?: InputMaybe<String_Comparison_Exp>;
    readonly applicationName?: InputMaybe<String_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly inputId?: InputMaybe<String_Comparison_Exp>;
    readonly inputName?: InputMaybe<String_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.RoomRtmpInput" */
export enum Video_RoomRtmpInput_Constraint {
    /** unique or primary key constraint */
    RoomRtmpInputApplicationInstanceKey = "RoomRtmpInput_applicationInstance_key",
    /** unique or primary key constraint */
    RoomRtmpInputInputIdKey = "RoomRtmpInput_inputId_key",
    /** unique or primary key constraint */
    RoomRtmpInputInputNameKey = "RoomRtmpInput_inputName_key",
    /** unique or primary key constraint */
    RoomRtmpInputPkey = "RoomRtmpInput_pkey",
    /** unique or primary key constraint */
    RoomRtmpInputRoomIdKey = "RoomRtmpInput_roomId_key",
}

/** input type for inserting data into table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Insert_Input = {
    readonly address?: InputMaybe<Scalars["String"]>;
    readonly applicationInstance?: InputMaybe<Scalars["String"]>;
    readonly applicationName?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly inputId?: InputMaybe<Scalars["String"]>;
    readonly inputName?: InputMaybe<Scalars["String"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_RoomRtmpInput_Max_Fields = {
    readonly __typename?: "video_RoomRtmpInput_max_fields";
    readonly address?: Maybe<Scalars["String"]>;
    readonly applicationInstance?: Maybe<Scalars["String"]>;
    readonly applicationName?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly inputId?: Maybe<Scalars["String"]>;
    readonly inputName?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** aggregate min on columns */
export type Video_RoomRtmpInput_Min_Fields = {
    readonly __typename?: "video_RoomRtmpInput_min_fields";
    readonly address?: Maybe<Scalars["String"]>;
    readonly applicationInstance?: Maybe<Scalars["String"]>;
    readonly applicationName?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly inputId?: Maybe<Scalars["String"]>;
    readonly inputName?: Maybe<Scalars["String"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** response of any mutation on the table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Mutation_Response = {
    readonly __typename?: "video_RoomRtmpInput_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_RoomRtmpInput>;
};

/** input type for inserting object relation for remote table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Obj_Rel_Insert_Input = {
    readonly data: Video_RoomRtmpInput_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_RoomRtmpInput_On_Conflict>;
};

/** on_conflict condition type for table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_On_Conflict = {
    readonly constraint: Video_RoomRtmpInput_Constraint;
    readonly update_columns?: ReadonlyArray<Video_RoomRtmpInput_Update_Column>;
    readonly where?: InputMaybe<Video_RoomRtmpInput_Bool_Exp>;
};

/** Ordering options when selecting data from "video.RoomRtmpInput". */
export type Video_RoomRtmpInput_Order_By = {
    readonly address?: InputMaybe<Order_By>;
    readonly applicationInstance?: InputMaybe<Order_By>;
    readonly applicationName?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly inputId?: InputMaybe<Order_By>;
    readonly inputName?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_RoomRtmpInput */
export type Video_RoomRtmpInput_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "video.RoomRtmpInput" */
export enum Video_RoomRtmpInput_Select_Column {
    /** column name */
    Address = "address",
    /** column name */
    ApplicationInstance = "applicationInstance",
    /** column name */
    ApplicationName = "applicationName",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    InputId = "inputId",
    /** column name */
    InputName = "inputName",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "video.RoomRtmpInput" */
export type Video_RoomRtmpInput_Set_Input = {
    readonly address?: InputMaybe<Scalars["String"]>;
    readonly applicationInstance?: InputMaybe<Scalars["String"]>;
    readonly applicationName?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly inputId?: InputMaybe<Scalars["String"]>;
    readonly inputName?: InputMaybe<Scalars["String"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** update columns of table "video.RoomRtmpInput" */
export enum Video_RoomRtmpInput_Update_Column {
    /** column name */
    Address = "address",
    /** column name */
    ApplicationInstance = "applicationInstance",
    /** column name */
    ApplicationName = "applicationName",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    InputId = "inputId",
    /** column name */
    InputName = "inputName",
    /** column name */
    RoomId = "roomId",
    /** column name */
    UpdatedAt = "updated_at",
}

/** Enables broadcasting of a live-stream from a room to an RTMP-capable service, such as YouTube. */
export type Video_RoomRtmpOutput = {
    readonly __typename?: "video_RoomRtmpOutput";
    readonly created_at: Scalars["timestamptz"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly room: Room_Room;
    readonly roomId: Scalars["uuid"];
    readonly streamKey: Scalars["String"];
    readonly updated_at: Scalars["timestamptz"];
    readonly url: Scalars["String"];
};

/** aggregated selection of "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Aggregate = {
    readonly __typename?: "video_RoomRtmpOutput_aggregate";
    readonly aggregate?: Maybe<Video_RoomRtmpOutput_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_RoomRtmpOutput>;
};

/** aggregate fields of "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Aggregate_Fields = {
    readonly __typename?: "video_RoomRtmpOutput_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_RoomRtmpOutput_Max_Fields>;
    readonly min?: Maybe<Video_RoomRtmpOutput_Min_Fields>;
};

/** aggregate fields of "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.RoomRtmpOutput". All fields are combined with a logical 'AND'. */
export type Video_RoomRtmpOutput_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_RoomRtmpOutput_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly streamKey?: InputMaybe<String_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.RoomRtmpOutput" */
export enum Video_RoomRtmpOutput_Constraint {
    /** unique or primary key constraint */
    EventRtmpOutputPkey = "EventRtmpOutput_pkey",
    /** unique or primary key constraint */
    RoomRtmpOutputRoomIdKey = "RoomRtmpOutput_roomId_key",
}

/** input type for inserting data into table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly streamKey?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly url?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_RoomRtmpOutput_Max_Fields = {
    readonly __typename?: "video_RoomRtmpOutput_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly streamKey?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly url?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_RoomRtmpOutput_Min_Fields = {
    readonly __typename?: "video_RoomRtmpOutput_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly streamKey?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly url?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Mutation_Response = {
    readonly __typename?: "video_RoomRtmpOutput_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_RoomRtmpOutput>;
};

/** input type for inserting object relation for remote table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Obj_Rel_Insert_Input = {
    readonly data: Video_RoomRtmpOutput_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_RoomRtmpOutput_On_Conflict>;
};

/** on_conflict condition type for table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_On_Conflict = {
    readonly constraint: Video_RoomRtmpOutput_Constraint;
    readonly update_columns?: ReadonlyArray<Video_RoomRtmpOutput_Update_Column>;
    readonly where?: InputMaybe<Video_RoomRtmpOutput_Bool_Exp>;
};

/** Ordering options when selecting data from "video.RoomRtmpOutput". */
export type Video_RoomRtmpOutput_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly streamKey?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_RoomRtmpOutput */
export type Video_RoomRtmpOutput_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "video.RoomRtmpOutput" */
export enum Video_RoomRtmpOutput_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    StreamKey = "streamKey",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Url = "url",
}

/** input type for updating data in table "video.RoomRtmpOutput" */
export type Video_RoomRtmpOutput_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly streamKey?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly url?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.RoomRtmpOutput" */
export enum Video_RoomRtmpOutput_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    RoomId = "roomId",
    /** column name */
    StreamKey = "streamKey",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    Url = "url",
}

/** columns and relationships of "video.RtmpInput" */
export type Video_RtmpInput = {
    readonly __typename?: "video_RtmpInput";
    readonly description: Scalars["String"];
    readonly name: Scalars["String"];
};

/** aggregated selection of "video.RtmpInput" */
export type Video_RtmpInput_Aggregate = {
    readonly __typename?: "video_RtmpInput_aggregate";
    readonly aggregate?: Maybe<Video_RtmpInput_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_RtmpInput>;
};

/** aggregate fields of "video.RtmpInput" */
export type Video_RtmpInput_Aggregate_Fields = {
    readonly __typename?: "video_RtmpInput_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_RtmpInput_Max_Fields>;
    readonly min?: Maybe<Video_RtmpInput_Min_Fields>;
};

/** aggregate fields of "video.RtmpInput" */
export type Video_RtmpInput_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_RtmpInput_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.RtmpInput". All fields are combined with a logical 'AND'. */
export type Video_RtmpInput_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_RtmpInput_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_RtmpInput_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_RtmpInput_Bool_Exp>>;
    readonly description?: InputMaybe<String_Comparison_Exp>;
    readonly name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.RtmpInput" */
export enum Video_RtmpInput_Constraint {
    /** unique or primary key constraint */
    RtmpInputPkey = "RtmpInput_pkey",
}

export enum Video_RtmpInput_Enum {
    /** The A RTMP input. */
    RtmpA = "RTMP_A",
    /** The B RTMP input. */
    RtmpB = "RTMP_B",
    /** Use the room's RTMP input if one is available. */
    RtmpRoom = "RTMP_ROOM",
}

/** Boolean expression to compare columns of type "video_RtmpInput_enum". All fields are combined with logical 'AND'. */
export type Video_RtmpInput_Enum_Comparison_Exp = {
    readonly _eq?: InputMaybe<Video_RtmpInput_Enum>;
    readonly _in?: InputMaybe<ReadonlyArray<Video_RtmpInput_Enum>>;
    readonly _is_null?: InputMaybe<Scalars["Boolean"]>;
    readonly _neq?: InputMaybe<Video_RtmpInput_Enum>;
    readonly _nin?: InputMaybe<ReadonlyArray<Video_RtmpInput_Enum>>;
};

/** input type for inserting data into table "video.RtmpInput" */
export type Video_RtmpInput_Insert_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_RtmpInput_Max_Fields = {
    readonly __typename?: "video_RtmpInput_max_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_RtmpInput_Min_Fields = {
    readonly __typename?: "video_RtmpInput_min_fields";
    readonly description?: Maybe<Scalars["String"]>;
    readonly name?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.RtmpInput" */
export type Video_RtmpInput_Mutation_Response = {
    readonly __typename?: "video_RtmpInput_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_RtmpInput>;
};

/** on_conflict condition type for table "video.RtmpInput" */
export type Video_RtmpInput_On_Conflict = {
    readonly constraint: Video_RtmpInput_Constraint;
    readonly update_columns?: ReadonlyArray<Video_RtmpInput_Update_Column>;
    readonly where?: InputMaybe<Video_RtmpInput_Bool_Exp>;
};

/** Ordering options when selecting data from "video.RtmpInput". */
export type Video_RtmpInput_Order_By = {
    readonly description?: InputMaybe<Order_By>;
    readonly name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_RtmpInput */
export type Video_RtmpInput_Pk_Columns_Input = {
    readonly name: Scalars["String"];
};

/** select columns of table "video.RtmpInput" */
export enum Video_RtmpInput_Select_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** input type for updating data in table "video.RtmpInput" */
export type Video_RtmpInput_Set_Input = {
    readonly description?: InputMaybe<Scalars["String"]>;
    readonly name?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.RtmpInput" */
export enum Video_RtmpInput_Update_Column {
    /** column name */
    Description = "description",
    /** column name */
    Name = "name",
}

/** columns and relationships of "video.TranscriptionJob" */
export type Video_TranscriptionJob = {
    readonly __typename?: "video_TranscriptionJob";
    readonly awsTranscribeJobName: Scalars["String"];
    readonly created_at: Scalars["timestamptz"];
    readonly elementId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    readonly languageCode: Scalars["String"];
    readonly transcriptionS3Url: Scalars["String"];
    readonly updated_at: Scalars["timestamptz"];
    readonly videoS3Url: Scalars["String"];
};

/** aggregated selection of "video.TranscriptionJob" */
export type Video_TranscriptionJob_Aggregate = {
    readonly __typename?: "video_TranscriptionJob_aggregate";
    readonly aggregate?: Maybe<Video_TranscriptionJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_TranscriptionJob>;
};

/** aggregate fields of "video.TranscriptionJob" */
export type Video_TranscriptionJob_Aggregate_Fields = {
    readonly __typename?: "video_TranscriptionJob_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_TranscriptionJob_Max_Fields>;
    readonly min?: Maybe<Video_TranscriptionJob_Min_Fields>;
};

/** aggregate fields of "video.TranscriptionJob" */
export type Video_TranscriptionJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** Boolean expression to filter rows from the table "video.TranscriptionJob". All fields are combined with a logical 'AND'. */
export type Video_TranscriptionJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_TranscriptionJob_Bool_Exp>>;
    readonly awsTranscribeJobName?: InputMaybe<String_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly elementId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly languageCode?: InputMaybe<String_Comparison_Exp>;
    readonly transcriptionS3Url?: InputMaybe<String_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly videoS3Url?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.TranscriptionJob" */
export enum Video_TranscriptionJob_Constraint {
    /** unique or primary key constraint */
    TranscriptionJobAwsTranscribeJobNameKey = "TranscriptionJob_awsTranscribeJobName_key",
    /** unique or primary key constraint */
    TranscriptionJobPkey = "TranscriptionJob_pkey",
}

/** input type for inserting data into table "video.TranscriptionJob" */
export type Video_TranscriptionJob_Insert_Input = {
    readonly awsTranscribeJobName?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly languageCode?: InputMaybe<Scalars["String"]>;
    readonly transcriptionS3Url?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly videoS3Url?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_TranscriptionJob_Max_Fields = {
    readonly __typename?: "video_TranscriptionJob_max_fields";
    readonly awsTranscribeJobName?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly languageCode?: Maybe<Scalars["String"]>;
    readonly transcriptionS3Url?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly videoS3Url?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_TranscriptionJob_Min_Fields = {
    readonly __typename?: "video_TranscriptionJob_min_fields";
    readonly awsTranscribeJobName?: Maybe<Scalars["String"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly languageCode?: Maybe<Scalars["String"]>;
    readonly transcriptionS3Url?: Maybe<Scalars["String"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly videoS3Url?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.TranscriptionJob" */
export type Video_TranscriptionJob_Mutation_Response = {
    readonly __typename?: "video_TranscriptionJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_TranscriptionJob>;
};

/** on_conflict condition type for table "video.TranscriptionJob" */
export type Video_TranscriptionJob_On_Conflict = {
    readonly constraint: Video_TranscriptionJob_Constraint;
    readonly update_columns?: ReadonlyArray<Video_TranscriptionJob_Update_Column>;
    readonly where?: InputMaybe<Video_TranscriptionJob_Bool_Exp>;
};

/** Ordering options when selecting data from "video.TranscriptionJob". */
export type Video_TranscriptionJob_Order_By = {
    readonly awsTranscribeJobName?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly languageCode?: InputMaybe<Order_By>;
    readonly transcriptionS3Url?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly videoS3Url?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_TranscriptionJob */
export type Video_TranscriptionJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "video.TranscriptionJob" */
export enum Video_TranscriptionJob_Select_Column {
    /** column name */
    AwsTranscribeJobName = "awsTranscribeJobName",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    LanguageCode = "languageCode",
    /** column name */
    TranscriptionS3Url = "transcriptionS3Url",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VideoS3Url = "videoS3Url",
}

/** input type for updating data in table "video.TranscriptionJob" */
export type Video_TranscriptionJob_Set_Input = {
    readonly awsTranscribeJobName?: InputMaybe<Scalars["String"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly languageCode?: InputMaybe<Scalars["String"]>;
    readonly transcriptionS3Url?: InputMaybe<Scalars["String"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly videoS3Url?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.TranscriptionJob" */
export enum Video_TranscriptionJob_Update_Column {
    /** column name */
    AwsTranscribeJobName = "awsTranscribeJobName",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    LanguageCode = "languageCode",
    /** column name */
    TranscriptionS3Url = "transcriptionS3Url",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VideoS3Url = "videoS3Url",
}

/** columns and relationships of "video.VideoRenderJob" */
export type Video_VideoRenderJob = {
    readonly __typename?: "video_VideoRenderJob";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    /** An object relationship */
    readonly conferencePrepareJob: Job_Queues_PrepareJob;
    readonly conferencePrepareJobId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    readonly data: Scalars["jsonb"];
    /** An object relationship */
    readonly element?: Maybe<Content_Element>;
    readonly elementId: Scalars["uuid"];
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly jobStatus: Job_Queues_JobStatus;
    readonly jobStatusName: Job_Queues_JobStatus_Enum;
    readonly message?: Maybe<Scalars["String"]>;
    readonly retriesCount: Scalars["Int"];
    readonly updated_at: Scalars["timestamptz"];
};

/** columns and relationships of "video.VideoRenderJob" */
export type Video_VideoRenderJobDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** aggregated selection of "video.VideoRenderJob" */
export type Video_VideoRenderJob_Aggregate = {
    readonly __typename?: "video_VideoRenderJob_aggregate";
    readonly aggregate?: Maybe<Video_VideoRenderJob_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_VideoRenderJob>;
};

/** aggregate fields of "video.VideoRenderJob" */
export type Video_VideoRenderJob_Aggregate_Fields = {
    readonly __typename?: "video_VideoRenderJob_aggregate_fields";
    readonly avg?: Maybe<Video_VideoRenderJob_Avg_Fields>;
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_VideoRenderJob_Max_Fields>;
    readonly min?: Maybe<Video_VideoRenderJob_Min_Fields>;
    readonly stddev?: Maybe<Video_VideoRenderJob_Stddev_Fields>;
    readonly stddev_pop?: Maybe<Video_VideoRenderJob_Stddev_Pop_Fields>;
    readonly stddev_samp?: Maybe<Video_VideoRenderJob_Stddev_Samp_Fields>;
    readonly sum?: Maybe<Video_VideoRenderJob_Sum_Fields>;
    readonly var_pop?: Maybe<Video_VideoRenderJob_Var_Pop_Fields>;
    readonly var_samp?: Maybe<Video_VideoRenderJob_Var_Samp_Fields>;
    readonly variance?: Maybe<Video_VideoRenderJob_Variance_Fields>;
};

/** aggregate fields of "video.VideoRenderJob" */
export type Video_VideoRenderJob_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Aggregate_Order_By = {
    readonly avg?: InputMaybe<Video_VideoRenderJob_Avg_Order_By>;
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Video_VideoRenderJob_Max_Order_By>;
    readonly min?: InputMaybe<Video_VideoRenderJob_Min_Order_By>;
    readonly stddev?: InputMaybe<Video_VideoRenderJob_Stddev_Order_By>;
    readonly stddev_pop?: InputMaybe<Video_VideoRenderJob_Stddev_Pop_Order_By>;
    readonly stddev_samp?: InputMaybe<Video_VideoRenderJob_Stddev_Samp_Order_By>;
    readonly sum?: InputMaybe<Video_VideoRenderJob_Sum_Order_By>;
    readonly var_pop?: InputMaybe<Video_VideoRenderJob_Var_Pop_Order_By>;
    readonly var_samp?: InputMaybe<Video_VideoRenderJob_Var_Samp_Order_By>;
    readonly variance?: InputMaybe<Video_VideoRenderJob_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Video_VideoRenderJob_Append_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Video_VideoRenderJob_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_VideoRenderJob_On_Conflict>;
};

/** aggregate avg on columns */
export type Video_VideoRenderJob_Avg_Fields = {
    readonly __typename?: "video_VideoRenderJob_avg_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by avg() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Avg_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "video.VideoRenderJob". All fields are combined with a logical 'AND'. */
export type Video_VideoRenderJob_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_VideoRenderJob_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly conferencePrepareJob?: InputMaybe<Job_Queues_PrepareJob_Bool_Exp>;
    readonly conferencePrepareJobId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly data?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly element?: InputMaybe<Content_Element_Bool_Exp>;
    readonly elementId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Bool_Exp>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum_Comparison_Exp>;
    readonly message?: InputMaybe<String_Comparison_Exp>;
    readonly retriesCount?: InputMaybe<Int_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VideoRenderJob" */
export enum Video_VideoRenderJob_Constraint {
    /** unique or primary key constraint */
    VideoRenderJobPkey = "VideoRenderJob_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Video_VideoRenderJob_Delete_At_Path_Input = {
    readonly data?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Video_VideoRenderJob_Delete_Elem_Input = {
    readonly data?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Video_VideoRenderJob_Delete_Key_Input = {
    readonly data?: InputMaybe<Scalars["String"]>;
};

/** input type for incrementing numeric columns in table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Inc_Input = {
    readonly retriesCount?: InputMaybe<Scalars["Int"]>;
};

/** input type for inserting data into table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly conferencePrepareJob?: InputMaybe<Job_Queues_PrepareJob_Obj_Rel_Insert_Input>;
    readonly conferencePrepareJobId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Obj_Rel_Insert_Input>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly retriesCount?: InputMaybe<Scalars["Int"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate max on columns */
export type Video_VideoRenderJob_Max_Fields = {
    readonly __typename?: "video_VideoRenderJob_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly conferencePrepareJobId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly retriesCount?: Maybe<Scalars["Int"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by max() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly conferencePrepareJobId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly retriesCount?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_VideoRenderJob_Min_Fields = {
    readonly __typename?: "video_VideoRenderJob_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly conferencePrepareJobId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly message?: Maybe<Scalars["String"]>;
    readonly retriesCount?: Maybe<Scalars["Int"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
};

/** order by min() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly conferencePrepareJobId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly retriesCount?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Mutation_Response = {
    readonly __typename?: "video_VideoRenderJob_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_VideoRenderJob>;
};

/** on_conflict condition type for table "video.VideoRenderJob" */
export type Video_VideoRenderJob_On_Conflict = {
    readonly constraint: Video_VideoRenderJob_Constraint;
    readonly update_columns?: ReadonlyArray<Video_VideoRenderJob_Update_Column>;
    readonly where?: InputMaybe<Video_VideoRenderJob_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VideoRenderJob". */
export type Video_VideoRenderJob_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly conferencePrepareJob?: InputMaybe<Job_Queues_PrepareJob_Order_By>;
    readonly conferencePrepareJobId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly data?: InputMaybe<Order_By>;
    readonly element?: InputMaybe<Content_Element_Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly jobStatus?: InputMaybe<Job_Queues_JobStatus_Order_By>;
    readonly jobStatusName?: InputMaybe<Order_By>;
    readonly message?: InputMaybe<Order_By>;
    readonly retriesCount?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VideoRenderJob */
export type Video_VideoRenderJob_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Video_VideoRenderJob_Prepend_Input = {
    readonly data?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "video.VideoRenderJob" */
export enum Video_VideoRenderJob_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferencePrepareJobId = "conferencePrepareJobId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    UpdatedAt = "updated_at",
}

/** input type for updating data in table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly conferencePrepareJobId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly data?: InputMaybe<Scalars["jsonb"]>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly jobStatusName?: InputMaybe<Job_Queues_JobStatus_Enum>;
    readonly message?: InputMaybe<Scalars["String"]>;
    readonly retriesCount?: InputMaybe<Scalars["Int"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
};

/** aggregate stddev on columns */
export type Video_VideoRenderJob_Stddev_Fields = {
    readonly __typename?: "video_VideoRenderJob_stddev_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Stddev_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Video_VideoRenderJob_Stddev_Pop_Fields = {
    readonly __typename?: "video_VideoRenderJob_stddev_pop_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_pop() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Stddev_Pop_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Video_VideoRenderJob_Stddev_Samp_Fields = {
    readonly __typename?: "video_VideoRenderJob_stddev_samp_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by stddev_samp() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Stddev_Samp_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Video_VideoRenderJob_Sum_Fields = {
    readonly __typename?: "video_VideoRenderJob_sum_fields";
    readonly retriesCount?: Maybe<Scalars["Int"]>;
};

/** order by sum() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Sum_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** update columns of table "video.VideoRenderJob" */
export enum Video_VideoRenderJob_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    ConferencePrepareJobId = "conferencePrepareJobId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Data = "data",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    JobStatusName = "jobStatusName",
    /** column name */
    Message = "message",
    /** column name */
    RetriesCount = "retriesCount",
    /** column name */
    UpdatedAt = "updated_at",
}

/** aggregate var_pop on columns */
export type Video_VideoRenderJob_Var_Pop_Fields = {
    readonly __typename?: "video_VideoRenderJob_var_pop_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by var_pop() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Var_Pop_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Video_VideoRenderJob_Var_Samp_Fields = {
    readonly __typename?: "video_VideoRenderJob_var_samp_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by var_samp() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Var_Samp_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Video_VideoRenderJob_Variance_Fields = {
    readonly __typename?: "video_VideoRenderJob_variance_fields";
    readonly retriesCount?: Maybe<Scalars["Float"]>;
};

/** order by variance() on columns of table "video.VideoRenderJob" */
export type Video_VideoRenderJob_Variance_Order_By = {
    readonly retriesCount?: InputMaybe<Order_By>;
};

/** Current streams in Vonage sessions. */
export type Video_VonageParticipantStream = {
    readonly __typename?: "video_VonageParticipantStream";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    /** A computed field, executes function "video.VonageParticipantStream_durationSeconds" */
    readonly durationSeconds?: Maybe<Scalars["bigint"]>;
    /** An object relationship */
    readonly eventVonageSession?: Maybe<Video_EventVonageSession>;
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly registrant: Registrant_Registrant;
    readonly registrantId: Scalars["uuid"];
    readonly stopped_at?: Maybe<Scalars["timestamptz"]>;
    readonly updatedAt: Scalars["timestamptz"];
    readonly vonageConnectionId: Scalars["String"];
    readonly vonageSessionId: Scalars["String"];
    readonly vonageStreamId: Scalars["String"];
    readonly vonageStreamType: Scalars["String"];
};

/** aggregated selection of "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Aggregate = {
    readonly __typename?: "video_VonageParticipantStream_aggregate";
    readonly aggregate?: Maybe<Video_VonageParticipantStream_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_VonageParticipantStream>;
};

/** aggregate fields of "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Aggregate_Fields = {
    readonly __typename?: "video_VonageParticipantStream_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_VonageParticipantStream_Max_Fields>;
    readonly min?: Maybe<Video_VonageParticipantStream_Min_Fields>;
};

/** aggregate fields of "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Video_VonageParticipantStream_Max_Order_By>;
    readonly min?: InputMaybe<Video_VonageParticipantStream_Min_Order_By>;
};

/** input type for inserting array relation for remote table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Video_VonageParticipantStream_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_VonageParticipantStream_On_Conflict>;
};

/** Boolean expression to filter rows from the table "video.VonageParticipantStream". All fields are combined with a logical 'AND'. */
export type Video_VonageParticipantStream_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_VonageParticipantStream_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly durationSeconds?: InputMaybe<Bigint_Comparison_Exp>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly registrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly stopped_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly vonageConnectionId?: InputMaybe<String_Comparison_Exp>;
    readonly vonageSessionId?: InputMaybe<String_Comparison_Exp>;
    readonly vonageStreamId?: InputMaybe<String_Comparison_Exp>;
    readonly vonageStreamType?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VonageParticipantStream" */
export enum Video_VonageParticipantStream_Constraint {
    /** unique or primary key constraint */
    EventParticipantStreamPkey = "EventParticipantStream_pkey",
}

/** input type for inserting data into table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Obj_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly stopped_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly vonageConnectionId?: InputMaybe<Scalars["String"]>;
    readonly vonageSessionId?: InputMaybe<Scalars["String"]>;
    readonly vonageStreamId?: InputMaybe<Scalars["String"]>;
    readonly vonageStreamType?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_VonageParticipantStream_Max_Fields = {
    readonly __typename?: "video_VonageParticipantStream_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly stopped_at?: Maybe<Scalars["timestamptz"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly vonageConnectionId?: Maybe<Scalars["String"]>;
    readonly vonageSessionId?: Maybe<Scalars["String"]>;
    readonly vonageStreamId?: Maybe<Scalars["String"]>;
    readonly vonageStreamType?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly stopped_at?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly vonageConnectionId?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
    readonly vonageStreamId?: InputMaybe<Order_By>;
    readonly vonageStreamType?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_VonageParticipantStream_Min_Fields = {
    readonly __typename?: "video_VonageParticipantStream_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly registrantId?: Maybe<Scalars["uuid"]>;
    readonly stopped_at?: Maybe<Scalars["timestamptz"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly vonageConnectionId?: Maybe<Scalars["String"]>;
    readonly vonageSessionId?: Maybe<Scalars["String"]>;
    readonly vonageStreamId?: Maybe<Scalars["String"]>;
    readonly vonageStreamType?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly stopped_at?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly vonageConnectionId?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
    readonly vonageStreamId?: InputMaybe<Order_By>;
    readonly vonageStreamType?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Mutation_Response = {
    readonly __typename?: "video_VonageParticipantStream_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_VonageParticipantStream>;
};

/** on_conflict condition type for table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_On_Conflict = {
    readonly constraint: Video_VonageParticipantStream_Constraint;
    readonly update_columns?: ReadonlyArray<Video_VonageParticipantStream_Update_Column>;
    readonly where?: InputMaybe<Video_VonageParticipantStream_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VonageParticipantStream". */
export type Video_VonageParticipantStream_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly durationSeconds?: InputMaybe<Order_By>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly registrantId?: InputMaybe<Order_By>;
    readonly stopped_at?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly vonageConnectionId?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
    readonly vonageStreamId?: InputMaybe<Order_By>;
    readonly vonageStreamType?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VonageParticipantStream */
export type Video_VonageParticipantStream_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "video.VonageParticipantStream" */
export enum Video_VonageParticipantStream_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    StoppedAt = "stopped_at",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VonageConnectionId = "vonageConnectionId",
    /** column name */
    VonageSessionId = "vonageSessionId",
    /** column name */
    VonageStreamId = "vonageStreamId",
    /** column name */
    VonageStreamType = "vonageStreamType",
}

/** input type for updating data in table "video.VonageParticipantStream" */
export type Video_VonageParticipantStream_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly registrantId?: InputMaybe<Scalars["uuid"]>;
    readonly stopped_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly vonageConnectionId?: InputMaybe<Scalars["String"]>;
    readonly vonageSessionId?: InputMaybe<Scalars["String"]>;
    readonly vonageStreamId?: InputMaybe<Scalars["String"]>;
    readonly vonageStreamType?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.VonageParticipantStream" */
export enum Video_VonageParticipantStream_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    Id = "id",
    /** column name */
    RegistrantId = "registrantId",
    /** column name */
    StoppedAt = "stopped_at",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VonageConnectionId = "vonageConnectionId",
    /** column name */
    VonageSessionId = "vonageSessionId",
    /** column name */
    VonageStreamId = "vonageStreamId",
    /** column name */
    VonageStreamType = "vonageStreamType",
}

/** columns and relationships of "video.VonageRoomRecording" */
export type Video_VonageRoomRecording = {
    readonly __typename?: "video_VonageRoomRecording";
    readonly created_at: Scalars["timestamptz"];
    readonly endedAt?: Maybe<Scalars["timestamptz"]>;
    readonly id: Scalars["uuid"];
    readonly initiatedBy?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly initiator?: Maybe<Registrant_Registrant>;
    /** An object relationship */
    readonly room?: Maybe<Room_Room>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly s3Url?: Maybe<Scalars["String"]>;
    /** An array relationship */
    readonly saves: ReadonlyArray<Registrant_SavedVonageRoomRecording>;
    /** An aggregate relationship */
    readonly saves_aggregate: Registrant_SavedVonageRoomRecording_Aggregate;
    readonly startedAt: Scalars["timestamptz"];
    readonly updated_at: Scalars["timestamptz"];
    readonly uploaded_at?: Maybe<Scalars["timestamptz"]>;
    readonly vonageSessionId: Scalars["String"];
};

/** columns and relationships of "video.VonageRoomRecording" */
export type Video_VonageRoomRecordingSavesArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

/** columns and relationships of "video.VonageRoomRecording" */
export type Video_VonageRoomRecordingSaves_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Registrant_SavedVonageRoomRecording_Order_By>>;
    where?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
};

/** aggregated selection of "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Aggregate = {
    readonly __typename?: "video_VonageRoomRecording_aggregate";
    readonly aggregate?: Maybe<Video_VonageRoomRecording_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_VonageRoomRecording>;
};

/** aggregate fields of "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Aggregate_Fields = {
    readonly __typename?: "video_VonageRoomRecording_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_VonageRoomRecording_Max_Fields>;
    readonly min?: Maybe<Video_VonageRoomRecording_Min_Fields>;
};

/** aggregate fields of "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Video_VonageRoomRecording_Max_Order_By>;
    readonly min?: InputMaybe<Video_VonageRoomRecording_Min_Order_By>;
};

/** input type for inserting array relation for remote table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Video_VonageRoomRecording_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_VonageRoomRecording_On_Conflict>;
};

/** Boolean expression to filter rows from the table "video.VonageRoomRecording". All fields are combined with a logical 'AND'. */
export type Video_VonageRoomRecording_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_VonageRoomRecording_Bool_Exp>>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly endedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly initiatedBy?: InputMaybe<Uuid_Comparison_Exp>;
    readonly initiator?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly room?: InputMaybe<Room_Room_Bool_Exp>;
    readonly roomId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly s3Url?: InputMaybe<String_Comparison_Exp>;
    readonly saves?: InputMaybe<Registrant_SavedVonageRoomRecording_Bool_Exp>;
    readonly startedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly uploaded_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly vonageSessionId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VonageRoomRecording" */
export enum Video_VonageRoomRecording_Constraint {
    /** unique or primary key constraint */
    VonageRoomRecordingPkey = "VonageRoomRecording_pkey",
}

/** input type for inserting data into table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Insert_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly endedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly initiatedBy?: InputMaybe<Scalars["uuid"]>;
    readonly initiator?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly room?: InputMaybe<Room_Room_Obj_Rel_Insert_Input>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly s3Url?: InputMaybe<Scalars["String"]>;
    readonly saves?: InputMaybe<Registrant_SavedVonageRoomRecording_Arr_Rel_Insert_Input>;
    readonly startedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly uploaded_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_VonageRoomRecording_Max_Fields = {
    readonly __typename?: "video_VonageRoomRecording_max_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly endedAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly initiatedBy?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly s3Url?: Maybe<Scalars["String"]>;
    readonly startedAt?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly uploaded_at?: Maybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Max_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly endedAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly initiatedBy?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly s3Url?: InputMaybe<Order_By>;
    readonly startedAt?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly uploaded_at?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_VonageRoomRecording_Min_Fields = {
    readonly __typename?: "video_VonageRoomRecording_min_fields";
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly endedAt?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly initiatedBy?: Maybe<Scalars["uuid"]>;
    readonly roomId?: Maybe<Scalars["uuid"]>;
    readonly s3Url?: Maybe<Scalars["String"]>;
    readonly startedAt?: Maybe<Scalars["timestamptz"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly uploaded_at?: Maybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Min_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly endedAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly initiatedBy?: InputMaybe<Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly s3Url?: InputMaybe<Order_By>;
    readonly startedAt?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly uploaded_at?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Mutation_Response = {
    readonly __typename?: "video_VonageRoomRecording_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_VonageRoomRecording>;
};

/** input type for inserting object relation for remote table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Obj_Rel_Insert_Input = {
    readonly data: Video_VonageRoomRecording_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_VonageRoomRecording_On_Conflict>;
};

/** on_conflict condition type for table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_On_Conflict = {
    readonly constraint: Video_VonageRoomRecording_Constraint;
    readonly update_columns?: ReadonlyArray<Video_VonageRoomRecording_Update_Column>;
    readonly where?: InputMaybe<Video_VonageRoomRecording_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VonageRoomRecording". */
export type Video_VonageRoomRecording_Order_By = {
    readonly created_at?: InputMaybe<Order_By>;
    readonly endedAt?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly initiatedBy?: InputMaybe<Order_By>;
    readonly initiator?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly room?: InputMaybe<Room_Room_Order_By>;
    readonly roomId?: InputMaybe<Order_By>;
    readonly s3Url?: InputMaybe<Order_By>;
    readonly saves_aggregate?: InputMaybe<Registrant_SavedVonageRoomRecording_Aggregate_Order_By>;
    readonly startedAt?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly uploaded_at?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VonageRoomRecording */
export type Video_VonageRoomRecording_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "video.VonageRoomRecording" */
export enum Video_VonageRoomRecording_Select_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EndedAt = "endedAt",
    /** column name */
    Id = "id",
    /** column name */
    InitiatedBy = "initiatedBy",
    /** column name */
    RoomId = "roomId",
    /** column name */
    S3Url = "s3Url",
    /** column name */
    StartedAt = "startedAt",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UploadedAt = "uploaded_at",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** input type for updating data in table "video.VonageRoomRecording" */
export type Video_VonageRoomRecording_Set_Input = {
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly endedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly initiatedBy?: InputMaybe<Scalars["uuid"]>;
    readonly roomId?: InputMaybe<Scalars["uuid"]>;
    readonly s3Url?: InputMaybe<Scalars["String"]>;
    readonly startedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly uploaded_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.VonageRoomRecording" */
export enum Video_VonageRoomRecording_Update_Column {
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    EndedAt = "endedAt",
    /** column name */
    Id = "id",
    /** column name */
    InitiatedBy = "initiatedBy",
    /** column name */
    RoomId = "roomId",
    /** column name */
    S3Url = "s3Url",
    /** column name */
    StartedAt = "startedAt",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    UploadedAt = "uploaded_at",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** columns and relationships of "video.VonageSessionLayout" */
export type Video_VonageSessionLayout = {
    readonly __typename?: "video_VonageSessionLayout";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly created_at: Scalars["timestamptz"];
    /** An object relationship */
    readonly eventVonageSession?: Maybe<Video_EventVonageSession>;
    readonly id: Scalars["uuid"];
    readonly layoutData?: Maybe<Scalars["jsonb"]>;
    /** An array relationship */
    readonly rooms: ReadonlyArray<Room_Room>;
    /** An aggregate relationship */
    readonly rooms_aggregate: Room_Room_Aggregate;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at: Scalars["timestamptz"];
    readonly vonageSessionId: Scalars["String"];
};

/** columns and relationships of "video.VonageSessionLayout" */
export type Video_VonageSessionLayoutLayoutDataArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "video.VonageSessionLayout" */
export type Video_VonageSessionLayoutRoomsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** columns and relationships of "video.VonageSessionLayout" */
export type Video_VonageSessionLayoutRooms_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** aggregated selection of "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Aggregate = {
    readonly __typename?: "video_VonageSessionLayout_aggregate";
    readonly aggregate?: Maybe<Video_VonageSessionLayout_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_VonageSessionLayout>;
};

/** aggregate fields of "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Aggregate_Fields = {
    readonly __typename?: "video_VonageSessionLayout_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_VonageSessionLayout_Max_Fields>;
    readonly min?: Maybe<Video_VonageSessionLayout_Min_Fields>;
};

/** aggregate fields of "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Video_VonageSessionLayout_Max_Order_By>;
    readonly min?: InputMaybe<Video_VonageSessionLayout_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Video_VonageSessionLayout_Append_Input = {
    readonly layoutData?: InputMaybe<Scalars["jsonb"]>;
};

/** input type for inserting array relation for remote table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Video_VonageSessionLayout_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_VonageSessionLayout_On_Conflict>;
};

/** Boolean expression to filter rows from the table "video.VonageSessionLayout". All fields are combined with a logical 'AND'. */
export type Video_VonageSessionLayout_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_VonageSessionLayout_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly layoutData?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly rooms?: InputMaybe<Room_Room_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly vonageSessionId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VonageSessionLayout" */
export enum Video_VonageSessionLayout_Constraint {
    /** unique or primary key constraint */
    VonageSessionLayoutPkey = "VonageSessionLayout_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Video_VonageSessionLayout_Delete_At_Path_Input = {
    readonly layoutData?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Video_VonageSessionLayout_Delete_Elem_Input = {
    readonly layoutData?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Video_VonageSessionLayout_Delete_Key_Input = {
    readonly layoutData?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Obj_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly layoutData?: InputMaybe<Scalars["jsonb"]>;
    readonly rooms?: InputMaybe<Room_Room_Arr_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_VonageSessionLayout_Max_Fields = {
    readonly __typename?: "video_VonageSessionLayout_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_VonageSessionLayout_Min_Fields = {
    readonly __typename?: "video_VonageSessionLayout_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly created_at?: Maybe<Scalars["timestamptz"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updated_at?: Maybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Mutation_Response = {
    readonly __typename?: "video_VonageSessionLayout_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_VonageSessionLayout>;
};

/** input type for inserting object relation for remote table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Obj_Rel_Insert_Input = {
    readonly data: Video_VonageSessionLayout_Insert_Input;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_VonageSessionLayout_On_Conflict>;
};

/** on_conflict condition type for table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_On_Conflict = {
    readonly constraint: Video_VonageSessionLayout_Constraint;
    readonly update_columns?: ReadonlyArray<Video_VonageSessionLayout_Update_Column>;
    readonly where?: InputMaybe<Video_VonageSessionLayout_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VonageSessionLayout". */
export type Video_VonageSessionLayout_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly created_at?: InputMaybe<Order_By>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly layoutData?: InputMaybe<Order_By>;
    readonly rooms_aggregate?: InputMaybe<Room_Room_Aggregate_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updated_at?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VonageSessionLayout */
export type Video_VonageSessionLayout_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Video_VonageSessionLayout_Prepend_Input = {
    readonly layoutData?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "video.VonageSessionLayout" */
export enum Video_VonageSessionLayout_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    LayoutData = "layoutData",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** input type for updating data in table "video.VonageSessionLayout" */
export type Video_VonageSessionLayout_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly created_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly layoutData?: InputMaybe<Scalars["jsonb"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updated_at?: InputMaybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.VonageSessionLayout" */
export enum Video_VonageSessionLayout_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "created_at",
    /** column name */
    Id = "id",
    /** column name */
    LayoutData = "layoutData",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updated_at",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** columns and relationships of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand = {
    readonly __typename?: "video_VonageVideoPlaybackCommand";
    readonly command: Scalars["jsonb"];
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    readonly createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    /** An object relationship */
    readonly eventVonageSession?: Maybe<Video_EventVonageSession>;
    readonly id: Scalars["uuid"];
    /** An object relationship */
    readonly registrant?: Maybe<Registrant_Registrant>;
    /** An array relationship */
    readonly rooms: ReadonlyArray<Room_Room>;
    /** An aggregate relationship */
    readonly rooms_aggregate: Room_Room_Aggregate;
    /** An object relationship */
    readonly subconference?: Maybe<Conference_Subconference>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt: Scalars["timestamptz"];
    readonly vonageSessionId: Scalars["String"];
};

/** columns and relationships of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommandCommandArgs = {
    path?: InputMaybe<Scalars["String"]>;
};

/** columns and relationships of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommandRoomsArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** columns and relationships of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommandRooms_AggregateArgs = {
    distinct_on?: InputMaybe<ReadonlyArray<Room_Room_Select_Column>>;
    limit?: InputMaybe<Scalars["Int"]>;
    offset?: InputMaybe<Scalars["Int"]>;
    order_by?: InputMaybe<ReadonlyArray<Room_Room_Order_By>>;
    where?: InputMaybe<Room_Room_Bool_Exp>;
};

/** aggregated selection of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Aggregate = {
    readonly __typename?: "video_VonageVideoPlaybackCommand_aggregate";
    readonly aggregate?: Maybe<Video_VonageVideoPlaybackCommand_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_VonageVideoPlaybackCommand>;
};

/** aggregate fields of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Aggregate_Fields = {
    readonly __typename?: "video_VonageVideoPlaybackCommand_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_VonageVideoPlaybackCommand_Max_Fields>;
    readonly min?: Maybe<Video_VonageVideoPlaybackCommand_Min_Fields>;
};

/** aggregate fields of "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Video_VonageVideoPlaybackCommand_Append_Input = {
    readonly command?: InputMaybe<Scalars["jsonb"]>;
};

/** Boolean expression to filter rows from the table "video.VonageVideoPlaybackCommand". All fields are combined with a logical 'AND'. */
export type Video_VonageVideoPlaybackCommand_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_VonageVideoPlaybackCommand_Bool_Exp>>;
    readonly command?: InputMaybe<Jsonb_Comparison_Exp>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly createdByRegistrantId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Bool_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Bool_Exp>;
    readonly rooms?: InputMaybe<Room_Room_Bool_Exp>;
    readonly subconference?: InputMaybe<Conference_Subconference_Bool_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly vonageSessionId?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.VonageVideoPlaybackCommand" */
export enum Video_VonageVideoPlaybackCommand_Constraint {
    /** unique or primary key constraint */
    VonageVideoPlaybackCommandPkey = "VonageVideoPlaybackCommand_pkey",
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Video_VonageVideoPlaybackCommand_Delete_At_Path_Input = {
    readonly command?: InputMaybe<ReadonlyArray<Scalars["String"]>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Video_VonageVideoPlaybackCommand_Delete_Elem_Input = {
    readonly command?: InputMaybe<Scalars["Int"]>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Video_VonageVideoPlaybackCommand_Delete_Key_Input = {
    readonly command?: InputMaybe<Scalars["String"]>;
};

/** input type for inserting data into table "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Insert_Input = {
    readonly command?: InputMaybe<Scalars["jsonb"]>;
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly createdByRegistrantId?: InputMaybe<Scalars["uuid"]>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Obj_Rel_Insert_Input>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Obj_Rel_Insert_Input>;
    readonly rooms?: InputMaybe<Room_Room_Arr_Rel_Insert_Input>;
    readonly subconference?: InputMaybe<Conference_Subconference_Obj_Rel_Insert_Input>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_VonageVideoPlaybackCommand_Max_Fields = {
    readonly __typename?: "video_VonageVideoPlaybackCommand_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: Maybe<Scalars["String"]>;
};

/** aggregate min on columns */
export type Video_VonageVideoPlaybackCommand_Min_Fields = {
    readonly __typename?: "video_VonageVideoPlaybackCommand_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly createdByRegistrantId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: Maybe<Scalars["String"]>;
};

/** response of any mutation on the table "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Mutation_Response = {
    readonly __typename?: "video_VonageVideoPlaybackCommand_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_VonageVideoPlaybackCommand>;
};

/** on_conflict condition type for table "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_On_Conflict = {
    readonly constraint: Video_VonageVideoPlaybackCommand_Constraint;
    readonly update_columns?: ReadonlyArray<Video_VonageVideoPlaybackCommand_Update_Column>;
    readonly where?: InputMaybe<Video_VonageVideoPlaybackCommand_Bool_Exp>;
};

/** Ordering options when selecting data from "video.VonageVideoPlaybackCommand". */
export type Video_VonageVideoPlaybackCommand_Order_By = {
    readonly command?: InputMaybe<Order_By>;
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly createdByRegistrantId?: InputMaybe<Order_By>;
    readonly eventVonageSession?: InputMaybe<Video_EventVonageSession_Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly registrant?: InputMaybe<Registrant_Registrant_Order_By>;
    readonly rooms_aggregate?: InputMaybe<Room_Room_Aggregate_Order_By>;
    readonly subconference?: InputMaybe<Conference_Subconference_Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly vonageSessionId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_VonageVideoPlaybackCommand */
export type Video_VonageVideoPlaybackCommand_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Video_VonageVideoPlaybackCommand_Prepend_Input = {
    readonly command?: InputMaybe<Scalars["jsonb"]>;
};

/** select columns of table "video.VonageVideoPlaybackCommand" */
export enum Video_VonageVideoPlaybackCommand_Select_Column {
    /** column name */
    Command = "command",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    CreatedByRegistrantId = "createdByRegistrantId",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** input type for updating data in table "video.VonageVideoPlaybackCommand" */
export type Video_VonageVideoPlaybackCommand_Set_Input = {
    readonly command?: InputMaybe<Scalars["jsonb"]>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly createdByRegistrantId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly vonageSessionId?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.VonageVideoPlaybackCommand" */
export enum Video_VonageVideoPlaybackCommand_Update_Column {
    /** column name */
    Command = "command",
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    CreatedByRegistrantId = "createdByRegistrantId",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    VonageSessionId = "vonageSessionId",
}

/** columns and relationships of "video.YouTubeUpload" */
export type Video_YouTubeUpload = {
    readonly __typename?: "video_YouTubeUpload";
    /** An object relationship */
    readonly conference: Conference_Conference;
    readonly conferenceId: Scalars["uuid"];
    readonly createdAt: Scalars["timestamptz"];
    /** An object relationship */
    readonly element?: Maybe<Content_Element>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id: Scalars["uuid"];
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt: Scalars["timestamptz"];
    readonly uploadYouTubeVideoJobId?: Maybe<Scalars["uuid"]>;
    readonly videoId: Scalars["String"];
    readonly videoPrivacyStatus: Scalars["String"];
    readonly videoStatus: Scalars["String"];
    readonly videoTitle: Scalars["String"];
};

/** aggregated selection of "video.YouTubeUpload" */
export type Video_YouTubeUpload_Aggregate = {
    readonly __typename?: "video_YouTubeUpload_aggregate";
    readonly aggregate?: Maybe<Video_YouTubeUpload_Aggregate_Fields>;
    readonly nodes: ReadonlyArray<Video_YouTubeUpload>;
};

/** aggregate fields of "video.YouTubeUpload" */
export type Video_YouTubeUpload_Aggregate_Fields = {
    readonly __typename?: "video_YouTubeUpload_aggregate_fields";
    readonly count: Scalars["Int"];
    readonly max?: Maybe<Video_YouTubeUpload_Max_Fields>;
    readonly min?: Maybe<Video_YouTubeUpload_Min_Fields>;
};

/** aggregate fields of "video.YouTubeUpload" */
export type Video_YouTubeUpload_Aggregate_FieldsCountArgs = {
    columns?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Select_Column>>;
    distinct?: InputMaybe<Scalars["Boolean"]>;
};

/** order by aggregate values of table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Aggregate_Order_By = {
    readonly count?: InputMaybe<Order_By>;
    readonly max?: InputMaybe<Video_YouTubeUpload_Max_Order_By>;
    readonly min?: InputMaybe<Video_YouTubeUpload_Min_Order_By>;
};

/** input type for inserting array relation for remote table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Arr_Rel_Insert_Input = {
    readonly data: ReadonlyArray<Video_YouTubeUpload_Insert_Input>;
    /** upsert condition */
    readonly on_conflict?: InputMaybe<Video_YouTubeUpload_On_Conflict>;
};

/** Boolean expression to filter rows from the table "video.YouTubeUpload". All fields are combined with a logical 'AND'. */
export type Video_YouTubeUpload_Bool_Exp = {
    readonly _and?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Bool_Exp>>;
    readonly _not?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
    readonly _or?: InputMaybe<ReadonlyArray<Video_YouTubeUpload_Bool_Exp>>;
    readonly conference?: InputMaybe<Conference_Conference_Bool_Exp>;
    readonly conferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly element?: InputMaybe<Content_Element_Bool_Exp>;
    readonly elementId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly id?: InputMaybe<Uuid_Comparison_Exp>;
    readonly subconferenceId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly updatedAt?: InputMaybe<Timestamptz_Comparison_Exp>;
    readonly uploadYouTubeVideoJobId?: InputMaybe<Uuid_Comparison_Exp>;
    readonly videoId?: InputMaybe<String_Comparison_Exp>;
    readonly videoPrivacyStatus?: InputMaybe<String_Comparison_Exp>;
    readonly videoStatus?: InputMaybe<String_Comparison_Exp>;
    readonly videoTitle?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "video.YouTubeUpload" */
export enum Video_YouTubeUpload_Constraint {
    /** unique or primary key constraint */
    YouTubeUploadPkey = "YouTubeUpload_pkey",
    /** unique or primary key constraint */
    YouTubeUploadVideoIdKey = "YouTubeUpload_videoId_key",
}

/** input type for inserting data into table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Insert_Input = {
    readonly conference?: InputMaybe<Conference_Conference_Obj_Rel_Insert_Input>;
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly element?: InputMaybe<Content_Element_Obj_Rel_Insert_Input>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly uploadYouTubeVideoJobId?: InputMaybe<Scalars["uuid"]>;
    readonly videoId?: InputMaybe<Scalars["String"]>;
    readonly videoPrivacyStatus?: InputMaybe<Scalars["String"]>;
    readonly videoStatus?: InputMaybe<Scalars["String"]>;
    readonly videoTitle?: InputMaybe<Scalars["String"]>;
};

/** aggregate max on columns */
export type Video_YouTubeUpload_Max_Fields = {
    readonly __typename?: "video_YouTubeUpload_max_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly uploadYouTubeVideoJobId?: Maybe<Scalars["uuid"]>;
    readonly videoId?: Maybe<Scalars["String"]>;
    readonly videoPrivacyStatus?: Maybe<Scalars["String"]>;
    readonly videoStatus?: Maybe<Scalars["String"]>;
    readonly videoTitle?: Maybe<Scalars["String"]>;
};

/** order by max() on columns of table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Max_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly uploadYouTubeVideoJobId?: InputMaybe<Order_By>;
    readonly videoId?: InputMaybe<Order_By>;
    readonly videoPrivacyStatus?: InputMaybe<Order_By>;
    readonly videoStatus?: InputMaybe<Order_By>;
    readonly videoTitle?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Video_YouTubeUpload_Min_Fields = {
    readonly __typename?: "video_YouTubeUpload_min_fields";
    readonly conferenceId?: Maybe<Scalars["uuid"]>;
    readonly createdAt?: Maybe<Scalars["timestamptz"]>;
    readonly elementId?: Maybe<Scalars["uuid"]>;
    readonly id?: Maybe<Scalars["uuid"]>;
    readonly subconferenceId?: Maybe<Scalars["uuid"]>;
    readonly updatedAt?: Maybe<Scalars["timestamptz"]>;
    readonly uploadYouTubeVideoJobId?: Maybe<Scalars["uuid"]>;
    readonly videoId?: Maybe<Scalars["String"]>;
    readonly videoPrivacyStatus?: Maybe<Scalars["String"]>;
    readonly videoStatus?: Maybe<Scalars["String"]>;
    readonly videoTitle?: Maybe<Scalars["String"]>;
};

/** order by min() on columns of table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Min_Order_By = {
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly uploadYouTubeVideoJobId?: InputMaybe<Order_By>;
    readonly videoId?: InputMaybe<Order_By>;
    readonly videoPrivacyStatus?: InputMaybe<Order_By>;
    readonly videoStatus?: InputMaybe<Order_By>;
    readonly videoTitle?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Mutation_Response = {
    readonly __typename?: "video_YouTubeUpload_mutation_response";
    /** number of rows affected by the mutation */
    readonly affected_rows: Scalars["Int"];
    /** data from the rows affected by the mutation */
    readonly returning: ReadonlyArray<Video_YouTubeUpload>;
};

/** on_conflict condition type for table "video.YouTubeUpload" */
export type Video_YouTubeUpload_On_Conflict = {
    readonly constraint: Video_YouTubeUpload_Constraint;
    readonly update_columns?: ReadonlyArray<Video_YouTubeUpload_Update_Column>;
    readonly where?: InputMaybe<Video_YouTubeUpload_Bool_Exp>;
};

/** Ordering options when selecting data from "video.YouTubeUpload". */
export type Video_YouTubeUpload_Order_By = {
    readonly conference?: InputMaybe<Conference_Conference_Order_By>;
    readonly conferenceId?: InputMaybe<Order_By>;
    readonly createdAt?: InputMaybe<Order_By>;
    readonly element?: InputMaybe<Content_Element_Order_By>;
    readonly elementId?: InputMaybe<Order_By>;
    readonly id?: InputMaybe<Order_By>;
    readonly subconferenceId?: InputMaybe<Order_By>;
    readonly updatedAt?: InputMaybe<Order_By>;
    readonly uploadYouTubeVideoJobId?: InputMaybe<Order_By>;
    readonly videoId?: InputMaybe<Order_By>;
    readonly videoPrivacyStatus?: InputMaybe<Order_By>;
    readonly videoStatus?: InputMaybe<Order_By>;
    readonly videoTitle?: InputMaybe<Order_By>;
};

/** primary key columns input for table: video_YouTubeUpload */
export type Video_YouTubeUpload_Pk_Columns_Input = {
    readonly id: Scalars["uuid"];
};

/** select columns of table "video.YouTubeUpload" */
export enum Video_YouTubeUpload_Select_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UploadYouTubeVideoJobId = "uploadYouTubeVideoJobId",
    /** column name */
    VideoId = "videoId",
    /** column name */
    VideoPrivacyStatus = "videoPrivacyStatus",
    /** column name */
    VideoStatus = "videoStatus",
    /** column name */
    VideoTitle = "videoTitle",
}

/** input type for updating data in table "video.YouTubeUpload" */
export type Video_YouTubeUpload_Set_Input = {
    readonly conferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly createdAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly elementId?: InputMaybe<Scalars["uuid"]>;
    readonly id?: InputMaybe<Scalars["uuid"]>;
    readonly subconferenceId?: InputMaybe<Scalars["uuid"]>;
    readonly updatedAt?: InputMaybe<Scalars["timestamptz"]>;
    readonly uploadYouTubeVideoJobId?: InputMaybe<Scalars["uuid"]>;
    readonly videoId?: InputMaybe<Scalars["String"]>;
    readonly videoPrivacyStatus?: InputMaybe<Scalars["String"]>;
    readonly videoStatus?: InputMaybe<Scalars["String"]>;
    readonly videoTitle?: InputMaybe<Scalars["String"]>;
};

/** update columns of table "video.YouTubeUpload" */
export enum Video_YouTubeUpload_Update_Column {
    /** column name */
    ConferenceId = "conferenceId",
    /** column name */
    CreatedAt = "createdAt",
    /** column name */
    ElementId = "elementId",
    /** column name */
    Id = "id",
    /** column name */
    SubconferenceId = "subconferenceId",
    /** column name */
    UpdatedAt = "updatedAt",
    /** column name */
    UploadYouTubeVideoJobId = "uploadYouTubeVideoJobId",
    /** column name */
    VideoId = "videoId",
    /** column name */
    VideoPrivacyStatus = "videoPrivacyStatus",
    /** column name */
    VideoStatus = "videoStatus",
    /** column name */
    VideoTitle = "videoTitle",
}

export type CleanUpTestConferenceMutationVariables = Exact<{
    id: Scalars["uuid"];
}>;

export type CleanUpTestConferenceMutation = {
    readonly __typename?: "mutation_root";
    readonly delete_room_Room?: {
        readonly __typename?: "room_Room_mutation_response";
        readonly affected_rows: number;
    } | null;
    readonly delete_chat_Chat?: {
        readonly __typename?: "chat_Chat_mutation_response";
        readonly affected_rows: number;
    } | null;
    readonly delete_conference_Usage?: {
        readonly __typename?: "conference_Usage_mutation_response";
        readonly affected_rows: number;
    } | null;
    readonly delete_conference_Quota?: {
        readonly __typename?: "conference_Quota_mutation_response";
        readonly affected_rows: number;
    } | null;
    readonly delete_conference_Conference?: {
        readonly __typename?: "conference_Conference_mutation_response";
        readonly affected_rows: number;
    } | null;
};

export type CleanUpTestConferenceEventsMutationVariables = Exact<{
    id: Scalars["uuid"];
}>;

export type CleanUpTestConferenceEventsMutation = {
    readonly __typename?: "mutation_root";
    readonly delete_schedule_Event?: {
        readonly __typename?: "schedule_Event_mutation_response";
        readonly affected_rows: number;
    } | null;
    readonly delete_content_Item?: {
        readonly __typename?: "content_Item_mutation_response";
        readonly affected_rows: number;
    } | null;
};

export type TestConferenceFragment = {
    readonly __typename?: "conference_Conference";
    readonly id: any;
    readonly quota?: { readonly __typename?: "conference_Quota"; readonly id: any } | null;
    readonly usage?: { readonly __typename?: "conference_Usage"; readonly id: any } | null;
};

export type CreateConferenceMutationVariables = Exact<{
    object: Conference_Conference_Insert_Input;
}>;

export type CreateConferenceMutation = {
    readonly __typename?: "mutation_root";
    readonly insert_conference_Conference_one?: {
        readonly __typename?: "conference_Conference";
        readonly id: any;
        readonly quota?: { readonly __typename?: "conference_Quota"; readonly id: any } | null;
        readonly usage?: { readonly __typename?: "conference_Usage"; readonly id: any } | null;
    } | null;
};

export type ElementFragment = {
    readonly __typename?: "content_Element";
    readonly id: any;
    readonly createdAt: any;
    readonly updatedAt: any;
    readonly conferenceId: any;
    readonly subconferenceId?: any | null;
    readonly itemId: any;
    readonly typeName: Content_ElementType_Enum;
    readonly name: string;
    readonly data: any;
    readonly isHidden: boolean;
    readonly layoutData?: any | null;
    readonly uploadsRemaining?: number | null;
    readonly visibilityLevel: Conference_VisibilityLevel_Enum;
    readonly source?: any | null;
};

export type GetElementQueryVariables = Exact<{
    elementId: Scalars["uuid"];
}>;

export type GetElementQuery = {
    readonly __typename?: "query_root";
    readonly content_Element_by_pk?: {
        readonly __typename?: "content_Element";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly subconferenceId?: any | null;
        readonly itemId: any;
        readonly typeName: Content_ElementType_Enum;
        readonly name: string;
        readonly data: any;
        readonly isHidden: boolean;
        readonly layoutData?: any | null;
        readonly uploadsRemaining?: number | null;
        readonly visibilityLevel: Conference_VisibilityLevel_Enum;
        readonly source?: any | null;
    } | null;
};

export type InsertElementMutationVariables = Exact<{
    object: Content_Element_Insert_Input;
}>;

export type InsertElementMutation = {
    readonly __typename?: "mutation_root";
    readonly insert_content_Element_one?: {
        readonly __typename?: "content_Element";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly subconferenceId?: any | null;
        readonly itemId: any;
        readonly typeName: Content_ElementType_Enum;
        readonly name: string;
        readonly data: any;
        readonly isHidden: boolean;
        readonly layoutData?: any | null;
        readonly uploadsRemaining?: number | null;
        readonly visibilityLevel: Conference_VisibilityLevel_Enum;
        readonly source?: any | null;
    } | null;
};

export type UpdateElementMutationVariables = Exact<{
    elementId: Scalars["uuid"];
    set: Content_Element_Set_Input;
}>;

export type UpdateElementMutation = {
    readonly __typename?: "mutation_root";
    readonly update_content_Element_by_pk?: {
        readonly __typename?: "content_Element";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly subconferenceId?: any | null;
        readonly itemId: any;
        readonly typeName: Content_ElementType_Enum;
        readonly name: string;
        readonly data: any;
        readonly isHidden: boolean;
        readonly layoutData?: any | null;
        readonly uploadsRemaining?: number | null;
        readonly visibilityLevel: Conference_VisibilityLevel_Enum;
        readonly source?: any | null;
    } | null;
};

export type DeleteElementMutationVariables = Exact<{
    elementId: Scalars["uuid"];
}>;

export type DeleteElementMutation = {
    readonly __typename?: "mutation_root";
    readonly delete_content_Element_by_pk?: { readonly __typename?: "content_Element"; readonly id: any } | null;
};

export type EventFragment = {
    readonly __typename?: "schedule_Event";
    readonly id: any;
    readonly createdAt: any;
    readonly updatedAt: any;
    readonly conferenceId: any;
    readonly roomId: any;
    readonly modeName?: Schedule_Mode_Enum | null;
    readonly itemId?: any | null;
    readonly name: string;
    readonly scheduledStartTime?: any | null;
    readonly scheduledEndTime?: any | null;
    readonly exhibitionId?: any | null;
    readonly shufflePeriodId?: any | null;
    readonly timingsUpdatedAt: any;
    readonly enableRecording: boolean;
    readonly streamTextEventId?: string | null;
    readonly subconferenceId?: any | null;
    readonly visibilityLevel: Conference_VisibilityLevel_Enum;
    readonly automaticParticipationSurvey: boolean;
};

export type GetEventQueryVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type GetEventQuery = {
    readonly __typename?: "query_root";
    readonly schedule_Event_by_pk?: {
        readonly __typename?: "schedule_Event";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly roomId: any;
        readonly modeName?: Schedule_Mode_Enum | null;
        readonly itemId?: any | null;
        readonly name: string;
        readonly scheduledStartTime?: any | null;
        readonly scheduledEndTime?: any | null;
        readonly exhibitionId?: any | null;
        readonly shufflePeriodId?: any | null;
        readonly timingsUpdatedAt: any;
        readonly enableRecording: boolean;
        readonly streamTextEventId?: string | null;
        readonly subconferenceId?: any | null;
        readonly visibilityLevel: Conference_VisibilityLevel_Enum;
        readonly automaticParticipationSurvey: boolean;
    } | null;
};

export type InsertEventMutationVariables = Exact<{
    object: Schedule_Event_Insert_Input;
}>;

export type InsertEventMutation = {
    readonly __typename?: "mutation_root";
    readonly insert_schedule_Event_one?: {
        readonly __typename?: "schedule_Event";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly roomId: any;
        readonly modeName?: Schedule_Mode_Enum | null;
        readonly itemId?: any | null;
        readonly name: string;
        readonly scheduledStartTime?: any | null;
        readonly scheduledEndTime?: any | null;
        readonly exhibitionId?: any | null;
        readonly shufflePeriodId?: any | null;
        readonly timingsUpdatedAt: any;
        readonly enableRecording: boolean;
        readonly streamTextEventId?: string | null;
        readonly subconferenceId?: any | null;
        readonly visibilityLevel: Conference_VisibilityLevel_Enum;
        readonly automaticParticipationSurvey: boolean;
    } | null;
};

export type UpdateEventMutationVariables = Exact<{
    eventId: Scalars["uuid"];
    set: Schedule_Event_Set_Input;
}>;

export type UpdateEventMutation = {
    readonly __typename?: "mutation_root";
    readonly update_schedule_Event_by_pk?: {
        readonly __typename?: "schedule_Event";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly roomId: any;
        readonly modeName?: Schedule_Mode_Enum | null;
        readonly itemId?: any | null;
        readonly name: string;
        readonly scheduledStartTime?: any | null;
        readonly scheduledEndTime?: any | null;
        readonly exhibitionId?: any | null;
        readonly shufflePeriodId?: any | null;
        readonly timingsUpdatedAt: any;
        readonly enableRecording: boolean;
        readonly streamTextEventId?: string | null;
        readonly subconferenceId?: any | null;
        readonly visibilityLevel: Conference_VisibilityLevel_Enum;
        readonly automaticParticipationSurvey: boolean;
    } | null;
};

export type DeleteEventMutationVariables = Exact<{
    eventId: Scalars["uuid"];
}>;

export type DeleteEventMutation = {
    readonly __typename?: "mutation_root";
    readonly delete_schedule_Event_by_pk?: { readonly __typename?: "schedule_Event"; readonly id: any } | null;
};

export type ItemFragment = {
    readonly __typename?: "content_Item";
    readonly id: any;
    readonly createdAt: any;
    readonly updatedAt: any;
    readonly conferenceId: any;
    readonly typeName: Content_ItemType_Enum;
    readonly title: string;
    readonly shortTitle?: string | null;
    readonly chatId?: any | null;
    readonly subconferenceId?: any | null;
    readonly visibilityLevel: Conference_VisibilityLevel_Enum;
};

export type GetItemQueryVariables = Exact<{
    itemId: Scalars["uuid"];
}>;

export type GetItemQuery = {
    readonly __typename?: "query_root";
    readonly content_Item_by_pk?: {
        readonly __typename?: "content_Item";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly typeName: Content_ItemType_Enum;
        readonly title: string;
        readonly shortTitle?: string | null;
        readonly chatId?: any | null;
        readonly subconferenceId?: any | null;
        readonly visibilityLevel: Conference_VisibilityLevel_Enum;
    } | null;
};

export type InsertItemMutationVariables = Exact<{
    object: Content_Item_Insert_Input;
}>;

export type InsertItemMutation = {
    readonly __typename?: "mutation_root";
    readonly insert_content_Item_one?: {
        readonly __typename?: "content_Item";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly typeName: Content_ItemType_Enum;
        readonly title: string;
        readonly shortTitle?: string | null;
        readonly chatId?: any | null;
        readonly subconferenceId?: any | null;
        readonly visibilityLevel: Conference_VisibilityLevel_Enum;
    } | null;
};

export type UpdateItemMutationVariables = Exact<{
    itemId: Scalars["uuid"];
    set: Content_Item_Set_Input;
}>;

export type UpdateItemMutation = {
    readonly __typename?: "mutation_root";
    readonly update_content_Item_by_pk?: {
        readonly __typename?: "content_Item";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly typeName: Content_ItemType_Enum;
        readonly title: string;
        readonly shortTitle?: string | null;
        readonly chatId?: any | null;
        readonly subconferenceId?: any | null;
        readonly visibilityLevel: Conference_VisibilityLevel_Enum;
    } | null;
};

export type DeleteItemMutationVariables = Exact<{
    itemId: Scalars["uuid"];
}>;

export type DeleteItemMutation = {
    readonly __typename?: "mutation_root";
    readonly delete_content_Item_by_pk?: { readonly __typename?: "content_Item"; readonly id: any } | null;
};

export type QuotaFragment = {
    readonly __typename?: "conference_Quota";
    readonly id: any;
    readonly created_at: any;
    readonly updated_at: any;
    readonly conferenceId: any;
    readonly maxSubconferences: number;
    readonly maxStreamingEventTotalMinutes: number;
    readonly maxStreamingEventIndividualMinutes: number;
    readonly maxVideoChatEventTotalMinutes: number;
    readonly maxVideoChatEventIndividualMinutes: number;
    readonly maxRegistrants: number;
    readonly maxVideoChatNonEventTotalMinutesConsumed: number;
    readonly maxSupportMeetingMinutes: number;
    readonly maxStreamingProgramRooms: number;
    readonly maxNonStreamingProgramRooms: number;
    readonly maxPublicSocialRooms: number;
    readonly maxContentItems: number;
    readonly maxMediaElementsPerContentItem: number;
    readonly maxNonMediaElementsPerContentItem: number;
    readonly maxMediaElementsPerSponsor: number;
    readonly maxNonMediaElementsPerSponsor: number;
    readonly areStreamingEventsAllowed: boolean;
    readonly areVideoChatEventsAllowed: boolean;
};

export type GetQuotaQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
}>;

export type GetQuotaQuery = {
    readonly __typename?: "query_root";
    readonly conference_Quota: ReadonlyArray<{
        readonly __typename?: "conference_Quota";
        readonly id: any;
        readonly created_at: any;
        readonly updated_at: any;
        readonly conferenceId: any;
        readonly maxSubconferences: number;
        readonly maxStreamingEventTotalMinutes: number;
        readonly maxStreamingEventIndividualMinutes: number;
        readonly maxVideoChatEventTotalMinutes: number;
        readonly maxVideoChatEventIndividualMinutes: number;
        readonly maxRegistrants: number;
        readonly maxVideoChatNonEventTotalMinutesConsumed: number;
        readonly maxSupportMeetingMinutes: number;
        readonly maxStreamingProgramRooms: number;
        readonly maxNonStreamingProgramRooms: number;
        readonly maxPublicSocialRooms: number;
        readonly maxContentItems: number;
        readonly maxMediaElementsPerContentItem: number;
        readonly maxNonMediaElementsPerContentItem: number;
        readonly maxMediaElementsPerSponsor: number;
        readonly maxNonMediaElementsPerSponsor: number;
        readonly areStreamingEventsAllowed: boolean;
        readonly areVideoChatEventsAllowed: boolean;
    }>;
};

export type UpdateQuotaMutationVariables = Exact<{
    conferenceId: Scalars["uuid"];
    set: Conference_Quota_Set_Input;
}>;

export type UpdateQuotaMutation = {
    readonly __typename?: "mutation_root";
    readonly update_conference_Quota?: {
        readonly __typename?: "conference_Quota_mutation_response";
        readonly affected_rows: number;
        readonly returning: ReadonlyArray<{
            readonly __typename?: "conference_Quota";
            readonly id: any;
            readonly created_at: any;
            readonly updated_at: any;
            readonly conferenceId: any;
            readonly maxSubconferences: number;
            readonly maxStreamingEventTotalMinutes: number;
            readonly maxStreamingEventIndividualMinutes: number;
            readonly maxVideoChatEventTotalMinutes: number;
            readonly maxVideoChatEventIndividualMinutes: number;
            readonly maxRegistrants: number;
            readonly maxVideoChatNonEventTotalMinutesConsumed: number;
            readonly maxSupportMeetingMinutes: number;
            readonly maxStreamingProgramRooms: number;
            readonly maxNonStreamingProgramRooms: number;
            readonly maxPublicSocialRooms: number;
            readonly maxContentItems: number;
            readonly maxMediaElementsPerContentItem: number;
            readonly maxNonMediaElementsPerContentItem: number;
            readonly maxMediaElementsPerSponsor: number;
            readonly maxNonMediaElementsPerSponsor: number;
            readonly areStreamingEventsAllowed: boolean;
            readonly areVideoChatEventsAllowed: boolean;
        }>;
    } | null;
};

export type RegistrantFragment = {
    readonly __typename?: "registrant_Registrant";
    readonly id: any;
    readonly createdAt: any;
    readonly updatedAt: any;
    readonly conferenceId: any;
    readonly displayName: string;
    readonly userId?: string | null;
    readonly conferenceRole: Registrant_RegistrantRole_Enum;
};

export type GetRegistrantQueryVariables = Exact<{
    registrantId: Scalars["uuid"];
}>;

export type GetRegistrantQuery = {
    readonly __typename?: "query_root";
    readonly registrant_Registrant_by_pk?: {
        readonly __typename?: "registrant_Registrant";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly displayName: string;
        readonly userId?: string | null;
        readonly conferenceRole: Registrant_RegistrantRole_Enum;
    } | null;
};

export type InsertRegistrantMutationVariables = Exact<{
    object: Registrant_Registrant_Insert_Input;
}>;

export type InsertRegistrantMutation = {
    readonly __typename?: "mutation_root";
    readonly insert_registrant_Registrant_one?: {
        readonly __typename?: "registrant_Registrant";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly displayName: string;
        readonly userId?: string | null;
        readonly conferenceRole: Registrant_RegistrantRole_Enum;
    } | null;
};

export type UpdateRegistrantMutationVariables = Exact<{
    registrantId: Scalars["uuid"];
    set: Registrant_Registrant_Set_Input;
}>;

export type UpdateRegistrantMutation = {
    readonly __typename?: "mutation_root";
    readonly update_registrant_Registrant_by_pk?: {
        readonly __typename?: "registrant_Registrant";
        readonly id: any;
        readonly createdAt: any;
        readonly updatedAt: any;
        readonly conferenceId: any;
        readonly displayName: string;
        readonly userId?: string | null;
        readonly conferenceRole: Registrant_RegistrantRole_Enum;
    } | null;
};

export type DeleteRegistrantMutationVariables = Exact<{
    registrantId: Scalars["uuid"];
}>;

export type DeleteRegistrantMutation = {
    readonly __typename?: "mutation_root";
    readonly delete_registrant_Registrant_by_pk?: {
        readonly __typename?: "registrant_Registrant";
        readonly id: any;
    } | null;
};

export type RemainingQuotaFragment = {
    readonly __typename?: "conference_RemainingQuota";
    readonly conferenceId?: any | null;
    readonly remainingSubconferences?: any | null;
    readonly remainingStreamingEventTotalMinutes?: number | null;
    readonly remainingVideoChatEventTotalMinutes?: number | null;
    readonly remainingRegistrants?: any | null;
    readonly remainingVideoChatNonEventTotalMinutes?: number | null;
    readonly remainingSupportMeetingMinutes?: number | null;
    readonly remainingStreamingProgramRooms?: any | null;
    readonly remainingNonStreamingProgramRooms?: any | null;
    readonly remainingPublicSocialRooms?: any | null;
    readonly remainingContentItems?: any | null;
};

export type GetRemainingQuotaQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
}>;

export type GetRemainingQuotaQuery = {
    readonly __typename?: "query_root";
    readonly conference_RemainingQuota: ReadonlyArray<{
        readonly __typename?: "conference_RemainingQuota";
        readonly conferenceId?: any | null;
        readonly remainingSubconferences?: any | null;
        readonly remainingStreamingEventTotalMinutes?: number | null;
        readonly remainingVideoChatEventTotalMinutes?: number | null;
        readonly remainingRegistrants?: any | null;
        readonly remainingVideoChatNonEventTotalMinutes?: number | null;
        readonly remainingSupportMeetingMinutes?: number | null;
        readonly remainingStreamingProgramRooms?: any | null;
        readonly remainingNonStreamingProgramRooms?: any | null;
        readonly remainingPublicSocialRooms?: any | null;
        readonly remainingContentItems?: any | null;
    }>;
};

export type RoomFragment = {
    readonly __typename?: "room_Room";
    readonly id: any;
    readonly created_at: any;
    readonly updated_at: any;
    readonly conferenceId: any;
    readonly name: string;
    readonly capacity?: number | null;
    readonly publicVonageSessionId?: string | null;
    readonly priority: number;
    readonly managementModeName: Room_ManagementMode_Enum;
    readonly chatId?: any | null;
    readonly itemId?: any | null;
    readonly backendName?: Room_Backend_Enum | null;
    readonly colour: string;
    readonly subconferenceId?: any | null;
};

export type GetRoomQueryVariables = Exact<{
    roomId: Scalars["uuid"];
}>;

export type GetRoomQuery = {
    readonly __typename?: "query_root";
    readonly room_Room_by_pk?: {
        readonly __typename?: "room_Room";
        readonly id: any;
        readonly created_at: any;
        readonly updated_at: any;
        readonly conferenceId: any;
        readonly name: string;
        readonly capacity?: number | null;
        readonly publicVonageSessionId?: string | null;
        readonly priority: number;
        readonly managementModeName: Room_ManagementMode_Enum;
        readonly chatId?: any | null;
        readonly itemId?: any | null;
        readonly backendName?: Room_Backend_Enum | null;
        readonly colour: string;
        readonly subconferenceId?: any | null;
    } | null;
};

export type InsertRoomMutationVariables = Exact<{
    object: Room_Room_Insert_Input;
}>;

export type InsertRoomMutation = {
    readonly __typename?: "mutation_root";
    readonly insert_room_Room_one?: {
        readonly __typename?: "room_Room";
        readonly id: any;
        readonly created_at: any;
        readonly updated_at: any;
        readonly conferenceId: any;
        readonly name: string;
        readonly capacity?: number | null;
        readonly publicVonageSessionId?: string | null;
        readonly priority: number;
        readonly managementModeName: Room_ManagementMode_Enum;
        readonly chatId?: any | null;
        readonly itemId?: any | null;
        readonly backendName?: Room_Backend_Enum | null;
        readonly colour: string;
        readonly subconferenceId?: any | null;
    } | null;
};

export type UpdateRoomMutationVariables = Exact<{
    roomId: Scalars["uuid"];
    set: Room_Room_Set_Input;
}>;

export type UpdateRoomMutation = {
    readonly __typename?: "mutation_root";
    readonly update_room_Room_by_pk?: {
        readonly __typename?: "room_Room";
        readonly id: any;
        readonly created_at: any;
        readonly updated_at: any;
        readonly conferenceId: any;
        readonly name: string;
        readonly capacity?: number | null;
        readonly publicVonageSessionId?: string | null;
        readonly priority: number;
        readonly managementModeName: Room_ManagementMode_Enum;
        readonly chatId?: any | null;
        readonly itemId?: any | null;
        readonly backendName?: Room_Backend_Enum | null;
        readonly colour: string;
        readonly subconferenceId?: any | null;
    } | null;
};

export type DeleteRoomMutationVariables = Exact<{
    roomId: Scalars["uuid"];
}>;

export type DeleteRoomMutation = {
    readonly __typename?: "mutation_root";
    readonly delete_room_Room_by_pk?: { readonly __typename?: "room_Room"; readonly id: any } | null;
};

export type SubconferenceFragment = {
    readonly __typename?: "conference_Subconference";
    readonly id: any;
    readonly created_at: any;
    readonly updated_at: any;
    readonly conferenceId: any;
    readonly name: string;
    readonly shortName: string;
    readonly slug: string;
    readonly conferenceVisibilityLevel: Conference_VisibilityLevel_Enum;
    readonly defaultProgramVisibilityLevel: Conference_VisibilityLevel_Enum;
};

export type GetSubconferenceQueryVariables = Exact<{
    subconferenceId: Scalars["uuid"];
}>;

export type GetSubconferenceQuery = {
    readonly __typename?: "query_root";
    readonly conference_Subconference_by_pk?: {
        readonly __typename?: "conference_Subconference";
        readonly id: any;
        readonly created_at: any;
        readonly updated_at: any;
        readonly conferenceId: any;
        readonly name: string;
        readonly shortName: string;
        readonly slug: string;
        readonly conferenceVisibilityLevel: Conference_VisibilityLevel_Enum;
        readonly defaultProgramVisibilityLevel: Conference_VisibilityLevel_Enum;
    } | null;
};

export type InsertSubconferenceMutationVariables = Exact<{
    object: Conference_Subconference_Insert_Input;
}>;

export type InsertSubconferenceMutation = {
    readonly __typename?: "mutation_root";
    readonly insert_conference_Subconference_one?: {
        readonly __typename?: "conference_Subconference";
        readonly id: any;
        readonly created_at: any;
        readonly updated_at: any;
        readonly conferenceId: any;
        readonly name: string;
        readonly shortName: string;
        readonly slug: string;
        readonly conferenceVisibilityLevel: Conference_VisibilityLevel_Enum;
        readonly defaultProgramVisibilityLevel: Conference_VisibilityLevel_Enum;
    } | null;
};

export type UpdateSubconferenceMutationVariables = Exact<{
    subconferenceId: Scalars["uuid"];
    set: Conference_Subconference_Set_Input;
}>;

export type UpdateSubconferenceMutation = {
    readonly __typename?: "mutation_root";
    readonly update_conference_Subconference_by_pk?: {
        readonly __typename?: "conference_Subconference";
        readonly id: any;
        readonly created_at: any;
        readonly updated_at: any;
        readonly conferenceId: any;
        readonly name: string;
        readonly shortName: string;
        readonly slug: string;
        readonly conferenceVisibilityLevel: Conference_VisibilityLevel_Enum;
        readonly defaultProgramVisibilityLevel: Conference_VisibilityLevel_Enum;
    } | null;
};

export type DeleteSubconferenceMutationVariables = Exact<{
    subconferenceId: Scalars["uuid"];
}>;

export type DeleteSubconferenceMutation = {
    readonly __typename?: "mutation_root";
    readonly delete_conference_Subconference_by_pk?: {
        readonly __typename?: "conference_Subconference";
        readonly id: any;
    } | null;
};

export type UsageFragment = {
    readonly __typename?: "conference_Usage";
    readonly id: any;
    readonly created_at: any;
    readonly updated_at: any;
    readonly conferenceId: any;
    readonly consumedStreamingEventTotalMinutes: number;
    readonly consumedVideoChatEventTotalMinutes: number;
    readonly consumedVideoChatNonEventTotalMinutes: number;
    readonly consumedSupportMeetingMinutes: number;
    readonly lastUpdatedConsumedStreamingEventTotalMinutes: any;
    readonly lastUpdatedConsumedVideoChatEventTotalMinutes: any;
    readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes: any;
    readonly lastUpdatedConsumedSupportMeetingMinutes: any;
};

export type GetUsageQueryVariables = Exact<{
    conferenceId: Scalars["uuid"];
}>;

export type GetUsageQuery = {
    readonly __typename?: "query_root";
    readonly conference_Usage: ReadonlyArray<{
        readonly __typename?: "conference_Usage";
        readonly id: any;
        readonly created_at: any;
        readonly updated_at: any;
        readonly conferenceId: any;
        readonly consumedStreamingEventTotalMinutes: number;
        readonly consumedVideoChatEventTotalMinutes: number;
        readonly consumedVideoChatNonEventTotalMinutes: number;
        readonly consumedSupportMeetingMinutes: number;
        readonly lastUpdatedConsumedStreamingEventTotalMinutes: any;
        readonly lastUpdatedConsumedVideoChatEventTotalMinutes: any;
        readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes: any;
        readonly lastUpdatedConsumedSupportMeetingMinutes: any;
    }>;
};

export type UpdateUsageMutationVariables = Exact<{
    conferenceId: Scalars["uuid"];
    set: Conference_Usage_Set_Input;
}>;

export type UpdateUsageMutation = {
    readonly __typename?: "mutation_root";
    readonly update_conference_Usage?: {
        readonly __typename?: "conference_Usage_mutation_response";
        readonly affected_rows: number;
        readonly returning: ReadonlyArray<{
            readonly __typename?: "conference_Usage";
            readonly id: any;
            readonly created_at: any;
            readonly updated_at: any;
            readonly conferenceId: any;
            readonly consumedStreamingEventTotalMinutes: number;
            readonly consumedVideoChatEventTotalMinutes: number;
            readonly consumedVideoChatNonEventTotalMinutes: number;
            readonly consumedSupportMeetingMinutes: number;
            readonly lastUpdatedConsumedStreamingEventTotalMinutes: any;
            readonly lastUpdatedConsumedVideoChatEventTotalMinutes: any;
            readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes: any;
            readonly lastUpdatedConsumedSupportMeetingMinutes: any;
        }>;
    } | null;
};

export type CallUpdateUsageMutationVariables = Exact<{ [key: string]: never }>;

export type CallUpdateUsageMutation = {
    readonly __typename?: "mutation_root";
    readonly conference_updateEventUsage: ReadonlyArray<{
        readonly __typename?: "conference_Usage";
        readonly id: any;
        readonly created_at: any;
        readonly updated_at: any;
        readonly conferenceId: any;
        readonly consumedStreamingEventTotalMinutes: number;
        readonly consumedVideoChatEventTotalMinutes: number;
        readonly consumedVideoChatNonEventTotalMinutes: number;
        readonly consumedSupportMeetingMinutes: number;
        readonly lastUpdatedConsumedStreamingEventTotalMinutes: any;
        readonly lastUpdatedConsumedVideoChatEventTotalMinutes: any;
        readonly lastUpdatedConsumedVideoChatNonEventTotalMinutes: any;
        readonly lastUpdatedConsumedSupportMeetingMinutes: any;
    }>;
};

export type BasicQueryVariables = Exact<{ [key: string]: never }>;

export type BasicQuery = {
    readonly __typename?: "query_root";
    readonly User: ReadonlyArray<{ readonly __typename?: "User"; readonly id: string }>;
};

export const TestConferenceFragmentDoc = gql`
    fragment TestConference on conference_Conference {
        id
        quota {
            id
        }
        usage {
            id
        }
    }
`;
export const ElementFragmentDoc = gql`
    fragment Element on content_Element {
        id
        createdAt
        updatedAt
        conferenceId
        subconferenceId
        itemId
        typeName
        name
        data
        isHidden
        layoutData
        uploadsRemaining
        visibilityLevel
        source
    }
`;
export const EventFragmentDoc = gql`
    fragment Event on schedule_Event {
        id
        createdAt
        updatedAt
        conferenceId
        roomId
        modeName
        itemId
        name
        scheduledStartTime
        scheduledEndTime
        exhibitionId
        shufflePeriodId
        timingsUpdatedAt
        enableRecording
        streamTextEventId
        subconferenceId
        visibilityLevel
        automaticParticipationSurvey
    }
`;
export const ItemFragmentDoc = gql`
    fragment Item on content_Item {
        id
        createdAt
        updatedAt
        conferenceId
        typeName
        title
        shortTitle
        chatId
        subconferenceId
        visibilityLevel
    }
`;
export const QuotaFragmentDoc = gql`
    fragment Quota on conference_Quota {
        id
        created_at
        updated_at
        conferenceId
        maxSubconferences
        maxStreamingEventTotalMinutes
        maxStreamingEventIndividualMinutes
        maxVideoChatEventTotalMinutes
        maxVideoChatEventIndividualMinutes
        maxRegistrants
        maxVideoChatNonEventTotalMinutesConsumed
        maxSupportMeetingMinutes
        maxStreamingProgramRooms
        maxNonStreamingProgramRooms
        maxPublicSocialRooms
        maxContentItems
        maxMediaElementsPerContentItem
        maxNonMediaElementsPerContentItem
        maxMediaElementsPerSponsor
        maxNonMediaElementsPerSponsor
        areStreamingEventsAllowed
        areVideoChatEventsAllowed
    }
`;
export const RegistrantFragmentDoc = gql`
    fragment Registrant on registrant_Registrant {
        id
        createdAt
        updatedAt
        conferenceId
        displayName
        userId
        conferenceRole
    }
`;
export const RemainingQuotaFragmentDoc = gql`
    fragment RemainingQuota on conference_RemainingQuota {
        conferenceId
        remainingSubconferences
        remainingStreamingEventTotalMinutes
        remainingVideoChatEventTotalMinutes
        remainingRegistrants
        remainingVideoChatNonEventTotalMinutes
        remainingSupportMeetingMinutes
        remainingStreamingProgramRooms
        remainingNonStreamingProgramRooms
        remainingPublicSocialRooms
        remainingContentItems
    }
`;
export const RoomFragmentDoc = gql`
    fragment Room on room_Room {
        id
        created_at
        updated_at
        conferenceId
        name
        capacity
        publicVonageSessionId
        priority
        managementModeName
        chatId
        itemId
        backendName
        colour
        subconferenceId
    }
`;
export const SubconferenceFragmentDoc = gql`
    fragment Subconference on conference_Subconference {
        id
        created_at
        updated_at
        conferenceId
        name
        shortName
        slug
        conferenceVisibilityLevel
        defaultProgramVisibilityLevel
    }
`;
export const UsageFragmentDoc = gql`
    fragment Usage on conference_Usage {
        id
        created_at
        updated_at
        conferenceId
        consumedStreamingEventTotalMinutes
        consumedVideoChatEventTotalMinutes
        consumedVideoChatNonEventTotalMinutes
        consumedSupportMeetingMinutes
        lastUpdatedConsumedStreamingEventTotalMinutes
        lastUpdatedConsumedVideoChatEventTotalMinutes
        lastUpdatedConsumedVideoChatNonEventTotalMinutes
        lastUpdatedConsumedSupportMeetingMinutes
    }
`;
export const CleanUpTestConferenceDocument = gql`
    mutation CleanUpTestConference($id: uuid!) {
        delete_room_Room(where: { conferenceId: { _eq: $id } }) {
            affected_rows
        }
        delete_chat_Chat(where: { conferenceId: { _eq: $id } }) {
            affected_rows
        }
        delete_conference_Usage(where: { conferenceId: { _eq: $id } }) {
            affected_rows
        }
        delete_conference_Quota(where: { conferenceId: { _eq: $id } }) {
            affected_rows
        }
        delete_conference_Conference(where: { id: { _eq: $id } }) {
            affected_rows
        }
    }
`;

export function useCleanUpTestConferenceMutation() {
    return Urql.useMutation<CleanUpTestConferenceMutation, CleanUpTestConferenceMutationVariables>(
        CleanUpTestConferenceDocument
    );
}
export const CleanUpTestConferenceEventsDocument = gql`
    mutation CleanUpTestConferenceEvents($id: uuid!) {
        delete_schedule_Event(where: { conferenceId: { _eq: $id } }) {
            affected_rows
        }
        delete_content_Item(where: { conferenceId: { _eq: $id } }) {
            affected_rows
        }
    }
`;

export function useCleanUpTestConferenceEventsMutation() {
    return Urql.useMutation<CleanUpTestConferenceEventsMutation, CleanUpTestConferenceEventsMutationVariables>(
        CleanUpTestConferenceEventsDocument
    );
}
export const CreateConferenceDocument = gql`
    mutation CreateConference($object: conference_Conference_insert_input!) {
        insert_conference_Conference_one(object: $object) {
            ...TestConference
        }
    }
    ${TestConferenceFragmentDoc}
`;

export function useCreateConferenceMutation() {
    return Urql.useMutation<CreateConferenceMutation, CreateConferenceMutationVariables>(CreateConferenceDocument);
}
export const GetElementDocument = gql`
    query GetElement($elementId: uuid!) {
        content_Element_by_pk(id: $elementId) {
            ...Element
        }
    }
    ${ElementFragmentDoc}
`;

export function useGetElementQuery(options: Omit<Urql.UseQueryArgs<GetElementQueryVariables>, "query">) {
    return Urql.useQuery<GetElementQuery>({ query: GetElementDocument, ...options });
}
export const InsertElementDocument = gql`
    mutation InsertElement($object: content_Element_insert_input!) {
        insert_content_Element_one(object: $object) {
            ...Element
        }
    }
    ${ElementFragmentDoc}
`;

export function useInsertElementMutation() {
    return Urql.useMutation<InsertElementMutation, InsertElementMutationVariables>(InsertElementDocument);
}
export const UpdateElementDocument = gql`
    mutation UpdateElement($elementId: uuid!, $set: content_Element_set_input!) {
        update_content_Element_by_pk(pk_columns: { id: $elementId }, _set: $set) {
            ...Element
        }
    }
    ${ElementFragmentDoc}
`;

export function useUpdateElementMutation() {
    return Urql.useMutation<UpdateElementMutation, UpdateElementMutationVariables>(UpdateElementDocument);
}
export const DeleteElementDocument = gql`
    mutation DeleteElement($elementId: uuid!) {
        delete_content_Element_by_pk(id: $elementId) {
            id
        }
    }
`;

export function useDeleteElementMutation() {
    return Urql.useMutation<DeleteElementMutation, DeleteElementMutationVariables>(DeleteElementDocument);
}
export const GetEventDocument = gql`
    query GetEvent($eventId: uuid!) {
        schedule_Event_by_pk(id: $eventId) {
            ...Event
        }
    }
    ${EventFragmentDoc}
`;

export function useGetEventQuery(options: Omit<Urql.UseQueryArgs<GetEventQueryVariables>, "query">) {
    return Urql.useQuery<GetEventQuery>({ query: GetEventDocument, ...options });
}
export const InsertEventDocument = gql`
    mutation InsertEvent($object: schedule_Event_insert_input!) {
        insert_schedule_Event_one(object: $object) {
            ...Event
        }
    }
    ${EventFragmentDoc}
`;

export function useInsertEventMutation() {
    return Urql.useMutation<InsertEventMutation, InsertEventMutationVariables>(InsertEventDocument);
}
export const UpdateEventDocument = gql`
    mutation UpdateEvent($eventId: uuid!, $set: schedule_Event_set_input!) {
        update_schedule_Event_by_pk(pk_columns: { id: $eventId }, _set: $set) {
            ...Event
        }
    }
    ${EventFragmentDoc}
`;

export function useUpdateEventMutation() {
    return Urql.useMutation<UpdateEventMutation, UpdateEventMutationVariables>(UpdateEventDocument);
}
export const DeleteEventDocument = gql`
    mutation DeleteEvent($eventId: uuid!) {
        delete_schedule_Event_by_pk(id: $eventId) {
            id
        }
    }
`;

export function useDeleteEventMutation() {
    return Urql.useMutation<DeleteEventMutation, DeleteEventMutationVariables>(DeleteEventDocument);
}
export const GetItemDocument = gql`
    query GetItem($itemId: uuid!) {
        content_Item_by_pk(id: $itemId) {
            ...Item
        }
    }
    ${ItemFragmentDoc}
`;

export function useGetItemQuery(options: Omit<Urql.UseQueryArgs<GetItemQueryVariables>, "query">) {
    return Urql.useQuery<GetItemQuery>({ query: GetItemDocument, ...options });
}
export const InsertItemDocument = gql`
    mutation InsertItem($object: content_Item_insert_input!) {
        insert_content_Item_one(object: $object) {
            ...Item
        }
    }
    ${ItemFragmentDoc}
`;

export function useInsertItemMutation() {
    return Urql.useMutation<InsertItemMutation, InsertItemMutationVariables>(InsertItemDocument);
}
export const UpdateItemDocument = gql`
    mutation UpdateItem($itemId: uuid!, $set: content_Item_set_input!) {
        update_content_Item_by_pk(pk_columns: { id: $itemId }, _set: $set) {
            ...Item
        }
    }
    ${ItemFragmentDoc}
`;

export function useUpdateItemMutation() {
    return Urql.useMutation<UpdateItemMutation, UpdateItemMutationVariables>(UpdateItemDocument);
}
export const DeleteItemDocument = gql`
    mutation DeleteItem($itemId: uuid!) {
        delete_content_Item_by_pk(id: $itemId) {
            id
        }
    }
`;

export function useDeleteItemMutation() {
    return Urql.useMutation<DeleteItemMutation, DeleteItemMutationVariables>(DeleteItemDocument);
}
export const GetQuotaDocument = gql`
    query GetQuota($conferenceId: uuid!) {
        conference_Quota(where: { conferenceId: { _eq: $conferenceId } }) {
            ...Quota
        }
    }
    ${QuotaFragmentDoc}
`;

export function useGetQuotaQuery(options: Omit<Urql.UseQueryArgs<GetQuotaQueryVariables>, "query">) {
    return Urql.useQuery<GetQuotaQuery>({ query: GetQuotaDocument, ...options });
}
export const UpdateQuotaDocument = gql`
    mutation UpdateQuota($conferenceId: uuid!, $set: conference_Quota_set_input!) {
        update_conference_Quota(where: { conferenceId: { _eq: $conferenceId } }, _set: $set) {
            affected_rows
            returning {
                ...Quota
            }
        }
    }
    ${QuotaFragmentDoc}
`;

export function useUpdateQuotaMutation() {
    return Urql.useMutation<UpdateQuotaMutation, UpdateQuotaMutationVariables>(UpdateQuotaDocument);
}
export const GetRegistrantDocument = gql`
    query GetRegistrant($registrantId: uuid!) {
        registrant_Registrant_by_pk(id: $registrantId) {
            ...Registrant
        }
    }
    ${RegistrantFragmentDoc}
`;

export function useGetRegistrantQuery(options: Omit<Urql.UseQueryArgs<GetRegistrantQueryVariables>, "query">) {
    return Urql.useQuery<GetRegistrantQuery>({ query: GetRegistrantDocument, ...options });
}
export const InsertRegistrantDocument = gql`
    mutation InsertRegistrant($object: registrant_Registrant_insert_input!) {
        insert_registrant_Registrant_one(object: $object) {
            ...Registrant
        }
    }
    ${RegistrantFragmentDoc}
`;

export function useInsertRegistrantMutation() {
    return Urql.useMutation<InsertRegistrantMutation, InsertRegistrantMutationVariables>(InsertRegistrantDocument);
}
export const UpdateRegistrantDocument = gql`
    mutation UpdateRegistrant($registrantId: uuid!, $set: registrant_Registrant_set_input!) {
        update_registrant_Registrant_by_pk(pk_columns: { id: $registrantId }, _set: $set) {
            ...Registrant
        }
    }
    ${RegistrantFragmentDoc}
`;

export function useUpdateRegistrantMutation() {
    return Urql.useMutation<UpdateRegistrantMutation, UpdateRegistrantMutationVariables>(UpdateRegistrantDocument);
}
export const DeleteRegistrantDocument = gql`
    mutation DeleteRegistrant($registrantId: uuid!) {
        delete_registrant_Registrant_by_pk(id: $registrantId) {
            id
        }
    }
`;

export function useDeleteRegistrantMutation() {
    return Urql.useMutation<DeleteRegistrantMutation, DeleteRegistrantMutationVariables>(DeleteRegistrantDocument);
}
export const GetRemainingQuotaDocument = gql`
    query GetRemainingQuota($conferenceId: uuid!) {
        conference_RemainingQuota(where: { conferenceId: { _eq: $conferenceId } }) {
            ...RemainingQuota
        }
    }
    ${RemainingQuotaFragmentDoc}
`;

export function useGetRemainingQuotaQuery(options: Omit<Urql.UseQueryArgs<GetRemainingQuotaQueryVariables>, "query">) {
    return Urql.useQuery<GetRemainingQuotaQuery>({ query: GetRemainingQuotaDocument, ...options });
}
export const GetRoomDocument = gql`
    query GetRoom($roomId: uuid!) {
        room_Room_by_pk(id: $roomId) {
            ...Room
        }
    }
    ${RoomFragmentDoc}
`;

export function useGetRoomQuery(options: Omit<Urql.UseQueryArgs<GetRoomQueryVariables>, "query">) {
    return Urql.useQuery<GetRoomQuery>({ query: GetRoomDocument, ...options });
}
export const InsertRoomDocument = gql`
    mutation InsertRoom($object: room_Room_insert_input!) {
        insert_room_Room_one(object: $object) {
            ...Room
        }
    }
    ${RoomFragmentDoc}
`;

export function useInsertRoomMutation() {
    return Urql.useMutation<InsertRoomMutation, InsertRoomMutationVariables>(InsertRoomDocument);
}
export const UpdateRoomDocument = gql`
    mutation UpdateRoom($roomId: uuid!, $set: room_Room_set_input!) {
        update_room_Room_by_pk(pk_columns: { id: $roomId }, _set: $set) {
            ...Room
        }
    }
    ${RoomFragmentDoc}
`;

export function useUpdateRoomMutation() {
    return Urql.useMutation<UpdateRoomMutation, UpdateRoomMutationVariables>(UpdateRoomDocument);
}
export const DeleteRoomDocument = gql`
    mutation DeleteRoom($roomId: uuid!) {
        delete_room_Room_by_pk(id: $roomId) {
            id
        }
    }
`;

export function useDeleteRoomMutation() {
    return Urql.useMutation<DeleteRoomMutation, DeleteRoomMutationVariables>(DeleteRoomDocument);
}
export const GetSubconferenceDocument = gql`
    query GetSubconference($subconferenceId: uuid!) {
        conference_Subconference_by_pk(id: $subconferenceId) {
            ...Subconference
        }
    }
    ${SubconferenceFragmentDoc}
`;

export function useGetSubconferenceQuery(options: Omit<Urql.UseQueryArgs<GetSubconferenceQueryVariables>, "query">) {
    return Urql.useQuery<GetSubconferenceQuery>({ query: GetSubconferenceDocument, ...options });
}
export const InsertSubconferenceDocument = gql`
    mutation InsertSubconference($object: conference_Subconference_insert_input!) {
        insert_conference_Subconference_one(object: $object) {
            ...Subconference
        }
    }
    ${SubconferenceFragmentDoc}
`;

export function useInsertSubconferenceMutation() {
    return Urql.useMutation<InsertSubconferenceMutation, InsertSubconferenceMutationVariables>(
        InsertSubconferenceDocument
    );
}
export const UpdateSubconferenceDocument = gql`
    mutation UpdateSubconference($subconferenceId: uuid!, $set: conference_Subconference_set_input!) {
        update_conference_Subconference_by_pk(pk_columns: { id: $subconferenceId }, _set: $set) {
            ...Subconference
        }
    }
    ${SubconferenceFragmentDoc}
`;

export function useUpdateSubconferenceMutation() {
    return Urql.useMutation<UpdateSubconferenceMutation, UpdateSubconferenceMutationVariables>(
        UpdateSubconferenceDocument
    );
}
export const DeleteSubconferenceDocument = gql`
    mutation DeleteSubconference($subconferenceId: uuid!) {
        delete_conference_Subconference_by_pk(id: $subconferenceId) {
            id
        }
    }
`;

export function useDeleteSubconferenceMutation() {
    return Urql.useMutation<DeleteSubconferenceMutation, DeleteSubconferenceMutationVariables>(
        DeleteSubconferenceDocument
    );
}
export const GetUsageDocument = gql`
    query GetUsage($conferenceId: uuid!) {
        conference_Usage(where: { conferenceId: { _eq: $conferenceId } }) {
            ...Usage
        }
    }
    ${UsageFragmentDoc}
`;

export function useGetUsageQuery(options: Omit<Urql.UseQueryArgs<GetUsageQueryVariables>, "query">) {
    return Urql.useQuery<GetUsageQuery>({ query: GetUsageDocument, ...options });
}
export const UpdateUsageDocument = gql`
    mutation UpdateUsage($conferenceId: uuid!, $set: conference_Usage_set_input!) {
        update_conference_Usage(where: { conferenceId: { _eq: $conferenceId } }, _set: $set) {
            affected_rows
            returning {
                ...Usage
            }
        }
    }
    ${UsageFragmentDoc}
`;

export function useUpdateUsageMutation() {
    return Urql.useMutation<UpdateUsageMutation, UpdateUsageMutationVariables>(UpdateUsageDocument);
}
export const CallUpdateUsageDocument = gql`
    mutation CallUpdateUsage {
        conference_updateEventUsage {
            ...Usage
        }
    }
    ${UsageFragmentDoc}
`;

export function useCallUpdateUsageMutation() {
    return Urql.useMutation<CallUpdateUsageMutation, CallUpdateUsageMutationVariables>(CallUpdateUsageDocument);
}
export const BasicDocument = gql`
    query Basic {
        User {
            id
        }
    }
`;

export function useBasicQuery(options?: Omit<Urql.UseQueryArgs<BasicQueryVariables>, "query">) {
    return Urql.useQuery<BasicQuery>({ query: BasicDocument, ...options });
}
